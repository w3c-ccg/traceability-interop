{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "93b765a4-5f5e-4a79-9f80-b1a2bcbfbab2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e7374c9d-1bc2-49d4-a6e1-1d1e8c17ec29",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e7a1768-0d81-4db0-abfe-4e309e712c47",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aa0d26b4-1d27-457d-83fc-faaec2b0eb5e"
                }
              }
            ]
          },
          {
            "id": "a43d9672-8241-4c50-a85d-ab50d051571f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30640d75-9347-44ad-a478-bb8162dc8dff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e07afad4-caf9-4c24-8589-d31e69545aea"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "075e3ca6-ed67-4767-89c5-30bc4552bd87",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5bba1de8-4744-4045-bda7-dd29d4d5f4e4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8fa3ccb2-7ffe-4f42-88c5-e73cfaa4b7ad",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "287f06cc-ad64-483e-8a4b-ba851ef44d89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c21080c1-404c-48c4-9bee-f945e391841e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "65e5c3d0-5b4c-428a-99ca-03eedca54b35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee61a8b8-dde1-4ea8-834c-a55ae3afe18d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8798c5b1-7975-4722-b5de-7d088f007bc0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da922f4c-3676-4de7-92ed-66f0511d129c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65f0d174-95b8-4e33-9662-229162844d34",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0f1d1862-83cc-4e8e-ab79-325d47d5cfb2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ddb31e4a-054d-4e66-acea-105a47c5eddd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f314c2a-237c-48e5-9117-e995a4e71293"
            }
          }
        ]
      },
      {
        "id": "ec521d10-dc74-45f1-866f-7de345a8012e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a0ec4ef7-9df6-4489-85d3-c43f375777dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e11ab0a-c500-4a43-8d95-bfb7f8718ada",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dd284145-0799-4800-8ba9-829ae0761b33",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51771e6-1f3e-4351-aa3e-0d77cdc92d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5bde9b60-ee4f-49fb-a9d5-6814a0693582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862c904d-c3f7-4157-acec-d5971e89ad1c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1985aad8-c882-4331-b837-a2ea8af10d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc3ec7ad-bdef-4065-9438-8895442559cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1dd8fc-3f6b-4996-83f0-62cdbb8a609d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea1e43b-4e55-4076-806e-b06791fd2f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7a71767-e9f3-4ece-80aa-fa1f685eccb8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "68b8118f-d887-4f82-8d5a-7602e6d8ca96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de9f5230-ebee-4a1a-b2ab-fe996ddcb978",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16db3f04-3ee4-4d01-b26d-0b865e0a1a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbdfe2bf-8ff9-4040-b372-dd25b4d70ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478817a1-7ddb-456f-9ea7-56b480d0be8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b419fdf1-16a6-460e-b1e4-e3df8e6eec1a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "24cbea9a-0686-4974-94fb-49d74867543d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "590f4eb6-87aa-422b-97b0-4c369ef1f0a0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc8a5c43-81d0-4ca9-801f-c0b35efd8616",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d6d6b7d5-8194-4daa-a462-2934c92d3a88"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f17a37c-8850-4cff-a036-2be7422cecdc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ac59c8aa-0c03-451d-94b3-4d35d01e23da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11537273-7a3c-41fe-b962-376a9d3d9f23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6264f5b9-b8dd-464d-a566-404ed4b56070"
            }
          }
        ]
      },
      {
        "id": "b0f81ebf-f204-4050-9380-530e7df4d686",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "31a31790-c10b-4396-9a3d-ddef284a0a38",
            "name": "Negative Testing",
            "item": [
              {
                "id": "076bca83-746d-474f-a892-a75650c93f6e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1dc7b6f1-a9d7-41fc-9277-58870ba15ca7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367d65a2-a1c4-4e4e-ae2e-b2dded303f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2199f037-9860-4cf2-96d9-e2b39364eaba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4edd3c-f90f-45d4-9c62-55ac96b05534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7cb7ec9-7f46-44e7-b159-cb86939a544e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0a7a3b-f64b-4dd9-b016-4474da324863",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452fdb6c-3bf2-440b-9530-704f691cf7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ecf2fb-6ef6-484a-ae15-836eb0d7bd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ed18f1-f308-4b61-b499-123a4967d1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7e8e469-2191-444c-8a66-74913d4f5275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71b49e7-3281-480f-a908-e5c61ddaf6f6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99140dee-268d-413d-a5fd-00eba4a3ea69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42cf17b1-601d-49af-9b7d-b89c9c218975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb1b0ca-a5d0-48d4-b5c5-73984cd8e132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a9a4c09-31f9-43f8-9994-88211d40f153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c061ae7-4ca9-4506-8715-6a55ee7e9424",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dac3226-868a-4b46-9e40-d2b05eaeecc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf68b546-086e-4e28-bc20-7369dbdfdfad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c404c0-b62f-47fb-aba8-3bb1b0e24eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5789a464-55aa-43f4-90e1-b336ce560189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffca43a-8d51-4065-ad78-9fbb8824253f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861ce822-0de9-40bf-a1ce-4b6d0776104b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2cda689-0049-42a9-89ce-ffde13c3d589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1454c4-1305-4454-8de5-4ce5894f3280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c69e81f-beaf-4fe6-b1d7-37f44806da5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b382804e-b07d-45b1-9786-cb07305cfbdc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2b7da2-6e44-425e-99ae-232797530b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c4bad3-34ac-432e-9df0-2f21830aed08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47e4bf0-deeb-4e52-b0c9-aa1201614cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a4fd897-d15e-4628-948e-484c34fa6309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37ef7a6-7d62-4158-bbf6-cb3d8b3cd9cd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31645fe-b355-45e7-a2a2-9ad6220b10ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba30857-c2f1-47b7-bf19-baad26c432f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f5ef2c-638c-4c84-8947-cd2e0d5aa614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ebd0978-dea9-41be-86b6-a21fe88d5db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfece381-45f6-459b-bfdf-fc716978b74d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696935b7-eaab-46fb-9a46-761c66a728fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f410cf86-f7d6-42ba-953d-95c7fe1586fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a739fb2-112f-4264-b871-77a93019bec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51fef749-1323-42e8-b7d8-f4c86f18f2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3bf4e61-9106-4c5e-b676-d1407888c3f8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f5ac7a-0ad5-4a0e-bb8f-b668f09a5b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d065ef-a408-429f-99ce-16a0d051a0be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197c5a7c-50a8-4b26-bc6e-c20d123a4858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90a04517-5258-43bf-b6d5-53f302c660c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b0f66e-c5d0-4d0c-ab11-ec1d06a472e8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fb1a79-970e-429f-9a99-df60996bd41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a585a980-5c64-43f4-8775-8c8ca7018a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1738ae6a-f770-4c69-85f2-a4efd9f4c618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d684ec0-30fa-4ec2-96e0-1637b302a3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7ca972-3844-4b42-85bd-71e8d8c3a9b4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7ed1f1-3e54-4ae0-bf54-84c7e1cb17e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39242fa-25bb-4303-b7a4-7d0b194c2344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ef6879-327c-47a9-ada7-64be51cc8dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae468289-4a83-414a-9b45-ad09b8c4eee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fa5254-a1e6-4a0b-ae2d-a19809967bfd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af75140-024e-4cc2-b79d-f41cb0747619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163e4136-86bb-4e17-a570-9e9ebc66adad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e777bf2-8a6e-4f9d-81b5-6f70c2bae8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bc326a4-e5c1-4700-b252-e3c6a69ce005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e3822e-09bf-4a00-a424-ebe5aed9bb84",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c71031a-946c-41e6-ae47-9c18f4a9e62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e6551b-f0a3-4209-b73c-48b0db25bd58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f704991-5821-457f-80b2-c1f836a2ac1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "547fc9d3-0fa3-47dc-a2b7-6405c037592b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd0389e-8ef7-447d-8c6f-806f0b019b5f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9903c372-15b2-4516-87fd-2d61bf19a885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae30d1a0-aa25-4842-b35f-92e017073eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa504574-f49e-445f-b37b-13856a2c5cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "785e7f9a-2545-4fc5-a855-dad183f9072b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e940e82a-ceac-4d95-aa48-1ca26ffcfe21",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6eaea5-bda7-4c28-a659-5b6b5dae2369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8864d2-48c7-4b67-be6e-6d8048be0279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf94f5f6-3f03-4edd-bf2e-8bc06365810e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "520706b5-87f7-4bb2-8f70-67adb0acca0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7dd3056-dfa7-463b-9ad7-a52a9ce63d71",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9dd1ccc-821c-4915-9e6e-932d1d6ee894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6d7cad-bd72-4cdc-b70d-a4523b11032d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf08459-cf51-488c-a7c6-92e57c1b9ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32590f65-3736-4284-9d5a-b4c0bdc70ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dde2ae-de13-4df1-82ac-29234eb9704d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1443c427-7aa7-4636-bdf2-518ec8f5c5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11fe442d-533a-4ea4-adb3-d5b524c6478f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73d4810-5a75-4e83-8f43-dcd831fa15c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "feec90ff-2a79-4d05-b76d-86628dcd80b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c848b0-f598-4baf-8dbb-0c4558359177",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95c07dd-4b20-450d-8658-3a514320a2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b321cc1-7c6a-4001-8670-bac50afe2498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36acf4a-992f-4904-a48c-c46af12510ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae8052e-e81f-407c-bb00-cffdbaf466b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f09b49-b646-4d30-9fa9-7b39b1a25d0b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85d2886-b597-4d8a-8f16-d5b12286de00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3888784a-3e8e-4510-aa18-55370fb0bda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80386d35-e83b-4597-b47c-f6271ed07923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdbb6002-45e8-44ff-b49a-a1ac64c5b29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f225a9-8e5d-4422-9e41-c61c3e39ce1a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dd4ab1-bef8-42ac-aa7a-fd3111c7601c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10596fae-e3b0-43c2-9672-5c78d2fa780a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009d2083-9acd-4228-bd32-676b151387eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "017e61fe-6830-4eb2-8858-7557de2b8c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff338640-e660-4bde-b99a-eabc83d51d66",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ee5351-20a6-4a12-9062-1289d7c79706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea00a72-4852-478b-ae77-08f0848fbf99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8dedab-4020-4004-99ed-923723c0a0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b64bb3f3-1528-49ef-8229-1a3abf1bb1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4792b0-b113-4305-906f-5c4656227211",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6f63e6-a854-4e5f-9cc9-324f903a903f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11dc63c-d9d6-4428-bfcf-a750654f6312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c3232d-502c-4146-9c60-f97bb5637a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3eb5e59-aacd-4878-b585-6b45709fc64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaceffd-a634-43c3-b61f-7e2d1af02255",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965c453c-00ab-4152-8ab9-5b2e78ecd3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726e4b2c-1bb3-4abc-b2c2-7066c8ba1fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc91c230-2085-4645-acdd-747da7aaf694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c5dafaf4-869b-496e-9b3d-edca2a63cc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839a99af-3516-47dd-b84b-47120aef8ea8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b68b90-702e-4105-a526-bf044c9ba386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534008bd-644a-486b-8eea-43988fa8449e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4009a022-3a2e-4905-a605-ce60cfe97925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f24a46b2-37ff-4abd-81cf-b717da240198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f679de-d771-4491-88a8-f199e445aca6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab89a41-2f0b-4923-af05-c563b36daea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05fc44b2-15a4-4559-a304-e86ca278aaf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3549a7ab-697a-4bc2-b20a-d27e94ea6054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "57ab7a2b-b29c-4d18-9aa2-c0132cf3b9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7585e74-0ab0-45aa-af3a-c0bed8f99a97",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2db6cc8-a092-4e09-9122-963b41f64ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c2bd20-e4f0-4ac0-b16b-2771ed2bc3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6803cff1-2ca1-4f14-8396-c8c06bd22521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17291132-e40c-4960-b8fc-09cf52f6d090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe538787-1b14-4333-ad35-d2c0755b5ba8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50f75c4-22d6-4c1e-a11c-4dd66dc3e666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77b4bdf-cd49-40c0-b8e1-e0a90a71bf95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11eeb2e7-9660-4d6d-acc6-6bb886b4f5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b98b5f5-e2da-414c-bfc1-0eca3fdff6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f4a748-fab3-4036-bc04-9ba38c0d7ddc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f166a6-31dd-4de5-ae69-406d51c6aa9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a98f11-5eef-43bf-a814-873794f9d246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2a0ee6-533f-45c1-bf08-d1b651602292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "503bc952-e9ee-44f0-8238-b5ddca493fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3bcc31-33a6-4617-a837-3c57805fb50f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e11092-4ebd-41d4-9c3a-4b7f81839823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16efb6fb-7aee-44ab-b3ee-f5c034797b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cd01e7-bf39-4d70-acb2-6d778cbf34ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13563acf-e01c-406e-82d2-7de58309fb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde68bfe-4f50-4b3c-bf3b-08d7e6838473",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ead1f5-50fb-4285-8608-e58f220b3694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0706089f-b764-4dbb-8959-d1f4e13c7f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d46ef22-7164-4625-9d0a-2c5ea22397aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "feaa7fc5-58f0-473d-bff8-b1b298708b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d1a18a-2420-4785-a564-9d9cd65ffdea",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4411f269-83f6-4805-81b1-67338e375aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc269e97-5423-49c5-8d15-7bc33f91efa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146ca256-5553-4dcb-82ae-8ebf60758b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f905539b-9169-4cd7-b17a-7eee9db320f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636a0727-00ef-415c-b3ae-294ffa39111c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20bd7c6-39dd-4af1-b524-cd4af4c09c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da554d86-59f8-4266-9f6b-e705c0ef38b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94be56a8-7a6f-457a-ad90-94f6ccf5615b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2684d438-8eef-4a4e-ab45-b6b5d93a1811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd696e7-bc32-4410-b88c-9129c7e94b82",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ed9c19-472b-47c7-a142-95f4e106343f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e385a1-b99e-4def-a5fc-74f28028a753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3e4c14-5a76-4e3d-99db-f627d1108ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18aea142-4d6f-4e0a-b4b0-7c91919ae067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c3d617-b783-4788-a366-c3743e9a4fe9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63cfa215-c898-44a0-aa19-2f6852604896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b467176-ccc0-43c7-9540-388e0110ba93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844df928-4bfb-4383-a99d-e27bd689c217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e90a57d-5ffa-4d22-8f99-e00665e8e453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb010bf-446b-4021-ba9b-f5880903a547",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2978b0a3-d25f-4046-8a47-90394ce5ca0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b8622e-1d27-43ce-a20d-256490b774e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d5d726-3996-44f7-aaf4-816aab95d40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b4424068-c18f-4755-974c-d56b2b869029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbe4d66-5019-4cf7-bdf1-5bbc0e640c4f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8057686-9474-4de9-a1f6-15ae71af2b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f77173bc-20c7-466d-9798-149d4b5fab05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43adf98e-fc11-4664-bc83-b451e1f5447d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "193c6ff5-151b-4ba7-b83a-4cb93aca162e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac99588-db0d-411d-9f1d-bbef9b91a430",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28524fd2-53bf-4726-869d-e7abd0396e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d865b3cb-4d7a-48de-bf76-911b6a6f150b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c0553f-3c94-4867-892b-d60352e92b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fabfd38-f58d-4578-8bb1-d64e12044d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9af9480-9c33-4f4b-8b31-fd02fff29f0d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9968c591-9713-4939-82e8-3699e1655c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c7acfb-42cf-468d-be09-64d837e48501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694aa66c-1008-473d-ad98-7e9b5d78705e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f28cec6a-3e69-49b2-9d6a-c50672c0dc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb260486-3f50-4b23-9df5-b7a567b0bcef",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468247b5-bc04-4fa6-a91c-456201cd4672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51de122c-fbd6-4a8e-a42c-87acad6f1c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415831a7-ba8f-42c0-976a-ed8d0a337124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4b745b-fa9f-4017-8a93-0f4dee134483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455688a3-cd86-4990-9e13-54f26065a379",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e455eeb-f988-4354-b7ef-ffeb01e15f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afbd6a3-4f23-4093-b592-0546adb60678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98f9714-8fd0-4d88-8bcf-9d678be729ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "29d566a6-214d-4718-bb2f-d330757727b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3870f539-74ac-425d-a9fd-77db93b4f0d8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62489e59-e1a4-4183-9f8b-8d1c3b210989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7444d079-33b4-4947-b763-82045e87b0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adec2503-eabc-490a-8c64-d036a414f978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c605294-f9dd-4416-9763-f4888602a654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0549502-df5a-4237-a54e-28422dc06cdf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedd6b41-1a24-4566-be9f-25909e34c75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84af648-c3a5-40c7-bc53-1846603758c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f234446d-ec24-4f91-ba40-3a72c55b76dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c9935202-a0b9-406a-b9a4-5dfc49e4a2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceee5203-f79d-4e93-b12f-c782f7f01068",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57284ef4-6fa1-44cb-98db-2cb29e02b6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634fa9df-8f5c-462d-ac16-bc7b81cf1e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d98ec19-eb1a-4f03-9b54-848d8827ceac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "49da25c6-7505-4e0d-a9d3-4adc67ae46f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e129ae86-27bf-4ddd-bdd9-92091739725a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90b99d7-931e-4260-972f-5a9eba09a5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d03b25-ac16-4a44-b237-43fead12c731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d1f6f2-58b3-4b1d-b58f-55b8be3e6f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f48b307-51f7-4442-8f8e-cc4753234e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3367460-bfc7-40da-aa81-551811318993",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501aa316-b6b5-4496-b44a-e24a1a53b61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a770b7d-f9a7-4c11-9be9-11c8aaa9d28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c29f5c-4d7f-4558-bd0f-427b5b938b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9d931a-5da5-4bc1-9e95-c1aa3cc3108e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac6b901-086a-4610-a549-b71d30e6fb44",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ad11fc-dbd6-4a28-85fb-c225a533fe0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78274c43-5000-4885-98a8-c7e701e206bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ae4ca9-f125-4379-b6ca-081d9cd7cbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7cfd6b9-ea6b-4639-beba-abcf5e353680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4006f814-67c8-43e2-b9bf-338cbe46d92d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adcce36-c63d-463b-b54b-f0547a095562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c5d975-51d8-4ba1-a683-ccbc9c0e2b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce6c46e-a2c4-4dee-8d2c-54f4bca0124a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de279d9d-a7ff-4abf-bd59-7ef657aa578b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f0671e-7b21-42e0-a838-cef0ad5b410f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff3eba0-1464-43b2-b4f3-a673f3d28c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62c9765-02d0-4d9b-ac4a-13338925f5e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a236b041-058f-420e-b748-b68846f0c527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98df0d66-f79c-49f2-ba84-4f394aaafeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cadcc2-b058-4041-86c4-2684153210e2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca51ba3f-7bb7-45c3-823a-767dbec8b35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af41e95-9b38-4c56-b664-c2f0578a882a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458d195e-d62a-444e-b6bb-6290569157c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c959d5a0-03ae-4ff0-80af-800d2d83c2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0b9ffb-9964-4e48-933b-b572677bfa79",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dc071a-95f4-464f-b617-c1bddd0ffde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854d89f9-d99e-4a89-a3fd-6d34a7192bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef8d309-5d58-4e82-abfa-74801cc79df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ea4d5a-a75d-477b-b20c-9e7a4980c060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d45662-230c-4526-a820-27d930794859",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68bc043-76a2-4b06-a632-119a873c9479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baaf0de3-676b-4752-b644-15f4fc553aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ad99b6-7f42-4d22-9048-7b2524eef9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "db998883-82f4-4e1d-95e1-dbcc870be84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b61b8c9-3d20-4409-b8e9-6c9a697155ed",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ff9685-db08-4d73-8f06-3ddc4cf37316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb19d002-cd6f-479a-8e8a-14d517713036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ca8e1d-eb70-4c5c-a357-e54b4ee4c35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "04dabc80-0fe2-443d-8056-0e7c2eb30e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff46710-a104-4cad-87e5-b633e1a5d8e6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b508e636-0e64-4cd6-a25b-b8f1728b78b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54e7e24-dd4d-467d-9a0a-83cf503c774b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0217e0f8-de59-42c7-86e7-efdd98fc0fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45801e04-bf05-4f92-bf7e-4b349b3d7236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7e5cbf-1e79-4629-b15d-4567f4ac45fa",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6c5c14-8a2f-4f67-8d6a-032fddb2457e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e76d4b-0a07-4dcf-aa5d-0eb284a4e802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff130f5-4d22-4f9c-849b-f59fcd79e760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec42a03c-2c86-4631-a315-4b5524edfd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d828aa4a-fe36-4038-be45-0037438cc49e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cb71ac-c1cc-406e-97ea-823f545f5678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda8d2d9-b545-42c4-8472-93134e6eda03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d324fdd0-b9f5-4c9b-9485-135bc4dc9aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67e88d03-7f23-4e2d-b6c3-3510d2b24fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c2ebd0-0964-4d1c-9a37-c2ff31587ffb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ba51c5-9c86-4c58-9edc-b2c4490d4358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0afd8210-2637-4e0e-a2f6-421dcfb2fb31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c40fcae-e7a9-4103-b583-5182971ebdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1718c888-bf1b-486f-b167-96bb81b89951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcb4855-e723-45ab-9334-3764b359bf32",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f10c68d-2d29-4434-99cd-2d9a3da0b683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b04b9a2-5362-4f7f-9920-8d54ff405f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a441967-5f2e-44ef-b03d-b29833df2a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbad85e2-574c-4720-8c0e-34560e30bd97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6981ad4e-c5c6-4578-afac-25f3a4da423a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bff6ee-d859-4226-b3a1-2358f63b090c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ddcaa7-74d7-4730-ba42-10a8a949d4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427bc5bf-01bb-42a1-bc80-d38c1a09db0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "64bfa5c0-e7c7-4caf-884b-49a2b8cfac52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb8bd3d-8509-48c0-b240-e83057b5b649",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30250ede-b0d3-4344-b082-4295f893543c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a086c25-7b88-4779-a4d8-adb12b794744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9493606c-de2e-46ab-a24d-1df7c2d07c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b36cfeee-a9fb-4bc7-9d23-e7c168cb7c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f1954f-2a6d-4cda-8786-b1dd78b4b27b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4128936a-fa39-44f1-aadf-be89df9cdf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6511424d-8995-4d39-b349-0d7b24f1497c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888b4e66-a786-4688-b817-5d8e3bfded6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3e5211-d2d6-43b1-897b-5c1d7ce767b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff99ff7-a63a-47cc-9a1e-c727dc2fec1e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aca9d5d-5d43-412a-aa4a-759ff95a396f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7a4bf6-9c7b-4acc-b930-53ae94b288ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de06b0ba-53ae-44c6-bbbf-1e99ecc25e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0940d554-7b94-44e5-8b03-282561e561b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44af0494-70fa-4004-bd4b-7c2549efb021",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab0aa49-14ab-42c8-a0a0-02d8e6171cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bce70c3-cb22-4a63-a101-075652c9ba95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b22f8a5-778a-4075-ae16-2ea55f986c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b39ef9-df73-4f16-801a-acb1cedde7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b96822-e1b3-4385-8295-83505f5a2597",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a9a19a-831e-4119-8b13-2aea8ecb1559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b38e177-aa81-4823-9bc6-aae5ae066d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc704ab8-2fad-4375-a250-70f8d3b2171a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e71f2b3a-e5fa-4bdb-bb69-c3722fe9631d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1500db8-6a32-4681-9290-40c01ff20f04",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43897fa2-8d5c-4297-bcdd-453c147f04ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd0a186-7ce4-483a-9c82-768b8900ff90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277287ad-2401-44eb-b501-810726268d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d494b031-a8ee-4225-bd09-155169a3b3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bdbefc-399f-45c1-81ee-94d9227f57a3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a750d6-ebcb-471f-905e-3fcef7961736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b91f0c-a67f-48cd-a117-2eee098325a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b909a146-8a76-42d0-85b0-0bdd82334ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3a1381-13a4-4f51-85d1-9cad3bfdec6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6ba853-3472-4601-8488-717c5033bf04",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1694b303-039c-43c8-8f2a-ea210b4202a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88dd1363-3c8e-4864-be50-ae7a845ce0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7924f9c5-1929-496e-b050-8b69183a69a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54fc0e28-d2e9-4978-94af-024ae78cfbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26d050d-eb23-42cc-9569-2b21259ad455",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2281d303-e51a-45d2-9b18-944f3b618ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f456d1b8-5135-4d5d-a2c4-bd74665defcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f601a6d-820b-44b7-a3ed-3b38de946317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6780bff6-5f53-4497-90f6-4c5dffaef5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3c1e6a-cca9-41db-b36d-a6ff6fdb6dd3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c218f3-1645-476f-abda-44d8fe04e54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fac8d90-58f7-4d25-969d-18042fefeee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9f2014-ed86-49bc-9257-906fca70a854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a38bd4c2-9c39-44f7-ab10-c58da38c2528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f7ad75-9c7b-4d03-9df2-2a8243294b93",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf7961b-1145-4e6b-906c-8ea54772e8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e93b459-7b81-4d8d-b163-226e79094c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb9f719-25d6-437b-a7d2-833f4b409ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "290ae8cb-d7f8-4f93-9104-6183dbbe7b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9d289d-e9c0-414e-acce-026a2540381e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda53711-4806-4f72-9948-6fe107b2c13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d68fd3-071e-4e77-9eb8-cc52c5ef5be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbc10bf-3d39-4d0c-991a-0a9700d05014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89213be3-0eb9-453e-9cff-b9cd19e579e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c007ad-cf32-445d-9c6e-2e608e41aaa1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e3102e-80a5-4492-a063-8cfbe79a11e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef81de6-4c56-448d-ba42-1587420dad3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8be544c-622b-4c4a-8bc8-5d18947d30de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2fd9ad-f74f-4b6d-bff7-13e13e58f2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83327990-e431-4ce5-bc96-dbc891be6045",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afc3f27-24d7-413d-aadc-878903a2ab0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b439ba8e-4db3-4430-aa6a-c0389cc2a9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7921a659-62bd-40f1-b587-e0bc38f0a4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "025192e7-546f-428f-86f5-b96e3cd80df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5c237b-e34b-48f6-8a14-645caae21b11",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e7dbca-e541-490a-bb7e-2f5c2c602172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e100c3-e778-4005-a189-d761ad13761d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cfab6d-d746-45c7-846e-25644b8e0944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9688f21-86fd-4a20-8599-c819507eddb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34de74f-0022-48ea-b8d2-0648a3d16093",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5a03ec-0ceb-402b-a42c-6e1be99569af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338ad1ed-279b-4cce-83ce-20faae233687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd29a78-eb62-4a36-8d76-d51a53a92e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87eef819-e519-4d50-a6ae-a56cf01bf75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cefb382-c973-4a40-891f-b0564d907b96",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9e4ef6-8e0e-42b3-89a7-f838c83a706d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2da994-5c1e-4aab-8e36-3918a6f40f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a95fd3-56c4-4a05-961d-5f632421567b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9525c4-5df0-4136-abb9-e1d1e75c82f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c440704-5f09-4f5a-b8da-bbd97f8ecb25",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c551da0-1334-4b9c-bd83-45a101dbf62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff627e1-c844-4004-b07f-bded99ae122d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80ae11c-f4f2-4a18-9bce-6c932a6b3fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b213df4b-f0d0-46c7-82b6-2f3692f81572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7449780-53c0-4d4e-905d-21562ac5ded7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9c0460-0994-49a4-9384-e3449df9877a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9087aff1-1a5f-4fec-8fd7-9f03ecdcd4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25da6f0-0fd0-4126-a4f7-6e3e66064a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3414979-0ab3-4436-9b16-49063e1835cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2317fd31-1d7e-4632-9bd0-8e462c8dc199",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bd9344-143c-4452-be11-712db8acdc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a2663b-a9c8-4d55-8cc0-8c4329e08979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f9eab3-24f5-4b12-af00-7b9e2c5ca6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44106951-a0f3-4003-b0e9-b62f8f28ee4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e454ae-793d-4e25-9d7e-b40c233a4e2c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e17fbe3-22ca-4bb7-ac75-dc8fd2829444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff282cd-f0bd-4558-b23c-81b2ee22fe56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57c8746-9b8a-4b8c-84d9-13c93b30b8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93cf6917-be72-41f3-aa48-383eac6b6baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a386bf62-a821-4ede-b618-4eb10c70ea5e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e434dbad-37cd-4d94-ac4b-d6bb268bf830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d6bc8a-254b-4d89-b646-40ae7a46f4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a57eb7d-3e6e-4065-b3a0-dd3cd81ddf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "afe0f212-8654-45ed-b847-57ce309c48ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731467e1-9179-46e4-8488-d5b6fc7f04d3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59d3a72-7fe7-49d2-bac4-118586a854f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda88fd4-b966-420c-aa37-ceb10ba7d3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08300956-3ab4-49fd-b4b8-f9bd3202cd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8266bae9-2e05-4850-99d4-d9053bd0fc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77de5f33-4934-4340-804a-3c993edeb074",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b0f36c-b15b-4edb-b4ab-ad05c31a88c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9259c194-6866-4bda-8abf-4800304f4022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acdeda6-8065-41b3-93e2-ee601cf150e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f85f59-0c75-4bf0-adc1-0530ca3ee043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96307fe7-58b0-4d17-a22e-2f17ef7cbc48",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c59704a-3d30-422e-a447-fb7fec9ff4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f791e9-894a-4eb5-afea-be9ad41a843c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3bd7b6-5ffc-4982-b429-a57f72046bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc0917f-06ac-48cc-8d94-994bad94476a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bb77ca-a5c9-4eb4-afc3-fab917d7faa9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ceef7f-81a0-4dde-8f33-d36b8ee3e86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d95119-499b-40aa-a4f3-8fe07ae5c2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ad2af4-21b7-4114-9102-de3a6aea2591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21a46b53-5ac9-4206-8e72-740084935a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131866bc-f5c4-46c4-b576-921e073865e4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e9bbbb-066f-49c9-aa63-34ccdd684bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf6e545-15a3-4dda-a237-c99010b8059d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639ef1fa-ce20-4ac9-af1f-b3680764add3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4300d844-0129-4640-b9ac-25d8011fd855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05f7f93-a571-42a7-bc11-0fa01aa2d5eb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b430bb0-7573-459a-914b-d24beb6fe7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf335e7-fe08-4f3c-9c7a-c94d1ace54ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e7bddf-82fe-4960-a04f-b2d7142a462b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "21238c27-deb0-48d6-a8ae-53884d0111ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d430dedd-9da6-4ae8-8dbf-999a96b74735",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d603f567-703e-424c-96e4-1aa936546c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5735e7be-94f6-42d6-ac6d-c9233e6feeee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70cb4d2-1827-430b-973b-09ed86b04766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d04c2204-004a-4176-96d9-a1c73d13418d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164a5f47-0426-402b-872f-c38bd947f97e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee54d0f-e44b-40ca-b1c8-528965c545f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0734e9ca-86af-4ecc-9c3f-3d66795e640f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d51ec9-a081-4a70-8938-072f2f7a41dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "87164800-b0b0-45b1-ac0b-9292171594f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b1e00c-288a-4002-b30e-9341a3363ef0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a642cef1-116f-4002-a851-69893a069823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444cfdf2-29b5-47fa-9dad-bbdf00038e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e176bb7d-6ab6-4e35-b438-3965e915a4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6818608-02a8-4ef5-bd15-ca725166becf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ccdea8-a00d-419f-b235-1cdda316af54",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbac3f16-b6f5-429e-8107-59cea8fa57af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f32059d-8d89-4aab-b383-d594085c7fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bfd354-0881-42f5-9088-16d419568390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e21cc9d-fb88-48d9-8195-9dd0eb0c5346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f1609c-8a7d-4acb-8c1b-426ef8eec3aa",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a2ff59-0306-4cf2-b3dd-d0206d060922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80e3d20-1083-4b17-9700-3db054eb30de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e33342-9835-4d55-87d3-526fbf9b2fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4806077-22d8-42f5-ba20-0ece171e3f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdafba9-023f-489c-b974-071c4ba53efa",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b415cffb-4d73-4fcb-9dab-2472558d9910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6ba9adc6-7287-45fc-bdd8-b7ed044c7bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fca03e-4198-4351-ba2c-bb030e1bfbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a441e27-d3fd-4249-b738-06ad30d890db"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5aa8dcb2-2c1e-4d19-888f-a1116f8f6af8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01d64e08-6be0-4884-8369-f46e9cbe61e4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3714f8-c23d-4879-b31d-cfb8769ae3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dbcf12a6-8f4b-42a0-9b09-a1ab7cb15e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b41988-a94d-4b85-bceb-99191dcab5bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60cccee1-26b3-4dbf-8626-0287b787bd61"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f582872b-a381-4f16-9f82-0761bdb28744",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d79ef69f-e49a-4f11-9cb6-303a88d13c4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccba6112-aee6-4b71-85ff-f2aa6bd18a8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "783939c0-197d-49cf-8720-082f33efc337"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9286dcf-7f67-401a-94df-b25e317cbc87",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d642bd6c-b764-474a-884f-099d70bf9ff0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0ce3a603-1368-4ec6-9084-7849b13516ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e39b5f1e-e8b0-49ae-8c25-893281c8b1a5"
                }
              }
            ]
          },
          {
            "id": "f20c2699-f43c-4496-b61d-f2567feb6994",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf1eb8b7-ec71-49a8-9ee9-9d352b5d0a10",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "548154ea-1ea8-4509-bb83-b38e312e2087",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78027998-91de-452f-b398-f6fc86915547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ba915886-2618-494d-a893-ec5d4ee73317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fdfb06-88d0-4bdd-b2fd-c5e1762b5f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f1cec4-ecc8-45b6-99fb-c18014be30bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3c054736-27cb-4358-aeb5-26f6012a9953",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42c6920d-e120-41dc-86b1-2b58805d3c02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed22c8f6-d212-4116-a0ce-492d8cd5fe65"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "191b36bf-40ff-46bd-88c3-de0f03ecd636",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2c6da863-d6ac-4128-bf05-22959f413216"
                    }
                  }
                ]
              },
              {
                "id": "fd77ee40-4ff0-4c76-afcd-4f63e83c184d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18e053c1-62ca-417e-8ef5-9d896a58ac92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2eb5595-f5af-4a57-ae05-8fc11d6743b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "970cb619-52e5-475c-817a-f13d8e6625bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "76f4510c-0578-4095-bd84-4b8bbc6ccc0a"
                    }
                  }
                ]
              },
              {
                "id": "2c73a34b-3688-4b9e-b47e-37a373906b42",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4cf0092-f5c4-4437-a1a3-25cdd356ec88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "804fa13f-b0ff-4933-af4c-9bd2d0c8706d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a66ef86-b37d-4954-b05b-1d8a1dec263b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1bcdeca1-851d-4dc8-ae61-ec60d3aaec5d"
                    }
                  }
                ]
              },
              {
                "id": "e389f7be-4b71-44ae-8c74-9fd61e0338dd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ff38f17-6865-4310-9933-10b4f27296dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4df2386e-a0bd-4e54-b3d2-6dc7c560da6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7484a23-98d9-41ca-a14c-a3baf9f9b89a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4d39109d-355b-4f78-a9e4-0f9a3dd0b92f"
                    }
                  }
                ]
              },
              {
                "id": "e107d2e5-a78b-44fc-8883-80023804038f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aed8460a-0616-41c1-9f03-f07bd76ba695",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1115473e-21eb-4005-8835-5e7fa0c99ca9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba59f4c7-98c4-49cc-b270-8d8f91eb2f7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e3c3b6cd-3ff4-4794-a02b-6e14cadc8146"
                    }
                  }
                ]
              },
              {
                "id": "1fc805bd-3448-4968-8a6f-f4e5565c4852",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08b9c884-9720-4772-8816-a6ca0a789770",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "684c5670-f540-4a93-8d6e-d2c8a85cf747"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6f318e6-d4f6-4b0d-ba02-8bee93101263",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2956754c-497a-436e-a5cc-33c666b98b84"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a8de230e-f3c6-4feb-bea5-b0b2d3f07a72",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a72d5da-c190-4549-a7e1-565fe2b918c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "05b83268-7114-4f55-a9d1-4ed935f6c43f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7a337d3-8ffd-4a4c-b98b-5267d52d64ff"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7583741e-22b0-4948-87e5-0bde06cc66be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9905d069-8ae2-46ff-bc0d-7029979e1b4b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78612853-3bf3-406f-ac25-b3b3238c7127",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3deb78c-c6fa-4e09-81d2-8fb5e2d65a6f"
            }
          }
        ]
      },
      {
        "id": "9da117b3-639b-4e6a-81ee-a882602c5cf8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "23855032-aa99-4661-821d-fbd9c27c71f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dfd1e9d8-8564-43e9-854a-225b65eef475",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "56c3978e-c2cd-4472-98d5-8db04ed4f26b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2c7aed-1c97-4e00-8db6-a6a214782345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6165b1-7dc0-4865-b620-106a0595b72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab718d2-ea37-4a80-84e7-370453ac9d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b043fe08-d78d-4f4b-bdbd-c43c9265d580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ea3323-314f-4142-8fa8-ea1d0055391f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e415e709-1e98-4349-8579-3a0a99064e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0e43bd-7f59-4449-bec6-aa3ddd85ff4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9b9be4-05db-41b7-b2b5-c6b8f34c1caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f2b982-ef2c-40d1-9b68-a88e52d2f4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1167562e-5012-497a-b76c-c8a3d45d9b08",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4db7874-054a-46dc-9de6-2da947ba3973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985b06c0-4c9e-4505-96c5-49c85bcf09db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8b4228-4395-4a1c-80d9-6a7c1aeed2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c85a08c6-484a-4d3b-9030-3567300a56cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e041583-e853-4fe1-a1a8-dcd7336f6375",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b87925-2755-4102-9fae-d6c8e61c3802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceca83d1-6aa8-4b05-86e0-3890e5273323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42174e38-12ed-4beb-91d2-cbcf665b4dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5149d9d6-bdea-4b1f-9576-0ca349b8ff32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca16524-02c1-4760-b421-af6e0da6c9b0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca8f577-91c4-4da7-9724-a6b71ee13c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7efef805-7956-4f21-9353-140f531e3303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e077e1-6df2-425a-96d5-07dd3cc5deeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2abb4db-1aca-4070-99d1-57d792d49ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874fb3e4-3d56-4dad-ac2b-6ed32868c097",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104e0611-a6fa-43a5-b465-c2e81451d522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e8ab02-ed16-4b11-85d9-6da49672eae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e5f4b2-9675-441d-a35d-129f2db907f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3080fec8-8a98-40f9-b51d-2a2c2d125899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ce554e-ed43-43a1-9b7e-476135138ab0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc8795f-3e7e-4976-8250-86f37e22e8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41404e59-7aad-4efd-b957-24a7b090c056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9427ab39-7dea-4501-84d5-7002008e7f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "80618dbe-7d30-46e9-9653-c388a2215cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224444a6-eab0-4ed3-9d66-891c74db0efa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0495803d-f9cd-40c0-850f-5e133f32ce43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b562306-613d-47ea-934c-81bd540897cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0300fc-a270-48bc-a862-0fa861d2f262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cca55cf4-e1ef-4d25-a729-0be536ea2f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8247b80-f0ed-467e-9484-cbfea8c05999",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea945ce8-b096-43a3-a654-02bc8695d86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec0b44f-b23c-4740-8984-ae1be9bfd9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5697fa-f382-4d58-a495-2708e60d2ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7eae0d-5fab-44ae-94ac-229dae59dc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9049d1cc-14be-4b74-a48f-82ae760cadae",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a1b3f4-84ec-4f7d-bf43-2664af52a516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5920f281-69e9-4bef-a997-059f964173b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7eb987-6caa-4a91-b7b3-026bec3c27f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a102762e-b7a0-4655-ba76-f8f4aed6ea61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb432f1f-7dc4-4d2b-bf0f-d56eda7c2e2a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b36ddf-cb79-4025-8fe4-b051c28cafc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab827da3-e4ed-4b83-b4a9-0818b650905e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c20068-83e3-4a42-9491-8639e2e7cb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0f22e53d-cfc5-4a54-9a45-1dc2ec734e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d69c3a5-5fe1-4882-8bc0-1a438a8a82e7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b500e67e-e988-4f64-94cd-c998b292610f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1033ec7e-939b-44dc-9911-8e9aaddf7a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab2fdc9-b14b-4952-bfd7-49e77eac9416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70f7857a-463f-4726-850b-d7de13fac86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336c2529-a58a-4cb9-b091-476b58a714eb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df3bfe2-94c6-4a8c-bba4-640c8f96d4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5621f95e-f490-4dd5-acfa-d4ae63c6f47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ca4742-b67b-4a1c-9ad0-395520d0d5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae37cd2d-e450-400a-b9d6-b0f53119c968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69dbc408-17c5-4781-8bf7-d0c7897a589e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d791f4-3291-4d40-a212-a684d2629bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61038b9f-333a-45ff-aa33-ee95440c53e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b905500c-f6df-44cd-b6d6-7060f6ab11d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c25c7e3-1c07-40fd-8757-ce180c175ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e064c1-b6f3-4ebe-be44-749bfafe4b5c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29db2b5-33ec-4840-a4cb-b91b8f389261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1580110-a268-4076-96c1-0a7ca9e05cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee0f18c-345d-4801-bda0-74392a29752d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8337f8c2-1e37-444a-8e96-b1ef8f42e7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19a393e-5245-4aed-a0a4-74e22366c906",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c785ca99-b88e-4d94-908c-66f44fd828d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254b790a-9ffc-4c8a-bcaa-20fbf5123d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4bf4e1-eebf-4da1-928a-85672090e9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7745347b-0b2c-494d-96f7-20b946b65dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68e3f8d-dfd4-4514-8a1c-3d7c3cf002f9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9394e9c3-2948-4d8d-8eb9-5e2c23399e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05cde4f-01b5-4445-ad8f-334f5f93e0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1da241-a13d-4b97-a479-178c039210cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5aa52e-d468-4b28-8479-c906e65affb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7b32a1-f792-44c3-8eab-1b98330868b3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43646ae1-3ec6-4bdd-8414-be81c6587ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a3253c-76eb-4b05-b44e-98db6d8ac16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a741e724-29c5-47c7-977a-a0130fac28bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad581fe-8d40-43fb-bfd2-bd6d606b19e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb920ed-a845-4eb9-81d4-b1d199b21f32",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97eb13ed-19a3-4969-bfb5-eefc6e8f9b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3bbd86-ac6a-45f1-9ce4-d33435f124fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365077cf-69e2-45e2-bad0-63111736ae8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5918147-7fcf-4548-aff4-9d70d22d606e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fa1453-c244-43f6-8e78-435d3cabfd17",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517f4c9e-06c5-4b04-b929-79f839674c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0120f68-ad93-4892-8036-ce8c538b7891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b77e9b-ab67-4b39-9349-c843e5848057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b930644f-9267-4e8c-9429-d455aebf2e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8b5a82-041c-4d90-adbb-e90e2ab9579c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22098813-6c55-432d-86ff-200a87d37eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5943ee8c-6c1d-44e3-bcf8-8075c3a525aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb689e3-f91e-467c-af32-f26db5e2a284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59c2b54a-0b6c-4682-b45e-ee737bd054a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe16dbd7-1b37-4c8d-ab22-efb384f8ec80",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2040f7-13a5-4a58-91ec-e3a06056887f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35610731-fbbc-404e-a7c0-d41379b4793d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a93293-e244-4df2-a9fc-bdb53f7a1e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7de8744d-ff61-4362-a202-f28af039e697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226776bb-2249-4987-981c-29861eb0a444",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1e8d79-5bf7-46f0-8b83-8f66f43e065b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eada38f-d6fd-4acd-9bfe-368f2c8433ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b37987-f877-409d-88f9-fa2a2364ccd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c67b5e-29b6-4567-bd41-a93332c415ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e211451-f5e0-4c9f-afee-e47cd57ad401",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9920e91a-44a4-4ec0-84b6-ca58499c82d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f5d2018-8b04-48bc-83fb-61c3b2a50449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd54157f-b03c-46cb-b1d3-4ba24b6d7d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab572606-f696-420d-8ecc-9bc86e20ffb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab66c1b4-e6a3-41b0-a7a7-1953666a778f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f987713-f423-452d-9eb6-59fbfff8f6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8bcda5f-54be-493c-9b2a-b8d873d19e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b754563-f6da-46e1-be0d-5eb401c47267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41d490c8-1f7a-41a4-95ca-424dd28b0e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb99b3a9-c102-49dd-a807-3ca0f044ee94",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d07603-166b-4370-bf7b-c09759a9da62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07ef995-2497-4fe8-96b1-17fe97a49146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905764c8-00b3-4fac-86e5-ffb94c6e750c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d63190a0-fbc1-4dea-82b7-6cdcceb7e426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4319d3-a29b-4646-9e5e-809760cabbea",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eceb2d4f-2d17-4470-82e5-02c05c2cb7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5dc416-444e-42d8-a62b-4b7e308e5a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7962a70-1600-4603-aa50-a42802e3b0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b46ac3ce-56df-474d-b5af-ade43bf6a3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925ea288-38f9-42a8-acb2-cc652574dee4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f667634-f7c7-499f-9540-a22a9bbaec38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012f4ce4-d17b-40dd-bae7-2433f4ffabc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f836ca-009b-4244-a8d0-4f6d2c32891e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd5271fb-6fcf-4925-9382-289e2bf56dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4acebee-dec5-4a48-9f64-5695cf94083a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841e092b-a19e-4267-ae34-a565e44adc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4049cce0-a690-4e33-9603-52c3b6840bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8657031-d888-478f-acfa-740ccf1d5389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8968892-e880-40a0-8eef-364d050ba510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9124f7-b781-4968-a8b0-88ac6b9a6141",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26f21d0-105f-481c-811e-56304c9d3fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc0800b-70cc-4ffb-9c1f-470986428ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7de820-feac-4346-ad22-77f2748b98d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc296aa-f1ad-481c-bd3d-e820e35318f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9673f8-f9f3-4c8b-b5bf-7ed47ef682ae",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e21a6d4-5fda-4193-b3c6-9d1641daa537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b02eeb-9e33-42e0-8a10-339e8aca6f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5757b7e-8a23-48f6-bad8-c6b14ba875f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bfbc145-1c90-42c5-9956-f30a9dff48a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308377cc-f7ef-4764-b537-8ff482d1c21b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aaaba68-ade0-4c65-b512-7b69c7e9ab32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1b3a38-4255-4e94-bdc1-a74b49ab1b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b7363a-d427-47ac-b358-32dc65ad9995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b712841-0f7e-4cc6-a6d5-193f0a1b0771"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4274552b-d280-4be3-be3a-603945566349",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ddccfaca-8b54-46fb-817b-10cdb05803b3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994017cf-468a-4e86-8ba3-2eb41efa888d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc412fa-1130-4ff1-ad3e-7309ec10d470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a65b403-d038-475e-aaf4-108b818017e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f09e5d89-d0d1-4dd9-a332-dc6b06b28d87"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dec415b6-8509-4119-b948-fe71f5b8e43e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bfc605f-c07b-4c3c-808e-c567eb638e9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "762fff91-004a-423c-b193-a6a2ab97426e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35b1ecf4-07bd-4412-853f-0c20eed6c024"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87b9d2dc-57ee-41ba-b427-32360ef519fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "08b11faf-273f-4a23-98f3-61e6e0f27d4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c55c618-4fd0-4772-b905-896d25888059",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d29b7d0-996f-4438-afed-85c643e647f4"
            }
          }
        ]
      },
      {
        "id": "6ddbc812-9134-4fff-8485-91e463356c5b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3cb31835-1bb0-4c7d-b56b-34dbd2763251",
            "name": "Negative Testing",
            "item": [
              {
                "id": "530e7fb4-96fc-40e5-abd2-2f000cdef058",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d06b45e5-16b6-4154-bd9c-015a1311c377",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdc58f7-79bc-4d1e-aeb8-b4298fa7c8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48abd10-f91c-46d0-b3a9-ddd0519539be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c996c82b-4604-41cc-9dfb-d62d727a7af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5eba66-1694-4819-b730-5077519025ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcc8992-4a00-4f94-9773-b64e687cc2ae",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97511d61-f170-4dc4-bb8a-eb790570e110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973c799e-da08-4b37-adaa-468756d73de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bfd350-6dcb-4abb-96e6-f3df057b8e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "446f945b-a449-4011-91a0-6ee8ba4061d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79f5012-1a5f-4854-b1b1-7f9c287c85e5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70d5e47-0ca1-45d3-8da8-b939e9ea7aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3052d96f-3ea5-4292-9475-8324bdbd8a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688dafb8-5b6e-423d-9ea6-1c5269dc1e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf37f1d-709e-496e-be5c-4fcb934e81df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1079fab1-eb82-44ba-9f0f-6cf2c686db11",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfeaeee-f846-4786-80cf-3e45bd4d44b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8209d41-cf46-44f7-900e-cc66e21caa1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04c488f-3eb3-4a61-83af-6bd21a751938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2be4ddc-1e9e-4481-9148-f9000f374dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba4767d-432e-4299-8e0c-97f8a5ddf593",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bb060b-fa07-4e5e-a4d4-7bcd9d20d845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f12d70-2383-4975-a73b-cdb817f5119a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e8ca89-4cfc-4f75-beec-8a955d933bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a37bd6-fc1f-423d-b6f6-649501cdde8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e464f3-02eb-48c1-a941-02a608f2b320",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1febab2d-81d5-4378-915b-25c12bf49f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e091b4b9-8de5-44b9-aae8-6f5e0997f1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8b57d1-4180-4805-87d3-1504bb48bdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d400cd2c-16db-47dd-afd9-285a47b1a8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae5ec0a-bece-4e67-a4af-f8af2e8c424c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b37b16c-860c-4784-9404-e45d46c98c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6a9ae0-e816-4c45-b282-50f506cbe632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e4822b-7f35-49f9-921e-deb3d06b815c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "71735baf-bf50-41ca-ad66-696b0951310a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee9e11f-6ce2-4a54-8315-17a239ac0848",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df261a5d-d2ec-434b-961b-6d7297e871dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8627cdff-4f06-4fdd-a3b4-e84d731c1253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565b67a0-bfbb-4580-9d8c-7f04de9fb451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58217cdb-0917-4bc9-ab18-643a4ca79b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb112915-f693-4457-b15c-3d771d8064cf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d620727b-d024-4738-9151-8c8a4906f886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af122fc-ed42-42a6-943e-cdb3a6110e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2684a87-24ff-4ad0-b557-b3f15f2a974c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f677e001-ca05-4ad0-8f66-05ebd1e6b4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ade1f71-0255-4882-a996-d3a64498ede5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29320bd-0ea9-4794-b867-b0d9240471b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2d7e71-6df6-433d-ae46-ecf3c8935e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750d27e1-a419-47eb-8625-a573d0cf670f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdaa4c69-47ed-48bf-9823-4900423fb69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b71f7bf-76f8-4375-b2fa-2715b12e8a4e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40921291-1a42-41f3-99d5-82131e8a8217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274b5a30-292c-4f08-bddc-0444cd76bb68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e21fe1-e549-4ad0-960b-770f2670738d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d5809c6b-ce83-499e-90a9-f688e13a83bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de41731-fd80-4426-9382-edbc36086c04",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1578a3bd-8e47-428a-9d5f-5c548c30fe0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37607cd-8bdb-4847-ae76-c757714a8b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2c40e2-49ee-4378-9831-c354064b78e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "420a8ae1-4e8c-430a-9172-e166a1a94bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b47fd2-2937-4fe9-9f76-61d9d8396e4f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43689bd2-f600-4b33-83f2-282bce5005ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd59cc9-e462-4cf2-adec-21afb90ade91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b3b083-93bb-4df4-a9c5-dfa5fb7a2e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8094dcc1-f2ca-4cac-85f1-667ba566a689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c473022-3a55-4ae0-82d1-df7698622324",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9595a41-4a52-400c-8821-13455a90b14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37cd61f-9870-448c-9d1a-dda84bcdb2d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02a5fa4-a823-4933-b84b-c921be8a8dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "52341032-68e2-4134-81e2-427c690c519b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c08e5a0-f6cf-4923-b200-d7cbea09d477",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768aebcc-2ca7-4709-a669-32ffa5e2eedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01efc5d7-b5fa-4b2b-b192-159370a9eb5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf600f0-b4fd-415e-ba74-2b67d2374b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d41c54d0-6eba-4caa-97b2-3dbfbbad2d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e211a6ee-26f4-4ea2-af34-296cd702a606",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d952a8ec-b802-4170-a5db-1168985d70f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb083b4-9ec4-46f7-9a60-2dc223448b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbbddc7-5293-4c6a-b6d2-eab74a09644a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "97ebac29-bc71-48b7-a1fb-08723e203dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e5203a-21a4-4e05-9452-c5f27fb607d8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eae4ca5-0470-416d-8adf-0146f765b09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52c00b0-6070-4252-8679-bd2abac9e05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb4a430-6309-4a1d-a17d-6947f645ef54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d65fca-5183-4ee9-9c3c-eb312b7f83d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189019bb-b6de-4871-b79d-912c0a88bf1c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6081e54f-bf87-4e00-a100-f4c69680d288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f5b0c5-f595-4844-a33b-59d18f239d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c77d5d1-b775-4bac-9c26-4a3c10a6d17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5103ee5a-371f-4322-93f4-d88fd6c7a3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeea2ef3-b368-4984-934f-4d73da1d7f1b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233a204e-3fec-40d8-b532-e77fc53b99b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709a491a-b809-416b-8298-5b47a0b4f178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e846df50-20d9-47aa-b2a3-ff735e352c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50e49ae1-e9c9-4705-a378-ec5424683b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63e8ee2-19f6-4db6-bab9-436c4097a533",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab07921c-2ce4-4e80-a280-607ea7638c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e939b1-afd3-40ff-ad36-cb8d76eaa364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5dc4cda-6d22-4b49-a5f2-b98c4edf6245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "deea4bca-46ad-42e3-8208-397b761a43be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90df9edc-2998-4728-a646-b2a947266758",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef21b63-e8c2-4ea4-aa29-d5a9c6a14488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fd381d-78f7-4e37-8a2a-589c316b0ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1284d0ca-9e5e-4289-a240-44f9b04d060e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f831066-4921-4ed2-95ba-61be825e407f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b195f26d-6f3d-4633-a2a7-93335f58fdcf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8900669-3358-4200-8201-5e1d979f0f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8ce1d3-eaa4-46f4-9cc4-89e392796a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbcb922-21ca-4e0b-b221-3cf34aaa8ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e62b46ae-1de3-4364-bf97-3d3d6954902f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f19e6a-95b4-4935-a762-bc4df677f440",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd01523e-53b5-4490-b534-a05153c08961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb7bf2a-9107-44e4-88d3-3c1bb9ee8817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15053be3-5dd8-4ce1-bcdc-5b841ef876ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1da91cd-70e9-4ab3-b688-dd63406f516f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e11887-1b30-422b-b92b-d580f281de3b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80430535-59d7-49c6-87bf-5dc9d778419d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1f2efc-e406-4cab-90fd-e59afab72789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9cc6c0-2fd3-401e-8ac0-03ffaac01c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a3464c6-ec73-430b-ae4b-a1f2b6d0071f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f860a782-50b7-4bc1-805a-757a3e7894be",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7e10b5-0120-409f-9a36-fe53f2fad9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c23252-b0f3-46a7-9167-1267bd5db5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8407df-c69b-4a88-b06c-cbd42d424a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b0d62f-f282-4aa1-9eff-4c3f6db8e9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2799e353-e5d5-4413-9646-6270598a6967",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ba6116-460c-4437-8d2d-de91eb6c97fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26d29d4-7b69-4a63-87a7-5617296e5d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3d9128-4f86-4ee3-8e04-882d47019d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b51aaee-e64d-4c85-9a42-200fee371ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0354fd7f-b5cd-423a-bcf0-7467115d75f0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91ad10c-3618-4dfc-9764-801032a33f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1d95d5-ea15-4738-a342-722ab51c3aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e79a26-2b63-4076-904d-0705ddf3df93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34dc0eab-2659-4d92-86fe-c697269b9659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743e160a-e362-49fb-a37b-bf9f17c7ef54",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb5136b-03e6-455c-8fac-2b7c15b1f61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c20f56b-da79-482f-b655-b65db698c911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31785b5a-ce25-4ddb-b880-d624a013f6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9be7ce55-e970-455f-9ac8-7682b8063935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3d9a24-564b-4383-9478-b83239ab6e0b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607771af-48da-4eb7-a1a5-f3cd9054cff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318902bd-e9cc-48ae-9354-6bebbc845a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26a3b71-2f20-4563-a616-9e263c9f0b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1810c6-0ed8-4e8a-924c-3e54fb49c699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb87cfe5-1e0f-40e5-b369-c0153b969428",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bda1bf-35b8-4390-a178-f121c1a185b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b194a5-5f41-44e9-9c6a-89f521541804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7573ace7-8094-4db8-97ea-54510d266cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb56c0a2-7903-4820-bdf1-762972fb14d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ff98d2-3795-4524-a604-9a16ce72efe4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83255d0-a654-49f0-bfea-9eac3cedc03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3db48a5-dc10-498e-a6d1-f8b1c98eff5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26c030f-14b8-439c-b38c-897e1ac366c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c21056f3-2238-4618-8bd6-91f902e87e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fe1d7b-a2a6-4820-9e4a-2da41177b275",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c08b07-2505-45fd-9f3c-979b79051fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc6f6e9-b228-4fd0-bc79-f0f5df8d8c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bae1ab5-07b1-4a60-b76d-f55a2cf40b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed77e422-5405-4d68-9732-cdbb1e9e3f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b00ef7d-aeff-4ed0-8bad-2d80ab1ed20d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78774116-3629-45e5-9110-90bfd4d93c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6494e9-fab5-40ca-92c0-cdb503962190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5136322c-5399-4ba3-9370-343ad63ba73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb2ffd1-794e-4dd6-8857-10782378bda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db241481-3e19-42c6-a6f0-f682880521af",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b57599c-b3e5-4acc-8d8c-f0ad2a7c26e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0deed4-9dbf-49ed-ad82-7e97e2dc039c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5821f1c4-10b2-47de-920b-0a22bd14b47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "407c3394-4d11-4622-89fd-09eafdca8772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c13b3d-3011-403c-82e9-d86fced09428",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742b5c24-30df-4912-80ab-fe257b4fa265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd20d9f-23cf-416d-b312-7e22912edb88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f46fe50-e0b1-4b08-b735-1b414108b9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "180d5af3-c66d-4735-a5d8-fcd27662d1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a562721b-cd32-43dd-b176-3d53e7487844",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccd83ee-a980-4326-95ee-0e5a47506fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d78d597-28d8-455a-85e7-aede3911d596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654870d1-755b-4365-b60b-f65133a7094d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c999b1fa-08ba-46e0-ae0e-26b43903ef6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd386c03-b633-4675-b54f-0e4ae2484f7b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec34ef4-7763-4d8d-81a3-08e1079e5c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f73c92-6921-4a27-a5f6-1057b34e7cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3f9ef0-49f7-4efe-8e21-523ea4945b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17df4609-18d1-4f28-9c87-4eaca788d502"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cfd0223e-7fc3-40ab-a443-690e4727c8b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2180bc04-0118-4e74-a297-6406f67b2458",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90845ad-0744-4432-9f51-61a65e4a03d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8521a5bc-a7cb-4443-b20f-52a2d7058d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbce8214-3875-48c0-99d5-f7e06d286a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad3ce958-4cc4-49c7-be91-47ebf186d40b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1b930eb-5baa-4835-a186-079fd64900dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4625969b-89dc-4aca-8f1b-2e9554f87adf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9362801-9e5a-4534-bcd2-a5fce2cd5f14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b607b2be-28fd-4381-848c-6d9c49ff864e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd660576-263b-420a-865f-e6943395a884",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9bcdd3ad-ce1c-4060-9f54-329c073f1aa9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc44f625-cedd-4179-82ac-5c9b555dc0ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14bcba24-b333-4407-ad2b-efc33ea1f0f7"
            }
          }
        ]
      },
      {
        "id": "9982a508-a5be-4628-8861-35663d7c9609",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "82f16b79-b924-43a2-8130-7d1079742d81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15fec763-de3e-48ee-9f6c-cf63df1f19fb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7641c8db-5cd4-4704-a84c-b7f378c7e477",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89150f62-3248-439c-8c88-2e9be3da4644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89992784-3498-433a-91bb-eea74677cef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10952a8b-0e88-4f83-a06f-7ba25e0b6bf5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077ef897-2b4e-489b-8f66-b900b3032944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f7ec79-8a84-4a7d-beb7-8e7660035557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dfe2a1-ef6b-43d6-8683-74fdb17368d5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c373e7f0-325e-436e-af05-3bf96b294aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0718f74-7d54-42d5-8ecf-f7547b4f83ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03793de1-831a-4194-8ea4-79f7fc852c81",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c794828-bca9-448f-bc49-8958098c7406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3265a219-a7d9-4ca8-b254-679887f02a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0618680d-20ab-4862-9811-2ca23ca9c73a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0789df-ecf2-49f3-a253-6f111d32d0f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c518a4b7-cfee-4aa9-b404-3e33eca71c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9c0405-0a32-4028-9573-8e85d3b141ef",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbdfc29-2021-4df5-998b-06364754d420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39873417-beac-4a1e-b36b-93981061a3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd0682d-b750-4d4d-b00a-303b11e34b78",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f85788-8919-4331-8a21-a168ecabeaf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5ac020-3779-4bc8-a9b5-fcb8a221a405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0bb780-f151-4735-86ed-e5f1a8b6b2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa785bb-1f54-4739-85ac-d219a4d665c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d36b9ce-6475-4344-a2ab-24f94e69a399",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a6010b-3fbe-43d5-9593-174b3b3c2ff7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08adb0d5-0b35-485a-8dd0-89650c73d845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebaf230-cfa9-4c1b-b60e-7cfe7d2c8f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069994a4-c77e-4f1e-9377-f3670a95c8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b0f002-d025-4955-a7ea-268493f71fd3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4f0aaf-5ae1-4c73-9250-c443705d0257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e04034b-2c11-4720-886a-1ca02d7d69b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f64b944-f018-491c-8ad3-66c7ec8d3fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc4be597-1c72-49fa-afcd-3c854c1c10a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686fb0ac-6b38-43a8-a8dd-8e1c6a324dd2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25634ec-ad7e-4b38-b702-27f7d0aa108d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c180eea-cd84-4b0d-b0fd-cfc4ad275956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a4f7ec-c3ab-436c-848b-62d7e8314450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d81ef0f-c51a-4fff-bec5-5903376bdea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1406c66-7501-4273-bec4-2d7695807d43",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72fb821-7b59-4005-b964-2fab852d53ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405af83b-765a-4011-8f67-7ac53e00ab8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6240b98e-d842-49c0-a0cf-d89fa1875874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40add9d-6ef4-4d24-9b23-c6bfa76f66b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491ed096-b78c-44f2-bc34-98063d9a9120",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac53f2f-191f-4814-a213-f825fa66e997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0cf4858-3fab-4e33-b6a7-a841322cf73f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b94d28-2d90-43b8-bc67-a419014238e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab6fac1-ffab-48e7-b931-8f39dd55bc43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcc11aa-bf11-4e44-b57c-3dbca52e383b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31e5598-0383-4903-bcb7-06852ed9910f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82d6d3e2-45dc-4261-921e-386602b52bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a077eb30-ff3c-4f9d-9a48-445343d338c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87da840a-feeb-41a1-927e-c1cd5d50176f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22329468-fdf9-4343-91b9-2e606b37907e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2702d2-0e02-4811-8103-d516dc744842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a746128-c0d7-4a80-a9ec-48df5e183276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f644bc-f588-43c3-9067-2bca63d213cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e4dcad-1cf8-4eb2-8800-b9e61a29e4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446a8212-9d62-4629-a946-15d5a7d4b939",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9594f42f-28a8-435b-b759-8c8766db3967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cef32dc6-882a-486d-a564-30444be44f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b729d69c-c7e7-4c45-a807-ce75a548849a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c0036d-235d-4508-a144-85759b7f7eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4ae725-da24-4562-b8dc-4de82ae51aa8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d801299-344e-4185-8771-145cc2565802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e450f75a-6f97-46c0-87ab-88b5a8dfa1c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f0d9e7-58cc-4811-8884-f6727930491e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a7bacd-10b6-44e6-8991-2f2d286e1ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628ede87-a998-4e64-b5f4-13904a530750",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f855bf45-a51d-47d1-ba82-9d20aec08683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324b6b21-48f9-4a94-8d11-432b2b23ada2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade9be8a-c22a-44b5-9108-6d0e3852f052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c0aae0-9fda-4301-9e52-a0b1d193c445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479b6cf9-77ef-4667-b627-0845be700c7d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce32223c-7296-416b-a181-b21a8c419fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b63594-555a-4133-a1f6-700a35f7886a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3f2449-1a82-4572-84a5-e910a7cd89a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b824de-cc21-42bc-8131-eee9f60dfbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce7d41e-2a8a-454d-bd11-e22053ef432b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f48ffcc-70c2-435e-8ab1-ea29a6012dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d22753d-5ef1-4673-b67c-d398116645b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfda270c-da64-497c-8df7-dd6ac2f3b1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f146d5f6-9e44-46a9-ae03-d3fab9234a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7d2c0d-1fef-47fc-b764-01e93a8021cc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a99af20-068d-4563-84b5-b59595376128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788e4a52-df78-448e-8c98-e5e852686451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a3c9a8-5a80-4930-822b-f4ee61455ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9878e3f-8071-4165-a105-d43c711eaecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1257f7b5-a19d-4816-afed-84ec1bde3eb8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19ab66d-65ba-4d9e-b588-6e52fe873e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e24cc28-2800-47a8-ad96-720686e9b62c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ee5a7f-be0c-42cf-b021-774d620de466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06332df1-9341-4a8f-a4ab-7375aa2aa612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9ed664-8914-4dae-9791-c8c55e86f71d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb30e97-5d6c-4cf7-a6e3-57610712e989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8214962e-7e77-42b9-bda9-b0b814b4c7f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b177382c-212e-4203-9b03-ff2cc22002a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41cad531-2c74-4917-ab08-608ba817a7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81042baf-6301-440a-a19a-577180477906",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1889666-c437-4064-a10d-f233e04bd19b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69c5e9c-2a17-4d46-be0a-366a8a5fc188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070341fd-9984-4c17-bf85-8c72a4c6f8a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0a821d-31e9-4ab7-be60-21d03411efc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fd01b0-3514-4c32-8291-4d09712e7bb2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff68c712-1ec8-4747-9c01-79e0853e4d61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9697bc07-2661-47be-86a5-5d52c80aa08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3effd12-5988-4906-8504-26867861e0ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d44a62-5492-4a54-9c01-2a93fca6be24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83960c91-6e53-4570-91a1-89b76072d598",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f275630f-745d-4076-bb93-045827c4beca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d7247d7-a70b-4e73-b2e4-42a573e9b3e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857b6976-2917-444a-a516-8818661c41c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70421957-7e48-4526-811f-1b94be18417a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821ce70d-97ee-40d4-bdb3-687c59c6349b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf134fca-a2e8-4f77-8cf4-3ea27812ccfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4385c79b-2e85-427f-b978-0ebd97fd50c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fe8569-2682-4a1b-8786-a0c7d62fa2b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e998d22-84ea-409e-bf37-7598a37372f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d6c728-6754-47a8-a462-c08b5d8cc976",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a09a9e8-3371-4ae7-a130-9502e1c79c5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffd5a27e-c3d6-4224-b36a-5a23a5cf1f77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa1f787-5fe3-4e8e-bcb0-a0b89a3a6930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6be0926-a7d1-475c-84ef-3f61fc58b582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b6ee7d-0d76-4757-8b65-36eb47740e90",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91b8b5b-9fbd-4c67-b0f3-e314ae882378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663a8bd3-c289-4f1c-9c34-918c91125891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f101c4dc-9d6e-463d-b1c2-9ae24f79b00c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b21a60-584c-4e55-9bcc-f2b82b5ac66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07561e79-23b1-4dc6-bc5d-12c3a2dc53c2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1135f82-7bc0-44c6-b446-dca09cb18ef5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad85ccd0-2754-4581-ab18-bfc582979c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb87a72-6313-4ada-adc1-ba33a525fe7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc2698a-17b3-4a11-bc20-50e7fa33d18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5feadbe0-2540-460a-975c-7da013219e8f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23c5f74-906c-4ccb-9f42-a199d9a99f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4889cf33-8aec-49a9-a783-f10800a8f3f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f593d8-2504-4cc5-8799-6104c3994054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22abaf71-e5d8-4618-a45c-22eb3f5d171a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2c0870-d9bc-4228-9142-e4577d3d281f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e1bfcf-1156-49f6-8024-fe495608db76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "582cd998-e179-4bbc-a56a-7cc720bd6b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea481fc-8318-4cfc-9d15-2b5db3401efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d48e3b-0339-4927-a223-48898382a283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b42bf9c-6f40-454b-bed9-4e0f7f7957a5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefd4322-8495-46c5-9740-a618a5a96bb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "270b1888-00d4-4a4f-a220-d49c858c7725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c9e39e-e83e-46de-90b1-081f03e13e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b332e4-4118-4129-bb54-3ad740b474b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7a13dd-7641-4e55-b704-1422dc033916",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f145a350-7bf7-4377-99f1-2c67493fac63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ad6b548-255c-4cba-9e0e-99f5aacf1e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019e6340-b623-4c09-9cdb-f91de030aa8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bccc206e-5226-4b1c-817d-a5d757e1c408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c86d7f-bcbb-4beb-a6b6-8df1a759bda4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204f0d2e-3e34-4ab9-931a-996c66be3a73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8c8a570-1e58-4b89-a4ed-41ffc0b5d27b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b324a7d8-2398-426f-8700-b41e4e9e7fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac32c13-d9f2-42ad-8749-8f2d5c6e90c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f31ad0-31bf-4277-9d78-225bf61030de",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95848270-012a-4650-88a3-ae3bd03c6b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d424d4-1465-4f8c-b2d8-5f77bd7eafe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e684eb46-d075-499c-97c3-ea11968fefb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e889581a-34ef-4ccd-8240-c65d11144b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f487965a-7810-4c59-9889-b9d9a3ad8dba",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6392efa4-ff73-47a5-9242-7a31850b9bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1531a3aa-9159-441d-9ce7-e3bb9777f1c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209789df-f481-4dc5-8f35-0c9546a8e71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4c8cc6-f0a7-41d9-aed9-5428fb4a1779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff163aee-9371-4fbb-a84f-3f55d8f18ce4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7b9a9a-ff9e-438c-ae57-4d1d46935d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21babe3e-2f92-4a95-848d-6c0d6b575079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532ed713-04cd-48be-ac23-60d4863b4c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4d5e7d-4b04-4892-82b1-cd6d53e73b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb2fe00-71e1-48ff-b037-d4a0104acdef",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa364d5-8fee-478f-9f1b-03d29e773b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654ca08f-8077-4b33-9995-935b33a65694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc29813-5b2c-4c41-8442-2538659567c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891c828a-87a0-4e1f-ae95-5016488af125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32dbbec-a78f-4c2a-a917-ab0f014c621c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c05a24-52fe-4af9-801d-b273416a8ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63142d4d-d9f5-43b0-b3db-6795935eb363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5498ca-e1dd-4853-860c-e466f38606b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be3128d-57e4-4825-a4ff-f738092fd029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b9f987-d511-43d1-8fdf-8ebc82e78dc3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90911df8-fd47-4325-bc1e-41bac5774ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f992ad-8338-4386-b292-7eaac0e7d3a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2da4526-0663-48ce-a792-9f08218f2ce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce91c8e-1a88-4adb-aa41-8991c8a5c2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a733798-eb23-463d-815c-2caa2e8efc6d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c9270f-3459-4fb4-90f0-de3face2863c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021c50be-f705-4c8d-b88e-27f65ca0a0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a01c1a-ba53-49f7-ad50-7177ba11e425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7f9cb4-9308-4e44-8dea-3731ac0687cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e31791e-424d-4428-bb2a-eb97db11999e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34eee487-e61b-4dab-806c-5c92337da01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0027a2-b51b-41ea-9c77-5f94dd195217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbcba13-f0e7-47ed-b961-84928316d416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf192011-3240-4270-a759-c923621bfd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c147548-8366-41c2-874f-269f4d5bfd4d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69658725-25f9-47a0-a1c0-f0f680bf7c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871f663f-c07a-4e5d-aae6-0e98b2ae66a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d1247f-916a-4cce-9f7a-89b4b8af61d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e557687e-59ee-439c-a276-5c433be019a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d72d30-55ce-4aa4-aa85-5f32653af847",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ffdda21-71f8-4e66-b251-1b9385f9a147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473813b1-beba-4281-a0d1-c0ab64004188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f40ecd-aa9e-4998-b97c-d5e52ea68676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e9bdf3-f86f-40be-8216-b3f11b6bf9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e00986-5fb0-40ea-b491-a694f4cb15b5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309e378c-e88a-44c2-975b-134097e22d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b613d5-2771-4213-9b30-47f9d864c92a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a634eba3-3543-4c95-889e-798f8afbec06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38fbdc81-2d66-4c72-8e68-6605b20e7b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb7acd5-ddc2-4ec6-b3d4-14471e594546",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30720251-aa7a-420e-a00e-ec745621a2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282bc7f4-3b86-4bde-b133-c870ee1df0e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317cdd71-fb16-4b5f-936b-2a2cfa2d75c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e2bafc-4a9b-45ff-ba1b-eb80d74dc0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3ce206-fe4d-41e8-aa4a-acf12d560164",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5083d2f-82ef-4863-b3ce-f52d643615e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e9672b-e38b-431c-b07f-b467ea91a4b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6566a2a-e518-4773-b89c-f497f88e0229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0eaafb2-1fbe-40d2-a7bd-e4dd3c644fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c2dfe1-eb99-41b3-8df3-b8a011a29ffe",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2edd16-dcc5-4caf-99e3-768342690699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3bb99ab-959c-4ea2-adb6-50c8dfccb9eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08939bf-5cb0-4762-aa7e-9595ee5642e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1fbf2c-a099-48e1-a230-cd5a5b879faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1770cbea-0429-4d10-b788-3eb611e0a711",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882b9b45-137f-4f2a-b360-80e8e183fd32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8811dcaf-d280-4c40-92f7-3a113654157f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded974bc-fac0-45b6-a6f9-e5d45393ac75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73272b97-2ef8-4f52-9c56-63da9cdc6bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d466fc40-3a54-4ce1-b915-ff33dbabb03e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fe5112-029a-4cff-ae19-7e82013c3137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17692e76-11c9-48a8-996a-2b622707db9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71e6395-5fc2-4be4-b9f3-0d835f4c8361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f83311-112e-4ea8-8f26-3bca943dbfad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515b9045-c0e9-46b9-99c3-76a9c953a0b4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0102a0da-102a-4070-835b-930f356104d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46aa4a1d-ae39-4af8-bb81-05aa8d208d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "936f82ed-f244-43db-aa33-2d1f16a02f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b512733-1ff3-4fd0-a3cb-9fbc4df230bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ccc0ec-f00a-4502-9cf0-5435a41bd40f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cf3bfa-44a4-4ee5-9292-ea837db9664c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f1ca1a-1a06-46a9-b3b0-f3eefc416565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5b9160-3595-48eb-82f8-b6466787e19f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba01d9a5-465e-4bf8-af87-1621d7056716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721a3451-4551-4d19-aca6-088d504d9dbd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b35f53-bae4-495c-b408-3fcac386a381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a9a30a-af8b-4417-8dc9-ea56396ee466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a16423-16c1-4cc4-9fe8-8da130a2fe4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40328875-01f9-4985-8bdf-e97acb295c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbf0768-97a1-42d5-8741-1207dba0b720",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b307ec30-8e7f-470a-a44d-aaae3c9e9242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1986e831-edb6-4d6e-8faa-4b7727aa5704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1b4a03-dc73-4cc6-9091-59f9342c8db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9dbba6d-094c-4cab-83aa-dcd120d5979b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8cd84b-23bd-42d6-a70e-cd341eb19f0c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0903744d-c300-47c6-bfd3-6caba490b11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e7dca0-fac3-4093-bff9-b5a48e56178c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05ae5e3-9238-40bc-801a-f252eb17f99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d00b19-c794-4062-aa5f-df60951d97d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ced637-c62d-49e8-93db-f0bd64711b29",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7a9c0e-962f-432a-b227-524ab93c02f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33df01a-6c2b-4326-b412-e2aa870e2bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c668f9-14dd-4a87-aee8-861ab8adc481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a0d12d-3317-4838-9333-06065ae1cac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c3b553-6f49-4c5c-9270-13bc368bbf91",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97578d1-9d21-41ac-af28-a1237af94916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e96e1c-477c-4ad1-8f17-3547b54354f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48145419-7568-45b8-ba0b-0989e7850bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5fec74-c6ba-4a3c-88de-da0e2f4283f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a83e1c-feb1-41cf-983c-4af73eafcd9a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe940c7-731f-4a5d-8574-2617307b8477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1326d5b9-ab2a-4226-a246-fbd7869ef301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa98de4-b8ab-4177-815c-833fae6629a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd773871-8e6d-4763-89f3-d657aa97af6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d23df1-fd41-463b-846e-b19ba02a52af",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3312c1-5ac7-4cbc-b651-8ed2150d9784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36dc7e02-b384-4e95-9edc-1abc4d13a0c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707c0e83-2bfc-4d93-80e2-fd64b209096d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8ecd45-43c6-4e02-887b-24d1b34f9c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100478bf-d076-4540-9acd-83e61d070eec",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f124b5cf-b1c4-4543-abb6-ed7dff662cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c83c12-8996-466a-a460-81db42f7728e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "290b5ff3-5aae-4b77-b6a4-692be219aefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db28e49-d8da-4dd5-8740-8a72064ffb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2384f4-ab01-46d2-b46b-5b729fb82878",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13812481-c13c-41df-8856-edfcd526617f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3247d926-45e2-4c74-907e-dc6e2f256463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ae04a6-2fc0-4993-95b1-4a7f75c0d32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d142576-15c6-4dfe-a5f8-bc7ad2d45c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23adf0c1-4915-4673-a32d-e1454a7fec08",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdf2364-e507-460a-a327-faf76361bd91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f3596c-2b46-4ef2-868c-9ee8937d9aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b548a3c-3ac2-429f-8741-541ab8826523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b986eeb9-9aaa-40a1-b8a9-8c6ec68f3aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570f0d0c-a799-4fcf-92ce-091a7d5ed933",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902da674-13ec-4ca9-9a36-5a63157e7ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58214d6e-a5aa-4cab-90c7-dadb547708c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f290c1-9cd9-42c3-a591-ce434d834ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad7648e-655c-42bf-ac94-3136325aaca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27dbcfa-f522-417e-b982-7e6300fcf9d1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33772a9f-13f5-465d-937a-fdeec0cf03d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03f6ddfe-0354-4f3d-aa76-b712ee8df758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f20ae8-fb41-4532-847a-53479de17964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e846f6e-32a8-459e-b641-c2c7ed7f2e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a38972c-f3c2-45d4-991f-246889253abb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43c29ca-d1cc-4ac9-b081-b5ce25f24cee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d00717b1-3f7e-4877-8143-ffae42bb66a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77b3e21-d9de-4319-b320-2bade94c262a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8889f691-b8d3-41fb-8705-e4a0293fc8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d8bbf0-0950-4549-b4f8-99c4879ed584",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82267ee2-ab66-484e-a2e3-7c56c0203dfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a47a2793-f32e-4b71-904b-874a35760999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1244296b-0be3-43dc-a44a-1d18476845b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ad1a90-afcf-46c6-8deb-6f6252d47141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f935187-ca96-461a-8282-a6c98202f9b0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0282d4b9-76ce-4cf9-be13-05ef5918aef0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8061fa8b-298b-490a-b548-71d6948674b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ee398a-bef9-484f-8e5a-2938b0cfde7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d58b6ea-8668-4efd-a8a4-70a03d4461ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5f3952-0e86-47c5-bbd6-ec5e207df5c8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06a4022-a2b2-4584-9d07-1efff37ea463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "714f4521-c411-4f86-8898-1f9785928ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b6cb41-50fe-4132-9c41-9f6186d95528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2eb33d0-f7f2-4436-b759-0f0fd5c03c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d19c949-d24e-4cfd-a0e7-7677e5787073",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635fa5ff-f3b9-4f30-b473-cfb629f87774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "004f1663-684a-4760-9064-2444c3edb319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed168916-61b3-4762-b33b-35dd8b0fd52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2027ae-78c6-492b-8430-4ded62ab1860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be77e006-c4f5-4ee6-86f6-a8fcd77b89d5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4566b628-d992-4f1f-968b-f952a52aec63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "820a19bc-b161-43e8-ab3a-2b493c6b9e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2958cc9-e567-4fca-9abe-b7deac4d8174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ddcdf4b-b749-4d41-b75c-67efa246b283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff17afe-1be0-4401-968f-526162dc6a53",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ede6f23-ff16-4921-9040-3a2ed4f84dce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "058f5c54-076d-4137-86e4-3755d258c671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dc9835-8a30-45fd-8085-b941398bb8ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03488b68-18b2-4cd1-beb9-9cd338000cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8770fe2d-a890-483c-8258-c551c81cb15e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6062f74-ae57-4660-96fe-ff4a789b9f11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f0798cf-4543-47a6-b4a0-98149cac9a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9e63a5-4c0f-4651-9e2b-4e3ec7ba4d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999a5d40-61e7-4a2b-9ec3-02ac88edad33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c6b601-4996-4dc4-8676-fb7a93282b45",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1671f74e-1dc5-470d-8d12-1e7acf4ae804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c4495e2-9afb-47cf-9eb3-d9c9f3bc1fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6272d86b-a029-4b85-b53c-ae7350031be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec3423e-6dde-4438-848b-f5d68fcd01b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b782137d-a253-4c54-9b74-dfddc3bade0e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fba20c4-7db2-4330-b97f-3c7e9b7e64b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "477acb05-8fc5-4caa-82a5-08e60b5f020a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4077c15a-ca14-4c5a-bcb7-06e9ae60ca28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6646b8c-58fe-4768-8636-614fb5a640b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9948c1-eade-4882-86e8-3c6b642ca4ed",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06656ff0-fe4c-47b7-bdcb-c64a6d9f28cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "775ea6c3-a4e2-4eb7-b426-15e0f86f8441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2968e0-4e84-449e-bbf9-c9efbffaf0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1bd4c6-874c-4aa1-a3bf-eb69a3fcebaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c01fc2b-7960-4710-8e3c-ece3d3080189",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb66ebd4-00cb-4655-8e29-98ba5d1ea894",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6583d4b2-f0f6-47f2-bea9-eb748bc09c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4e8592-5549-493b-be09-76749d35db9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a85a7a-c78a-47da-a279-8c3ead9a2184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d3ee14-c8e4-4989-9547-be196b4f0ae2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0876e4e-7ac0-43a6-bdde-fdbdcf004489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6132b67c-7e19-41cf-9f49-c78cf02dba96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6d3ac8-26ff-4fb0-a436-14bb4a261bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f0bfc1-4169-4493-bbce-8a6eb9ddb7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af15f27c-68bb-4131-8f35-6b9dea2b5a40",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3884c89-2c3e-47ce-9e99-861e573fddcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93c1de75-3baa-4b31-a152-db1e78970eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5193d5ec-c468-4ac7-a3dc-dfa571d8284d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eff098e-49ab-4ee7-b397-6afa1f0e6a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a2cb3e-9dcf-40b4-9ced-332d63e526d4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c35f66-c7d6-461a-b992-ef2288079583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b224b05-a4e9-4e31-b7b7-e194d7cd199b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4602fb76-00ce-403e-95bb-8ddcd86d120a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb1ad8d-56e1-4393-8737-a7c500f86d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391df89e-e267-46ed-8858-f72075db01c6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfe691c-b0a7-4e55-b94a-0cf89976440c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5322f222-764e-4c10-96aa-0f82c9143d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3039e81-8df1-4b9c-95f4-f310e4806774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d2dcef-c4dd-4e86-a0f2-00ffbbe88f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5808ff0b-ab33-4c0d-9301-e0d6b2e340aa",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de68e38d-2602-441f-94b3-6b0616d93577",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d72e3863-4876-4609-9a98-86e1024f0835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ce0e6f-da6a-4334-abf0-c3e3d9e7fb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4aa7cc-7062-4ce0-b273-ed770e3526a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d70c962-d634-4716-8ec2-519d24473e11",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e345a02f-31b6-4929-bd90-9f023c31ea10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2a34419-c278-479b-915a-3c84bf02d8a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8517da-8d50-4187-9c4a-98703383219c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802f4077-4b13-4b5c-8b42-23c43847ecf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c42f4e-5481-4b63-b6cb-56d6f28da3ac",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb5a575-e2a2-4cd2-afc6-011c90021b62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad2279a3-281a-4825-aa0a-7e2088755117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9485081-4434-4a03-bb77-04dee28e60c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc77ac45-b07d-4917-9d69-c9b0fc60b568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5338e7-0cb3-49cc-a137-caabd91e077b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc552f97-6714-4ff5-825e-4a0322183fb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbc03048-f41a-4eaf-8c82-9dc8f2e5cdd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e056c15-0356-4261-bdae-998a9a434844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2e2392-d09c-4f58-b6b4-6732903901c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e237270-abe6-46c7-b0f5-52f75a773233",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88ab8b7-0987-4eca-8499-c72b04f16837",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f476a107-4f30-4bdd-b17e-a6be92adce39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "893753d6-d8cd-46e8-8ade-c6000e3ff1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f192544e-5158-48bf-a5a7-2772bce027d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74416462-abc7-4a72-ad6a-43864cc96f90",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fc38ee-e992-4e5b-b25f-53df97cf6be7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a545cfd8-bc3c-4049-a862-0cd46b5b7c82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ed4b1a-f896-48cd-b722-8a5534d4e8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c56780-9128-41d7-8409-66b96635c966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd66085-50e3-4f88-b3f9-312f56627537",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e654c0ad-92ce-46ca-adb9-d59ef7b4609a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1820dd08-8dee-4964-9d8c-0c54fafda18c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77178f2-d6bc-4d98-befc-c47ab190bbd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f4abdf-1048-4850-a8ea-5e323b498dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b63c5ee-43ab-42ea-87d9-9ec775000fd4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063b6a7e-2440-4433-acc3-e3f266caa550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53d57e4d-40f8-4daa-aae3-67c95f70a542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f07c8c-379a-4d92-b604-0807e103f446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf1c3ec-93aa-45c0-954a-737fc10fd97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696dfa1d-a892-450d-82ae-2b745a2cc04f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e322cf0-9700-45a6-aa9b-d63d8aad07fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0965cfbb-ab9c-46f2-8644-3f57d16dc124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cb2f32-749c-4131-888d-ee3e63b289cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb7fbb9-5f0d-4053-a542-93655113572d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80b8dde-046b-4e8a-a694-ed7ec99b979f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868aa611-bb70-477e-9515-fcc24440532f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e49b70ee-8795-4473-a15e-72efaa47cbca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4f8518-6721-46e0-a682-7cb266326929",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2392654e-2896-4717-b7b8-15abe36c627e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408259a9-76ce-41f6-8e29-6fb867c20ce7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea6787a-557b-45a0-9785-7cfafb34345a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7940b9b-a027-4f67-a7cd-8d4d9c5b68de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a649793-ddfa-4441-a91a-a4de12c9a85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dce6590-7099-4753-adfb-263ac184a563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68cd5221-2998-4cdf-8aa1-70d60ac3d292",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3381a05e-31a9-4db0-82f7-2fe395bc3ab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31e840b8-2d9a-4090-8a4f-528783b62b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51428d5c-118d-4a84-b747-534d44c85023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c622d7d-3b73-4de2-9d54-6d861bfeb88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3a1f2a-13f4-4552-838a-356700aa7579",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eef9318-0d70-4d8a-914f-33b0ea77834d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2863cc6a-02e7-49a5-9cef-8b95360c1945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84f4c45-7c0e-4169-b7e2-4a35f34d2960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4919f5eb-6fbd-488e-85f6-f9c0a035e5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a4cd8c-a20f-4a88-a38d-b68f0d52d922",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd56a31a-4f4a-4fcd-8d26-60fb024d332a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea9bc3c9-ecb9-4382-a843-b0a17e41c7a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ea2bf3-dc4a-49a0-bc74-3192deec0e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1386bed3-2772-42d3-b147-30f5b60ba066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c569d48b-f22a-4461-b439-0036baa890f4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1f3949-f42e-4332-83e8-5ab0fe093580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65d4a9bf-0015-402c-a95b-539dfa8f192d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5640575f-be50-4d3a-8491-8e3b107ed338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8c4c82-bca6-489f-a42d-14f2dc00f8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220f53cd-dd1e-4b52-8740-a1566bfa883d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abedd0d9-81f9-4a0a-844c-497dd896a44d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a3b739f-a026-4146-9faf-d1c27212af42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bc67e5-e4dc-4114-9430-024e5f9d3293",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abab9afa-3075-4241-ab5e-52bed6eaa438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3123a54a-04cb-4d6f-9f0e-ecbb9b9a3ee4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ef8c6b-5d5e-4286-969c-37cdef29139c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06af5cf9-104c-4d36-b5d8-29858baab0b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "813354ec-e2f7-4ac8-af4f-75d0e08bd5e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc35ff9-7fc4-4d36-bca8-996c35d7ce2b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce29ccad-a8a8-4f4c-afa8-6294bc26afb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f3f594e-4bd8-4fc4-98d4-cf3acd418a4b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0af7b81-5da4-4085-a0bb-6bae3272cc20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4c19b96-703b-4e1b-9d00-b9f86a680da5"
                    }
                  }
                ]
              },
              {
                "id": "c494ffc3-744c-40c5-bf0d-66743e053e91",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de9077e3-f6e6-4d1f-bffd-b2726bcc9563",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77eecf26-234c-4234-9e33-8340ce097873",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "84abb351-73bf-49d3-9b32-4ce1f80d2012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df91ef60-e969-424b-9d9a-f50778488d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d820c526-e9a5-4474-be0a-ac99326304fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de2b406d-5e86-43d3-958d-780cfe9f2d07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df831a04-154c-4d6a-bb3e-1a9321bd5456"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58cb5eff-d5cf-463e-8af1-44f2abd505c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6e09786-87d1-409a-9617-8bfd90ff5ae9"
                    }
                  }
                ]
              },
              {
                "id": "8972c0db-3ddb-4cae-a2b1-a9a1e6eefee8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6c77e9b7-6dd4-415f-885d-16cbfadf169a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59b4804-90c5-475d-a15f-ae41bf189d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "79775fa0-de4b-40b4-b90b-156f04822bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3973c83f-cc53-49dc-8bab-4c8ceca55c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a646a29-aefd-40da-931e-7583475f339e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "af8fb476-5162-463a-ac59-741a36ea3fef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b8880320-eb43-453d-9a6a-55a4ace938aa",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7560aaa6-eae2-446e-8ccc-4edc2fa733ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7c13b32d-53ef-4da7-b0b4-daef22d23cc9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73cf33cd-7fec-447c-a5c1-619ed69f88ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88ba68f9-1a02-42db-af60-a3e673abb1c1"
                    }
                  }
                ]
              },
              {
                "id": "f677a5c4-8e2b-459f-af89-e70e8b1824ca",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23b43f08-0e0a-4c6d-96d0-53f8b0dbe7dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e501c6d9-3daa-46a5-9081-2eb546cc613d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a21cf7f-8b94-4a87-8719-232fdacb8f84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6542395e-994f-41c7-a5f4-9c63ad9d9b83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "823769a0-151a-4625-b4fa-52a68ac68937",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "941faaca-8ddb-4f67-b89c-f28f63d2ceaa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "453ed736-3b5f-41a1-a317-89167a401637",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2c0b056-2285-40b0-ae28-bbf2de9e9822"
            }
          }
        ]
      },
      {
        "id": "cdf5a4c9-3243-4c02-ab11-d0933b5fa64b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6d4dc015-c379-44d4-ab2a-7451401886b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "07d32257-6daa-46ae-8f6e-cedb48584fb6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43115d63-6ed8-4574-931c-5c478c4c1f52",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698738e9-7b9e-4e78-bd43-6361706f585a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1efaa4ce-79bd-496d-af74-dd227dcfc537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac24888-ce32-4fda-89be-15a451683ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e083007-c58f-443c-a2e5-fc930125f991"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e08f3a25-1a49-4f8e-b70b-6dc0196f09da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "682a8399-c81e-401b-a2bb-d6b55510712a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af379557-96ef-4c53-acba-78033e1a4fdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b32c01b2-9d29-4652-b40a-dd14d17cd8ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b756c499-c82e-41ac-addd-dafc7f3370d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "960c5222-8d51-4bb9-a412-9020efee7175"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "779d986c-fca1-42b9-ad13-5b30a681ef21",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "040659cb-3266-41fb-990a-1f0f5796d64c"
            }
          }
        ]
      },
      {
        "id": "41b9430d-f1cb-4562-b81a-b7462bc25a6e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "76eee8f7-dfd1-4a7e-a8e8-bae0820166e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0a0719d-9f34-4f71-bf15-88f91c48a033",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e927da84-6e70-424e-9caa-bdc892fa6702",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f436c3-bb04-4c5a-a7ce-9b9a54254fde",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "450026a0-9f69-45f6-b581-01bc1a34d1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f86ae2-28be-46cd-8fb4-9f410c59b894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ddec1c8-6d73-4eaa-90c7-137330d10c44"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a359196f-73a1-463b-ae0e-c0809774f5f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9aa8413c-9753-4c5f-bb88-84df05a25e23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ecf8380-485e-41a0-b04c-89cf3784fbcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10d7758e-6e98-4d26-a8e8-f7f98419212e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3f204e4-e926-4ed7-afb7-5ac09a010888",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "152a1df2-b464-4c76-ba7b-e7bc3c57e84a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "041e56f3-58eb-456a-aefb-b5d49ddab479",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39285092-17a5-4e3c-afd4-b1260af34ce2"
            }
          }
        ]
      },
      {
        "id": "dcfa09ad-43b1-4330-87c5-c00e01d9f671",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dddecb99-96d5-476c-a9eb-2dcfe3bcf6b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55108a2f-b428-4afe-bc35-10b927d24609",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f5a0c5d-2223-4028-901f-8bd0ba9e59fd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689ecf82-adc1-4701-88e6-9631f8146a9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fedd073-a2a2-4ec2-84c6-24906b66ee95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd70337-4a2f-429a-bd59-2ef9e7ad9daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80c4d420-fb21-49f6-80d3-2cdd9810905b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09f1bb8a-5cda-4197-aa7e-aba65481eaf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "323d050e-8200-470e-96fb-5218bae9bd26"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da149329-0680-4f0e-8f9c-f17906664e16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dffff403-bb62-4802-b47f-18cb03aa818b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "278b10bf-ea10-4c46-8829-e589a295f4e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fc47fdbe-ef12-45a1-86a6-39be2a750482"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6db968b4-62aa-4d31-9fc7-7d5394cdf034",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa082ee9-fdda-45df-b5c6-a25560622b39"
            }
          }
        ]
      },
      {
        "id": "b9e55bd7-89ed-48c8-aa64-0cbf6f8d64a5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af249153-b9a5-4dbc-980e-3eec319ed710",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1982f75f-27a3-42b5-8ec8-e42c8fe7a981",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5b3353bd-699c-489a-958e-3a2407359c28",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d74259a-7707-4094-8671-dcd8a81d9b33",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5906847-cdc7-4a77-b3d7-bd7faef5813d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 111.4035087719298,
      "responseMin": 6,
      "responseMax": 10624,
      "responseSd": 685.4426578355552,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702341383687,
      "completed": 1702341424505
    },
    "executions": [
      {
        "id": "e7374c9d-1bc2-49d4-a6e1-1d1e8c17ec29",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "685b010c-d517-4151-bdef-9bbf82b3996c",
          "httpRequestId": "de06c1d3-9d93-4fc7-93ef-a4903d60e96f"
        },
        "item": {
          "id": "e7374c9d-1bc2-49d4-a6e1-1d1e8c17ec29",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "040b0baa-ca3d-4176-96e9-f99d6168a51d",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "a43d9672-8241-4c50-a85d-ab50d051571f",
        "cursor": {
          "ref": "e6548e6c-2df1-422d-83a8-09be558248e7",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3c66c683-cc38-4e6f-a6e5-57bb2bc8f7e3"
        },
        "item": {
          "id": "a43d9672-8241-4c50-a85d-ab50d051571f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "14999ccb-12b6-4cb0-b8fd-1c6b11e7231d",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "8fa3ccb2-7ffe-4f42-88c5-e73cfaa4b7ad",
        "cursor": {
          "ref": "f696b0fe-1a43-4151-aef7-2c1555351a28",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ab032c8d-2b08-4029-9fac-a035d18c11e9"
        },
        "item": {
          "id": "8fa3ccb2-7ffe-4f42-88c5-e73cfaa4b7ad",
          "name": "did_json"
        },
        "response": {
          "id": "cb068670-90fd-4a68-bd81-4f3c8facbeb7",
          "status": "OK",
          "code": 200,
          "responseTime": 161,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd284145-0799-4800-8ba9-829ae0761b33",
        "cursor": {
          "ref": "3e3dbf00-cef9-45c9-ad7c-a852587a3270",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "048a99fe-bcf5-451d-93d0-9aece8adba36"
        },
        "item": {
          "id": "dd284145-0799-4800-8ba9-829ae0761b33",
          "name": "did:invalid"
        },
        "response": {
          "id": "0ac57735-5fff-4198-b216-2c2845dcf0e8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1006,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd284145-0799-4800-8ba9-829ae0761b33",
        "cursor": {
          "ref": "3e3dbf00-cef9-45c9-ad7c-a852587a3270",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "048a99fe-bcf5-451d-93d0-9aece8adba36"
        },
        "item": {
          "id": "dd284145-0799-4800-8ba9-829ae0761b33",
          "name": "did:invalid"
        },
        "response": {
          "id": "0ac57735-5fff-4198-b216-2c2845dcf0e8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1006,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862c904d-c3f7-4157-acec-d5971e89ad1c",
        "cursor": {
          "ref": "bdb4418a-feda-43c1-8a80-3f4abfb0fa12",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d44830e0-c5cd-4c74-a6a5-b9fcf1b83f59"
        },
        "item": {
          "id": "862c904d-c3f7-4157-acec-d5971e89ad1c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "12b6d0f5-0bbd-4852-bebc-f5df9bd81023",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1dd8fc-3f6b-4996-83f0-62cdbb8a609d",
        "cursor": {
          "ref": "62df568a-5c00-4e89-aea8-2e387a153bb7",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5150eaa8-7f47-41ab-974b-0d281458655b"
        },
        "item": {
          "id": "fb1dd8fc-3f6b-4996-83f0-62cdbb8a609d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a1c87e42-c715-4dd7-829c-dcc1b2a11f9a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9f5230-ebee-4a1a-b2ab-fe996ddcb978",
        "cursor": {
          "ref": "6823bd0f-fad9-40b8-9ca4-04c8d8b402e1",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f40b15bd-345e-4e22-be7c-33bdb1d6c5ac"
        },
        "item": {
          "id": "de9f5230-ebee-4a1a-b2ab-fe996ddcb978",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cc3d2dec-e547-4317-bb26-8c3ba8a9bdfe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 178,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590f4eb6-87aa-422b-97b0-4c369ef1f0a0",
        "cursor": {
          "ref": "73d68508-4f35-4104-8f0a-ab3b6953e59d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f9504376-9966-4e39-9ca0-a626f72aa818"
        },
        "item": {
          "id": "590f4eb6-87aa-422b-97b0-4c369ef1f0a0",
          "name": "identifiers"
        },
        "response": {
          "id": "e44dbfa2-60cf-460b-94cf-79000b814fe9",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc7b6f1-a9d7-41fc-9277-58870ba15ca7",
        "cursor": {
          "ref": "f423f103-4a85-49f0-b1ef-0354a8fccc98",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6b74ad9c-fb30-416f-be19-9a58849d4595"
        },
        "item": {
          "id": "1dc7b6f1-a9d7-41fc-9277-58870ba15ca7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "47d4d193-5170-4730-a0f4-709299ffcbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0a7a3b-f64b-4dd9-b016-4474da324863",
        "cursor": {
          "ref": "ffbd9f13-6336-481f-9efa-a06ece151aff",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a8d5406d-9025-4545-8488-514c71b3dfc9"
        },
        "item": {
          "id": "1c0a7a3b-f64b-4dd9-b016-4474da324863",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b611fda9-984a-48b3-96ba-6055f74a2296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71b49e7-3281-480f-a908-e5c61ddaf6f6",
        "cursor": {
          "ref": "23784796-a01b-46e8-a676-40d4634977e3",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ccb9f979-99ac-4c86-b3d2-d76387d3dd96"
        },
        "item": {
          "id": "d71b49e7-3281-480f-a908-e5c61ddaf6f6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ce44a6b6-fb2b-4003-81cd-9cf7c434aab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c061ae7-4ca9-4506-8715-6a55ee7e9424",
        "cursor": {
          "ref": "2ac00ab0-30d7-432b-bad7-ddc0eb7cd05c",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e2ff41f3-047b-4f03-b37a-d93f69d52e49"
        },
        "item": {
          "id": "1c061ae7-4ca9-4506-8715-6a55ee7e9424",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ff217f61-fa43-42bf-b883-b76526ed0a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffca43a-8d51-4065-ad78-9fbb8824253f",
        "cursor": {
          "ref": "57118b4e-66ff-4f17-85a6-2245a85fc9ec",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b6e3caa3-c4e9-4c87-bd29-6a780916ac3f"
        },
        "item": {
          "id": "fffca43a-8d51-4065-ad78-9fbb8824253f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "67599767-2ce3-4046-9466-d7bf04d94321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b382804e-b07d-45b1-9786-cb07305cfbdc",
        "cursor": {
          "ref": "fc0fbb90-14a9-4afe-b9c3-859301b1a8a7",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "220c464c-4e05-489d-aa03-571a0ffa76a5"
        },
        "item": {
          "id": "b382804e-b07d-45b1-9786-cb07305cfbdc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cac5a7bb-62e8-4c89-a60d-495d6f4ba036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37ef7a6-7d62-4158-bbf6-cb3d8b3cd9cd",
        "cursor": {
          "ref": "3b8fa3d5-8da5-4623-8d89-ca5e891ce2fb",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4496dd1d-62cc-4e4f-bf65-84a9c80d3e9e"
        },
        "item": {
          "id": "e37ef7a6-7d62-4158-bbf6-cb3d8b3cd9cd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e05287b6-ff56-4683-a7cb-da15517ca746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfece381-45f6-459b-bfdf-fc716978b74d",
        "cursor": {
          "ref": "75bdb05b-2523-4e73-a3b6-854cb49cc00f",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "17a91865-6ff9-4a65-9a39-f1f08b511f56"
        },
        "item": {
          "id": "bfece381-45f6-459b-bfdf-fc716978b74d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "889ff2b3-a58a-4c31-af3d-4d3aa296f1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bf4e61-9106-4c5e-b676-d1407888c3f8",
        "cursor": {
          "ref": "26fe67d3-e281-4bc1-a10e-c59fc4599277",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8e20a25a-98a2-472f-b978-ff14eb952bd2"
        },
        "item": {
          "id": "f3bf4e61-9106-4c5e-b676-d1407888c3f8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "30849892-7786-4ae1-8a4c-a54065488cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b0f66e-c5d0-4d0c-ab11-ec1d06a472e8",
        "cursor": {
          "ref": "854a2c44-0e80-450d-be6a-8bf437735a5b",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3c07b3e6-6e44-4b9f-a18c-9245a16691fb"
        },
        "item": {
          "id": "71b0f66e-c5d0-4d0c-ab11-ec1d06a472e8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "850e0dc4-546e-4bad-aae5-52f5857a062d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7ca972-3844-4b42-85bd-71e8d8c3a9b4",
        "cursor": {
          "ref": "1a3415c7-3cff-4ca0-aee1-19a23653121e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0568ec8a-469b-43c5-aef3-4d392e2f5eae"
        },
        "item": {
          "id": "ce7ca972-3844-4b42-85bd-71e8d8c3a9b4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "90fd752f-40af-4833-a3ad-2def5b0a34c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fa5254-a1e6-4a0b-ae2d-a19809967bfd",
        "cursor": {
          "ref": "33f08f25-74d1-4d9e-ba95-4b7f2c0e6d64",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "611374e1-47f5-43c6-a74e-4ae0c5dfefe2"
        },
        "item": {
          "id": "00fa5254-a1e6-4a0b-ae2d-a19809967bfd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "07f39167-4b56-4f17-a645-c2f8a25c1bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e3822e-09bf-4a00-a424-ebe5aed9bb84",
        "cursor": {
          "ref": "023f2d0a-1455-465a-bc90-1a9bb8997195",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6b45cd0c-88dd-4f21-a7e1-ebebe56b9fea"
        },
        "item": {
          "id": "74e3822e-09bf-4a00-a424-ebe5aed9bb84",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d6599602-b187-4435-bca4-9b7b303138d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd0389e-8ef7-447d-8c6f-806f0b019b5f",
        "cursor": {
          "ref": "ed3d7468-1404-4375-b96c-b63808c977cd",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "35cf4dcd-9118-4de8-b8f0-8d7514e8d87f"
        },
        "item": {
          "id": "9fd0389e-8ef7-447d-8c6f-806f0b019b5f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "44b086e7-8d30-4d31-a6d9-5c7aaf070a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e940e82a-ceac-4d95-aa48-1ca26ffcfe21",
        "cursor": {
          "ref": "74b51ffd-9e79-4106-8f79-602f2e0effc2",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "98f90f1d-caa6-4ba0-85fa-d4b9fbd22799"
        },
        "item": {
          "id": "e940e82a-ceac-4d95-aa48-1ca26ffcfe21",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8f864693-f6a3-48b8-bdd4-6854a03f1a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7dd3056-dfa7-463b-9ad7-a52a9ce63d71",
        "cursor": {
          "ref": "d9b55583-2d69-4f17-b5ec-bce35e93d0d2",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "766c9ce1-2bcb-4031-903f-e6bc6f5137b7"
        },
        "item": {
          "id": "e7dd3056-dfa7-463b-9ad7-a52a9ce63d71",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "18caf968-752d-48de-b750-a9ebaf100b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dde2ae-de13-4df1-82ac-29234eb9704d",
        "cursor": {
          "ref": "3592b72b-877a-4e17-bee6-3ba81c341cf4",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2eb5fd8b-b903-4041-a51f-228d50b2978c"
        },
        "item": {
          "id": "91dde2ae-de13-4df1-82ac-29234eb9704d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5d6e29d3-b44a-4a75-9910-68dc32979d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c848b0-f598-4baf-8dbb-0c4558359177",
        "cursor": {
          "ref": "30cae368-bccb-4c90-a41a-36a020c10830",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f884fb71-c3ff-4c4d-b288-c76b5e6284d7"
        },
        "item": {
          "id": "a0c848b0-f598-4baf-8dbb-0c4558359177",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "791514c8-9408-4c9f-ab63-66d87c46ac24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f09b49-b646-4d30-9fa9-7b39b1a25d0b",
        "cursor": {
          "ref": "fc6266e3-1724-41e7-989c-9f7ac12bea0e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "72a2a924-3247-4f0d-9e54-45c3e6f9f2ce"
        },
        "item": {
          "id": "81f09b49-b646-4d30-9fa9-7b39b1a25d0b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2765c095-7d9f-4bbe-8fa9-6f12d2e86717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f225a9-8e5d-4422-9e41-c61c3e39ce1a",
        "cursor": {
          "ref": "02c01595-2f51-448a-8629-e3c4bdd46aa6",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fcdbc1bb-886d-4e6e-a3e3-6dc0619db602"
        },
        "item": {
          "id": "62f225a9-8e5d-4422-9e41-c61c3e39ce1a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d2575a26-0161-4886-bd74-50a9b299e789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff338640-e660-4bde-b99a-eabc83d51d66",
        "cursor": {
          "ref": "1b9604bd-bd92-405e-a87a-15f1244ece26",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cf37289b-cec3-4fc0-806e-1146701e1658"
        },
        "item": {
          "id": "ff338640-e660-4bde-b99a-eabc83d51d66",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "958eb2c9-a8ca-4177-85aa-100897b229cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4792b0-b113-4305-906f-5c4656227211",
        "cursor": {
          "ref": "d97be951-4619-46db-8509-d0b49d55fa84",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d10828bd-6b63-44c5-a6f5-329771983853"
        },
        "item": {
          "id": "3e4792b0-b113-4305-906f-5c4656227211",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "18ee48e9-4e2a-4912-9322-481162e68828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acaceffd-a634-43c3-b61f-7e2d1af02255",
        "cursor": {
          "ref": "3a7cde38-1581-4e56-b6bc-0470525cc678",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0efea8a2-5ca0-4312-8eac-3ab367d26aad"
        },
        "item": {
          "id": "acaceffd-a634-43c3-b61f-7e2d1af02255",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ee3d04b9-90b2-430f-858a-6c7192de95cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839a99af-3516-47dd-b84b-47120aef8ea8",
        "cursor": {
          "ref": "6ee05e37-6394-4247-a9a4-b460426da66d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "048f914f-2207-419f-b8ae-8efe8c107c86"
        },
        "item": {
          "id": "839a99af-3516-47dd-b84b-47120aef8ea8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "14c946b6-88ac-426f-9c8b-d3f6d9b828be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f679de-d771-4491-88a8-f199e445aca6",
        "cursor": {
          "ref": "7f5f9250-d241-461f-b2b9-51778c3f8232",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7b7b043c-3f1d-4c83-94bd-b59a8e5ca86c"
        },
        "item": {
          "id": "c7f679de-d771-4491-88a8-f199e445aca6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b22f0aca-7f9a-4cfb-8ad6-382cf34d694a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7585e74-0ab0-45aa-af3a-c0bed8f99a97",
        "cursor": {
          "ref": "5c5bdc59-490f-441d-b0b3-463f82b49ff7",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "120e6953-1460-40f0-acd8-665f996c6bed"
        },
        "item": {
          "id": "d7585e74-0ab0-45aa-af3a-c0bed8f99a97",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5d661233-e427-4b5f-a99a-de08e4b17945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe538787-1b14-4333-ad35-d2c0755b5ba8",
        "cursor": {
          "ref": "a98a18ea-e8d7-444e-8675-ddc9e6cbc9e1",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b04cae7f-484b-43f7-a862-8d4ec47578c7"
        },
        "item": {
          "id": "fe538787-1b14-4333-ad35-d2c0755b5ba8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0c57fdb3-ec69-4bdc-a2b4-6229a31a64fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f4a748-fab3-4036-bc04-9ba38c0d7ddc",
        "cursor": {
          "ref": "889da7e8-9cc0-4bb5-817b-817a3110a19f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "22c689b3-99c6-4249-99a9-fdcad243bd55"
        },
        "item": {
          "id": "a5f4a748-fab3-4036-bc04-9ba38c0d7ddc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "28eef200-abab-424c-8612-9ea685892cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3bcc31-33a6-4617-a837-3c57805fb50f",
        "cursor": {
          "ref": "0a892132-96c6-4ef5-bb53-917533757c81",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "49b2f55d-2a73-414e-a988-547ebcab56b8"
        },
        "item": {
          "id": "7b3bcc31-33a6-4617-a837-3c57805fb50f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "57fcb377-4740-4fd1-a95a-5fcfafcddd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde68bfe-4f50-4b3c-bf3b-08d7e6838473",
        "cursor": {
          "ref": "873b992f-d0d7-4386-af94-59ecf8388456",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2eaea820-86e0-49ee-8fb5-44eca3a3cd7b"
        },
        "item": {
          "id": "dde68bfe-4f50-4b3c-bf3b-08d7e6838473",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "83ead71f-0d38-489d-abbd-3a908c1fb89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d1a18a-2420-4785-a564-9d9cd65ffdea",
        "cursor": {
          "ref": "a0f0da96-c898-4f2d-8833-04676c13d74e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ce88ff84-2eaa-4616-8621-92089ffbad31"
        },
        "item": {
          "id": "b8d1a18a-2420-4785-a564-9d9cd65ffdea",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f81efbf6-0e67-44e7-8a83-a3c1f70457a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636a0727-00ef-415c-b3ae-294ffa39111c",
        "cursor": {
          "ref": "c805e303-5207-44b1-9c49-69a471526aad",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b6777f90-78b0-4a26-b0eb-d36920888d8a"
        },
        "item": {
          "id": "636a0727-00ef-415c-b3ae-294ffa39111c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4c504665-0bf1-4dcd-880e-c28f0c7a2586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd696e7-bc32-4410-b88c-9129c7e94b82",
        "cursor": {
          "ref": "f831ecad-a701-480e-8d2f-0b5b9a741a61",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b0efb784-e2ce-4a11-9101-18e281623d49"
        },
        "item": {
          "id": "0dd696e7-bc32-4410-b88c-9129c7e94b82",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0b092b86-efaf-4664-a167-d5ad4e88bfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c3d617-b783-4788-a366-c3743e9a4fe9",
        "cursor": {
          "ref": "949a0eb6-8a6b-4ef4-be03-41e4301e2375",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ec993ec3-289b-46d6-a0d6-e14f94eb1dcf"
        },
        "item": {
          "id": "c8c3d617-b783-4788-a366-c3743e9a4fe9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "31f44939-c1b6-478b-8c0e-17d83ee60f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb010bf-446b-4021-ba9b-f5880903a547",
        "cursor": {
          "ref": "4fa9ceeb-b4ee-44d7-a37e-f5b4f90ada20",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "77294fbb-8741-498a-a027-1e84ccd19be9"
        },
        "item": {
          "id": "9bb010bf-446b-4021-ba9b-f5880903a547",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b4019e46-a6f3-4797-a4c7-b6a3bcfafc0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbe4d66-5019-4cf7-bdf1-5bbc0e640c4f",
        "cursor": {
          "ref": "39ee10c4-b16a-4056-82e2-795b24993874",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f5521070-fa3d-4e8f-867b-09d2ad1572bb"
        },
        "item": {
          "id": "acbe4d66-5019-4cf7-bdf1-5bbc0e640c4f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "90c34ba3-ac45-46f9-9dc8-84ed4d9e98ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac99588-db0d-411d-9f1d-bbef9b91a430",
        "cursor": {
          "ref": "b2b865a7-ee86-4372-8a83-80e91088a208",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "51f2c624-a7a3-44e5-a8a4-5f851968ac9d"
        },
        "item": {
          "id": "fac99588-db0d-411d-9f1d-bbef9b91a430",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8ac72067-0e52-4f35-9ad4-af41a5b46867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9af9480-9c33-4f4b-8b31-fd02fff29f0d",
        "cursor": {
          "ref": "cdf4a847-c1a3-43ad-974b-efb04b315cb3",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "eb9f7f1c-27ae-4f49-bbbd-c02acfaa4787"
        },
        "item": {
          "id": "f9af9480-9c33-4f4b-8b31-fd02fff29f0d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b0e55a32-9b3c-4470-963d-2c61a616c556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb260486-3f50-4b23-9df5-b7a567b0bcef",
        "cursor": {
          "ref": "eedde39a-0195-4d70-b2bf-2e42e743c850",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e529baa0-2334-421b-9921-561346cc153a"
        },
        "item": {
          "id": "cb260486-3f50-4b23-9df5-b7a567b0bcef",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3fcc3884-e78c-4ae9-beb8-bde0cb73e581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455688a3-cd86-4990-9e13-54f26065a379",
        "cursor": {
          "ref": "fd822583-03b9-468a-8719-da9b1a0073b5",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "215f6678-b766-4e96-a10c-3f31364a5609"
        },
        "item": {
          "id": "455688a3-cd86-4990-9e13-54f26065a379",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d1b007c8-5b95-4694-8610-60f8969558b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3870f539-74ac-425d-a9fd-77db93b4f0d8",
        "cursor": {
          "ref": "5fe92a88-98f3-4f4f-bd56-4e87018101a8",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ee8d439d-afd2-4459-93e6-1c66d7e7e48c"
        },
        "item": {
          "id": "3870f539-74ac-425d-a9fd-77db93b4f0d8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5e63c915-2f60-4962-9046-a7dbdbac0698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0549502-df5a-4237-a54e-28422dc06cdf",
        "cursor": {
          "ref": "55d8f0b8-0fbc-45f5-b270-22902af386a4",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8fdca796-e480-4ac7-9c28-413d0510ca43"
        },
        "item": {
          "id": "c0549502-df5a-4237-a54e-28422dc06cdf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f9035ea2-af0a-406a-81d1-124649b3a89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceee5203-f79d-4e93-b12f-c782f7f01068",
        "cursor": {
          "ref": "27b55c46-5e6f-4f2b-95cd-fd2c977efd15",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d2ebc7f0-2a1f-4141-8cea-45ddfeadb987"
        },
        "item": {
          "id": "ceee5203-f79d-4e93-b12f-c782f7f01068",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3114fdc0-2590-43fa-b4da-d39d59160a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e129ae86-27bf-4ddd-bdd9-92091739725a",
        "cursor": {
          "ref": "026e9838-eff4-47a8-99d6-a8485d6ca15e",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a08366f9-ee2b-4211-a356-0382308da421"
        },
        "item": {
          "id": "e129ae86-27bf-4ddd-bdd9-92091739725a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a63b7547-0181-447a-9c64-f76037f3380d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3367460-bfc7-40da-aa81-551811318993",
        "cursor": {
          "ref": "fa3d9a7b-b2a2-40d5-b8f7-fdfb4d8ce3af",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d176da1c-b45f-4c72-9dc0-30ce2143a094"
        },
        "item": {
          "id": "c3367460-bfc7-40da-aa81-551811318993",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e11e2b63-e2db-430e-83f4-715d6584fc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac6b901-086a-4610-a549-b71d30e6fb44",
        "cursor": {
          "ref": "976a372b-4bda-4aad-b304-fa2298fddf62",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c369b06c-9ec0-43dc-a8b7-4ef1dc7e9e58"
        },
        "item": {
          "id": "2ac6b901-086a-4610-a549-b71d30e6fb44",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cef3b5dc-9711-4706-9182-594a61830b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4006f814-67c8-43e2-b9bf-338cbe46d92d",
        "cursor": {
          "ref": "f4acd40b-9ac0-4253-aa28-401a2df66be5",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8b0f96f3-6c55-4749-89e0-ccf78a9d1a84"
        },
        "item": {
          "id": "4006f814-67c8-43e2-b9bf-338cbe46d92d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b697da76-5a93-46db-b62e-9e3618d1e76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f0671e-7b21-42e0-a838-cef0ad5b410f",
        "cursor": {
          "ref": "9b2f9528-87ea-4330-acfe-5023de3e8e12",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "509c0501-94e2-4f53-81da-76868d7f9ad3"
        },
        "item": {
          "id": "53f0671e-7b21-42e0-a838-cef0ad5b410f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "98156b81-63d9-4ca5-a352-aecc46211831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cadcc2-b058-4041-86c4-2684153210e2",
        "cursor": {
          "ref": "6c17026f-c477-44dd-b86c-5776bd0959b8",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8e061f61-3e7c-4859-bfd3-ac9ec3764f56"
        },
        "item": {
          "id": "34cadcc2-b058-4041-86c4-2684153210e2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2f16b1cc-52d4-477d-9a72-8583f6f35e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0b9ffb-9964-4e48-933b-b572677bfa79",
        "cursor": {
          "ref": "c0edeeb2-1636-4d25-97c7-a64900f3783f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7e085766-83ea-45f8-90ac-2e89ae0697fa"
        },
        "item": {
          "id": "1e0b9ffb-9964-4e48-933b-b572677bfa79",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c7d5ba87-5c99-4bae-8fac-91f534472ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d45662-230c-4526-a820-27d930794859",
        "cursor": {
          "ref": "fc8dc9bb-ccef-4422-97aa-ba1a5a8d614a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e7094328-9a98-43f2-a142-08905dd0f0c9"
        },
        "item": {
          "id": "83d45662-230c-4526-a820-27d930794859",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0c44aaa6-3178-4178-a34e-eaff36000bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b61b8c9-3d20-4409-b8e9-6c9a697155ed",
        "cursor": {
          "ref": "c124fd2c-d311-4658-a45b-8a52aca733e9",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e7ae420c-2830-442a-b3a6-d41956059d19"
        },
        "item": {
          "id": "0b61b8c9-3d20-4409-b8e9-6c9a697155ed",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0dd19f24-3a1e-45b1-ac15-2dc66097429d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff46710-a104-4cad-87e5-b633e1a5d8e6",
        "cursor": {
          "ref": "5d563992-086e-4ae4-9ed2-6fff57b72540",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "59ddec61-16a8-4d2a-b4c2-c203ae93bc98"
        },
        "item": {
          "id": "6ff46710-a104-4cad-87e5-b633e1a5d8e6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0405fd52-e7b1-4970-9a2d-35fa981df27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7e5cbf-1e79-4629-b15d-4567f4ac45fa",
        "cursor": {
          "ref": "8886140b-b636-4558-b346-bfac1ffcf27e",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d5380c0a-3572-4a44-a958-93b1b65bd1ad"
        },
        "item": {
          "id": "df7e5cbf-1e79-4629-b15d-4567f4ac45fa",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "85a62da2-b082-4ba4-af44-6025b8240cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d828aa4a-fe36-4038-be45-0037438cc49e",
        "cursor": {
          "ref": "20203169-7d5f-4de1-9012-7c71c600dca4",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "37d68138-dc6c-4f37-9663-095c6239a5fe"
        },
        "item": {
          "id": "d828aa4a-fe36-4038-be45-0037438cc49e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "930f7c05-98a3-4234-b29c-64672532c3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c2ebd0-0964-4d1c-9a37-c2ff31587ffb",
        "cursor": {
          "ref": "29d488b6-b2f4-45c3-8605-9c59d19757a6",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c404f74c-287c-4d0c-9a43-fcad40742aab"
        },
        "item": {
          "id": "14c2ebd0-0964-4d1c-9a37-c2ff31587ffb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "16cc08f4-a2dc-4660-83e4-5fc50b02e02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcb4855-e723-45ab-9334-3764b359bf32",
        "cursor": {
          "ref": "b88aa453-66a0-49e6-8f12-c58ea19112c0",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "21a3cbd6-453f-4b52-94b2-e315b011709a"
        },
        "item": {
          "id": "1dcb4855-e723-45ab-9334-3764b359bf32",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1f678030-e460-483c-b9a9-9c5fb86ec137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6981ad4e-c5c6-4578-afac-25f3a4da423a",
        "cursor": {
          "ref": "e6c5b24b-a510-4220-8e9c-97761bd507f7",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "11753225-90f8-43ee-a246-3fa88f45d8c2"
        },
        "item": {
          "id": "6981ad4e-c5c6-4578-afac-25f3a4da423a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a94607f4-6393-4fb6-9e77-94498842c5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb8bd3d-8509-48c0-b240-e83057b5b649",
        "cursor": {
          "ref": "50b31373-5cef-4732-9b16-e155691e4bc9",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ec8e92b2-3d34-4369-9e91-75dab666e75b"
        },
        "item": {
          "id": "3fb8bd3d-8509-48c0-b240-e83057b5b649",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a4af91d1-dc84-4c83-976d-f3f143a555b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f1954f-2a6d-4cda-8786-b1dd78b4b27b",
        "cursor": {
          "ref": "e3ab0b24-1379-49a1-9459-c0464f62b3e0",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3c2c93a5-72df-44fb-8b03-235bd0b15c09"
        },
        "item": {
          "id": "58f1954f-2a6d-4cda-8786-b1dd78b4b27b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a0d2f702-954e-4e7d-b47c-13852a36e76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff99ff7-a63a-47cc-9a1e-c727dc2fec1e",
        "cursor": {
          "ref": "51db88c8-b8df-4955-95ff-5949ac61c429",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b5b79f38-7753-4680-82f9-970bab069a1e"
        },
        "item": {
          "id": "cff99ff7-a63a-47cc-9a1e-c727dc2fec1e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2d402b4c-c948-402f-99f7-685f878da1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44af0494-70fa-4004-bd4b-7c2549efb021",
        "cursor": {
          "ref": "7d882a58-5249-44a9-88f1-a610c837a5e7",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "02ebf2e5-cecc-49d9-aa7b-c139a6899f89"
        },
        "item": {
          "id": "44af0494-70fa-4004-bd4b-7c2549efb021",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0b3cf2b7-4f9b-49d7-9a51-7274489d0507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b96822-e1b3-4385-8295-83505f5a2597",
        "cursor": {
          "ref": "e35f4294-ace9-4cc7-915e-b447fdeb7924",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cd098aac-71c2-473d-9cfd-36467e710e7a"
        },
        "item": {
          "id": "54b96822-e1b3-4385-8295-83505f5a2597",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "638628e3-2a96-46b9-a971-5fd07ee1495f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1500db8-6a32-4681-9290-40c01ff20f04",
        "cursor": {
          "ref": "444c87fd-e9f7-42d1-ac3b-6fe640224b2d",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "61cf1d8a-ed44-4a30-9463-dc2c85c77a9c"
        },
        "item": {
          "id": "c1500db8-6a32-4681-9290-40c01ff20f04",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2daa60e6-4703-47f3-bea2-3d13e2eae77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bdbefc-399f-45c1-81ee-94d9227f57a3",
        "cursor": {
          "ref": "331ab165-3c81-480a-9c8b-94859423a578",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ce2dc3a1-a61d-48d2-9827-345b460d3883"
        },
        "item": {
          "id": "b9bdbefc-399f-45c1-81ee-94d9227f57a3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f9d69250-a92a-40c1-93cf-1da8b3b93932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6ba853-3472-4601-8488-717c5033bf04",
        "cursor": {
          "ref": "5e517393-0fc6-40a5-befe-c30f7e3e0aa0",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0749ae93-5b5b-4560-9daa-e8049485e9f7"
        },
        "item": {
          "id": "9f6ba853-3472-4601-8488-717c5033bf04",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "61187728-8e1f-4c21-a1bf-9c556f32000a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26d050d-eb23-42cc-9569-2b21259ad455",
        "cursor": {
          "ref": "616cbcdf-fc21-4e6a-ab30-eadffa86bf95",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2b0f389a-9aac-4d06-aecb-a57b87408952"
        },
        "item": {
          "id": "a26d050d-eb23-42cc-9569-2b21259ad455",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "61d0c40d-740c-4b86-9674-4d449442d788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3c1e6a-cca9-41db-b36d-a6ff6fdb6dd3",
        "cursor": {
          "ref": "a23577e7-133d-4036-8610-dcf898a432df",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b07809fb-1992-47c7-8329-7986e0f1b017"
        },
        "item": {
          "id": "7d3c1e6a-cca9-41db-b36d-a6ff6fdb6dd3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2d519c46-66d6-447e-8182-b322d884a5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f7ad75-9c7b-4d03-9df2-2a8243294b93",
        "cursor": {
          "ref": "4cc38085-ae3b-4861-9fb0-1786c4901a8a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ca162828-918f-4e5c-9fdb-f3ca8cb36336"
        },
        "item": {
          "id": "29f7ad75-9c7b-4d03-9df2-2a8243294b93",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "59b9d776-d8dc-4850-836a-2abc4a3fbd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9d289d-e9c0-414e-acce-026a2540381e",
        "cursor": {
          "ref": "5392cb94-989f-421c-876b-96e3c25edd79",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "257d9cfc-0668-4615-a2df-17092697cc80"
        },
        "item": {
          "id": "6a9d289d-e9c0-414e-acce-026a2540381e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3127de7f-cf22-4bfb-aa6a-a71034679b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c007ad-cf32-445d-9c6e-2e608e41aaa1",
        "cursor": {
          "ref": "8419030c-6db9-4c8a-88c9-2d4fc8555054",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "53102475-dce4-462f-a918-c973c01eb2cd"
        },
        "item": {
          "id": "78c007ad-cf32-445d-9c6e-2e608e41aaa1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e0d64630-ffd0-49c3-ab4e-9ea2c41f9fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83327990-e431-4ce5-bc96-dbc891be6045",
        "cursor": {
          "ref": "6e9d66f7-6f85-4225-a785-d1f0b7642461",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b16c2df6-32f4-4ce4-9810-abc8a5e03edb"
        },
        "item": {
          "id": "83327990-e431-4ce5-bc96-dbc891be6045",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6f75c055-9257-4a45-83dd-dfd8b0d36d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5c237b-e34b-48f6-8a14-645caae21b11",
        "cursor": {
          "ref": "7a322501-c665-4573-875e-08fbb8c2fcc8",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "eec54a22-86df-44b3-9f43-fcc2c9177a50"
        },
        "item": {
          "id": "ab5c237b-e34b-48f6-8a14-645caae21b11",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "04d898ed-6593-40f5-9740-377b5b7a2393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34de74f-0022-48ea-b8d2-0648a3d16093",
        "cursor": {
          "ref": "79c51d78-56cc-4d22-a2b6-14cb00dd94d5",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "95024101-cbb6-4d5b-91be-c301bb93c842"
        },
        "item": {
          "id": "f34de74f-0022-48ea-b8d2-0648a3d16093",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "87639784-0c84-4fd6-9add-1b5fd0896fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cefb382-c973-4a40-891f-b0564d907b96",
        "cursor": {
          "ref": "1b1d448e-1cd4-4e56-b1fc-1cbaa2983f34",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6f2602b2-221b-4ca4-b0c4-a32051a4e863"
        },
        "item": {
          "id": "7cefb382-c973-4a40-891f-b0564d907b96",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "62c77762-120e-4db5-968d-0790e3c11f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c440704-5f09-4f5a-b8da-bbd97f8ecb25",
        "cursor": {
          "ref": "5ee8660b-cff1-4c4f-b6ff-41efc2bca8ed",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "aa1b698f-df8e-47b9-804d-a3968de4f232"
        },
        "item": {
          "id": "1c440704-5f09-4f5a-b8da-bbd97f8ecb25",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c4c78b44-a5b1-4237-8190-045cfe520f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7449780-53c0-4d4e-905d-21562ac5ded7",
        "cursor": {
          "ref": "2eff2190-aefa-4d7d-9e1d-9b44f4461100",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8442ec71-681e-4fa9-9845-3da09425e5c3"
        },
        "item": {
          "id": "a7449780-53c0-4d4e-905d-21562ac5ded7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c5aee6b9-1fb6-4184-a43d-586a05a7a6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2317fd31-1d7e-4632-9bd0-8e462c8dc199",
        "cursor": {
          "ref": "b67adf18-a0cb-407c-818a-415bc39b3fb7",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e10188c4-7104-4f09-a67a-cac5b3dcd6e5"
        },
        "item": {
          "id": "2317fd31-1d7e-4632-9bd0-8e462c8dc199",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "03f0092e-7e54-4852-8d9d-c238e61b76ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e454ae-793d-4e25-9d7e-b40c233a4e2c",
        "cursor": {
          "ref": "d05a3410-e973-452e-911e-e35d9bebc6e9",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "18859aac-a88f-43e6-a1c6-d3540798dd11"
        },
        "item": {
          "id": "a9e454ae-793d-4e25-9d7e-b40c233a4e2c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2ef12314-655d-4804-8e6d-fe89236b0db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a386bf62-a821-4ede-b618-4eb10c70ea5e",
        "cursor": {
          "ref": "2267fa18-5592-4b1b-8e1f-12de308edbf2",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "91e48e72-04b2-4cc2-9679-b118478bfc84"
        },
        "item": {
          "id": "a386bf62-a821-4ede-b618-4eb10c70ea5e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "247708ea-4f22-4a48-81df-f6a903f4adbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731467e1-9179-46e4-8488-d5b6fc7f04d3",
        "cursor": {
          "ref": "3f3349f7-74bb-44be-a883-5268ce69014e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f1690643-5cec-407f-849e-9ba8ac357a16"
        },
        "item": {
          "id": "731467e1-9179-46e4-8488-d5b6fc7f04d3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6c4452aa-09e2-41a9-aed5-16733fa70759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77de5f33-4934-4340-804a-3c993edeb074",
        "cursor": {
          "ref": "021ddbb6-6929-4dee-b148-36ac574fa234",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "76ddb418-033e-4a04-b6c4-1039bcf90118"
        },
        "item": {
          "id": "77de5f33-4934-4340-804a-3c993edeb074",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cfa9e216-9f85-43d3-9366-4ba28e1e711e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96307fe7-58b0-4d17-a22e-2f17ef7cbc48",
        "cursor": {
          "ref": "00c02b5e-b301-4c59-881e-41bd7f02d215",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f3afe2e1-0e48-459d-bb9e-6c3873756557"
        },
        "item": {
          "id": "96307fe7-58b0-4d17-a22e-2f17ef7cbc48",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e37ef03a-04df-49fe-bd56-226c9f256227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bb77ca-a5c9-4eb4-afc3-fab917d7faa9",
        "cursor": {
          "ref": "eab49d5e-0cf6-4639-81b0-8f9a96f02ba1",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "888bcaf0-7a77-40bd-8147-78d2558b1441"
        },
        "item": {
          "id": "29bb77ca-a5c9-4eb4-afc3-fab917d7faa9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "79ecb658-2e86-425a-8ad5-9838fb5a04e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131866bc-f5c4-46c4-b576-921e073865e4",
        "cursor": {
          "ref": "36aa98c8-589c-4de3-802d-3835a5d65f02",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "63cd36dd-6df8-435b-a7d2-3cd04a9fb20e"
        },
        "item": {
          "id": "131866bc-f5c4-46c4-b576-921e073865e4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "96d4be37-f024-49f1-8536-102c0192063b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05f7f93-a571-42a7-bc11-0fa01aa2d5eb",
        "cursor": {
          "ref": "696b4ecb-4076-4d78-a51c-e5ab361ab128",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8bb63215-f696-43eb-9240-55b577e9c8e3"
        },
        "item": {
          "id": "a05f7f93-a571-42a7-bc11-0fa01aa2d5eb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6c656575-be9c-430b-873d-4f59fd52ccf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d430dedd-9da6-4ae8-8dbf-999a96b74735",
        "cursor": {
          "ref": "322bbab4-7bc6-4a16-b227-0798f2a46b3b",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bfec89f9-bb94-4b8e-9e23-9141f849b3e6"
        },
        "item": {
          "id": "d430dedd-9da6-4ae8-8dbf-999a96b74735",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "02bf6bd3-1e0d-4478-96a3-f953d3fa3441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164a5f47-0426-402b-872f-c38bd947f97e",
        "cursor": {
          "ref": "01d0d733-e982-4dc1-9242-014ff7c5e78a",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "64b1877c-4868-4ad2-a3a0-8139d81223d0"
        },
        "item": {
          "id": "164a5f47-0426-402b-872f-c38bd947f97e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "64fea2f3-d0fe-405a-ad09-4d499702bdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b1e00c-288a-4002-b30e-9341a3363ef0",
        "cursor": {
          "ref": "f8a46bae-bc67-471c-91af-9a45e5bbcc6b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e6a85e52-1455-4f5f-8a25-262d1dac3421"
        },
        "item": {
          "id": "c2b1e00c-288a-4002-b30e-9341a3363ef0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "66cbcaee-7663-4c28-aa20-f466513c86e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ccdea8-a00d-419f-b235-1cdda316af54",
        "cursor": {
          "ref": "68e1468b-2862-4146-a208-82963f945bac",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "42b66db1-c7c8-49fb-bae6-3f194d2781ae"
        },
        "item": {
          "id": "77ccdea8-a00d-419f-b235-1cdda316af54",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ff2dd9a5-ce51-4491-99a3-f439f0a79e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f1609c-8a7d-4acb-8c1b-426ef8eec3aa",
        "cursor": {
          "ref": "f42983c6-6f7d-4d53-9ec6-ddacd7cbe037",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3f735bab-41a2-4829-9600-2775745c7782"
        },
        "item": {
          "id": "f8f1609c-8a7d-4acb-8c1b-426ef8eec3aa",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "aa073aea-80ff-4605-a63e-0bb32e4ed058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdafba9-023f-489c-b974-071c4ba53efa",
        "cursor": {
          "ref": "7c2a527b-f0e4-4392-8203-f631368276cc",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d6054338-cd29-41f4-892d-796a164f4ccc"
        },
        "item": {
          "id": "6cdafba9-023f-489c-b974-071c4ba53efa",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5647ebcb-e894-4172-b49f-cee6a4024892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d64e08-6be0-4884-8369-f46e9cbe61e4",
        "cursor": {
          "ref": "5beec113-2141-4113-b60f-1ceb88484346",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "116b72bf-5e98-43e2-a36e-c80affc8671c"
        },
        "item": {
          "id": "01d64e08-6be0-4884-8369-f46e9cbe61e4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9ef3955e-6ed2-4e51-b923-0a8a4cbad83d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548154ea-1ea8-4509-bb83-b38e312e2087",
        "cursor": {
          "ref": "420dfb84-e997-4843-9b67-b73c4309ff1b",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "be70383f-5078-4d48-8a4a-0e3fe3e0715b"
        },
        "item": {
          "id": "548154ea-1ea8-4509-bb83-b38e312e2087",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c707f8da-8f18-4dd6-b69e-f5b30c6e3b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "3c054736-27cb-4358-aeb5-26f6012a9953",
        "cursor": {
          "ref": "af21298c-3bf5-454f-ab7b-4c5a65ee404b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5df2e102-011d-4fc1-ba80-b540f15b5321"
        },
        "item": {
          "id": "3c054736-27cb-4358-aeb5-26f6012a9953",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bfb732aa-aea7-4a18-ba10-45517bd44f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "fd77ee40-4ff0-4c76-afcd-4f63e83c184d",
        "cursor": {
          "ref": "11044461-102c-4a73-8c17-7db42d511360",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1eea909a-5c39-425f-be24-20514b64d3a4"
        },
        "item": {
          "id": "fd77ee40-4ff0-4c76-afcd-4f63e83c184d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "131168be-92f2-48f4-9a90-ad9ff06ada0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2c73a34b-3688-4b9e-b47e-37a373906b42",
        "cursor": {
          "ref": "51001400-21f4-4020-be5b-b0dd444f79e3",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7242e046-8bee-42bc-8667-dca5da2c14f0"
        },
        "item": {
          "id": "2c73a34b-3688-4b9e-b47e-37a373906b42",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "aef460c9-400c-4883-bbfb-c41d3561a3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e389f7be-4b71-44ae-8c74-9fd61e0338dd",
        "cursor": {
          "ref": "9dd1cd80-8479-42d8-b479-24a5f9f51a9c",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dc80faa3-284b-4552-9bed-c14578e1fcc8"
        },
        "item": {
          "id": "e389f7be-4b71-44ae-8c74-9fd61e0338dd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f8c3d546-b456-4594-b4db-2bcc8641a9ad",
          "status": "Created",
          "code": 201,
          "responseTime": 10624,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e107d2e5-a78b-44fc-8883-80023804038f",
        "cursor": {
          "ref": "b3bac507-6f97-43c5-a228-ad2b18318403",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f8924cdc-6223-48b4-91e6-91be0ac0dc33"
        },
        "item": {
          "id": "e107d2e5-a78b-44fc-8883-80023804038f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "89a15b55-1717-4be4-ad9b-c45c18bc8f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "1fc805bd-3448-4968-8a6f-f4e5565c4852",
        "cursor": {
          "ref": "e42dde43-3424-4a56-88b2-2eb4bdbeca0c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c187c90b-34d9-4e0e-bf18-924898d0ec25"
        },
        "item": {
          "id": "1fc805bd-3448-4968-8a6f-f4e5565c4852",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "88be85af-a2e3-469d-8b90-feb9e62c1332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "56c3978e-c2cd-4472-98d5-8db04ed4f26b",
        "cursor": {
          "ref": "6bdb7699-5205-4174-a2aa-c62166fe3c89",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d4a72db8-3af2-49ad-aa74-e4dbc5f2d51f"
        },
        "item": {
          "id": "56c3978e-c2cd-4472-98d5-8db04ed4f26b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4ed599b0-37b9-4ee4-bc59-bba98234b1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ea3323-314f-4142-8fa8-ea1d0055391f",
        "cursor": {
          "ref": "fac68cba-f075-4949-a1a0-b58778364569",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "06ef3f54-e995-41dd-8ae9-5410a5209b1f"
        },
        "item": {
          "id": "93ea3323-314f-4142-8fa8-ea1d0055391f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0933737c-c02d-4334-bc70-dd0af19e1286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1167562e-5012-497a-b76c-c8a3d45d9b08",
        "cursor": {
          "ref": "2fc86b15-c733-4df0-bbc3-f95d6980efdd",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cf026457-2bcd-4a41-a006-2db0e71ceed8"
        },
        "item": {
          "id": "1167562e-5012-497a-b76c-c8a3d45d9b08",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0a44e82b-df11-4a4a-beb2-8896b4721d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e041583-e853-4fe1-a1a8-dcd7336f6375",
        "cursor": {
          "ref": "b1c63861-f5a8-49f7-b5d5-9525cd8b662e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "aa20f974-f056-470c-9703-c583cd91be3b"
        },
        "item": {
          "id": "2e041583-e853-4fe1-a1a8-dcd7336f6375",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "59d78e50-7a61-46f4-b049-ad5868933e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca16524-02c1-4760-b421-af6e0da6c9b0",
        "cursor": {
          "ref": "ebee7f26-7fbc-4cda-8d2a-f75be0da0684",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e7a4a876-113f-4ce5-a7b1-145ea1937286"
        },
        "item": {
          "id": "cca16524-02c1-4760-b421-af6e0da6c9b0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3335ad7f-39e9-4b70-a76f-1acec868013b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874fb3e4-3d56-4dad-ac2b-6ed32868c097",
        "cursor": {
          "ref": "9f1eba79-1747-4a1b-8058-7893d9ccf82b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dbeae118-d39b-46df-9ae5-7d8cba0c2cc7"
        },
        "item": {
          "id": "874fb3e4-3d56-4dad-ac2b-6ed32868c097",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1e175a26-39ce-45d3-919e-4c3255b5b6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ce554e-ed43-43a1-9b7e-476135138ab0",
        "cursor": {
          "ref": "30d1ce65-db9e-42f3-a4c1-2de62e726ba7",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e6f3420a-25bb-4116-9d52-65b81d3c7907"
        },
        "item": {
          "id": "a7ce554e-ed43-43a1-9b7e-476135138ab0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1595d572-7a3f-472d-b553-6bd5973f2acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224444a6-eab0-4ed3-9d66-891c74db0efa",
        "cursor": {
          "ref": "a1768611-aa39-46b4-a6c3-90cb94b1610c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f2022d2f-f266-42f3-864f-d09d7fd8c765"
        },
        "item": {
          "id": "224444a6-eab0-4ed3-9d66-891c74db0efa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6fa33ba6-c2a8-4be6-97a9-693ab7294dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8247b80-f0ed-467e-9484-cbfea8c05999",
        "cursor": {
          "ref": "393a830f-f4aa-4580-8b50-d97a4c5d21a4",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d28fc761-f8db-420f-ac2c-57649452cad6"
        },
        "item": {
          "id": "b8247b80-f0ed-467e-9484-cbfea8c05999",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "606faaeb-e8f7-44ab-83cb-d41f0f0edd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9049d1cc-14be-4b74-a48f-82ae760cadae",
        "cursor": {
          "ref": "8a818244-bdd2-45d1-b636-4d4671648365",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f7086e9d-6e8b-4fc2-92f3-1fc39d385458"
        },
        "item": {
          "id": "9049d1cc-14be-4b74-a48f-82ae760cadae",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9694da58-22eb-4921-8721-8b2201a916ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb432f1f-7dc4-4d2b-bf0f-d56eda7c2e2a",
        "cursor": {
          "ref": "a960422f-68c2-4905-9127-ea9f5ef90f90",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e65ea5a0-1bd9-4035-848c-3ca79b0778bd"
        },
        "item": {
          "id": "fb432f1f-7dc4-4d2b-bf0f-d56eda7c2e2a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5f4d2dea-0be7-4418-a67d-d083d0f9786b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d69c3a5-5fe1-4882-8bc0-1a438a8a82e7",
        "cursor": {
          "ref": "3e23d5d8-0c44-4e6e-8060-91e889642442",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f929e3cc-4c06-4817-9db9-bbe6e6d0554a"
        },
        "item": {
          "id": "1d69c3a5-5fe1-4882-8bc0-1a438a8a82e7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bce8c786-d86a-432a-a308-91d373c184dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336c2529-a58a-4cb9-b091-476b58a714eb",
        "cursor": {
          "ref": "1258789e-4aec-41be-9f38-daf7349e956d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b8bf4beb-1ebd-40ba-9184-1c9969a5589e"
        },
        "item": {
          "id": "336c2529-a58a-4cb9-b091-476b58a714eb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "71b0c1bd-600f-475c-b304-c6ef3905cbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69dbc408-17c5-4781-8bf7-d0c7897a589e",
        "cursor": {
          "ref": "bf6939cb-a3ff-412f-826c-f1ee413ec159",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "152b0e19-2873-4ec3-8767-bf08e9fb03b9"
        },
        "item": {
          "id": "69dbc408-17c5-4781-8bf7-d0c7897a589e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "04a0cb0e-d7f4-4274-9649-2c3f2e2cc0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e064c1-b6f3-4ebe-be44-749bfafe4b5c",
        "cursor": {
          "ref": "6da36314-c259-449e-a4a5-f296ca501153",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0356a06c-19e5-404f-96f2-8d6356599578"
        },
        "item": {
          "id": "d9e064c1-b6f3-4ebe-be44-749bfafe4b5c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f5cd5e93-fc54-4557-840f-9cb9aa326430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19a393e-5245-4aed-a0a4-74e22366c906",
        "cursor": {
          "ref": "7976a185-e35f-4b7b-aa4c-bc24fdb01cec",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e2c30c82-11cb-4f9f-baf1-f732c3bc44c6"
        },
        "item": {
          "id": "a19a393e-5245-4aed-a0a4-74e22366c906",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "11e17869-7975-4f25-bb5a-6762fb697c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 185,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68e3f8d-dfd4-4514-8a1c-3d7c3cf002f9",
        "cursor": {
          "ref": "2f47bb23-41dc-40ea-9811-865b022507b2",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "49c650d1-3ef2-45ec-87f2-0456df786866"
        },
        "item": {
          "id": "d68e3f8d-dfd4-4514-8a1c-3d7c3cf002f9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "08e0997e-74d1-4d0a-9b7b-57c4592d8d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7b32a1-f792-44c3-8eab-1b98330868b3",
        "cursor": {
          "ref": "e30de333-f2e8-4907-b9b9-5fb4317da348",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "49fdcbdf-7fe1-482b-9b89-98e6f022bb4a"
        },
        "item": {
          "id": "2b7b32a1-f792-44c3-8eab-1b98330868b3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0485d832-ef1f-43f3-b361-74262bb9a8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb920ed-a845-4eb9-81d4-b1d199b21f32",
        "cursor": {
          "ref": "a74273bd-b51a-481b-b563-beb6bf234e30",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "37a2a178-3614-4d85-919c-c0f63d510d94"
        },
        "item": {
          "id": "0cb920ed-a845-4eb9-81d4-b1d199b21f32",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1e9234aa-be3c-4de5-98cc-ea13ac004e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fa1453-c244-43f6-8e78-435d3cabfd17",
        "cursor": {
          "ref": "4d3569ae-7324-498e-b8f3-e14dcdc6fe89",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a4f0353b-77f0-484d-9fa8-70d799183220"
        },
        "item": {
          "id": "a8fa1453-c244-43f6-8e78-435d3cabfd17",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "df52662b-c12c-428b-974e-e38d3413a9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8b5a82-041c-4d90-adbb-e90e2ab9579c",
        "cursor": {
          "ref": "02d3d417-40b5-487e-9301-0baff71ba170",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f9cd43a6-7b02-4eb4-8f3f-e5120715c000"
        },
        "item": {
          "id": "3c8b5a82-041c-4d90-adbb-e90e2ab9579c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "801f0bda-6427-4019-ac19-dc8f731ab931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe16dbd7-1b37-4c8d-ab22-efb384f8ec80",
        "cursor": {
          "ref": "276539c4-a730-452e-92fb-955f81b9444b",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7d9a959c-18af-45cc-b719-7fc14f7b6dd2"
        },
        "item": {
          "id": "fe16dbd7-1b37-4c8d-ab22-efb384f8ec80",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cf5b125d-eb4c-4536-8d20-9bd53307d63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226776bb-2249-4987-981c-29861eb0a444",
        "cursor": {
          "ref": "bd8c26ae-cb65-4885-8fc8-dbd0ad389afd",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2276ed05-c383-4d3f-9581-a8d332938e70"
        },
        "item": {
          "id": "226776bb-2249-4987-981c-29861eb0a444",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "277d9a7a-6ebe-49c2-a4f9-58139797ab1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e211451-f5e0-4c9f-afee-e47cd57ad401",
        "cursor": {
          "ref": "63988b08-fa96-41a7-8904-ba4624497f3b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c39d8e89-76af-491a-a87c-171f6ad92304"
        },
        "item": {
          "id": "8e211451-f5e0-4c9f-afee-e47cd57ad401",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "12572130-1d0a-4005-b94f-60aca2665d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab66c1b4-e6a3-41b0-a7a7-1953666a778f",
        "cursor": {
          "ref": "978e5ae0-e1a7-44a9-9d7d-5809979e9a2c",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "eae61240-5c58-45dc-8431-410a789cc16e"
        },
        "item": {
          "id": "ab66c1b4-e6a3-41b0-a7a7-1953666a778f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "20f4dc38-1793-4546-ba47-7994a380fd59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb99b3a9-c102-49dd-a807-3ca0f044ee94",
        "cursor": {
          "ref": "b2670983-2a72-46a4-a6e5-f08414600938",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f182fa26-0afe-4f0d-bf7d-2cf1d48caeeb"
        },
        "item": {
          "id": "eb99b3a9-c102-49dd-a807-3ca0f044ee94",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3662f43e-a6fa-46a2-baef-07222004dab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4319d3-a29b-4646-9e5e-809760cabbea",
        "cursor": {
          "ref": "cbc7f480-5e6d-4734-a3cd-e540b5679d00",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ab99ceed-9ebe-4964-9981-bdfa0013b483"
        },
        "item": {
          "id": "bb4319d3-a29b-4646-9e5e-809760cabbea",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fc2d6df9-a3c8-48f5-bbe6-56f9a56970c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925ea288-38f9-42a8-acb2-cc652574dee4",
        "cursor": {
          "ref": "2e79466e-3897-4edb-b35f-3d43c16cce64",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f6747d31-c2ba-4db4-ac0d-a9a8a4213559"
        },
        "item": {
          "id": "925ea288-38f9-42a8-acb2-cc652574dee4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "875d72ef-bb55-49e9-a570-600a77488f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4acebee-dec5-4a48-9f64-5695cf94083a",
        "cursor": {
          "ref": "b293e1de-5416-4c1c-b5a6-39b68d7af3f5",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e4e94d48-0bb4-40d5-bd82-8e247e7aea09"
        },
        "item": {
          "id": "a4acebee-dec5-4a48-9f64-5695cf94083a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cb7c1f06-fca0-4d32-b5ec-e54fb6d9f67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9124f7-b781-4968-a8b0-88ac6b9a6141",
        "cursor": {
          "ref": "17f69859-6c7c-4655-9f9e-be5315f5ea08",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f91e5baf-d811-4e13-aef4-6321426b9bb2"
        },
        "item": {
          "id": "4c9124f7-b781-4968-a8b0-88ac6b9a6141",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6b85fe4a-b35a-4dc8-89ba-35d3ed1449b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9673f8-f9f3-4c8b-b5bf-7ed47ef682ae",
        "cursor": {
          "ref": "4ec63c81-f362-4313-b002-13a6e29aa1a0",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f2e87dc1-e67a-4a47-80a0-12f743d59d97"
        },
        "item": {
          "id": "cc9673f8-f9f3-4c8b-b5bf-7ed47ef682ae",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d42d0224-e487-4f3a-b702-88821cb60259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308377cc-f7ef-4764-b537-8ff482d1c21b",
        "cursor": {
          "ref": "cdf7b2ea-3e0d-4b25-9698-97a6964baee5",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "46349a2b-769c-4582-aa4c-e2538e3bee7b"
        },
        "item": {
          "id": "308377cc-f7ef-4764-b537-8ff482d1c21b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "77f9baf4-c32f-42e4-b0a6-a2beb364c249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddccfaca-8b54-46fb-817b-10cdb05803b3",
        "cursor": {
          "ref": "2e1b6027-8f9f-4e66-9eb4-6076cded7b2e",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "86382769-2670-485b-9ad8-6e2b4a276d32"
        },
        "item": {
          "id": "ddccfaca-8b54-46fb-817b-10cdb05803b3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "83925d33-f7f1-4b31-95c3-e2c5861f7bc5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06b45e5-16b6-4154-bd9c-015a1311c377",
        "cursor": {
          "ref": "fb5dd860-23c1-41c7-8a9b-9cee67c7c6ef",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e8f48895-89e7-4cd0-a234-c463131b9020"
        },
        "item": {
          "id": "d06b45e5-16b6-4154-bd9c-015a1311c377",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a5ce0fc7-d20c-4f97-88ca-267aeeb68f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcc8992-4a00-4f94-9773-b64e687cc2ae",
        "cursor": {
          "ref": "6dbb80a6-cdd6-408a-85a3-5e16f326fdb2",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "97488f09-a7f2-4828-b75a-25c4bd9f37a2"
        },
        "item": {
          "id": "7fcc8992-4a00-4f94-9773-b64e687cc2ae",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "65e1bcc7-12ab-4063-8f69-c0dab382ff0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79f5012-1a5f-4854-b1b1-7f9c287c85e5",
        "cursor": {
          "ref": "979664dc-1a55-46aa-9bec-1e63f2edbe7d",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "42fbe8d9-c210-4e37-a8b2-a5af991d486e"
        },
        "item": {
          "id": "a79f5012-1a5f-4854-b1b1-7f9c287c85e5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4af04a70-09cb-449c-82ce-fe1f1d98f32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1079fab1-eb82-44ba-9f0f-6cf2c686db11",
        "cursor": {
          "ref": "1d226cdc-4d9e-4d88-a775-0c4239cc25e3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9d22fadf-5b65-4e8a-9c0e-e6dd3826a031"
        },
        "item": {
          "id": "1079fab1-eb82-44ba-9f0f-6cf2c686db11",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4c20c15e-bb72-4ebe-8eab-360403db051d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba4767d-432e-4299-8e0c-97f8a5ddf593",
        "cursor": {
          "ref": "51e56ef5-677b-456e-bf43-941a144e1be4",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d1832834-8cb4-42d9-bc64-d83192d3396d"
        },
        "item": {
          "id": "0ba4767d-432e-4299-8e0c-97f8a5ddf593",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7856650a-4955-4161-8c37-e3884783ff49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e464f3-02eb-48c1-a941-02a608f2b320",
        "cursor": {
          "ref": "22c296aa-8ff1-44ed-ab68-c596f8924925",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "da24b682-c153-40b7-b592-556943be983f"
        },
        "item": {
          "id": "53e464f3-02eb-48c1-a941-02a608f2b320",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "42197992-dbdb-4a90-a60a-348c7d99b613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae5ec0a-bece-4e67-a4af-f8af2e8c424c",
        "cursor": {
          "ref": "fba21b3f-4301-48a0-a547-803b0d68a1cf",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9dc2c7a1-573d-4436-b6d6-9ce970453da3"
        },
        "item": {
          "id": "cae5ec0a-bece-4e67-a4af-f8af2e8c424c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "da41a925-13d2-4542-8c60-bd3e10797d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee9e11f-6ce2-4a54-8315-17a239ac0848",
        "cursor": {
          "ref": "ca768f13-6c52-4e40-b70a-aff2229ba166",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e1460b6e-6f7e-4f88-a2f5-ef8447ca313d"
        },
        "item": {
          "id": "8ee9e11f-6ce2-4a54-8315-17a239ac0848",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dbe6c4d4-c9f1-4904-89af-eb1821b8cec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb112915-f693-4457-b15c-3d771d8064cf",
        "cursor": {
          "ref": "25edaa44-4a57-4784-8927-62da7a2a94a1",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "830bb403-ffad-40de-9f84-682143202bce"
        },
        "item": {
          "id": "cb112915-f693-4457-b15c-3d771d8064cf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "19084927-d1d2-45f9-88b1-2884857fb222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ade1f71-0255-4882-a996-d3a64498ede5",
        "cursor": {
          "ref": "63963d63-beff-4236-8016-0d9d46f20b5c",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "afecf73b-d3d0-46d7-aab8-132fcc37ee9a"
        },
        "item": {
          "id": "4ade1f71-0255-4882-a996-d3a64498ede5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7a4806d2-0c51-41df-9fc1-565d2de98c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b71f7bf-76f8-4375-b2fa-2715b12e8a4e",
        "cursor": {
          "ref": "b0f43490-934d-46b6-9db2-ac2d92f99078",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "37a3c0b3-390f-4357-9294-5a221aacd637"
        },
        "item": {
          "id": "5b71f7bf-76f8-4375-b2fa-2715b12e8a4e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f2ee235a-18a2-437c-a679-55b8a35bf86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de41731-fd80-4426-9382-edbc36086c04",
        "cursor": {
          "ref": "1a236b83-47b2-466d-8172-b4853364c86e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c805c947-46b1-4709-bc69-19ca0dd8ac4b"
        },
        "item": {
          "id": "1de41731-fd80-4426-9382-edbc36086c04",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f98a5c06-6435-488f-895a-390bbaa14647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b47fd2-2937-4fe9-9f76-61d9d8396e4f",
        "cursor": {
          "ref": "7800780e-3ffd-421b-8db1-bbd1a31dd270",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "806421dc-d7fb-408f-bddb-442d2dacda55"
        },
        "item": {
          "id": "a5b47fd2-2937-4fe9-9f76-61d9d8396e4f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9ebc2550-f629-46bc-b809-aae481e84555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c473022-3a55-4ae0-82d1-df7698622324",
        "cursor": {
          "ref": "e2bbe3fe-3b72-4b60-b2ec-37b2d49f01a5",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a562e1fc-d9c1-4749-b8eb-1f81fcf1d85f"
        },
        "item": {
          "id": "2c473022-3a55-4ae0-82d1-df7698622324",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "39ef2981-b0e3-4fee-a71b-6daa6382baf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c08e5a0-f6cf-4923-b200-d7cbea09d477",
        "cursor": {
          "ref": "92f52b18-6ea3-4564-8af1-3224650f008b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c22e4925-7e78-48a7-9ca1-c1332c625a76"
        },
        "item": {
          "id": "2c08e5a0-f6cf-4923-b200-d7cbea09d477",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e783e5c2-6d0a-4a8a-9535-eea97b2d3dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e211a6ee-26f4-4ea2-af34-296cd702a606",
        "cursor": {
          "ref": "695b38e2-1b23-4ade-9ad8-c2fea35e2bf6",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7b4743b7-839b-42ff-b9db-0af7af4dd424"
        },
        "item": {
          "id": "e211a6ee-26f4-4ea2-af34-296cd702a606",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e60c45bb-52e9-4c67-b88e-d8dd00c462a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e5203a-21a4-4e05-9452-c5f27fb607d8",
        "cursor": {
          "ref": "97f9c57a-8188-45ca-8abf-1814ad027a49",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f5d683e9-6519-4e39-b5aa-149df9654674"
        },
        "item": {
          "id": "97e5203a-21a4-4e05-9452-c5f27fb607d8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e2007ce8-e9ae-4440-9307-70730c42a48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189019bb-b6de-4871-b79d-912c0a88bf1c",
        "cursor": {
          "ref": "3645c177-efef-4c8c-ae15-566120bd2aa1",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "abdc3ea5-7551-461c-99b7-3e3d64783ff1"
        },
        "item": {
          "id": "189019bb-b6de-4871-b79d-912c0a88bf1c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "181d056b-87f7-4ede-b355-67f947b1c49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeea2ef3-b368-4984-934f-4d73da1d7f1b",
        "cursor": {
          "ref": "30fa5601-1647-4796-b97e-b47396c1c903",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "037ed01a-a125-4f4e-9354-4ef80cc2f3f3"
        },
        "item": {
          "id": "eeea2ef3-b368-4984-934f-4d73da1d7f1b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cd22e548-b66d-48dc-ae38-9ab024bc33d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63e8ee2-19f6-4db6-bab9-436c4097a533",
        "cursor": {
          "ref": "0b1600ca-5366-4d4b-a97f-224914f6cc86",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "915679b9-f3ac-4e65-bd94-2ebbadf9ec5a"
        },
        "item": {
          "id": "c63e8ee2-19f6-4db6-bab9-436c4097a533",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a12adf19-bc92-4e31-b736-8f9a0f1e3c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90df9edc-2998-4728-a646-b2a947266758",
        "cursor": {
          "ref": "85469779-5ccd-419c-991d-3000d9d8aa00",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e10d3967-6a90-480b-b117-7e09c68fa716"
        },
        "item": {
          "id": "90df9edc-2998-4728-a646-b2a947266758",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fb2b9b96-20bc-4aca-95a6-4f26a2d1372a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b195f26d-6f3d-4633-a2a7-93335f58fdcf",
        "cursor": {
          "ref": "edbc4ea9-d0b3-47e9-9357-0ada7acf988e",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ce38b9bf-1f6c-415c-81c4-a15ca6c1ba42"
        },
        "item": {
          "id": "b195f26d-6f3d-4633-a2a7-93335f58fdcf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "942d9af9-485c-4bcd-babd-d6d1372448d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f19e6a-95b4-4935-a762-bc4df677f440",
        "cursor": {
          "ref": "618459a1-4785-42f6-84fb-ff7043ca6a6d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f91077a0-40ea-4218-92b7-aac7cfb64e9b"
        },
        "item": {
          "id": "94f19e6a-95b4-4935-a762-bc4df677f440",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9df26d94-1628-43f4-89ff-c384e4157844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e11887-1b30-422b-b92b-d580f281de3b",
        "cursor": {
          "ref": "af55221d-9e3d-41f1-860b-132863acb790",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "01f66eb1-9310-492a-96c4-8b8691ffc13c"
        },
        "item": {
          "id": "d0e11887-1b30-422b-b92b-d580f281de3b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8551b9a3-3c8a-4820-b493-d67df0351fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f860a782-50b7-4bc1-805a-757a3e7894be",
        "cursor": {
          "ref": "cc14b482-4d8c-4be9-a683-b8fb5a9e34af",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cf614549-294c-4ef0-acbe-d14988eaebb6"
        },
        "item": {
          "id": "f860a782-50b7-4bc1-805a-757a3e7894be",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "53760cb7-e2d4-41d2-be84-a4e3ce153128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2799e353-e5d5-4413-9646-6270598a6967",
        "cursor": {
          "ref": "817f9225-db3c-4138-b328-6fac09279a5f",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2c97c7d3-c27f-46fb-a739-fd8f12f6a1a1"
        },
        "item": {
          "id": "2799e353-e5d5-4413-9646-6270598a6967",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5f9f442a-79d8-4858-ac43-16dce26e02f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0354fd7f-b5cd-423a-bcf0-7467115d75f0",
        "cursor": {
          "ref": "4a1a8fbb-bc06-41d8-b229-d340d768cb44",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f8030adc-83fe-4c6b-9e30-16705c01b09f"
        },
        "item": {
          "id": "0354fd7f-b5cd-423a-bcf0-7467115d75f0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "feb39068-8f4c-4e56-a167-6436cfcb2fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743e160a-e362-49fb-a37b-bf9f17c7ef54",
        "cursor": {
          "ref": "85fd09d3-7b58-4b92-83f9-5b52fc2941ba",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ef8026b3-f8a6-470c-9e0a-0bb2308dc900"
        },
        "item": {
          "id": "743e160a-e362-49fb-a37b-bf9f17c7ef54",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cc72c2f1-5b19-48d6-a184-a7d8445458ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3d9a24-564b-4383-9478-b83239ab6e0b",
        "cursor": {
          "ref": "cf29dc0a-bc50-418d-bb38-89767db2c5d1",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "83461fbe-5f7d-4d19-831d-2f9ff8280a71"
        },
        "item": {
          "id": "ef3d9a24-564b-4383-9478-b83239ab6e0b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f9c36050-8595-4dad-bb6b-55bbf4c1fbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb87cfe5-1e0f-40e5-b369-c0153b969428",
        "cursor": {
          "ref": "93e4be7d-7b10-45e7-ba36-4bde745ed8b6",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b30dafd8-8b30-4c3e-b608-7653fe1976c6"
        },
        "item": {
          "id": "eb87cfe5-1e0f-40e5-b369-c0153b969428",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fac6407c-dca9-4cc6-92ec-2b5d7d0e5b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ff98d2-3795-4524-a604-9a16ce72efe4",
        "cursor": {
          "ref": "5ab65f62-dc82-424b-b3f8-97f1baa86956",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e03fcb43-505b-4a45-9b60-ea8cf61743f9"
        },
        "item": {
          "id": "11ff98d2-3795-4524-a604-9a16ce72efe4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8e2b2750-0501-47de-aafb-f9d82b880b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fe1d7b-a2a6-4820-9e4a-2da41177b275",
        "cursor": {
          "ref": "e35475ff-57a2-49ad-a9d8-ac956f1cc7ae",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "23b2b5ab-9bfb-47e2-8351-4e0710feac00"
        },
        "item": {
          "id": "25fe1d7b-a2a6-4820-9e4a-2da41177b275",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "25475c55-a823-4c6f-ba87-fd9804d3d764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b00ef7d-aeff-4ed0-8bad-2d80ab1ed20d",
        "cursor": {
          "ref": "05d3f82e-2cd6-4b6f-9f50-094795f05b13",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d85ddf5b-a471-4abd-98e4-4a6f1640a048"
        },
        "item": {
          "id": "4b00ef7d-aeff-4ed0-8bad-2d80ab1ed20d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bcf0be79-eb1c-4cb3-a307-bf42866c13f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db241481-3e19-42c6-a6f0-f682880521af",
        "cursor": {
          "ref": "acbadf86-5969-4082-8ec8-c57899b544aa",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "21b9d5f1-eb4c-4b51-8d5d-a84d326ace3a"
        },
        "item": {
          "id": "db241481-3e19-42c6-a6f0-f682880521af",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0acb3f93-7d10-4794-bf2f-bc3d69628a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c13b3d-3011-403c-82e9-d86fced09428",
        "cursor": {
          "ref": "60ca6d14-8e48-424a-9fb7-531a2dc48610",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dbf96ca0-aba0-4782-8a23-cd16e2e66546"
        },
        "item": {
          "id": "51c13b3d-3011-403c-82e9-d86fced09428",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a0d5a0a6-b516-4630-9a23-d796f50cae2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a562721b-cd32-43dd-b176-3d53e7487844",
        "cursor": {
          "ref": "b34624ef-0406-44c9-bf18-36777e85b6c3",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "50c17107-638d-4269-ac5f-7ff9386abacd"
        },
        "item": {
          "id": "a562721b-cd32-43dd-b176-3d53e7487844",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e91a973d-c001-4064-9fd2-24d7bf3c9fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd386c03-b633-4675-b54f-0e4ae2484f7b",
        "cursor": {
          "ref": "d6211fc8-2c26-4180-8d0c-8b16e710db42",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c8cf21b9-9e1e-448a-9d97-6f13e94d6d3f"
        },
        "item": {
          "id": "bd386c03-b633-4675-b54f-0e4ae2484f7b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "787d1559-bea7-4611-8d09-7a91205897fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2180bc04-0118-4e74-a297-6406f67b2458",
        "cursor": {
          "ref": "cfd19974-402e-4254-b395-e611df345dff",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1d4ec195-ee35-4df7-9007-851a489eeb3b"
        },
        "item": {
          "id": "2180bc04-0118-4e74-a297-6406f67b2458",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0fd0c31d-d3c5-4005-b681-d63bd88a9cfe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7641c8db-5cd4-4704-a84c-b7f378c7e477",
        "cursor": {
          "ref": "ef6e083c-0d3a-44e1-b662-bde78e306a28",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b9bd5fdf-cc36-4a84-ac8d-38f98b8b23ac"
        },
        "item": {
          "id": "7641c8db-5cd4-4704-a84c-b7f378c7e477",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4fbff3b4-a2c6-42c0-a044-5706bbc14d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10952a8b-0e88-4f83-a06f-7ba25e0b6bf5",
        "cursor": {
          "ref": "7d721f04-16ee-4581-bd91-c6a33483b682",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9e4aeca4-f5bd-4e2a-adbe-64600aaa944a"
        },
        "item": {
          "id": "10952a8b-0e88-4f83-a06f-7ba25e0b6bf5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "666789ba-fd6c-4245-8054-40eac352e73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dfe2a1-ef6b-43d6-8683-74fdb17368d5",
        "cursor": {
          "ref": "bf9943bd-6938-44c6-b8c1-d1f02380c566",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e17b33cb-9c59-4604-87be-53b6794aef01"
        },
        "item": {
          "id": "f9dfe2a1-ef6b-43d6-8683-74fdb17368d5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7ba3c0fd-6859-4625-bf24-bbf0dd310cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03793de1-831a-4194-8ea4-79f7fc852c81",
        "cursor": {
          "ref": "37899f46-52d5-4cc1-b00d-fa3761eb4168",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f2a3aaa0-10e0-424b-b5e5-da81d949d7fd"
        },
        "item": {
          "id": "03793de1-831a-4194-8ea4-79f7fc852c81",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f221c96b-7edd-4ea1-a161-223a9469ff05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0618680d-20ab-4862-9811-2ca23ca9c73a",
        "cursor": {
          "ref": "bc2f4dd0-1217-494c-8b94-1fc5813a2074",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "904be953-ee5f-44e5-870b-97338861be70"
        },
        "item": {
          "id": "0618680d-20ab-4862-9811-2ca23ca9c73a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a4f25d9f-208c-4759-a47d-fd9e7650819d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9c0405-0a32-4028-9573-8e85d3b141ef",
        "cursor": {
          "ref": "e4a97b23-cd9e-4df4-86da-36c3d41efc2e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "eee7c7c0-c25c-481e-9cc5-297dfc41e0ff"
        },
        "item": {
          "id": "1d9c0405-0a32-4028-9573-8e85d3b141ef",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "67ee2bd6-fd16-451f-bb48-a65c84fc500c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd0682d-b750-4d4d-b00a-303b11e34b78",
        "cursor": {
          "ref": "bc94fa2e-27ac-46dd-a1d4-934a1c45f8e0",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "076ec55f-07f3-478d-8c56-60816a29da52"
        },
        "item": {
          "id": "6bd0682d-b750-4d4d-b00a-303b11e34b78",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bb0f7ba9-701a-4512-bc08-8c0f16959bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d36b9ce-6475-4344-a2ab-24f94e69a399",
        "cursor": {
          "ref": "4d28c18f-5623-4041-8802-529cffc1ae0e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ca2508e7-0eaf-4407-9b36-88e91b468092"
        },
        "item": {
          "id": "8d36b9ce-6475-4344-a2ab-24f94e69a399",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8c421bcf-46c5-43a0-b84a-2d6485b4f7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b0f002-d025-4955-a7ea-268493f71fd3",
        "cursor": {
          "ref": "3215bc45-b294-4968-8719-a7957303711b",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d8c4c8fb-a54a-4e6f-adae-69632c944474"
        },
        "item": {
          "id": "11b0f002-d025-4955-a7ea-268493f71fd3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9bfe0b9c-804a-4e36-825a-78c09091ba2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686fb0ac-6b38-43a8-a8dd-8e1c6a324dd2",
        "cursor": {
          "ref": "d1dc9aa9-fe4e-4127-9b3b-465765397778",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3d894813-17b1-489e-bea5-0feffce081a1"
        },
        "item": {
          "id": "686fb0ac-6b38-43a8-a8dd-8e1c6a324dd2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1dd476d1-6640-4a6f-b7e6-d6bf8089357c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1406c66-7501-4273-bec4-2d7695807d43",
        "cursor": {
          "ref": "cd306c7f-d16e-4731-b7e7-24d41d80d806",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e1733a98-4599-408f-b93a-383166890087"
        },
        "item": {
          "id": "f1406c66-7501-4273-bec4-2d7695807d43",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "126fcda8-1b6a-4d94-8fef-4dce902de784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491ed096-b78c-44f2-bc34-98063d9a9120",
        "cursor": {
          "ref": "aa639f54-b331-4ab0-94e3-75f2e570ad46",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "33fda8c5-9687-4586-a07f-91197e9b3f77"
        },
        "item": {
          "id": "491ed096-b78c-44f2-bc34-98063d9a9120",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f03bfdce-12cd-4d06-9f68-b754f2728b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcc11aa-bf11-4e44-b57c-3dbca52e383b",
        "cursor": {
          "ref": "3e042e51-9885-4b1f-be72-67ebb3c72f33",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5d281158-192d-414c-95be-9e100a60f3ac"
        },
        "item": {
          "id": "9bcc11aa-bf11-4e44-b57c-3dbca52e383b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f35b230f-d3a0-4c76-92cb-04abc5809730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22329468-fdf9-4343-91b9-2e606b37907e",
        "cursor": {
          "ref": "fd7c8d86-97ef-434f-ae59-56410c6d6dd4",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "dc5e654c-0253-49c1-a4a6-8f4c5a1d6a7b"
        },
        "item": {
          "id": "22329468-fdf9-4343-91b9-2e606b37907e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "40acb7b1-2322-4973-a54d-755487780a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446a8212-9d62-4629-a946-15d5a7d4b939",
        "cursor": {
          "ref": "d81a1cf5-42bf-4d3a-91a9-bc01cdf7170e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cb4c6d24-23ca-408a-b95d-be9798ba75eb"
        },
        "item": {
          "id": "446a8212-9d62-4629-a946-15d5a7d4b939",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "52d0d1a0-7b2a-40cb-b6e2-25fbbca81b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4ae725-da24-4562-b8dc-4de82ae51aa8",
        "cursor": {
          "ref": "41d3697c-7cd6-443d-aaf0-2d05c98cbc8c",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "16481549-671a-4c3b-b1f2-38a4892abee6"
        },
        "item": {
          "id": "3f4ae725-da24-4562-b8dc-4de82ae51aa8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9ce09159-d2be-46b8-a9ff-6a18f79600c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628ede87-a998-4e64-b5f4-13904a530750",
        "cursor": {
          "ref": "5bff1f96-ff58-4184-becf-6b2117cbffff",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f3f61f3e-d6af-4790-8b97-0563dd35d4d9"
        },
        "item": {
          "id": "628ede87-a998-4e64-b5f4-13904a530750",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "96c415b8-e2eb-400c-846d-1c3f7263abf3",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "479b6cf9-77ef-4667-b627-0845be700c7d",
        "cursor": {
          "ref": "c9e288cc-8084-4843-bc2a-668b62185e27",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "94491651-db92-4a98-a21a-4af88350321a"
        },
        "item": {
          "id": "479b6cf9-77ef-4667-b627-0845be700c7d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6fe2bcb6-14b2-412d-ad23-cd7a3ecca788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce7d41e-2a8a-454d-bd11-e22053ef432b",
        "cursor": {
          "ref": "9341b6e3-ad9c-4165-9d73-36a2d498c46e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7c1647d4-82fd-4444-b645-98c94381d935"
        },
        "item": {
          "id": "2ce7d41e-2a8a-454d-bd11-e22053ef432b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c5027833-73a9-4fa2-ae89-d5a3e0416f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7d2c0d-1fef-47fc-b764-01e93a8021cc",
        "cursor": {
          "ref": "3637d6fe-b79b-489c-b888-2e232d3ca1d7",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a783df5c-f17c-4f13-bfdd-df8511563c53"
        },
        "item": {
          "id": "4b7d2c0d-1fef-47fc-b764-01e93a8021cc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "57918927-73da-4a53-811b-30713fb763a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1257f7b5-a19d-4816-afed-84ec1bde3eb8",
        "cursor": {
          "ref": "3ec9172e-35f4-4636-876b-ae11ebf934e2",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1a19bf2e-29fb-4012-b09a-8274bd11f176"
        },
        "item": {
          "id": "1257f7b5-a19d-4816-afed-84ec1bde3eb8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fd7c9c95-a7d8-41bc-9055-f91b58914f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9ed664-8914-4dae-9791-c8c55e86f71d",
        "cursor": {
          "ref": "1a0d709b-41b3-47c1-91cf-48ced41f62ec",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6e603fb4-cbc5-43a1-828f-cb41cb4df20b"
        },
        "item": {
          "id": "9e9ed664-8914-4dae-9791-c8c55e86f71d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dd3ad28b-e988-4173-a704-e6f25fdef6a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81042baf-6301-440a-a19a-577180477906",
        "cursor": {
          "ref": "9da1c055-67ee-4386-9eff-8eada2dec2f0",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6de380af-ede2-4720-8a82-b607fec0b311"
        },
        "item": {
          "id": "81042baf-6301-440a-a19a-577180477906",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2e0b65c4-ee43-4c2d-8586-ecf5376cb364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fd01b0-3514-4c32-8291-4d09712e7bb2",
        "cursor": {
          "ref": "6bef019e-7649-48e1-a435-78932d41dab2",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2d0e6671-2088-445e-b451-980175975aa8"
        },
        "item": {
          "id": "b0fd01b0-3514-4c32-8291-4d09712e7bb2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "65127b01-0cc0-45b7-b98f-0c38ab384b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83960c91-6e53-4570-91a1-89b76072d598",
        "cursor": {
          "ref": "ad119384-8683-408c-9605-8053b42db6ce",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5d474583-16b6-4268-a3a7-bbb246ce2552"
        },
        "item": {
          "id": "83960c91-6e53-4570-91a1-89b76072d598",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "35fc98d1-6637-43c2-bb89-da64e12d568f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821ce70d-97ee-40d4-bdb3-687c59c6349b",
        "cursor": {
          "ref": "e7df4122-0138-4917-ae10-09aaae983652",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5700ed9c-8628-490b-aeb9-c2b700b3c46e"
        },
        "item": {
          "id": "821ce70d-97ee-40d4-bdb3-687c59c6349b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "da34d768-f3ac-486c-8a71-9347dd3df23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d6c728-6754-47a8-a462-c08b5d8cc976",
        "cursor": {
          "ref": "12981251-9139-47a7-b67d-2471558f1df4",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2b48f7d5-0217-4db7-a7ac-67faf91520ab"
        },
        "item": {
          "id": "d8d6c728-6754-47a8-a462-c08b5d8cc976",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8da6fd47-30de-413a-beed-6e0bc08ff9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b6ee7d-0d76-4757-8b65-36eb47740e90",
        "cursor": {
          "ref": "4a4a3900-2186-401a-8ae3-783dfa20bf4b",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f4e3e964-90af-4d29-8451-9602a09c3c34"
        },
        "item": {
          "id": "84b6ee7d-0d76-4757-8b65-36eb47740e90",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "89c58838-8c48-4597-8a23-7e4dc1229a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07561e79-23b1-4dc6-bc5d-12c3a2dc53c2",
        "cursor": {
          "ref": "5275de2c-2fba-4c3f-bcfd-54ce2b1d0aaf",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "64713bd2-9a41-481d-ad6f-335e5ee15c2f"
        },
        "item": {
          "id": "07561e79-23b1-4dc6-bc5d-12c3a2dc53c2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6e25f244-d7e3-4027-aea5-0f7c3fdde528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5feadbe0-2540-460a-975c-7da013219e8f",
        "cursor": {
          "ref": "5a98dca4-7b24-41b4-9b48-a387b76d894e",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cd4ea507-93bd-4a2d-9bd5-7fa2ae54a396"
        },
        "item": {
          "id": "5feadbe0-2540-460a-975c-7da013219e8f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f9e87d08-5018-475f-9200-22f5a36ef98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2c0870-d9bc-4228-9142-e4577d3d281f",
        "cursor": {
          "ref": "69653adf-5b70-4e4e-91b3-d29981f6657c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c04a0832-944d-4851-8ec7-4f9a4ae95b83"
        },
        "item": {
          "id": "ac2c0870-d9bc-4228-9142-e4577d3d281f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6a9dcb11-0e5f-4208-9ec4-5d4384c692f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b42bf9c-6f40-454b-bed9-4e0f7f7957a5",
        "cursor": {
          "ref": "633cf98b-52a8-464a-ad80-7ceb88b122fd",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "00b74d0b-5aaa-42ba-bb04-149d7723d4bd"
        },
        "item": {
          "id": "8b42bf9c-6f40-454b-bed9-4e0f7f7957a5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a2b124c6-7df1-4e74-9df3-1268f680e0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7a13dd-7641-4e55-b704-1422dc033916",
        "cursor": {
          "ref": "2756bf80-ed2a-4e1f-bc60-59f0eff7f457",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f338f53d-4c4f-42a4-9029-e7a041284975"
        },
        "item": {
          "id": "2d7a13dd-7641-4e55-b704-1422dc033916",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5a247fd6-f963-42b3-a41e-6751c0c44e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c86d7f-bcbb-4beb-a6b6-8df1a759bda4",
        "cursor": {
          "ref": "68066a99-2211-46f5-abfd-504acbac8675",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bb44b400-69bc-4c70-b426-7d8a60dfae4c"
        },
        "item": {
          "id": "87c86d7f-bcbb-4beb-a6b6-8df1a759bda4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "075db3d6-3071-49da-9aad-230fb3133637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f31ad0-31bf-4277-9d78-225bf61030de",
        "cursor": {
          "ref": "8d94c32a-5f3c-4f76-8aae-e5c49d072171",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ae1fe6fa-a7fb-4a16-9363-fc854f6a3254"
        },
        "item": {
          "id": "05f31ad0-31bf-4277-9d78-225bf61030de",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b577559f-ce6d-4d2e-9114-f27489d354fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f487965a-7810-4c59-9889-b9d9a3ad8dba",
        "cursor": {
          "ref": "bffe210c-b38c-454a-8079-420c78d48737",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0d035911-9e82-49af-99a4-64ba794d115d"
        },
        "item": {
          "id": "f487965a-7810-4c59-9889-b9d9a3ad8dba",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b1164401-af2c-4388-8b9a-18c0f3378ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff163aee-9371-4fbb-a84f-3f55d8f18ce4",
        "cursor": {
          "ref": "e2ceaf83-5daa-4eb7-9182-e65bd4319d06",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5db0df36-7a4d-4788-91cd-017d02dcd006"
        },
        "item": {
          "id": "ff163aee-9371-4fbb-a84f-3f55d8f18ce4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b0a7ca25-9384-4381-82d3-9f9eefce4ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb2fe00-71e1-48ff-b037-d4a0104acdef",
        "cursor": {
          "ref": "cc6382b5-1549-4efe-afef-ae80050cecfc",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0c8e83f4-b8d3-4bd5-8136-165470f7bac0"
        },
        "item": {
          "id": "1eb2fe00-71e1-48ff-b037-d4a0104acdef",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "72a593cf-a0bf-4181-8140-19286706ffc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32dbbec-a78f-4c2a-a917-ab0f014c621c",
        "cursor": {
          "ref": "6338609e-285b-4c49-993f-21cd75d009b7",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cd48174f-e513-4a56-880c-172adb00a833"
        },
        "item": {
          "id": "d32dbbec-a78f-4c2a-a917-ab0f014c621c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1ba0d738-b068-4846-813d-e7dae8d8efa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b9f987-d511-43d1-8fdf-8ebc82e78dc3",
        "cursor": {
          "ref": "080c2818-9bf4-4312-89cf-8d559d682d69",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "634d5f7c-939a-4d7f-bdb4-5664f02ab47d"
        },
        "item": {
          "id": "38b9f987-d511-43d1-8fdf-8ebc82e78dc3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6b2d3c30-843e-4595-b723-3266ccedb55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a733798-eb23-463d-815c-2caa2e8efc6d",
        "cursor": {
          "ref": "e2a5c5cb-21fc-495f-bf01-5ca358d16d8c",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7f6681a4-c7f8-4b0c-a992-af9f6f7dccdf"
        },
        "item": {
          "id": "6a733798-eb23-463d-815c-2caa2e8efc6d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "cc02caad-c86a-43d1-978d-e6ddf10b56a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e31791e-424d-4428-bb2a-eb97db11999e",
        "cursor": {
          "ref": "10eacb2f-5f45-4903-8e9b-740f364d67bb",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "00c3a058-46d1-4c09-95ed-099a7bca7473"
        },
        "item": {
          "id": "0e31791e-424d-4428-bb2a-eb97db11999e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "379e40ee-cb2f-456e-a567-91820f169fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c147548-8366-41c2-874f-269f4d5bfd4d",
        "cursor": {
          "ref": "aab9c44e-4ae3-4b83-a3ba-6e932fa2a5a7",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fcc1af9f-a365-411b-bcb1-5433891ffb3e"
        },
        "item": {
          "id": "8c147548-8366-41c2-874f-269f4d5bfd4d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "219e6fa4-f348-4a73-b9e1-8e3f79c2087e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d72d30-55ce-4aa4-aa85-5f32653af847",
        "cursor": {
          "ref": "1c744415-3b1f-45f5-b842-32547bb64edf",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4fbff387-c02b-4f57-bf3d-fc91abe27b90"
        },
        "item": {
          "id": "78d72d30-55ce-4aa4-aa85-5f32653af847",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cf50286e-4319-48b8-8135-daa5bbbbfd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e00986-5fb0-40ea-b491-a694f4cb15b5",
        "cursor": {
          "ref": "8dd80be6-fa00-4632-a2b5-6551bfd9ec82",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c12af8fe-4304-4277-90db-a64efb497fa3"
        },
        "item": {
          "id": "64e00986-5fb0-40ea-b491-a694f4cb15b5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "12e6e82e-1c26-4dfa-a4db-93e8d52adf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb7acd5-ddc2-4ec6-b3d4-14471e594546",
        "cursor": {
          "ref": "095363c1-ee9c-4963-8cde-176ecb278784",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a9189e58-e0b8-4a0b-a5e7-74ed3ddf2e93"
        },
        "item": {
          "id": "8cb7acd5-ddc2-4ec6-b3d4-14471e594546",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ac6f3e12-536c-4420-8723-639fdb551a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3ce206-fe4d-41e8-aa4a-acf12d560164",
        "cursor": {
          "ref": "b7a2947f-2679-4783-b6ab-5c5992837bc9",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "68c50d9e-bf18-4018-8bad-c47256cac720"
        },
        "item": {
          "id": "be3ce206-fe4d-41e8-aa4a-acf12d560164",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f67a4f7f-7466-4b98-ab1e-5d53d6f7d8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c2dfe1-eb99-41b3-8df3-b8a011a29ffe",
        "cursor": {
          "ref": "badc6661-afc4-43f9-9b3c-819dc038c47f",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cf1e2c7e-a742-4ebd-a052-e761c725b2b3"
        },
        "item": {
          "id": "b0c2dfe1-eb99-41b3-8df3-b8a011a29ffe",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7b71d27d-da41-4b94-95af-18894c77d4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1770cbea-0429-4d10-b788-3eb611e0a711",
        "cursor": {
          "ref": "d9e8df3f-21cb-4a02-b8bf-132213175ecc",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "baab95af-28b8-4d1a-9514-5ee9d0a4ff49"
        },
        "item": {
          "id": "1770cbea-0429-4d10-b788-3eb611e0a711",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "493fc128-5751-48d0-904f-3c8e9b8f6c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d466fc40-3a54-4ce1-b915-ff33dbabb03e",
        "cursor": {
          "ref": "9c5fa73f-aa0d-44d6-b5c8-9775c82ddea2",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c60ffc93-1ead-44fa-aa47-1ff2b9c52a1d"
        },
        "item": {
          "id": "d466fc40-3a54-4ce1-b915-ff33dbabb03e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2079bfab-a099-44ce-87f5-2cef6ba9bdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515b9045-c0e9-46b9-99c3-76a9c953a0b4",
        "cursor": {
          "ref": "ae51c001-9cec-457a-a3fc-8661980140be",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d83acf47-0a03-4b23-b85f-52489720e589"
        },
        "item": {
          "id": "515b9045-c0e9-46b9-99c3-76a9c953a0b4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ed3ad82a-5932-4694-9c56-48fd9ecf2a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ccc0ec-f00a-4502-9cf0-5435a41bd40f",
        "cursor": {
          "ref": "f7ca2e1a-2381-4339-92fd-c812232bdf99",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bc5cde11-88a0-476a-9b8f-228d4a2516b6"
        },
        "item": {
          "id": "34ccc0ec-f00a-4502-9cf0-5435a41bd40f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b3c7978a-e6da-4bf5-a9c4-f0272dbe4d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721a3451-4551-4d19-aca6-088d504d9dbd",
        "cursor": {
          "ref": "7bd34ca7-8a60-4e42-bd75-d436b22ca050",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b8c3ccac-bbad-4641-ba54-c4474763d3c7"
        },
        "item": {
          "id": "721a3451-4551-4d19-aca6-088d504d9dbd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1f601f23-ab67-4c30-ac3a-74bd8158c71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbf0768-97a1-42d5-8741-1207dba0b720",
        "cursor": {
          "ref": "3cbc1b4b-f3ce-469c-b6b1-0c9fb511f0f6",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6f1b52bc-74f7-4f1b-b52c-cc65a9083232"
        },
        "item": {
          "id": "3cbf0768-97a1-42d5-8741-1207dba0b720",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b19bfdce-5aac-4109-873a-d1611300e04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8cd84b-23bd-42d6-a70e-cd341eb19f0c",
        "cursor": {
          "ref": "d61f432e-76b1-4db1-a34d-ddb9d662e8a0",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "71eec0a4-5e54-4f62-b4ac-31acc7088159"
        },
        "item": {
          "id": "ae8cd84b-23bd-42d6-a70e-cd341eb19f0c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e9f1ca68-c958-4c6c-8c57-d1d6d99cfcc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ced637-c62d-49e8-93db-f0bd64711b29",
        "cursor": {
          "ref": "513d6ad6-22d1-4856-8ea1-5d909134274f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "525069b5-edea-4406-9d18-89283b561b6b"
        },
        "item": {
          "id": "e3ced637-c62d-49e8-93db-f0bd64711b29",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a74498ca-90dc-40f4-9f01-a3e52ec29e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c3b553-6f49-4c5c-9270-13bc368bbf91",
        "cursor": {
          "ref": "1f2a77de-223d-459c-9db5-fe18191440c9",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "144b1e29-e1e1-4d16-bfdf-6efe6c2a4919"
        },
        "item": {
          "id": "78c3b553-6f49-4c5c-9270-13bc368bbf91",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ec758d4e-2874-4ead-beac-54d9b4c47e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a83e1c-feb1-41cf-983c-4af73eafcd9a",
        "cursor": {
          "ref": "468a6c9d-5c0d-420b-9b11-2ae52205c8bb",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "02c5a881-8ebf-41da-b7d9-af8305b81589"
        },
        "item": {
          "id": "b3a83e1c-feb1-41cf-983c-4af73eafcd9a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "67481b0a-147e-47d6-aa1c-e6a3f077e8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d23df1-fd41-463b-846e-b19ba02a52af",
        "cursor": {
          "ref": "9924cc74-8459-477b-a66d-ef5b250f1dc9",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "43e9e60c-89a5-4c5b-9947-45d9ffc3c071"
        },
        "item": {
          "id": "c4d23df1-fd41-463b-846e-b19ba02a52af",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5fb8cc86-d7c1-4761-a339-d8d50bcbf465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100478bf-d076-4540-9acd-83e61d070eec",
        "cursor": {
          "ref": "8aa9b98c-1426-4982-9765-32ddf67839ef",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ea84791e-f61f-4240-b42e-9768442e208e"
        },
        "item": {
          "id": "100478bf-d076-4540-9acd-83e61d070eec",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bf42a269-fe8a-43b6-98fb-7a2e244e1714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2384f4-ab01-46d2-b46b-5b729fb82878",
        "cursor": {
          "ref": "c2b9bbfe-d306-42a7-a60f-328195c8fac6",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "660e8468-cec3-437c-8446-ac973660faf8"
        },
        "item": {
          "id": "2b2384f4-ab01-46d2-b46b-5b729fb82878",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0ea7e8bd-607b-4dbd-abe7-a9f62196b8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23adf0c1-4915-4673-a32d-e1454a7fec08",
        "cursor": {
          "ref": "b66ce374-6084-41a3-b5ef-3c8c21df6841",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "61953c36-77fb-44aa-9416-95a3f8fd3cfd"
        },
        "item": {
          "id": "23adf0c1-4915-4673-a32d-e1454a7fec08",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7af56854-2642-48b6-91d8-522efe942be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570f0d0c-a799-4fcf-92ce-091a7d5ed933",
        "cursor": {
          "ref": "ca45f78b-b16c-4175-a594-55be6b3cd137",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "95fe45ac-479d-4178-b563-bbff64d66766"
        },
        "item": {
          "id": "570f0d0c-a799-4fcf-92ce-091a7d5ed933",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2c9be56b-f7f8-402e-95f1-ff4519acd737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27dbcfa-f522-417e-b982-7e6300fcf9d1",
        "cursor": {
          "ref": "62d5a15a-80a9-475c-a0d0-b42f33b4f3e0",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c5aec8ea-2da2-4e85-9862-53b93427ade3"
        },
        "item": {
          "id": "d27dbcfa-f522-417e-b982-7e6300fcf9d1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0e3cb1aa-560a-4bbf-a19d-8a49955214ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a38972c-f3c2-45d4-991f-246889253abb",
        "cursor": {
          "ref": "e2a6b342-29e8-481d-b602-d6dbb044b249",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "20e68584-adfb-47d5-a3d1-974f184a9135"
        },
        "item": {
          "id": "0a38972c-f3c2-45d4-991f-246889253abb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b6e8e920-3cb2-4d6b-b54f-e0c982e2f6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d8bbf0-0950-4549-b4f8-99c4879ed584",
        "cursor": {
          "ref": "a2e6500a-7332-45ef-aa78-5cdee41fb7e1",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "582d00cd-de95-40ca-913d-051dc7b2461f"
        },
        "item": {
          "id": "80d8bbf0-0950-4549-b4f8-99c4879ed584",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a3c6a52e-6d50-4def-afa9-448ac804765a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f935187-ca96-461a-8282-a6c98202f9b0",
        "cursor": {
          "ref": "2fc8582f-ac2e-4876-8c6a-51fbff66e825",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e686d4a6-5ca9-4ed5-8e5b-696843b77221"
        },
        "item": {
          "id": "4f935187-ca96-461a-8282-a6c98202f9b0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0dbf9442-c259-4900-89c4-ef7809489b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5f3952-0e86-47c5-bbd6-ec5e207df5c8",
        "cursor": {
          "ref": "d929797d-339d-42b6-9c7c-844d3f358306",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d227ea3e-396d-4203-9cfc-4cca574c473c"
        },
        "item": {
          "id": "cb5f3952-0e86-47c5-bbd6-ec5e207df5c8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "90f11277-b48c-48a5-8757-bda4eefc2c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d19c949-d24e-4cfd-a0e7-7677e5787073",
        "cursor": {
          "ref": "530847a1-9e78-46f1-ac98-631d7e61ca98",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c40c7b79-d0b0-4193-a83c-6a833e05f66a"
        },
        "item": {
          "id": "5d19c949-d24e-4cfd-a0e7-7677e5787073",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ab71019e-5b20-4642-81df-ce5a4ccdb634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be77e006-c4f5-4ee6-86f6-a8fcd77b89d5",
        "cursor": {
          "ref": "624dd5b7-a61a-42be-81ca-e60cd188293a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f1f454b8-b9ab-43c6-bfac-1124938e6003"
        },
        "item": {
          "id": "be77e006-c4f5-4ee6-86f6-a8fcd77b89d5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f64cd889-4525-4753-9961-7f61665f4ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff17afe-1be0-4401-968f-526162dc6a53",
        "cursor": {
          "ref": "961a96b6-714a-4d89-b61e-a940e50c4d42",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "07a9aeb4-d020-4d5d-a5f6-003e9c68e47a"
        },
        "item": {
          "id": "2ff17afe-1be0-4401-968f-526162dc6a53",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c7b1a29f-c3f2-44b5-9e7c-be0772d12a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8770fe2d-a890-483c-8258-c551c81cb15e",
        "cursor": {
          "ref": "a33d5ee4-dff6-4563-8bc8-8cae99f8387f",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "06dd5aec-1ca3-4576-aa9b-ebca10c35413"
        },
        "item": {
          "id": "8770fe2d-a890-483c-8258-c551c81cb15e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "574c9713-e0d9-4ff0-bbf5-2f6f29115101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c6b601-4996-4dc4-8676-fb7a93282b45",
        "cursor": {
          "ref": "3e52eada-0931-49be-9a78-6195042566a5",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ee1be335-182c-4bbd-b634-0973d5d3534a"
        },
        "item": {
          "id": "d7c6b601-4996-4dc4-8676-fb7a93282b45",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0e1721f6-3d4e-4699-9991-5f76442a40cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b782137d-a253-4c54-9b74-dfddc3bade0e",
        "cursor": {
          "ref": "0987f98e-8c60-4e74-81c5-ef26be193ab9",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d60c2e39-43f0-444b-9b19-92c1a9e44182"
        },
        "item": {
          "id": "b782137d-a253-4c54-9b74-dfddc3bade0e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "298e5d9c-3de0-4ba2-a5bf-900be9a58ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9948c1-eade-4882-86e8-3c6b642ca4ed",
        "cursor": {
          "ref": "6c5fdf6a-41e9-46c6-a8b1-29e5e23d69ed",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "16b581f3-a356-4be1-b8b6-629451c38e09"
        },
        "item": {
          "id": "6a9948c1-eade-4882-86e8-3c6b642ca4ed",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "90c5b5c6-458a-4994-8755-987409194491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c01fc2b-7960-4710-8e3c-ece3d3080189",
        "cursor": {
          "ref": "e3507bf5-98f2-4b01-8862-1a73770718d8",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "6491b02a-6381-4ab2-84f0-40fb3bf8cd79"
        },
        "item": {
          "id": "2c01fc2b-7960-4710-8e3c-ece3d3080189",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "729483bd-178a-4074-8321-a9632ebd3968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d3ee14-c8e4-4989-9547-be196b4f0ae2",
        "cursor": {
          "ref": "0570067c-a196-4743-ae67-f33ffda153ae",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f27f2708-7c42-42fb-88f6-6aa222854a0f"
        },
        "item": {
          "id": "b2d3ee14-c8e4-4989-9547-be196b4f0ae2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c3faf523-56f0-43b2-b849-7330b2a625a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af15f27c-68bb-4131-8f35-6b9dea2b5a40",
        "cursor": {
          "ref": "29398a74-9b40-4b84-9fa6-65c543ec8558",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "04354e7a-dacb-4ccb-9f9a-2489758cb275"
        },
        "item": {
          "id": "af15f27c-68bb-4131-8f35-6b9dea2b5a40",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "51555a79-f76c-43fc-a203-39a3c7c0c407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a2cb3e-9dcf-40b4-9ced-332d63e526d4",
        "cursor": {
          "ref": "336ba0a5-7c3f-4c6c-8908-2ac195b948e7",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7d74d280-921d-4aac-89b3-ac1e0c4c072a"
        },
        "item": {
          "id": "74a2cb3e-9dcf-40b4-9ced-332d63e526d4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "129f4982-84ca-4b10-8e95-1ec37bf4939a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391df89e-e267-46ed-8858-f72075db01c6",
        "cursor": {
          "ref": "adedb7aa-cef6-414d-8421-3f9535e9d1b4",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "226ed6e4-7157-4f46-b994-8dfbcac0789b"
        },
        "item": {
          "id": "391df89e-e267-46ed-8858-f72075db01c6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "066856bb-7f42-47d9-950a-afd3e37617f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5808ff0b-ab33-4c0d-9301-e0d6b2e340aa",
        "cursor": {
          "ref": "737f07f3-5e5b-4884-98cd-ce7d501d7c1c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5fcd5019-3ae0-4e7a-a994-89dfa4974f0d"
        },
        "item": {
          "id": "5808ff0b-ab33-4c0d-9301-e0d6b2e340aa",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fc734931-bb4a-4653-b7fb-98644c4f7ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d70c962-d634-4716-8ec2-519d24473e11",
        "cursor": {
          "ref": "1a85e40a-f72c-45a9-8730-5fd7342c3971",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "dea356bb-2677-43a7-bc89-fba36a2cab66"
        },
        "item": {
          "id": "4d70c962-d634-4716-8ec2-519d24473e11",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b140693e-6546-47de-926d-5d6e751132e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c42f4e-5481-4b63-b6cb-56d6f28da3ac",
        "cursor": {
          "ref": "ba1575c1-9a66-4e96-9e95-057176fc0c82",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f9503617-61cb-4b04-b313-c13ca5581738"
        },
        "item": {
          "id": "35c42f4e-5481-4b63-b6cb-56d6f28da3ac",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ddc5aa61-1402-4b59-9074-eee98d325220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5338e7-0cb3-49cc-a137-caabd91e077b",
        "cursor": {
          "ref": "9b84effe-9cfd-4cbe-afdc-23a9a8fe70ef",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0d496b98-5b8b-40d0-aeba-50923066ef1a"
        },
        "item": {
          "id": "6a5338e7-0cb3-49cc-a137-caabd91e077b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f89308a8-f4d6-4aff-9917-e051f5ece4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e237270-abe6-46c7-b0f5-52f75a773233",
        "cursor": {
          "ref": "164d81dc-1d4a-4af6-81c7-8f2859963d91",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a53995de-50ad-49ef-91d5-e9a3d8dd79b0"
        },
        "item": {
          "id": "8e237270-abe6-46c7-b0f5-52f75a773233",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "add66bb9-fde4-4fef-be3a-4495dfc45519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74416462-abc7-4a72-ad6a-43864cc96f90",
        "cursor": {
          "ref": "43d9da6e-205b-4042-99c2-7c26ec73bfdd",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f370b578-38b1-4338-a09e-40b261d53eb6"
        },
        "item": {
          "id": "74416462-abc7-4a72-ad6a-43864cc96f90",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "236e4cbc-9020-4a29-9a2d-cd7561595991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd66085-50e3-4f88-b3f9-312f56627537",
        "cursor": {
          "ref": "a29434f6-4a9b-4a43-9bae-46dfbb94fcee",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a345ecf3-7f07-4e7f-9671-fd5a7b33e670"
        },
        "item": {
          "id": "2bd66085-50e3-4f88-b3f9-312f56627537",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e8d2a3a9-1557-489b-95b4-ab94f4b5f9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b63c5ee-43ab-42ea-87d9-9ec775000fd4",
        "cursor": {
          "ref": "d1579c5a-4a3b-45fc-b39e-22f06682c5ca",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6c93ce41-3c2f-46e6-bce9-44b612ddcb0b"
        },
        "item": {
          "id": "9b63c5ee-43ab-42ea-87d9-9ec775000fd4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "871bf4fc-5e69-4936-bbfd-3a1fdcc352fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696dfa1d-a892-450d-82ae-2b745a2cc04f",
        "cursor": {
          "ref": "477a81dd-df1e-4a4e-802b-c152366cb683",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c383e3f0-efbc-4806-80d0-16e5258cd6fa"
        },
        "item": {
          "id": "696dfa1d-a892-450d-82ae-2b745a2cc04f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "854504da-1238-4636-815e-80a5d79f2065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80b8dde-046b-4e8a-a694-ed7ec99b979f",
        "cursor": {
          "ref": "a218d250-7a5a-4976-befa-7cf16f6a83fa",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "17d395fe-1753-4044-b513-fd16b5685828"
        },
        "item": {
          "id": "c80b8dde-046b-4e8a-a694-ed7ec99b979f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "32d90cf1-02bf-4787-aca0-259880dc134b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408259a9-76ce-41f6-8e29-6fb867c20ce7",
        "cursor": {
          "ref": "644bf896-2e2d-4357-9a8b-b39ac090acc1",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c4aaf9f6-717b-458a-91e8-2afedb865b23"
        },
        "item": {
          "id": "408259a9-76ce-41f6-8e29-6fb867c20ce7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "758f4856-d9a1-46da-972b-f8d33afc3a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cd5221-2998-4cdf-8aa1-70d60ac3d292",
        "cursor": {
          "ref": "1d2af08d-c90d-4def-b22e-ef5d8ae2c0b8",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0afdb9e4-8e59-4486-a14c-74764b648513"
        },
        "item": {
          "id": "68cd5221-2998-4cdf-8aa1-70d60ac3d292",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5519e53a-71e4-4613-af1f-4ac763147feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3a1f2a-13f4-4552-838a-356700aa7579",
        "cursor": {
          "ref": "16fb6f84-db24-4fbf-84a0-1e3318580399",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "113406e2-d7b0-4775-b2f6-2c1c38a87658"
        },
        "item": {
          "id": "7a3a1f2a-13f4-4552-838a-356700aa7579",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "27b93edb-920b-421c-97fa-744421e27413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a4cd8c-a20f-4a88-a38d-b68f0d52d922",
        "cursor": {
          "ref": "70f680fa-904b-464a-bbb5-ea6c19c1f314",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "06c04efc-d7b3-44b8-b45e-ab7f0bd11ec7"
        },
        "item": {
          "id": "a8a4cd8c-a20f-4a88-a38d-b68f0d52d922",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b97773f7-6f4c-4ec5-a59c-41048c2b580b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c569d48b-f22a-4461-b439-0036baa890f4",
        "cursor": {
          "ref": "332bf4f7-bc3c-4046-b209-dca2401139a6",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e3ffd035-bb8d-43e3-9a04-42dfcbb89c71"
        },
        "item": {
          "id": "c569d48b-f22a-4461-b439-0036baa890f4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "529e0766-4d20-41d2-88ee-4fde3220e035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220f53cd-dd1e-4b52-8740-a1566bfa883d",
        "cursor": {
          "ref": "2b7831f3-69ac-47d4-abaa-abfe8af1f11f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "29cc4d48-2564-4269-80b9-1a574a2cebfc"
        },
        "item": {
          "id": "220f53cd-dd1e-4b52-8740-a1566bfa883d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "409b364f-9dc1-4ec1-a52f-25c899e227bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3123a54a-04cb-4d6f-9f0e-ecbb9b9a3ee4",
        "cursor": {
          "ref": "e4b1a05c-c5f3-44dd-9025-a5bb90f5e78d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2c9ccd99-4e61-417b-aa72-1be07ee670dc"
        },
        "item": {
          "id": "3123a54a-04cb-4d6f-9f0e-ecbb9b9a3ee4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "21afa899-a8c2-473d-af11-acb4d19b7f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9077e3-f6e6-4d1f-bffd-b2726bcc9563",
        "cursor": {
          "ref": "9060eda7-21ce-41c6-9771-71e99a335e2b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4c500338-4977-4956-a519-082b28d9e56b"
        },
        "item": {
          "id": "de9077e3-f6e6-4d1f-bffd-b2726bcc9563",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "af3647b9-92ea-47fa-9fc0-8f8e700c6d4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c77e9b7-6dd4-415f-885d-16cbfadf169a",
        "cursor": {
          "ref": "5bd383f4-3008-46cb-a4ea-a816e8e1ff42",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "95777804-f65c-4620-8c42-20a78929b856"
        },
        "item": {
          "id": "6c77e9b7-6dd4-415f-885d-16cbfadf169a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c611ee6c-1b72-4589-bee6-2d3678fece81",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8880320-eb43-453d-9a6a-55a4ace938aa",
        "cursor": {
          "ref": "728ed0b1-b9b1-42fb-a552-e5a347dbabde",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "790f2e6c-0d7f-4125-a433-1b593c26d1ad"
        },
        "item": {
          "id": "b8880320-eb43-453d-9a6a-55a4ace938aa",
          "name": "credentials_verify"
        },
        "response": {
          "id": "428b267e-ce8e-4b4b-a955-819a5e901ecf",
          "status": "OK",
          "code": 200,
          "responseTime": 3686,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f677a5c4-8e2b-459f-af89-e70e8b1824ca",
        "cursor": {
          "ref": "693a5f82-b431-4b11-8a95-c6020e8dc494",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e1f99ce1-49fb-4b84-bf69-ec2dabc44f4a"
        },
        "item": {
          "id": "f677a5c4-8e2b-459f-af89-e70e8b1824ca",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "33ee4d68-c6c1-4565-966d-5d99b39c0718",
          "status": "OK",
          "code": 200,
          "responseTime": 2114,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "43115d63-6ed8-4574-931c-5c478c4c1f52",
        "cursor": {
          "ref": "6770111c-aedb-4526-9d12-900a467b1170",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "95122525-bea4-407c-b916-67ca4f5fd87f"
        },
        "item": {
          "id": "43115d63-6ed8-4574-931c-5c478c4c1f52",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a8837ff0-8d79-4bda-b023-3f4f89bb1c44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43115d63-6ed8-4574-931c-5c478c4c1f52",
        "cursor": {
          "ref": "6770111c-aedb-4526-9d12-900a467b1170",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "95122525-bea4-407c-b916-67ca4f5fd87f"
        },
        "item": {
          "id": "43115d63-6ed8-4574-931c-5c478c4c1f52",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a8837ff0-8d79-4bda-b023-3f4f89bb1c44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e927da84-6e70-424e-9caa-bdc892fa6702",
        "cursor": {
          "ref": "856f608b-3ef1-4321-9d6a-a2acdaab0b52",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9ef7877b-3a98-41dd-ab20-f96cac0f530f"
        },
        "item": {
          "id": "e927da84-6e70-424e-9caa-bdc892fa6702",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9a091521-81a7-459a-a73d-20d09a96b9c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5a0c5d-2223-4028-901f-8bd0ba9e59fd",
        "cursor": {
          "ref": "02119e48-c223-44b4-9f0d-eb43dadbe4e4",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "632bbf1c-687b-4a5b-88fb-642684e6f059"
        },
        "item": {
          "id": "4f5a0c5d-2223-4028-901f-8bd0ba9e59fd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "534e6a1d-78e0-4ec7-9266-9794f074a221",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}