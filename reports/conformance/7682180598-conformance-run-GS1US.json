{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "14d65523-d7de-4c39-99fe-184e45808078",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a12a3d10-8aa3-422e-8c61-bd93d8d505c4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3532785e-cfd3-4f37-be67-eb04ae474333",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "66a35760-8c37-4b91-a622-3047b43728e6"
                }
              }
            ]
          },
          {
            "id": "88862599-0f55-49bb-ac1c-39b185ea156d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "08b7ff23-84c1-4038-87b4-f774d9a295ba",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "63164a4e-0b58-409a-b229-c0d00b548a13"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "412a24a1-9cc3-41d9-8bd7-929bfef7d844",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a447fa3e-3030-43cb-b8a3-40dc61ccf07d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "da8c3a55-c2cb-477c-a641-b0d7b78aabb5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ceb45269-4c7a-40cd-8171-506856fbc627",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97f66273-0fe9-48b3-9966-2a591e7ff4d3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6676ac21-2724-4830-a73e-8a613a63dbbe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d157c76-04e7-4126-8ee8-4f2118deb8d4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b98c039-7e16-448a-90a3-2caaec5f8628",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "92d75fc8-8bea-4b7c-9994-d886c0581dc3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff080a1c-ed6f-473c-a8b1-e94fd7c1be82",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b6d4ec2e-f241-4bed-8e8c-8ddac077de05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1646cb42-6ddf-42af-ba1c-bdb71563f701",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9bc7752d-9df9-4098-917c-308833f250a2"
            }
          }
        ]
      },
      {
        "id": "a20f5292-381e-4bf0-b637-17eb8436a2f9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f8400c36-4c6d-458e-a375-aab1fa30eb47",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b897d41a-ce6a-463f-9ac8-fa0f895d6b7e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c546169d-9caa-418c-9bce-c33c89e77861",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33063834-8d1b-4b2c-a8f6-5841f3c81883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "665a3da7-aba1-4f9a-a2c3-97c0dcf9aeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfffde59-5c89-424b-ad83-976bdca8f566",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea007e0-d5e6-4b83-a0ff-d76e4fef7250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9666445-9403-467a-8787-c1a7692470f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9506b49-863e-463b-9fd7-44e9c203c1d7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50392ce9-ebf0-487e-99f1-96193772990f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "beff903d-4066-4361-ad0d-039469b98b53"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "735403a8-9c59-400b-aeae-5a770fc7ab00",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35c4abe7-5f6b-4b33-a32a-60fb87717a1f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8910d20-5144-40fe-a2bc-40f4553d15f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0e8d340-bc28-4e5b-bfcb-1d89f305edbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1505e736-e7e9-4100-9cdf-ced6760b0f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d887e4a3-6aa6-4bf4-9ff3-0312118204b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1e17d2d4-e470-430a-b47c-54f79d2f4b66",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7fd5ad73-b3e5-46a9-958b-2341142ffe09",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53ae32dd-947c-4017-982d-35564ff6194e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a9e5c194-68f6-4b0e-83a0-44d0b9b6c1bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53d4fca0-d23c-441f-b15a-90c233535d0d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c760109d-1b7e-45fc-a542-14bb0a4046a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0dc8cf91-ac28-4925-b458-d87bce5acdf2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4dad1402-443f-4523-80a5-1760f188bce4"
            }
          }
        ]
      },
      {
        "id": "e52764c2-8642-4386-9b90-554ba758de43",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7b7c7baa-f72c-4524-bf13-a5d6b5aaafb8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9845d330-842e-4295-be83-3feaa5bd4c33",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "97aeb626-43c1-4e7b-8045-9c656845e39a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859e0027-92da-44ed-a8ed-dd034a8a3f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a07fb55-5aa9-45ef-8dc2-8ea03b3ff502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f416b8fa-8d1b-4e4b-af66-aa366ce8d895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b3b9cf9-a86d-4722-a964-47bedb8c62e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d1970c-b101-455e-ac7c-41d0912ff8d1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4400c41e-9dbb-4bde-aebc-7c87f7fdaa66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb24bda5-1418-4828-8bd5-20e6c4200fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb12ba16-4eb2-47fd-a914-3d30b67514fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22ae3019-15ee-4e20-b728-09076882969d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed2d728-024c-413f-ba8f-cf3dcf513579",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd2e948-d797-4c59-bcbb-888c1198ef2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49021424-3bd7-4904-a960-61711652fed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2107fd11-5d9d-4e15-8a10-7edfe926796d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d108735-80d2-466e-ac23-2cf3a83fdee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590d3eb1-8f7e-4524-b305-8f5981718f8b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9806be39-33e6-4c6b-9ee9-7c3ef58d20ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d6856a-b4c8-4c90-85a7-2d2ea9f4ba57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf5b274-6fbb-4cdf-9ad8-35dbc21ad5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c147d601-6f91-40f5-a89d-80d9cd94b66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa32185-6047-41da-8df6-48a05a049927",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea34aca-4638-417a-bd63-a20fdef24ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f666cb1-23ec-4c3d-a880-aa6a7ced2b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c99e82-d33f-4579-b306-1cde4aee8ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03f4bc7c-b3f1-4c7f-991b-11a6cf3422f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5bc7d8-5070-4220-b3b1-b25854885f55",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f22fd5a-685b-449e-a988-93d646d123af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc12bb0-3a97-452d-b94b-8750f831884f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6c620c-db3a-40b1-b7d9-30e7625759c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a072b1f-713b-46f0-aa2b-985696bcf5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a564d6a2-5c95-4e65-84d4-a09690450fb8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bd4a1f-2e10-4110-9304-0ef05d79e0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcb98e3-5efe-4a4b-a04c-df8ad62a4466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f759705-40df-45fa-8be8-eddc4606520a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "735d597d-6874-4f01-bd4f-d9bf1e3e778e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7b9b01-c31a-4428-a19b-3bf67abc3c14",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec96b54-49f0-4099-a882-d51d639db35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39239575-96c9-4e5b-a291-9c21118eaef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1545f93d-afb0-44e0-9029-e3e2e47d5f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86fefd53-76bb-4198-bd6f-6892237f03c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82165a17-66b4-4ee3-952f-5290f7fb357b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6413fd-3f73-4749-820b-d3f0e7eb36c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2183b9d-33ae-429f-b75f-41de6c2dce23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecc3c3c-9c6d-4707-9bc5-52fe392d7f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8004ab86-baad-4b2e-b6ed-a221f8cb10e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcc09ef-9aa2-4352-ad4f-3aa6da4d62bd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1220b0dc-9015-432f-bee3-d4e1538ea9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20db600d-2c38-4687-92d1-1de8b6a8b3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68afd7d-894a-4c9e-933d-852e7560dca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "639935a1-f070-4744-b294-54d7eec251a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcea3705-9bf9-401f-a845-5d496ca84ec0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293bdfd6-c52a-43cc-957d-5d47a164752b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c3f578-ea2e-41a9-b91e-ed048bac662f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1071dd36-b163-42b1-912a-6b62ef9fee79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8489a3d-1f60-4652-8b62-d826f120748a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f96b1a-3c10-461a-b348-025e6ad6edd3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ec517a-f6ac-43c5-b3ab-e631a1d6d164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc42b35f-5d1c-4cad-bd16-2dcfb84d2c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23c5daa-807d-4045-9a44-d2cee9032c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e956ecf-8524-459b-8941-bcc88f3494ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dda59a8-b16c-4948-be5c-5a29859b9ba1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cb87f2-3e6c-415e-bda2-61428b842304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f503cf4a-dbc4-4808-bce2-fe961fcd5254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64f7366-6ebc-4ddb-ae92-34e2d1ac4dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a0aeea0-5f7d-430a-beb4-1b65675dec35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40795961-a527-4010-8fd3-24453ecd1cb0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9b2025-9fb4-48c9-aa10-c3d5f423f4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42efe6a-166b-4e0a-8294-659af3b9bde8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8983dcff-7bfc-40a5-afea-85dff9ba7918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61f568cc-9219-40f7-8f2c-21ea4affcd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958e25b9-43e1-49f6-8372-94d806af2be9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab09de2-6c51-4b9a-9cbe-e7eda8de6108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19d1d72-e994-4700-9a42-43843bd1e08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc0e403-f97a-46a6-9d57-81e06d295ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "546c964c-6127-42ba-a5e6-22c23d653d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fa125a-ebaf-4962-a10c-dd70ab2fbc66",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c091f95-71e1-4d30-a3ba-ee41c70c8fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c470de03-4f66-4662-beb7-b6140d17cd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6acc9e2-5dcd-4391-979b-0fc203165483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4e6c2c0-aa5e-42f1-af29-de327a0453a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8158f827-ad1c-4ac3-aa52-1c006928de6b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1e8fa1-9716-44e5-b602-b66818657a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36488cc7-b300-4241-8ef4-f28ad5363c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e04d160-fb8b-4d7d-8461-2a92eb8298cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "142a7f3c-b8a5-498e-a480-817cb75377fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de48a37-efeb-4621-b88f-0573b28063d7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873dcea1-95d0-47d2-970a-85854dcc0519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f1e72b-1dcc-4255-a397-d5a8d7520eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a25d862-fa6a-474e-9ecb-c7c92b6b92ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "128de5dc-0e4d-4eea-8361-66e812d28018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e6e392-5d1e-46ee-85ac-2839bcdefe7d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cda898b-6393-4d53-a592-afa380cbab58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12efa75-c829-4e67-98c8-a8e742c8ce88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7e0054-e447-4a94-a14d-36a2612d8174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75c40fe4-184b-4759-b5e3-cd505d2eeb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fa4729-f934-40a8-b843-8d8c231f099c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a16705-68f8-4b38-b1a8-4d771134ed3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738b0824-957b-43f3-b1fb-33d1c4b113dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbece9d-b86a-44c4-86c2-4901fbc94b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "661d7aa1-4bc8-451d-9ddc-4032d7100e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b375a55d-303c-4559-8b53-9432cf7e5d12",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c449a2-ab95-45a3-b7b2-686501407b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d04368-a579-47ba-9a54-989988c2a738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16425648-36ed-4658-8316-e2757dc80033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c156d1a0-50c5-4920-a436-609c55cfe989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb2ca81-f931-4062-8ecb-d1f8e3613fd2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9de342-817a-4557-a03c-02bbd91521bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af440936-97a9-4509-ac49-e8b3694c69d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5c0c76-4cdd-42f1-bdab-b968d51279b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a04fba-2cf2-43cd-acbf-8c5fdbf5ba2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae5e4e3-b382-407d-bd9d-c63a81bbb56b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43156ba1-e798-4693-a68b-053c063d1147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "997361ff-ba4f-4efa-ae26-4091affffc6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65dd7dc1-4cb6-4e77-b24a-b53a9e5ab8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3c8725-f0c8-4492-b31d-b9ef881342c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9612b53d-031c-451a-8998-da18a02456cc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb9acfe-005f-4bd8-9cbb-73d915157c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d36257-62cb-4566-aa67-21db86cc9cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0d3dc7-29b0-46c6-a641-49a29d2e2d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ec6603-f73d-436f-89ca-0537652a56a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f8b8ed-a60d-40e2-8204-1ed2e59e5dfe",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e15f123-7f2d-472e-8970-b4105951a67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b658800c-f297-4341-8296-4f616859261c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1a2574-f49d-4b90-b409-78bdba6d0698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b191dcdd-03e5-4a8b-9ae9-0686c04af55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4541d61-61ca-46d9-b1fe-f13e83670aa3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d4de3e-9474-49bb-b3d4-cddd70212600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd30774f-c217-4e5e-858d-a4d4b97d5597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfb5281-baa6-435c-bcfd-b49bfd86ca75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de90ed8b-14ec-448b-bc33-0be583e44144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6834f28-f627-4a69-917b-5ae6ab22e2d9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c116ea-a34f-44a2-90b7-2baf7911276c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0daa0a5-212b-4b0d-b486-de61db707c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddc2d45-47bd-4b5b-bd20-098493265a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dea83ca-15a4-48db-afc7-92cca68517dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819762b2-48a0-4438-bd8b-df80aeaab583",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9e2fa0-e3c9-4065-a148-0a84d1a62277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ef9514-276b-4e1b-9471-5775c378a7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59b6d0f-fed3-4da5-9bd0-4775cf735282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb63ab3-6c3f-4c03-b43a-812fb1f7560f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1c4597-fa71-40db-80ce-348f13cb8db2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a4665a-511c-4ab0-9d1b-e1fcf8570239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea80a42-2fd8-4371-b0c1-fe99cd513df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ac3e40-c6cd-41bf-a2e3-bc7042104bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f0e104-0642-4467-b884-1c15fa71dd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b53157-f74a-40bc-82ef-c71b2e962810",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05b2aa4-96e9-4dc4-ab61-ae07134e745b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b76350-f198-41df-9276-8a497e60f12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b7ee43-013f-4215-94f4-a78d82d73c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb6088a-db3a-4cff-a65a-a46fbda8e7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8721bd98-e087-4443-bd95-cd55ce547e54",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9cdc3b-948d-4b44-a07d-bd44f11251cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b59b8f-4d2f-41ec-b10e-aff33f641855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4deb4246-0be0-49e2-9496-b783f94fab09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce9b855-d13a-4e1d-b87b-bc01e4160af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a4aead-960a-4b4d-89b6-47d81841bcb7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14620e58-e595-412a-a4e6-6516f2bb26a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05728980-6611-48f6-8d9d-051eaab26a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed1072f-eb7f-4bcf-94fb-414f03a0a5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7ea4cf-00f0-4db6-94fd-4b63eef9c7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2e7a89-11a9-4465-aa91-32797ae2f484",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5229d905-a0d4-4c36-91bf-3b18d78cf7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b400b61-8ad2-44d4-9801-bca870886571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ab7fac-6175-4e5b-9ed1-b37a92e6471b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6df779-61aa-4a57-9d40-4e7571e03b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c4e46c-ad5f-44b1-a99b-4a2274015728",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3759d4-75ad-40a7-b1fb-b82a83d27046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c0f736-f5b6-4ae9-9363-a57754f7742b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb3c9f1-12ce-4237-8963-76625cf5609c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eda122a3-7994-49e0-b3d5-8dbc9b882912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8053d62-a1c1-4e75-baf7-e82f7c1ee245",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0b21ba-ba37-4318-8fad-14bc418ed285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c14b23-d9f9-4ac4-bcd8-87326e5c2b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e03b9ea-bbcf-441e-ba6b-ef3a4c00f2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9dc79b-3b1f-4a7a-b7a8-6b7458dd2694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767a0187-a320-4e9f-9d3b-1476e1300922",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f971e8b-6a85-4faf-b01d-d64f3a69aa7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba522cc3-7734-436a-8152-9bc745f904d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d3dc0c-bc3e-4837-8cd5-7ccb657829af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0cbedff-f8e1-4f09-b3c5-30db842892c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a6bfc0-6d80-4a40-818c-0eab706f73d8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca293bf-ccd4-436a-9b8b-7cf1ea9e291b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059d2b4d-d3cb-40bb-8b9e-d37a32b450ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd63af0-8d78-42f7-bb10-8cc37e69b698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d222d7ec-d5cb-4d86-aa29-cc2f3c147986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41fa562-0775-412e-a81f-42ef9cb24c20",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1490bc2-dc97-400a-b086-fa464db6ddb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8650773-0764-4eec-b581-e7ffa6605226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b16ca34-7f24-4925-adfc-3c2376ae8174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "22cc6131-6000-4195-8cf7-50a37c953821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82450406-33e2-4271-9eed-47021da31da3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2eb3cf7-c303-400f-af65-3fad384500b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9567bee2-fead-40da-a3f1-c6a5ce5b1b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8966fdff-cf21-4139-b5a2-53a30547bf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b97eed-b395-4722-a960-044b4917c4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77e2fdb-d104-48a6-a9a7-d5d985f412d9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec35e05e-50b0-4c3f-a547-483f8579ed8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a9dd5e-c530-47bf-bb1f-2231e6d68a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d91afcb-8d29-48e2-abd7-ccd9ccd973bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "20a07e11-21cc-4571-bd72-e97725124881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66fa93b-aab6-4ea9-8f25-39477f3555e6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bbb329-41b7-4c8f-9eda-cf5fdfc9f0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43147d62-7c1d-4635-b57c-0683e171f3f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c21da5-39e5-4893-a4df-9cace039e543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbebf7d-85ad-48b2-a42c-426f1be54d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e34640b-8169-475b-8dca-cac0fe6ef853",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d72ce1-fa8d-40be-9862-da832754711b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907cf400-d34b-486d-9f2f-a65ffe8e5772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892cdc98-cf67-4589-9f53-a09511ddef08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "65b1f608-6026-4089-9b14-5cad36b0a43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2595a5e2-22a1-4c8f-a732-4b3a6a10188c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eeaee98-c64c-4bc6-a8f4-c6694b83dbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9651aaea-49c9-4bf3-a2f0-651fe5b2bbc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bb4c1b-0519-4a82-bd6c-023db4431d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "68e5544a-744b-4fba-8e21-70a1ab8a505f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fc36d0-683f-4a04-be59-0e620c9809f4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847a823d-6c46-4318-848a-148234bdf9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86013955-9896-4464-86e8-742e9f162a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65269c94-6c42-4e0c-9278-f0999b102cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d03f97f0-8ba7-4121-8d12-6e965c90f421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d03ede1-9209-472b-b601-8710755d422a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0462d13d-046a-48af-9ce4-162069ef7f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1504cf5e-bc41-46eb-9875-d83c00634b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88d8ac3-d55a-4ddb-9452-109055199717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5933c1f4-f323-4959-86ff-74beba34a7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbd7275-0a5e-412f-bf21-fdf3f76b6a2d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65ad1ba-4733-4433-8cf7-b37872da3347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711d5c61-4e7a-4f26-8f0e-786f7db6816c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3705cd-6775-4535-b904-e53e0d32f39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2601da91-537a-40c2-b8e7-6dc108fa9274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6b9ee0-1abd-45f1-8b92-9ee81797b0b4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7356ed3d-bc70-439d-a1ff-7637804560c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846b268e-e672-4b7e-a980-e885147000c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038a5d0a-de7b-4dda-a8b3-d3ee26e2d05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a93726c0-8030-4f78-8b9c-cdf68659f3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788fbb2d-aa74-4d8f-b9fb-f09875b488fa",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d341c7-3e44-4ff8-8c1e-31d170cb8f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb72b54-596e-4ee6-b4df-a362da2065f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bc0eb7-6718-4ac8-a6e7-aabf336f7974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20b1f99a-0a4e-4d52-b2b8-a46f05282191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8579011-b548-4fe7-891a-5db2f6854911",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f9cb30-13f3-400d-ae87-6b3a94519e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7598e8-b66f-4a04-b26f-5dc310802b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d8a6db-3854-416b-9ea8-66d064e81e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "743bb983-6abb-442e-afce-a04daa44e787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b955b6de-b2c7-442d-9bff-600b4a2caeaf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9fb8a2-3fad-437d-aff1-638332032a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1616ed-de32-4438-973f-7e5c1d231487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45541d02-257d-4d23-a37e-483d91d14986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "caa9fb34-c8be-41f3-9132-34bebeb66d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753de805-3cf7-48cb-8742-d29fb38e8ec4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dbd1b6-7c7c-4a8d-b3fe-3305f252c388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f42c54-f8dd-47c7-ab09-6c482b3529ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbf51ad-1d75-4be9-b7f6-4b661afeddac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b70916e3-c9fd-4a2a-b472-ba8ec597b83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcfcc5ba-bb17-44c6-a6f8-9e02030fb962",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0931440a-493b-4464-a81b-6da258c8385c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91aa1e35-50ab-476b-b205-c8ec1556906b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45bc4b0-6508-4939-9557-4f86bf413e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da74871f-baec-4bdf-aa60-309c356fc064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ead6eb-02c7-457d-9eb1-e3fd332328ff",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82edb743-843b-47e7-be18-4237b11fcd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33125965-9a5c-41ec-92b0-4ada0dfa4d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7192c35a-7e7e-418e-9a1e-93b74f0487b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5337ed72-7aff-4894-9b90-d120a993be7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cbb53f-d9e8-4d92-a266-9847be27cf17",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa43dfa9-e145-46f4-a9f2-6a2a2654c8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8adb500-68d0-4dd7-9204-1f5b8a7fb6d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc106ac6-c11d-48bc-a251-02ed9cb66c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b43c807-46e7-41c1-be42-dc4dd8e362a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec191faf-66a4-4d43-8d7a-c2d69b699746",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a345f98-4880-4106-96b4-9e9fcb2abfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a8cf214-ae20-45e9-b650-66dfb06c7ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc9f824-b2b7-4af4-a7b2-b3416bf94059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9d2f09-514f-4eee-b287-55b6c546fe0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823dc4de-d4e2-4681-b05c-32c9f42fb346",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587eb9af-4a43-42f2-8e59-a6c0a45d1ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129f8cd2-3183-4197-ba49-cea303427d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62c9e47-5361-4d9e-a9d0-b0b9882202b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "67762df8-7469-49cb-b679-1adeb7fa0eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855cfae3-1c65-4bc6-bd3a-e9c983c81ddb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736fe5bf-65e1-4195-bc9a-bbadb6c6ecad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304a39bb-29d0-44cb-8047-7d628f8f63dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709bacd2-df4c-4638-81a9-379066e99a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "feb71432-61fd-47ea-8cf2-07a766da256b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df54793-a80a-4326-b55d-e1ea2a404ea0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f75f78-6f75-499b-b6c9-52dfc4c23d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d1c3b1-2ade-451f-8b49-eb4cd11fcab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0ed916-6b68-4d17-9275-a6c5ef924578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "04706abc-f199-46c2-9eed-e5a26cf124df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7568d227-02e2-4b38-bf78-fad800507ca2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4890b902-acd5-40ce-a9ec-036b337917c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ae6d78-e79b-446a-bc4c-69f75e624ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da47ca6e-a854-4464-b1ab-e12c068a5f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1961b76b-31c3-430f-b681-deec2b154aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ccbe70-079a-4852-b313-a4a3fd8ad82b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4570e95c-8656-4ad5-9b3a-01c8a14b1ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f96d06-2d3c-494c-8e42-65bd7de9420e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d78df7-f900-4598-860d-29ff1457f129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc99f456-0e99-4255-8023-5ef5b3754b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2d00c0-e854-4f64-b35d-7aae5e437e2a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a16175-532e-4cbe-b228-3ed8043fe13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce3b0c1-6f6a-4d8c-8b8c-c5b0e4af5ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ad2988-040b-4bcc-8429-94901280aa51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fde7dcf9-a033-456a-b532-800a8ca6b8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54e7cbd-8b71-4f5e-9215-68fc4a7177df",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4137eb92-37dc-4370-9412-c231c100d019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be58607-f3f2-4447-9e2d-aa0610b6aace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6a3db2-f463-4ae2-a8b8-fd120bc5234e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b41b8d7-14f9-44e2-8582-053847e18383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f90dd79-c2a1-4331-87be-8c18222de966",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf905dd2-9c1e-4d1e-ab13-25ef16ddd243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c122b0c-d0e0-4a7f-961a-2d1389d797e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62188afd-7413-42f0-bf71-3d62737a15b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "422a16ba-45bc-4e3d-a29c-0ec355168018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198ce65f-5e9d-4294-8ce5-d839f90676cb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e219f924-e2bb-476f-9ceb-04f63d9da1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d58aabe-2d5d-4d0b-9fe0-2da57344fda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a50f1e-adf4-43d6-8350-73e1028e60ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dee1218f-459a-485e-9f41-6f4e032e5465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730ad649-4fc2-416b-8dfd-27c93247f493",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f50cba-949e-4320-b7a5-a4b53db0d774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab0636e-6bad-41e2-abfd-7c4cde3f4caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d7649b-683e-47ed-a36c-1529f8ba2e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d697379-267b-4a40-b2b3-e548275612d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d0eef0-d712-4369-9d44-d4f0d77ded4c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b73a43-2a7f-4248-80ef-6eb494b49523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8399bff5-b87f-433c-8c84-aed7352674bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6151c232-659c-4fa9-8aed-6fff926748a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dfb7364-9ec2-40e0-befc-512f6109af43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcbcea3-5fda-424a-8f81-5ff21d8a7cf0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c36518-6041-4899-8eb8-30e1fe47023e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801ce685-4366-4662-9ee0-8a79f818ca6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efde8e52-772f-4747-853f-31ddcda8c5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b40d3d8-11e1-4a05-888f-677c0df2010f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514fc08f-a4af-4107-b53e-8bae41af266d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98d9416-e868-43c6-baab-756ec405e83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a67ecc83-b948-480c-8eaf-3ed1d9fc50ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54476ccc-cfc8-469a-bf65-42c0e2d30b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aaca8a5-e838-4fb0-9aba-7074a261573e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52c256b-f223-4a75-9c80-a97bf1dacddb",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e807b5-b59a-46af-8cf4-f33dd3e764aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e825794-bee6-40b3-b665-948d828a60c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb53e1c-ba05-4191-94c4-d0f2cde67ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0eae015-886f-4e0b-b7a2-34319f722010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9088afe5-25a4-4d86-9d64-d5cf619fd910",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e39f9a-d942-4536-8d3f-f6aca9e1979d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62525e38-56fa-4eee-ae1b-7ace3cf703d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beccad43-e25b-45d9-9dd9-a627d30f12ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "697bf1d2-4514-4f4b-b093-42bd2b31ffb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd78130-01f8-4962-b5ea-70a1010fd009",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1029e2b5-7028-4e4d-b34a-7c4b64c97998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a14146f-a2cf-4fbd-8a36-021845ad2211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9ad09a-9cba-4441-b6dd-2f78fbceb7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf1fe0c-ea09-4a67-818f-93f58d445f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599b8004-9349-455f-b1c6-58153a706a1c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a396e6-0702-4fff-8adc-e1bc7f8faa4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71d27c9-09ae-4602-94fe-99f319a1f19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49ce325-7b26-4b8f-88bb-e09b34606b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9470c9-149a-426e-af78-228a21aa6898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e65b1b8-2363-49c9-ad36-43741dfca9fc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a7b046-27a9-4fc8-a576-09b267fb9545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a73614-69bf-4748-91f7-5bf3684d73d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94606e1b-e607-439c-9e47-a71bd7fd4da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af962274-eee2-4ed3-b1ef-19accc559aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30eb6e68-bba4-440c-a1e1-95b909ce2852",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a72e7de-c99d-44fb-b73b-545d520a2a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05890b1b-e1de-4a3e-9e05-c21844ca00e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e6ff56-afde-4d17-b574-acd748eea444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc1e46d-750a-472a-9b64-150f1db4a836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33796fa7-bb94-495e-8aa4-1c9fa997d209",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a76434-ef56-4f25-bbb0-873289adef51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0fa2aff-0ab9-4332-9214-6f61fc5fd8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4707e6c7-8c74-4fc4-947c-7dd7e31f19ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "35cc2fd2-a7de-4adf-8f5f-26b57ccc43e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b64276-785c-4c35-b2ed-6e8bae28a81a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e75da1-5005-4793-8a6e-f78a19017da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d0fd1d4-5832-441e-8ca5-b4fdc19dbe50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41734351-9aca-4c3e-94ac-62396e93f2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7205fa5-7f14-46f6-9294-11d982550ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc49df28-b0e4-4797-af92-0d95c69403a1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5b2062-e43e-4c90-805d-4ef5cb730bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1842c237-95df-4384-b74d-100378004d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c184b37a-491e-44d3-95bc-44588558bc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab08ac37-f879-48c2-a0bb-67c0cc6da549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54931a0b-06ff-479c-ac73-af3427913211",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5583e3-501d-48f7-92a6-519447b4d765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d088cf81-6e98-421c-a40e-1e01c9ecbc54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f246068-61ed-4132-a32e-93d7ceb868c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37d916a3-7ee5-4ef8-98b9-a8b1bd4bebd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b742df-63df-4249-ba2b-ad3a5e854705",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66543ed7-1513-4897-a61b-d0cdb799316d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2909ab3-920d-4191-b0de-ecd792df8f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49607dea-0a00-4beb-bf0f-c8e99a8c2d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af8035a7-ba71-4439-a242-7e859290a314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70331c5-722c-4446-ba0e-884e962ea234",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a343002-65a2-42e3-bb40-a1be2358e2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e027e70-12ac-405b-9ce6-89f0ba0de77e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea386913-7416-42fa-b2b7-fddc05362b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "536a7e9a-eda4-413c-9e75-d71e0baaaf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62acd3c7-3f90-44d9-a154-815e73bb71c9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecccfc5-6d3b-44f1-a807-954c8829bc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f560961d-5fee-494f-a19f-363a9458a358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f2ee6b-1e29-48c2-8d1b-9cca3c6086e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe968486-59d6-4162-b8c5-c392fd1e6e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6e859b-0cd1-4c9c-b327-466ddee85758",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03dd4cd-0458-45c1-8c98-4eecf6a5fe96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea608584-6380-42ce-a37c-004db5038e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0694d824-0583-4819-86ac-6f7de6d39573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eef3860d-b675-4a8e-babb-05af79270626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f785abf-e5e8-472e-98e5-960270d6bb08",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc29871b-b1e6-4ec4-98dd-70dd6074baa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb731f20-c7da-4a13-ac00-52e0d872a7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d68549-ca62-4454-99af-d3adc6c3f84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81a02dcc-bd6f-4aa8-931f-4c4c04447203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a4a670-3862-46f6-8e2f-913493cdd709",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802e3e8c-618a-440a-8889-1566d200d0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8723581f-05d2-499c-8209-bb57b68b6941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dccf5e-6a5b-42de-baca-dc5267b0c823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f23de49-a83f-4c0c-956b-9ee5976a058b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa61fd79-ac97-497e-9e96-9fa39ae2fd0a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e68694d-5747-40a6-9322-fac2f00ed709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f6900c-3691-43a0-aded-a8e47c8625c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5338bf16-1b0d-4ccb-bfb2-07658e805fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "546c1bb8-ace3-4208-afd2-86ed51ed1907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef4ba59-2c45-49d4-bb4a-4eb11da4f817",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c21f7dc-d8f7-4fc4-8741-79478929bcd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4577a288-8319-44be-b1ef-89c2c7119d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad38a337-dcbf-4b64-ada3-e461151c3e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb75442-b565-48e5-bfaa-1cc4e26a3f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4994ab3e-6301-4e6a-8cb7-d973464160f0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f676c7b-ac17-4366-ab3f-2f3273340445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2410a51-f768-4b30-913e-1129ad37efcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d9a676-a6f4-4c34-8c0f-dc8ee44a2bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "03a295b1-2e6c-480e-a112-e8013bb09919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac2ab31-8c0d-46e4-92c4-2443ac8b2da5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e48599-4f07-4311-b55a-8a3f81c24471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15508bcd-85f9-4faf-b344-c322704ebf2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78937be2-c45a-49e2-b760-9b3c39e14b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "38107fb5-db9b-47c1-bb1d-c202789366ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a5e287-53a8-460f-81a4-ba79ee69cfdb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307987bb-44d3-4907-8e79-090099440fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e5a294-3713-4942-ba69-bafb86e4d9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506cd287-02c6-43a0-8d62-911a939713c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "40798b5b-3e21-4e58-a54d-2d2a26946f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3287094f-9a3a-4d8c-a7d8-e3256a8743e8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad873209-c5c7-4675-a036-0bfe6ebe6f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e835a3b-b4c1-40d3-a19a-f9f768c06a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54eb8884-b28d-4148-b2d3-2b66471a79c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "89c5e85a-b7fc-48f7-bf28-c14a4e6e0df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4119b59-bca7-4ce1-84e2-f094ea54c390",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1975a229-da76-4196-b80a-aea42cde1895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2bf7e6-88aa-48a5-90c3-79318507a074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2db925a-2804-44f8-97ee-ee4f15cf85fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f98e55-81bf-4037-a437-40f97c631f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ace8f2-6017-4c23-86f0-36cbb8515938",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42898c5-d29a-48ff-8a30-0aa4192c9de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "01c62043-8fab-47cd-b1e6-d2cb2649b888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35af95f3-f905-462c-a586-147020b02084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "16b078bb-0556-46ac-ad37-dbadb3b38e53"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "60b7a611-3350-49a9-a4fe-1ccf8150c94d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a38d0ed-8239-4873-8798-71d902f69c7b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112a7609-3dde-4b33-828d-5c63572129ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40f3a28b-de65-44f8-a003-cd342255fee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de96a341-a40b-44ca-aa41-efb0c70a4a4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10cc2210-0aa7-440a-a7f8-4c357d72d036"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b508e33-8736-4b72-8f08-fe97c726df8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e29d4a80-2004-4bdc-baeb-64804fbc8a5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "133ee295-9240-4cef-a5b4-b56fc0038fcd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf9177b8-16c4-4936-a684-a9bc54b9bd68"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4e4a4534-62e9-4e23-a048-e9b8ed7e3250",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5cba603-7a83-41f3-a40c-652fa2976b3b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6d23e87c-37c5-48c6-97da-ddf98b57d75a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6626bd2c-fde5-48ee-9ee3-f85a6ad5f720"
                }
              }
            ]
          },
          {
            "id": "49c1e4a0-7920-46f9-bae8-8516625a1ce1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4fb30a2b-57ec-4a9e-81c2-79543ae7080d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "07d2a9b0-de9a-4e4c-9329-ca11fe696a9a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adcba5b-33bd-41a8-bde7-5fe6e2af1e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2764ffbe-7457-49ef-b1e5-ecd2b5ae6e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd032ef-4fcc-4ce9-b304-1d9df25adc01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb3f9c9-204a-4665-b90d-99350fb92544"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "42386da9-e012-4abb-97eb-be3495979de6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4adad760-5817-4050-b105-62015edee2dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "980b9e54-f69c-48e0-b3d6-ff6fc61d6a5b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91383096-49be-41f1-b12e-38ae9b6043a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f360103-c9a1-4f9f-baf5-0a27774bec4d"
                    }
                  }
                ]
              },
              {
                "id": "21bdbeef-ac93-4aea-9aa3-4ab4ac5d08ec",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2f04c11-dd12-4319-ac26-f685212316ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2cefd423-c876-4745-bb6b-d5b4b9ce6354"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "238d787e-410d-4d4e-833f-f1f9a409000b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e94ce237-b326-4fac-a260-b277dfea81df"
                    }
                  }
                ]
              },
              {
                "id": "4ff7d0fa-d23c-49d3-a077-6dc5c99a4368",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22753ac4-d3d4-44da-979e-d01162dbf0b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c6d5d95-4772-4a10-a19d-95c6655f2a0d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23209320-afaa-42ec-b44d-25d03f746e68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "68f1e267-df88-42ee-9ac4-ee9d8c78486d"
                    }
                  }
                ]
              },
              {
                "id": "c5d09c53-1e7a-4497-839c-863501f2628b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cac5fac-2f78-4ba8-8354-21d85cd0d962",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f19be86-72ca-4213-989a-21f0f76b7a6a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6654d632-2a44-4e4f-aeaf-3ccd5ff82394",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7f2df1b8-3261-4f73-8af9-05872a38ca98"
                    }
                  }
                ]
              },
              {
                "id": "413793f6-49ba-4cb9-bf81-eb8f6a0e5af6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95a2a005-a150-43d9-a180-dacca793a22f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "21b639e4-a6a3-47dd-9e1e-ca93b03dd51f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84888c02-34a0-4212-bd13-c880a16c1cbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dd31007d-a726-40b7-9fc5-31dc7ea24958"
                    }
                  }
                ]
              },
              {
                "id": "b64cb348-131b-4516-9f87-c840a90ccd3c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30b89e23-1e6c-4ca4-9888-93a9cc7df84c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84ed8241-cc52-4405-865b-1ca3af5fda90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0133c10b-1801-44e4-8951-9334bf7a1837",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f1aef63a-1b84-432b-897a-e36bcd392428"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fbe3a4e9-af5d-468b-8100-9223c917b813",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a40beba4-ddd3-4ac0-ae7c-f7e13c7a0850"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "94a0ae8d-3791-402a-9e30-acaca14c7985",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e0715b4a-3aa0-4487-8eff-1478b600698a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9067695-7668-4869-b6d7-fa7c2b44c900",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c69f0389-4fef-4ca6-8ac3-4948b6a886b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "924e0a8d-5bba-48f0-9404-c15c98da2cfb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0088451-6388-4f1c-b87c-277706bae7d8"
            }
          }
        ]
      },
      {
        "id": "c9e185e2-b243-42f7-9aa1-5c91cef15961",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "56b6765f-d015-47a9-9a55-e11ba7abc12c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6a76396-9f88-4aee-8ea1-c1393db01369",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f79ce1ad-b66f-437e-8db0-289f048d2279",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ca1b1f-5a2a-4250-93f1-d9732177ba65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17fb19e8-d2e4-4740-9cb3-62b7f28ec4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ca60a1-d87e-4db0-a94f-8e3c686de51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a52b4de-595b-4247-99f3-8eb2f2fe6da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ae2a52-3b9c-407f-9333-9c3a054c56aa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d1f7d0-4a5d-4b2f-a66f-b67eb962ab9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ed5682-e366-4e35-a096-31cdeb111359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61179cc1-d523-4dd4-8c5f-78f16cf8da61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0665a4-d04e-41b2-9cca-498b66926448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07ca35f-b008-4b95-b90f-cee50795cd26",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9fbd48-c479-4d75-9979-591f75b8cd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5353fc-0506-499b-8c44-c601ae4a0624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a9216c-7f82-40ea-a4c5-f2c8f94f8391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6194b530-0fc9-4442-86ca-bd2a107da9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cfb8e8-e188-4dec-9f43-945558e5d7df",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fded13ca-4671-4240-b268-95a87d77a743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23eb44d-4e20-4a68-a1f1-d65511c488fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235def37-ce1f-4ca5-87ee-71be166cbadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af508792-4cc0-42d8-b5ce-cca9c4013a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a03061-e80d-431b-99a2-866e5918dc3f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6867fd0-e01e-43a0-9d54-2c55929accbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a482f57e-a599-4ba7-97fd-c58fb71fa8da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5746236-6bac-49c4-8842-f75359a87054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68011a63-a952-4a7a-b7d9-675ae11cb679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b37435-73d1-4bf5-a916-6fbbfd513816",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4065a11-cbcf-42cb-a5e8-b8679316286a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5f7abb-db0a-40e0-ba44-10a3168d9277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c3dfa5-44a7-4a1e-a71b-1abdfb7948df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa5d9f3-ad76-485a-a629-3499d7b3600e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4953310c-65e8-4ef4-beb1-c4a302b3586b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c575e687-d59a-4922-a5c7-c80399b21cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc6c9de-1076-4cf0-9ca5-4475c6856cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fdc30d-c11d-4210-a6e6-64c90610d66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "06cce2b0-7ecf-4691-8eeb-62fa65056d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a9edd6-01ee-4dfe-a9e3-455a926c7262",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0ea56a-5835-485e-b843-9f25678c6b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5a6fc0-fbff-4280-80ab-e2c92ea7090a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8416ba2f-8bb7-4c3d-8a4e-a75fd9a08c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec4cd4fa-e9db-4605-b3fa-d33aa27a3081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18531dd0-7c1e-4884-9dff-89190bb5e5ba",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e57556-756f-46bc-a809-b228ff32de70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c83ed9-79c4-4269-981c-f2e20e0455d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04f35fc-940b-431c-b040-107755472716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2d6018-584c-409d-b3a7-c988a68da99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074a56bb-8a67-44aa-9afd-16bf1c12639c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe4de92-049a-4e88-b301-73ea3668dfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38e06ab-4d86-4273-a1f5-ae7a86b8ff30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4f7cd8-2d61-40af-9da3-1ba82ced61a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9857905-ae9b-43e3-beb0-efe8c71a215d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d9a714-3f0e-4779-a35c-f1ea852d5eff",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fcff00-91f0-44c2-b038-9aa59a51faaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca662c51-7a4e-4f8a-ac33-8b1f65894152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ce18a6-0181-4179-b292-5ac483e0703b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f7dba620-2222-44b9-bec7-841f4b039136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65e4a94-174c-45fe-9683-285ec3579dd7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd99a57-67d4-4cd7-bc46-c82bc8d2f2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6a3ce6-d44a-4059-8787-6f94b33e5aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0af934-e511-4236-8978-c3c94c6109c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d953dc1d-45fb-48b7-9773-31acf63f0e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b195d7-000f-493a-aded-6abd2d28eed9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1629eaab-c6a0-4ff8-a4d5-0c6e0cc96e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3170c07f-b9df-4ba5-9344-943dec3ff1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11d8e7f-2a9a-44a4-8147-ed18130224c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f40b44-b0f9-4f61-8a68-7a475d70da47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f3bf54-d97b-4d2a-a54f-6da6ab7d1dc4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc2beda-b763-41b3-a357-7c2d5795597a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9db9e1c-9231-4bb8-b32a-50842f55b03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e50eba7-d1f3-4b8a-bd7e-24822dc2fd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9bc0119-4be1-407e-80a5-0647840ae671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6b37d8-ce64-441a-9766-cc8f14069c19",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062c9c5a-f9bb-485a-8b68-e8451b52bd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343d0a91-6c3d-4dfb-a0de-441c60f7cdbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d554a72b-4c9b-4bbd-b56e-063a50c96325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6df6e61-e773-41f1-be14-fdd8c88a7702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad62eb97-118a-421d-880f-b938fbd2f3ae",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc5e739-a5ad-4cc6-8dda-84c7eb0d428e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db51f30d-f628-4bb9-82a6-915121374eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea60ca73-fe73-4d06-85ae-8c90a30b4eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c4d183-08b3-4d2f-bd13-4fd1f44d0265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2194fc-f4c5-4fe7-89bb-c6af822f4560",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f577796-9e4b-49cc-8aaa-4fa25b233bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f274746b-e18b-4489-b585-2a3eaba45d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286b5218-80fe-4084-84f5-50074b4a501a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ef39e0-db10-400f-9059-d3d003fbf230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eef6090-0c4a-4bab-a1e2-1981374235e5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eaf1a1f-74f4-482b-a149-165f611458c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c30373-edef-4036-8f31-ddbbcc2cf6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4998755f-b2bb-403b-9f57-483165a9a744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a60cc3a-680b-46f0-afb4-a26c7438c8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626db748-bf0b-48c1-9565-215a00ff9fa4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86387490-e015-4fff-8743-ee1ed8b1ad78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2bc5d3-88ec-4f93-8472-6ff3b1101e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f4eea1-22e5-48ad-b6b3-f70235739903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb9d581-57e0-458a-ba08-b183c8ea27e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b368e6-14df-4229-8535-6da559da4d71",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c3d1f6-0778-4307-abdd-c06c1ac8c713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f970ee-0cbf-4661-8c39-c21efea5f6b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd63b74e-5e2f-4a27-965a-b693b9a6e3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf1df94-281b-4f5f-ac56-da8951e37813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32d8140-2312-4425-85cb-f582d2847d34",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df4f0c6-4d70-47a9-9305-77cf723f60e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee753621-d66d-420d-af9a-1bec84934a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fc9e44-8fec-45dc-8bcc-1bd490d93340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea415e6e-9c99-454c-8f66-21e34e802cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb8df4a-2fd7-4427-9b03-97b7abb3f850",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969829b9-2ee1-4bb1-b641-9d25a073152f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb56c766-ff73-4f20-9cf4-6cfd6effdd30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95cbfe0-c965-4880-838c-490fe95dd3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1545390e-5845-4256-833a-93b06826177a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cd312d-80fa-4df2-a648-46e3b70d9dea",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b35d717-3065-4db3-8272-de4d5dde57da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c737449-f9ad-4a8d-b6c7-c877310ec80f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cf9a99-34ce-4942-bd42-8d08cf839e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "614db46f-427f-4ca7-b7a2-f92907b0889b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d014db-0059-4afc-bbda-2223136405a1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289c8ffd-326d-425a-9398-07d371e59bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789fe106-86ad-4727-81aa-9d1591141885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be69235-a4e3-4638-a091-05a651dad01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f03c341d-c8fc-404b-9ce0-ba8b80ee1f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447334fa-2a58-4208-9fe7-422c07d610ed",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac03a27-383a-4cbf-a83a-32944eaafe37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa53eece-27c0-4dec-abda-dd4e48d4e5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffd731c-16c9-40cc-b45b-4663ba1391f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "013cd1fc-4995-4de4-912b-c47908f257de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dadd251-8d82-4082-9be3-3065bdd5c613",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfaa46b-e94c-48ac-a812-0f1081ae020d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a278c2ce-bdf1-4ccb-8106-234571125689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4cd421-532a-4b7e-8c00-07ce2325434a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac632aff-67c5-482f-b00a-1c642c7e5e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db06879-2ce6-4c7b-9aaf-6a6e64f0a89f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b8f87f-fad4-4ca0-946a-a3c496382519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb6f3cb-f1be-4c1b-9c2b-22a60f8d18dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f02fa6c-a85e-4cc4-b93c-f813ecc3deb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea14481f-2b0f-4085-879b-57607f3b56b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2889d677-5364-42d0-87bb-746e4ec4b1b8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1861d7b-dde3-435d-88d3-4ee76763d5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56236e87-4153-4e3c-9eb5-8d5f159c4a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd84199d-1c36-4102-9f89-4b53da27d8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d314fc8-00c0-43e0-aa8a-cc2970251ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a95348-bf82-4fda-a5da-2467e06ae478",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137f1907-9549-4239-82ee-44060fa1c042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad7615b-aaa2-4868-b87f-529b2b28bf4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318dc254-7a7d-4e09-933d-8c94591a1a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb50b135-f507-4632-9ba2-acd8de86a691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b37c408-e01b-46ab-960b-bffa90748241",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a381aac2-bd96-4be4-b210-0379d2de5aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "811e238d-88f3-4614-acd4-d36fef3c97d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b426d1f-43e0-4715-8b10-0aeeb4b15d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78184bca-238a-4706-9d13-867424c835a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5369bc3-8dd6-44f1-a475-da2d3076998a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca8ee64-aa6e-4156-a752-85cc3a29e779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4425e1a-959e-4dcf-bc9c-977ad17cc9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53ff762-88e1-4e80-baaa-34eea3f36a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "411dec87-905c-4664-806b-9bfec51264c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a13281-e18a-403a-9dd4-0964ab6002ef",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2d7afd-6123-47be-86af-8a5823233391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd791a00-ae91-40c8-aef5-6744d3885e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c24273a-031a-43f7-a329-b8c04033d13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e6f750-53bb-405d-bd0e-57368de47f62"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d4a977d0-c8f6-461d-97ef-5937c46f10dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31de05cd-686a-4548-a03f-aa8768320a94",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e95fee-a05f-493f-80b8-b6171db6fb18",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4712200c-ff96-43da-8c43-9ad53a8cdcaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d197a9b2-397f-4ded-9c52-f1ed89a788ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bc74392-1431-47f8-9f9c-e634a554c9ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "261afe25-271b-428f-80b6-559201a297e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbf663cc-6392-4d89-b1c3-304fc4e443fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "806f628b-19a5-4bb7-9059-fabab9ad1600",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc4e5ab5-fafb-46a7-8635-3da882e6a985"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "caa138e7-355b-4c49-a216-e62476ad7a5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6aaceadb-f9a2-475a-832d-0bbe82bba99e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f0dcac9-93ab-4d6a-821b-776810a793ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3132e78b-31b3-4cb0-8773-18eab16db78a"
            }
          }
        ]
      },
      {
        "id": "db00e1bb-de35-4672-b269-9ff699379e3c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "df209ce3-93cc-46a2-99e6-da64e49e84e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5dc7388-1522-4143-b48d-1a8630a8d3b1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "539fce12-7c36-4a20-a80b-7510618bab93",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7348bf-611a-4ca8-868f-34c2db41ff9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291ceb6b-07d0-4fbe-a655-a548a9e0da7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6a4a6d-52e1-42ac-aa12-dd55095a35d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b423787-34dd-4d9e-a4fd-07f1b62ce026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08ada5e-f582-4740-b349-6a1304fc9934",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7781d7a0-2f17-47bb-a0f1-ff9075ebdbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd088c79-5fba-46d4-a151-141d2a65e894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86a9669-dec5-4958-8fc0-c3f8aa3c2a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b69cb113-299c-4c02-9f1f-076026e9048e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2256709a-f0cb-411b-943c-00750718899a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78365218-25cf-4a2f-a4e9-c5b002047313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09f7740-da1f-4f1e-935d-4c773f0176e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b56c5f4-2ffc-47e0-bea0-88c13aaa2c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d462607-2632-4d63-9610-4a082f7f3b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e09c672-ce52-4f63-869d-975ecc1e0101",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057d969c-62a1-489f-a269-2f775327249f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51f0d81-720e-41d8-8512-b83fc35115d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c90d54-cfdf-4cf4-94a1-9ce041e3947f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbc59d4-22f5-44b3-9203-028473afd3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2851f5a7-4f07-435f-8b17-1023d175a8ba",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ed9d31-113b-4e5e-ae7b-4e3972b6c9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e87edc9-f2c4-4cf4-afa2-9bfed84c5339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c092156a-6327-46e5-abf4-65e8006e0c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da4d34fc-3efa-4566-adfa-12511062e81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6807e96b-429e-409e-8c9d-06c1c0cf56f2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cf1917-640d-4851-b6d4-8ac96cdf21a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfa7b92-3c52-4bba-b34c-0d62dc378be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3779d5b9-49ec-4c2a-9f3f-13f498b4b397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6ce60c-8f93-4e25-99d8-ef33649e96a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6be0de6-2078-460e-b4d5-f9fce7c2ff3a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb674407-09ea-4bbb-a468-9ea07becd2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3a0d92-f463-4a9c-a706-0412f24aee1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f56fdb7-2a7c-4913-bbe3-cd65e2671650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "36060c5f-16e4-46e9-90bc-2ae502e3c581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd82494-b881-48b5-b67f-f3cd5e8ed5be",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7160ecb5-5575-4cee-aae2-055a85d44d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdaf14a9-e88e-4637-8b06-d57df5c5a237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44010ce9-08b8-46df-9b4a-eed7814ccd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb5fa40-343b-4192-abcb-4952e2c6296a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c997bf-06c5-493b-927c-7c1e357ff518",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1368706-1ff1-4732-b4e6-fa19c7b1d865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd58fe6-62a8-47b7-ac6d-898e38861ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3b682e-0e0f-4db9-889c-385006d85d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0719ef-517f-4ff3-85f0-8d8971a26d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0080de-098e-4808-a3cf-a013b8e35a07",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f2a30f-450d-46ee-b07e-9347662cf017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd1059c-86f7-4a82-b45f-1e69d4a781c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e84de2d-f0fd-4129-b4e0-e99bb028becb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8a3084-3d64-41cb-a10e-0215302aeff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae16f96a-6a7f-4151-8815-ae72ff8010db",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a9422c-6b98-49aa-9718-449ac0dceac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714190f0-8f0a-4b6c-ae84-c283f6690f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f33d22-8715-4175-aabc-c58c7c659eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d2be9747-b9c3-48ee-8cba-af1caf4afb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d66b3e-163a-461a-800e-05336cfc4513",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d26b5da-dc84-4347-9a00-2cdf635a9872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680c4525-a6d2-42fb-82e8-49a867659505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44761525-1b2a-4ee2-91b5-4be13f5fd9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae3f25d-7f5e-441c-b8c7-bbe9bcd33429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c1413d-8bb7-40e0-96ec-faab70333936",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae4fcc8-ee2f-4faa-9b90-1bb9d6f6763a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560b0940-c793-4cbe-a191-2b1cbd220e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0995bef4-ab09-4053-a5e6-dce04070a793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8136a685-ba41-473a-a742-2a56e77398ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8b55fb-4573-4b77-8bcc-bba557e78968",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4d6663-4a46-42de-81c0-7f6c4e66cd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff689baa-4027-458a-88a2-ad696af4baa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7d75f9-de11-4da2-bca2-c469158235dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "85071ea9-aeda-445e-a26d-5501d722d227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777aee25-6af3-47bf-93a7-dd1196224ba3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdc2dd4-0799-4aa3-96f3-f9a7ffc6ac8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c235434-2e96-4c48-af2c-6a522d94c2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7f6f61-277c-41be-9165-3365785a010b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b861b29-a24d-44f7-903e-13e7ace5b88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a3ea3e-7d6e-4c28-9919-aff0c9396bc5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fceeaf-a6df-4b6a-832a-f8109dd148c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd14cc9b-1f25-4ef6-8732-9f7bba3f99f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fbf12e-b5ed-4179-83a6-44e1f091a3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d245c022-e344-48cb-a8e3-e54a1a454a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465b9f87-070f-44a7-ade0-a250bec0219b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c18caeb-6adf-4320-944f-b81e77ee7f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98212348-c067-4014-9a50-2309f812f1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65147ee4-4441-4462-9944-96267682de77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7898eedf-ff70-460e-b6a1-b2188137ae85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a202a5ac-3e47-4669-9387-dbb3b03d252e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c81f14-0ea7-4a65-b2be-96b9090c05a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a89eb6-3ba6-4d16-80d2-143337ba879a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ca5643-4e1e-4f96-aae5-f867b84c0b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d238ab2f-6cfc-4d50-8975-fb202b21b5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087daaaf-b313-4084-9995-256526a224e0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49e5705-611b-4296-8be6-643066b37476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d7d8a6-a598-437f-8572-fd3e3a6cdc85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc59a49-acd4-47c9-ba4d-4dedb0359830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73cad677-525e-4c1f-a2f2-0d597757890e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047a9fdd-c0d4-4f74-8a24-3fe9cec71b7a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f521c5a-c3d3-4512-bac0-c5ae43921398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865419c8-bbca-4173-826a-43307b0dec09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0f0b7c-4245-4c50-bea7-e0cb299f4b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39a42968-0fab-4c4a-948d-d489b9dcbe88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8007f3fa-b614-421a-ba3f-3afaf9b4b7d5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928ecdf4-9efc-4399-bc55-588227df6ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5664dfd6-43e6-4a90-a2d5-602026cf2478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaec22da-8294-4122-a841-ece15daeb132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8105f374-a79a-4873-8c6f-c5ffbfb22222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacb7ebf-1380-4c06-8bf7-e3472898ca67",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f21d33-7269-46c6-a177-bb7d6c642f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c358b3e8-4162-480e-ae1e-c709395d5960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fd1d3c-0c04-4f17-9f71-6616e2c8323c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c37dd19-206b-4a6d-9d9b-36dae1b21d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b46026-53ef-4007-bd13-9dab5fcbc23f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae0b878-1f29-4238-9638-7c95b17b47aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cee3e58-e468-42bd-8ae6-2822b3e534fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63fe75f-3a8e-4bab-a96f-60594949976f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b00cdef-c7bd-4c40-9e30-2969148e006a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b1b9e5-c879-4882-b84f-a9f30319b70c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d174e596-0a03-4d4d-817f-307a5d03f9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa6c61a-4069-4a06-8b92-9c1a1f20ff14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba738231-c3db-4b85-b05e-b8fa453bff06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c8a42bd-b431-40bb-aca0-f02422d20060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036992fb-9d7f-4f50-983f-6a314ce00eb4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b4fa28-10e1-46a5-9b40-ca30fec8165e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ade5ef4-a7a0-4406-af41-c757db11fabf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c027c8-b279-4fa7-a855-4a039f7f4297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14ba8772-ebd9-414c-8029-2ca3b1458ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0605e28-c9e5-4d5c-83b6-7283da893e02",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e94695-8668-453b-b3e6-303b4c60f0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b0f90a-4ab5-4396-bd76-37e3be3244f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8007ba6-6477-4ac4-a017-818db901cffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2f68d6-e245-4e58-bdac-ba1bb9b2a52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d9bb2e-8272-4f81-914e-fb0e8a00e141",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d1da92-01f4-4cdc-83cb-98c0d74ffb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0ba343-f8c1-401d-b450-f65fd75520e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d1f6d2-b528-4ce3-a49d-764e3bcab11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86062770-c743-44f6-b5ce-8dc2d7d1e185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45d8205-29b3-4acf-9a33-ed7e2a8f8b60",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557f37ab-c7b7-4d1c-835f-bc8bc8dedd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eea5789-c7f5-4ee0-93af-ef16af2f510d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c4ff95-2642-4652-aa7c-90e714e3f411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "505dccf5-7bba-42e7-9428-7b6140eb1903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de31d9e-7bed-49d2-91ab-449804b9349e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c597c6-24ca-4c9a-b45a-27703b7fb78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a33a3d3-1baf-4d60-ac9d-810497f3150c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee637aef-c6a3-4406-b4da-b978763636cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7cde745-51e5-446b-b953-69045a291a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c387311-8499-4e79-bbff-47fa35840191",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab663814-6918-4bef-ba73-378d643515a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ff9453-50ba-4c79-b362-dfcd9fd0c8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1feaef74-f5a8-4a65-b91f-241d24cfa840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44762ecb-f783-4597-a2a1-b12cc5b69126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046e8baa-eaae-4be5-8643-83cb54b70daa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06a6ccf-f3e2-4877-a096-d86de4009678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a391da6-e64a-4b2d-94d3-b56c283acd9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52833da6-d886-4e3f-bece-ff0d339d1d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "923126eb-6098-45de-8222-32cd44991ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1466e99-637f-4d12-81ed-ad9cc9df0be9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3764395f-54ad-415a-952a-294d859c171f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02db2425-fb37-4fc9-93e1-c10bd98644dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65a4365-e82c-41a6-9f34-63749c4b5c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e35acbe-b267-44ef-849f-6fcaa2d7d455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13c4711-f7e3-4ad6-a382-fc8416d4fd93",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ca78ef-519b-4e27-94ad-59cfdd178643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452aeadd-96c1-4148-9b47-bfbb0c6d875d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1a0ea5-f175-4ca6-bb63-abc5138f41a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d42d2b2f-6ee3-48eb-8433-40715b298a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270f44e9-f79d-4344-9e49-f8975242ddbd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80558e72-c127-42c4-ab89-1f66320caebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7501905-fcb3-4e8e-8d8d-00ea944cd6df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3089d8-762b-4882-a693-02f16de4f5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6de90b4e-eb69-4670-a523-0a39fb288b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64690214-7c48-4ccf-9eed-63394bc8ef32",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031ad96e-a811-4076-8597-84bcafedc5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da895fe5-e8ce-46ea-8c67-decd85516f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccbce34-1a4e-4020-83db-af4f5415a60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b198573b-a7ad-40fe-96fb-1923184f9893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a33a089-54a4-465a-bea8-e1bc3e7e0b5c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8f192f-d173-4bd9-8848-d955e9f09861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e4652b-081a-4b2a-ac4e-7fd054198e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb045682-ff71-486c-b396-597661f0e2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21dee614-b707-4b85-a4bd-43d466c5b746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b816d7-4ea0-48a4-9237-5ec10db5b723",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5edff3-f5ed-4ecc-80eb-b7aa94c11db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420ebf62-aacd-487f-ac74-024101c1b0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b12728-4cd0-4f7f-b516-cbd42e0e820e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37ca19c2-909c-4280-94df-1170ffa7e1a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "499b69a4-74a2-4b4a-bdce-78432099f195",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f576e5e-61e0-4e54-b910-72d058b6abf8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bda1d4e-7352-436c-9c71-e7efeb9d6fbd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0813d0-2ed5-4967-af45-c392162a7bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6bafb0-1a68-4a44-a869-019febad161a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe2308b7-8d75-47c8-8b88-61f31626309f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c37f6cf-9d19-4b2d-99c7-eabd9eff35e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0240e0bf-1724-429b-ab5a-3ca84afbae6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c87e1815-5ab8-46e1-8d9f-f24d9f1346b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73e75c70-3e96-4de5-84e7-0c73bcab186c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "252e72c1-b870-4c12-bd63-b39b12c085d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "094d39e6-874a-4227-8295-02da35e82db6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca5019fb-8496-4787-91b8-8c302d7196e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "520c7ad1-9ee6-4380-b4de-d2a2b99e1bed"
            }
          }
        ]
      },
      {
        "id": "8ca44ab6-5caa-42af-b4c2-f58474241bdd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "eda8b650-9aa4-4cc0-a175-54ca45324932",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1935eb25-231f-4837-b710-95e2255f26ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bdd2d84d-ac4f-42a1-aaa5-2f374b971e07",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d958a3dc-3b7a-44be-b7ea-88eb305977cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beda305c-64cf-47e6-afa0-82d8c34e8f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401aa9fd-7fe3-4a35-b4a4-d8c28675233f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df50505b-8d7f-4399-a629-f6c1ac4964ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bd92f8-48a8-44d5-8ec6-ae9b893ad96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff537116-f09b-4204-a824-56b383bf0c6a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d8a9eb-088a-49d2-9003-08fc0ebbb7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b636d9-adb4-4a74-bba2-eee95084da63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ec8f54-3807-4705-9948-9ed41fd65651",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b72fdd-8c8d-407b-ab9b-5c2f030b640a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57530fb-412e-41cb-ae64-6fa7a8cd141b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55aae742-2343-405d-ba77-1728f27089ee",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a895cc34-fb1c-45f3-8910-a58e856acfea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e1ac0f-6a00-4b56-91d9-2986efccea5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1321f39-b131-4665-b7f3-9454dbce9420",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999b4464-3c9a-48f6-ad15-7c2969159614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a9e1bb-9e16-4cd7-9197-8e8fdd44828a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22739be-d108-44f0-8727-f69e97777849",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0beeb4c0-835f-4b7e-ba47-caefea9eb38a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3221e425-9267-4414-a2aa-1559a0f8989b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a11dc6-303b-46ca-9c70-2ddccc0d35ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01733e2a-897f-4533-8417-0680dac47304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b14424-7ca0-43f6-bd51-1fdca2525b7c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68335072-cb89-4c38-a188-9f576809bc77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae054913-b49c-43bd-9ec3-a67397107361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea12c62b-3b16-4f08-b620-053bea2a5c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871610d1-e3e9-4a32-bfcb-b552ff3b160c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f69182c-62fb-4fd7-9e84-3dd739953b90",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a986cfc-db77-41ff-992b-13aaa231ed59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34ae6cb2-d126-4da6-bcfd-8c7c671ff274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac9c1f5-e03a-4554-b824-b179a74e69ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180c6335-2ed9-4647-a801-fdbf03d827ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bfa811-6983-4122-96b3-06668d85f619",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246bff55-8f62-4ea0-9262-6ce44e8e3baa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56bda67e-9a9f-4a51-841f-bde02e8d8009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "456a9bb2-a4cc-4329-a150-f667f5eb8952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95c4f6b-096f-48a8-9ceb-656f2e94e66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6ff2a5-55e9-493e-b5c9-1f49f00b6f75",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef53b5d-4e92-4e84-a09f-f30191c27247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701d9862-6679-4302-9c32-51ca2f2be32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bf75fd-e063-4ac7-8c0a-fc87ff491cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b230e69-fc57-4a38-a9b5-dc05c2859f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67946db-38c0-4879-9634-7a4cecb3095e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e36a285-3162-4c7e-a4c3-ee06a94945c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb283536-5192-4bad-9e8c-85c86a15b769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2462f3a-352f-4d67-8293-0b870ef7797a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b23157-03d2-48ca-8948-fac94858019f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb56cad4-9358-4173-ba5e-ebc859811fbb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e087d0-0d73-46b6-907d-51f095eb3fdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67e764ac-1bc6-4060-9f8c-0105a8939b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "771cbda4-bde2-4558-92b9-93f75dcde968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145c4215-4637-46c2-ad38-425b62bc88e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a252e0a-7faa-4921-9c0d-631d35df9b75",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc8bde4-89f6-4c85-93d6-5453d29cc743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31df6e84-048c-4bc8-81f9-3d8a3592f72b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487da412-6740-41d3-b788-bf051c4be7c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8e6de7-ba85-4c6c-a955-2ff250b2d5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee514e2-466f-469c-b842-6ecd9f77eafc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5a3b92-6915-42da-bb08-b1e67e1b57d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "298ca697-bdd8-4ddc-a664-5aff440d1381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6323672e-af7c-4874-9e33-c85bcff8242d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60fb9ff9-eac2-48ea-902d-850a833987d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c31b583-d69f-4783-b0fd-41028ae9e138",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb58639c-600f-4a94-a6fd-3303c686a2d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1528b6c-810d-4078-b315-6603ee0531fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ebfc1c-86df-4c85-a5c1-f611f49463cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0e8e0d-591d-4646-8008-fe5d1fab1269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbbcad6-6de4-4d67-87c3-affbd1f2a4f7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8e45ac-348d-4970-ba85-9d084aa39f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3af33ee-11cf-46e1-9e27-f0b879bc46be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "022a5778-8a2d-428b-9c0d-2656ff98c83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11588e1f-e2c7-427c-9ff5-9da64776b1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528513f4-f6fe-4000-a22e-aaeb8b122250",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f05d36-e880-4a02-bcf3-ce6882cc041b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29677eb9-22f9-4127-b75c-235ee5d55bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f48d26-a7ec-44ba-862d-76d3e5ff3a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52df34d3-fab9-4215-9ebf-b51db59b8349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531f75af-314b-475d-be8d-4a1109738ae4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5497fedc-5e2e-4aef-8ccb-6b89258ef070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4950ca4b-fe96-416a-8284-40a9c41c3885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25cbcc3-2eef-41fc-9778-a5ab18b55085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b428bf4-8d7d-475e-9eb9-0917933a348b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a335dc-f0ea-4b27-b9b1-4d0deb081f19",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f768292-5a77-4bb7-9e9f-e1d6e801e278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df6f145-d8ea-4608-9af7-c5629a7ea840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e4d971-6c64-4390-a8ba-0e3f81a8385e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c4df14-5fe1-46a5-b21f-0e1055430e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74505cb-c078-472f-9f0a-defea3d912c9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5244ad1-2204-46bc-9790-84a607ca3bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7573d1-583d-4ccb-8c64-4958c3bedbaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79023fc7-36df-446e-9151-7641d3562056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5325953d-0ca9-4cb7-b44f-e9ce05ba7849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda6bc90-1647-4655-9afd-47965f5e0886",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6c5a60-596d-449a-8181-ebe669ed8d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a33d90c-7d29-489a-86ae-b706efb8769d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7af5b9-0e3f-422c-94d5-7e8122c1c569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae1d75f-6f08-4740-8cd3-ca032bdd5eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cea2aa4-73d8-4af4-89b8-0e860c8d4c1f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a6cea4-3d66-49c6-bf67-d8de3cc5ca51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb4b109-a482-4515-9089-3275df33f5d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e3ddae-72e0-408f-8036-519bbb0325b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaceb121-2fe9-4551-a592-f4a58ee280d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac3d4e6-e4cd-4c79-a9fa-241d7423ae46",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05f0fc3-614b-44f9-97f7-d2550ce557f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab533c54-90ec-4803-a43c-f7a2de48ed0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f81d48-2521-492a-84d9-426020f4eeb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df58af7f-0056-4062-82dc-281fce5e28f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66c6525-abc7-4b1e-ac47-a647fcda5421",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94ef513-8012-4b6d-b6ef-9b3f7091967e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a6425da-193f-488d-b043-d4ed1bea05f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6c36f5-6cbd-4d4f-aafb-fd2c803d9e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae56fcf-7a61-4634-9817-a9b1881452f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb07f61b-d963-4b3f-9599-6f2323f7dd9b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c840672-3133-462b-ba3c-b98571030e3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f0d1529-1dc0-4961-91ab-b14e1b2328f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7f4230-6a04-45fb-91e7-e712e9284e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640b9021-da4b-4bb2-9d0f-4a7a110bab67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f23674-b51b-49e5-966a-1db45cc25d83",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a03a852-2a98-4f52-b5a7-35378c6bb1d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce26f66d-faeb-48dd-8227-b09012228a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc48884-71ef-4265-afb8-8329614176c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508153c3-cb64-41a3-8e96-31bfb9845f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01135d2d-d39d-40e9-b7e0-aa7a88c919e4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b1f878-1bde-4465-a31b-0ceeb18c40fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d661ab6-34a7-47eb-98ac-6a6c3dc46a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e9887c-451a-4782-9937-ac34caadd4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46568371-dd7b-48f5-b58f-de58fdcd49ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2b7aca-6991-4f8e-aaaa-0791463fb94e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11a173e-20bd-4a00-a844-b3114d0be6f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5761ad29-93eb-4c1d-b2e1-86e60f6b905f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7b7e2d-d77b-43e2-a066-585f316e645f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4877f3-5749-4a8e-a002-0681e1e0a744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1736fd-5e6d-4696-a9e8-d9e7fa0ddcf0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddde2537-9a7f-4c42-9ccf-0a6309e377ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c5e6278-7b3c-4a31-a559-0c0b928ea2b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c7c262-0526-414a-8203-19dcfaa0d49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5650f9c8-b169-416e-a39e-4a61e95aa5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf5e461-6fb3-427a-af32-504ca66c48bc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf459f1-33ba-46d6-b222-2cf597a54b50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3ef72aa-5cb9-4957-b126-c28dac1594b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "668ed2fc-daea-4685-8445-10d2db29aff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49c0d00-e290-4990-9817-68b695f9c56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934bbc61-c0d0-470c-ad05-c263725c39d0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9dc54e-f9b1-4f9b-b61f-ee4e9d3a3369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d8e8bec-e57e-421e-8655-1b9c78824f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af3ab2f-b2c0-44ad-b5b6-a143faf1cfc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf81c61-61bd-40c9-9c16-fe02740f63af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80503f3-a2ce-438c-a886-12f84e45fbcf",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac68153-2383-44a3-b1d8-22ec7d8c0e55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45d4c706-529d-4463-82a5-3738cd254d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdee33f7-3129-4cba-80ed-ac53a8efa44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021813f5-1812-4de2-819b-68f65a4d9146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb783a31-8e2a-4b6c-ab67-b8d0b9471cda",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41569ec9-8b42-4abe-9a56-cdb875cbf3de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c28eea5-6473-48e6-8cb2-d72616f9d96f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d55a3b-4aa4-4725-b5ef-0c868ed9e45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60cd88d0-c6c9-4942-aba8-6e9f9a3233c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee296c5-f6d1-486c-8871-fccedf55a686",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f756e0-9114-4c3a-a3c9-3d070d2dbf3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f872b45-c608-4312-bea4-6542120324fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15635511-81c2-4d14-b01c-001b044a5970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b338e921-a4c3-470d-bf99-8d5c77d14e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0542c6-6f30-4356-a202-7dc5b0790339",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad9d48c-ff9a-4e55-9f3c-7ba079ddbec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a42fff-d87a-44aa-9201-fba8a9da7660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2888dede-9617-4e64-bfe8-8d3273fb6268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ce6f81-181f-4b21-9366-9c2d2d246615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d0739e-44b7-43a8-9ac2-29afc0dd2fdc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5648e6-b0bf-416e-92ab-920a74606c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ccb42e-c027-4b4f-a879-fabf24306dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c81093-b2bc-4ff9-b2e1-10093be41f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9ad0ae-0289-4a07-b1a8-7e1c8d4a1684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdd2947-b5e9-4d0f-b2b5-1f8f2ec85ffb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3e23cd-9582-453c-8f7f-4f8ce6dd69f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92bdcb52-bb61-485f-a89f-f96989c5744a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350bff6c-9696-4a9a-944e-3a54ffa5acf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d986ff-24a5-433b-9d2f-3fe5f7a4a873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88289953-709c-466d-86ca-04a4e330854d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98121a43-51a3-40e6-b7a1-733abdebf964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb08ecb-fbc0-4ff0-b2fe-afc50a65bc1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46143a4-c8e3-4614-9981-f3833fb73a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83d6284-dc84-4ade-b93c-8be3dd6011b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c827c4-64b4-40d0-ac4d-bb9f4e0e5e06",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e848d775-f19f-4d1e-9823-34780b72d173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a913ea-7276-45ac-937a-24feb9d5fecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e11942-6653-48c6-ba48-f1997f6bb441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d7b140-5819-4403-a959-e48a91c67915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32390c5d-9706-4247-9a9f-583678cbe1f4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a856ac-f768-4966-ba01-b8abbab27603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7535b91e-201a-4549-89ff-bd4993bfbce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6175b535-57df-4a6c-bba4-ad424e4d3635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e582a2-92e7-4b80-8284-d9bf1203f95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f39b8ba-cd01-4b5e-bdfd-4ef40088207a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ff719c-2852-49a8-aeb7-30c390d539a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b6530d-ce10-49ce-8ad3-a2d75f12d8f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf23696-b2c4-4d66-a8da-ea5f47059fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe14cb32-4aeb-41b8-996f-e1edc5c623df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10375cb-2099-48c2-8734-93f265bff325",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621a3ad9-e1d8-4e2b-be24-57ad544c99f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d1cc9f-9eec-436d-9992-6ac254b82a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f0aaac-6794-4952-8ec7-a1f640c713fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ced622b-90bf-40f9-a900-39f630561dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd8d05e-3469-4a79-8301-c3f42762ff26",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fec3b0-3676-4fa9-8759-548a32663f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526976b1-31f3-4c0e-b846-5d630cd5c3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8323effd-c831-47a5-92f1-d48fdb31e25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f2dd458-6cf0-4fc8-bcc7-27f03155803d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd07067-e836-4e8e-8e25-e63a4dc2f6da",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d023ee41-2ce9-4da4-bab9-33e3e13c28c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245b45c1-b616-41fc-bef4-dc750287963f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb8b1ec-e432-4a23-82d4-d415c711f328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2576236-1bea-46af-b7ad-cb13eed6a33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d9ada8-91a9-48e3-9393-ec2802b58fcd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c731ebd9-d095-4ee3-a8a2-3cd00d22b883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0453af2d-881b-43ba-9338-b8da29e31b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1c6438-9178-4c51-9b0f-deda35e3a2df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6d8ccf-08e1-4ae7-a15a-658c489a84ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e459c1-e1d6-40a1-b8e7-82bd9a2eed89",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb71276-aed4-4ece-8ca9-1eedf996df95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a742a122-f299-4708-9a95-879272971454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f77cd4-4e71-4899-bf42-82f4fd8904f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a47b63-3fa6-4d96-828e-9c3d6a52b8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7dae51d-a8e0-4711-b133-51512d2ee77d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6eaf05-32d0-471a-981b-89836b46e099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cfcd63-e8e4-4431-9f48-54bcae830d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47459aa-66f7-441c-85db-27666d760825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc08fc42-96aa-4007-89a2-c4d7ae642c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a195536a-0a6f-4d15-b22f-ecb874b7ea06",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668b2341-03f8-4420-adc3-f7f315c6ee27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3e4a18-992d-4a94-8ffc-02d37ff831b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22c09af-c36b-4225-bf26-d9d7ee77845c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c4f974d-7f85-4df6-a1b9-c958c2024a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528fc46b-5d58-4a04-a1d5-df0d6e141afb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edce6661-d054-4922-b30f-5b180258fb80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619d168b-3dec-4c27-87c9-46b2f552c1b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a7367e-6d09-46c5-8788-9dbec9f92606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4b6c0d-e323-488c-928f-90745969331e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ef73d4-9e05-44de-ae1b-4e1bf6dc334d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715ee4dd-2770-474c-9482-32b381ebe4c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8bf9973-5755-4054-be81-330b86db92f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8aab9cd-38d3-4f00-a11e-7f3a893e5fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8197a1cf-e0d6-4b05-b9cd-4f7c7065c5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbe31b8-97c0-4e02-a814-d34efccb8077",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a31efad-e509-475b-b695-34e60938fead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e2bf3d-5167-4e0f-8545-5b421e0b0362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e0696e-82ae-4867-aaff-c119dc800ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1babb6cc-cc81-4e1f-9ac7-a730bd3e8a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133b9c5e-9fe6-4ff3-a98c-e7bb0725e0fe",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c35e28-4fcb-4197-a45e-9fe563dbd3a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53cf9c9-1360-4f0c-8564-e52c54e12227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1177aff5-0c93-4520-b32b-a5c351e5f291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c364909f-ddfa-4b0f-8981-37fc23cc1446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93178fcf-545f-458a-b96d-e04fc101af33",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04254b21-1de6-46fe-86f7-d99f50d9371a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613bed92-fbe7-4b70-9767-950c29c0597b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0452a50-a5a4-4725-b335-1b1d85e9aa20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772f7e72-cea3-44a4-924e-c8af1b7c140d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada5e365-f0a2-4f91-9751-503cc2d85f05",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c891f0f-d44d-4cfa-a605-204e61258924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e925ff-ec4b-44e2-9545-5bf9c77cbf49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48146b07-7e05-4250-9a9a-0b5f09e44718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e694e493-5d17-4b50-8aad-40b10068225b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ac1afc-c019-44ce-876c-c8203a4a2e8a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f217a946-c9b2-4967-a8ff-336cb41e71a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1600b0a-c139-478b-9105-22caea75a795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4ecc99-ee2b-4d63-b12d-9b1427fee71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeed1842-f5bf-43d0-9de2-df2e9225d560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c2496c-f503-4967-afcc-52fc30794bb8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82b602a-9139-408d-9e4b-ce7c2033b0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a66cae6-5613-49b8-abfd-58360abcd00c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d1f83d-212b-4adb-bf20-5ff64b1e36a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ace38da-2d57-4e64-bf3c-b2aaea866999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ad51ca-04ef-437e-8ce1-fe9c939f4da7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a892e3e9-8042-4a9e-aa8d-0210acdd6f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99901906-af7a-4bfa-aee8-f2140795b3ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd067c9-d370-4b59-aaf5-c61ed4d0f0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f2ea9e-fc1e-4fe0-b297-727418f0dda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b40379c-3e08-404e-98be-cd9b19f5c1b5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f4f706-e0d7-4daa-bdb6-bda2b1fd4cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c245ed4c-7f55-42ea-8dc5-0a0806795b85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1baba93-f303-4b67-9d2f-6e2fcf3d2c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cfaf7f-d3a6-42c1-83a9-9ac95e71ea81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e00e58-c8d1-4eef-890b-e7c1c70dc4be",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5fe192-141b-45e4-a661-d4beadb0f2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878fbfa1-6ae7-4470-8656-ea53edd558f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdba234b-082b-4ba5-9482-08c4b8b108d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9873efde-f1b7-44a2-a3ef-f26b85a0d8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58993ac-a6c4-4ded-8066-898c14faa81c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fe4785-cf1c-43fe-8aea-5e03d4897754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e833328-6d7c-4d19-9528-54fd8e5b8c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5234e488-6d1b-49a5-8a9b-c46371075b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4725469c-ef5f-470e-8290-8c0ead5c1127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b173f9e1-df4c-4ffc-8b6c-3a5771e4fe4b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b708b102-4c69-4d7e-b271-5c341b7ed013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b91f27-9b7e-4679-a1bb-dd1c894baa54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6854e1-ad24-462e-bc79-8b254a87191d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed56de7-4b3c-4323-a412-635b55b5c014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c1864f-4ac6-4f87-9818-11f212a0177e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57036b9-7a6c-4cd8-93f1-d1b757073070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb6663e-bab3-43e3-84e7-983f1e094361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a948b89b-0c96-4208-b3f4-3d4aa0c77178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07be326b-13f4-4070-a162-0bc3693c605b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf37133-8a0e-4f5d-8cf8-47e86db6d001",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd92e51-3657-4eaf-92bb-e71059ee1d4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68cd9cc7-e022-4dc7-8eeb-329c3a408c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbfa4ae-9aa3-45b0-8c2f-33b1c86ee851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9ae07f-d9f7-4518-8e75-03cbd869dc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be446dcc-d6b3-4b31-b5ec-217d013d3190",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f8c94d-df02-4094-93b8-4a70754df9aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c4dc5cf-4fab-4146-9271-34814bc6361b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb167b8a-cd0f-4ffa-8e7c-0ceedfbc995f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113c2490-ed1c-4980-ba40-2a74b97116e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c445b4e-0858-47e1-8db3-256f07b1f69c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f837b23e-8a5c-4326-b7c0-f3bf3706d621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66837915-ed2f-41c5-958d-c307319487d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72f8bdb-c633-420a-bdd3-6412e637467d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bfa3cac-c76f-4840-8079-f42c7da2b144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80388ef3-c6c9-4b46-83e8-b397a6e7622e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d27ecac-3497-4dbc-802b-bc5e1112fb36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d7524c1-fb4a-44b4-bce5-9b79e04e9661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9ef70c-fbef-4135-bbe1-0bfbeb1bc454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6340b58a-d153-41da-a975-6a5df973eba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7335b69c-d535-41b2-ba29-9737a51a126b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d340e4-04c9-4830-9837-b3a09bc7849e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a02d1a-8ba3-444a-bea0-25e8fd87faed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21612bb0-04b0-4742-99e4-811537b913b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10928b04-2739-48f0-b8f5-af85af24da15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7732df8e-b949-49c6-b5c1-56b861a262b2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b7d3d9-3f65-4270-84d0-accc8c04bf78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18f0a234-b954-44fa-ac76-dc32e2bdffd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a99f3a6-9d4c-488b-a568-325cb77633bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22fa4c60-de77-4d9f-997c-8c650274cfad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e487195-8504-4bf9-97ff-3120e9884561",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d8ef0d-f928-4cdc-bbdf-f6d1bef367af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137ccfbf-0117-46ce-96f9-35f810798c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2b5b07-7ac7-4746-92e5-f6f19fe7b499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a349d7-867d-485e-888a-4ca67d5edb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8683dff-975a-4b2c-8bd2-c13469ee535a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2015987b-1048-45d1-b929-924fc6173905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44fb7d6c-b603-453b-91fb-a9723f40f8e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf0716d-ed86-4807-970a-6cd44f28cc17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1bd4733-8e6e-4c07-9b5c-a5d3d6bfc9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bd14a2-4c55-4559-aaa8-7166734fdb44",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9c7c62-70f4-4d51-9706-9688dcaead23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d98b1749-07ce-4430-8ba4-8ad2f518f095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8e1915-7ba9-4801-963c-7896091c12ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2cf02ac-a842-4428-946a-6213c9a67356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c124fa-630f-43ee-8973-1a748275827d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cc4bfd-4b79-49dc-ac87-09aa739caba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11a3204c-07ba-4220-a466-2d744f6709d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7295371a-8a55-493b-bfa8-7a0da7447146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd35ffb-d4f4-4f70-8ffb-d75309716194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c35b57-8f7f-48da-896f-f756c8cd9044",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edf463f-7ae9-48af-a132-37613e868672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83035241-3de6-442e-9d37-4534111118ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f86bb21-7b3f-430e-97c7-dd2f56102256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d64148-1d60-4ec9-8c90-aae928f55253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bdfe4c-4f27-4f86-a9dd-a2892e0947c9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d97b5d6-4d58-477d-a60f-b1e1d5ca6214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa18e3e1-32d8-4e8e-a159-a4272d95acc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72e35cf-8b3b-44bc-8d9d-f9331a40a65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b678a861-8f7c-4973-949e-20ae7648dddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e154b75a-5c01-4042-918d-423f74ebf226",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6a39fa-e327-4094-94fe-cd4d121e1b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e50bcd-e1cb-4b2d-89fc-e9c7b765bfab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ceab81-23ce-49c5-a1bf-3578d745afa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7aba73-acf9-49a9-abcc-22d7a3f08f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8199e1-2516-4ddd-9691-47be5194f390",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af06d281-b703-46f4-bca8-e6a203621733",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3ee3d10-4647-45a3-8143-f06724115d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b997e54-515b-4004-96a8-f935de962444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1b79c4-d919-4b1e-a4a6-d7d9510d7447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c846ac-2d90-461a-acc2-2d832eddae9c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99cd0995-90de-4b7c-a57c-383aab4b6c83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d28b4c-cbad-473b-ab23-54a6a6b4e3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6d636c-9bae-4bd8-b90c-403daa13fc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799f628c-01d7-4054-a391-aa4cc480a39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fdabba-57e5-42d7-aaed-7e629c0a1c9c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c5b4df-5db9-4805-b46f-4ab1a0513578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11958a4d-0a60-44c2-b666-5a931357859e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbc4c31-0706-46e8-bd32-ac049f596453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497c9b44-fb8d-4bde-82d1-f3c0ee12ae4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c20f7a-9e4e-42d3-8d36-c3801acdfc5e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fdf1b3-c312-4e56-90aa-e2a2bc9e3fbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e709b563-8351-4e10-b03b-8a6f91643e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816fde69-baa9-4f81-b779-63ec3a5bc27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd4dbc0-4f57-4c90-99b2-230ba3cb7235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9995da84-94fd-4c75-a3ab-1c0619c4278e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6e6d76-fd4c-423c-94e5-7a925923de9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "391f3901-2ec9-4b8c-a92b-05861c9c2b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed5a369-a900-4dc5-b245-f2cdadc23434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19412fd-4efb-4057-b111-543f94299027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01107eee-48a0-4e80-88ca-cb9479ff5fa3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4981b4-e99f-4b25-af99-7d21659c13a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a4eaec7-0324-4432-8e2a-e938642b9604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95180ac9-e0d5-400f-b432-f0f381c55526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0aae90-c87a-452f-b000-86a656f889c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1a03bf-b34a-4405-befa-0686ac032d58",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad78c40-fb8a-479c-9dda-3dd593deb820",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e5ccd17-c8e2-40bd-b8fb-f05399bdc3e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75df5ab7-68fe-4ca3-adb4-0e52e7ac7785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021ac637-af48-435d-899e-d6d71cdc17c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4500f411-ddef-4499-aaca-667d271fd5e8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557d6944-beb5-470e-8c39-c226f78ce69c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "813816b2-3c0f-45a8-a83b-73aa973b9a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb8b85a-8376-45f6-9a48-90f1c24ccfb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60aea52f-b6ae-4f29-ad49-4208464855e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675b6e30-06ad-4983-b070-d6426c8b8963",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7944afe1-9b1d-446b-a3a5-36635b38b843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f9e7aae-2412-48bf-8b79-fe457bc732c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a57208-2fe7-4bcd-8757-5d51e1d33e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc520325-c832-42e6-b850-79e0623133dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6ded6e-01c2-4ee3-a08a-ffb652e39fe7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47df91f-4c77-4605-ac0e-b1828eb9d798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42e675f4-77a0-46f2-81ef-5a3a02831e4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9306c2d8-713e-4ec6-9b79-7c107d4aa2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aebeae37-ab32-461b-9db4-b38b06ef87de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470d5565-96ac-47c7-85fd-203dc061e7c4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f4a46a-6699-412a-bb66-fc838545acf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c360a767-2bc3-420c-a10d-d37bbf6b5daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33f9357-79ed-4327-9f4e-7b839a8613ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3147cee-b783-4bb0-80e0-6da6f9eae492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee2c6d5-dd02-4c0c-be34-9587040c45fd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2666e90a-f572-4def-b40a-5a222dadc6e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcc002a5-34d3-4d91-92a2-130a5fbac822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e9b189-1a77-4a5f-b324-17154bdb1406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c383630-9b5d-4cf9-a44a-594ceafcffbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6331f94-98c3-4254-9413-ff828f04a3c4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a071f2-3ad0-4fe7-b047-50b0158f74e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59263a8d-0ceb-4267-8ae1-533b3596b4c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd08038-8eb6-4174-96c3-8be0833c8516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b9c5eb-61f6-46e0-9c8b-1597bf95fc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbf4891-ab43-4ee2-9f11-81d0bae80586",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6294803-7fe9-4a73-8378-f237f6d1a5b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb345a99-609f-443c-b965-9cb4e7fd5800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2de3ab-f34a-4686-8957-b26aeabd141f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a420ad-82d5-4cbd-a342-e84376a9faaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e1490b-105c-4be5-8ea3-3003d76e2c63",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1d8b79-671e-4ba4-b8a7-d4334b62db8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d60d9a0-3c43-4c4f-857b-612a23a07179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19754973-2f95-447e-aada-5cd450828652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5e6650-e39a-4bbe-afd9-43c50d3e84db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d313801c-2cfe-4f28-8b55-80a3b9736cd2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0a1c1a-e33a-44af-a7ca-b2a6c06471dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2be8c8e-bb29-4e63-b25c-1567112b339f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47e4690-7520-42bf-a0c6-aa0c69a2a037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d370ae7-4803-4d8b-b567-c085d80cebef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a31eeac-49da-437a-ae21-93f269c4dc92",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa047227-7fee-4a64-adc3-1b6d33cacd96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ebce6cc-e6e6-4707-bf17-c5828e38b423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "398d0fd3-4e2e-43e3-afff-455a5fffc5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88262b0e-85e7-4490-8d7d-75466aa66457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a28e19-8d9c-4f3e-8995-3c6d28544c1b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e376610c-2a48-4701-8a70-9823ebeb08b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b1d2674-91eb-4336-95fb-fba87851c392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2e2c42-2f12-46e1-bc84-fb3bb0a4c8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f20f23-95d8-4443-9d66-3a16bdd6210b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b355d66-3102-4f74-abce-e96b683c2272",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df250e2-250e-4603-9a4a-a937dd72ddfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9714faf7-45ab-459a-b48e-fba69356ee95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9e87c0-adcf-4035-95c5-791b92a6a149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13dbf50-b425-4685-973d-8207ceaaeddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a661b3-2346-4a4c-8509-093863354267",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b68d71-afee-4a16-a6ea-9651e59d3c85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0461df26-3643-42f5-9798-8bccf2bca67b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6433b92b-39ed-4f69-9949-3141c93f9f5d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2ffaee-44a1-44cc-84bd-89cbc980f0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd37933b-f8f3-40cf-9ef7-f76624bd7842",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddab80f-2e95-4d7f-8333-b6238104152d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b86145c-8289-4789-83e5-9643ee71b112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c368c05-d6d3-4e3d-9b72-83694d89c24b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d52e9b-7510-49c3-a07b-ed9e6eb7dbe9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6acfd041-436a-4d24-9b36-b149b4e21d2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8fbf817-a0ce-44c8-b716-2c337e806d6a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "518421dc-53c6-48b2-b5a3-6b55c3ab65e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33572f8a-8fa3-40f7-98d6-6cbcf4b5f239"
                    }
                  }
                ]
              },
              {
                "id": "786d1dfe-c023-4a29-b2e1-730f12a409dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40ce333c-9f8e-428a-912d-23e4bfca2add",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d75c2c-a9f0-4b3a-9912-42219e7bd6ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "128fc029-fd5a-46b7-bed2-534e29fe9d70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98150472-5657-4eb7-a5ae-d205a2fc5013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "109caf5d-a99f-4cb4-8d25-844bcd453676"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "188a19c3-f587-4e41-bc16-05abf8461fbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd4d026f-13b5-4412-9159-ab4ccd732c07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1be37191-a24f-4cbb-bda4-1676c6342ffd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23bdc26a-03b6-4c6a-8049-d521a3260385"
                    }
                  }
                ]
              },
              {
                "id": "5d3fc456-e60d-45f5-afa9-f66613a54c76",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8883e966-ec90-4e0a-8d28-a9314cb96e4f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3863aa7-2d06-4a31-a34a-4257359d3094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b55175bc-39d4-4c48-8215-9fa581bf2057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da220a4-3ffb-44bc-a07e-3e59b2990f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac700c25-2a81-44b8-a1ea-4edadeceffd3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cff12d5f-297d-47d8-8c7e-2c47b9617953",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4b723571-346a-4673-beab-a9a360e6c437",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d48fc90f-9ce8-4991-bd20-af9717de2b59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7db3a185-71d4-4757-973a-81b2026c6195"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8784b4b5-1d8a-43c9-9f7a-2855c142741e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eee47f2a-5931-4000-acd2-c60c5047e7bd"
                    }
                  }
                ]
              },
              {
                "id": "fe26b495-d783-4926-aa2a-d0826a1dda6c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "752d28c3-b146-4c29-98d6-086223abe1d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c62bf48a-9030-4c18-be90-3e595330a4b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62c3aa57-c617-4f29-b264-c7b749368732",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3073ab6-dceb-4542-8263-65f277028e08"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1929a9a-ff57-4b43-a7b0-861c109efb95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c0740476-a72e-4a89-9276-b333a4a0209e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8a96695-9e04-440b-aab0-3038fc6572b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65bf21fa-f640-46af-b247-d51295f730bd"
            }
          }
        ]
      },
      {
        "id": "a00f581b-b509-452e-b773-81f67423b86a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6a56a251-7c19-4cb7-bd5a-436c4f9a26a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1c148f1-c740-4b48-9881-77c9d2043c69",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffc6c4fa-ca0a-46fc-a131-092ab158d31d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5918ddd0-344f-4b84-97c4-885bc24765a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b44d627f-7155-4bf9-877c-01caa59ebf9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411c0099-7aa9-4c5c-a995-ad6bd56ed50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c33bfc9-7a6b-4330-9d87-960fb9803046"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e62da12-a6ed-4331-a48b-8b9cef600231",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "980ff5d7-d220-41a2-8d15-c641355bbe4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd25c962-ea66-47e6-a25f-8ad4ac8dd104",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bc7b6d2-35c4-44a9-b6f9-2edf3d0385af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "efe6c556-3748-404f-82d9-5fd4e09d5b5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "540e6d93-b08a-492d-ae93-7abfbd29c1bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "093c6f27-5ce0-4b27-95a4-4f6722576001",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "efa5a271-06d3-45e4-aab5-ac9ea3e9628d"
            }
          }
        ]
      },
      {
        "id": "de0b6936-d602-4b1d-b72a-a15af572e8b6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e8553e24-1372-4467-8f47-c59f678c03cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a86dcd8-5e4f-4bc7-b71a-158043525d70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bdf6b2c0-7de2-458c-a0ff-cdd596219e8b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e862d3-111c-41f7-a071-2491d63cad91",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62ea175c-ac1b-4142-82b4-f0686e9bcaf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5471b074-e02f-470c-b15c-25cf09149d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9bd68b3-6ae2-4e17-a819-eb26f3554e87"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c67ef38-0b27-4006-a777-fe0ed0fbbe7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aabfb5c1-4cd6-490a-a434-65a683a564fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d73abc3c-31a2-4908-a145-c485d1bdcf47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de6c16a2-f7dc-4392-b211-fc0175fe8055"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee40e671-4a8b-47e9-8c42-c01e550e3f02",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3f39bfee-8c1b-467c-845f-fcaaa31c761a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f80b0ca1-463e-4674-b3c4-2ca92c767fa9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ba436cc-7e56-42d3-b048-c5d25bb35783"
            }
          }
        ]
      },
      {
        "id": "57e25484-6e3f-403a-a04d-23f54e99474c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fe6c326f-c6cd-4426-bf0f-fdac12d13043",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1815cc65-22c3-406d-84b8-c873fb445828",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f947067b-b08a-4834-b39c-781e7f03c94f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9887754a-1bfc-43ef-a270-b7abaaf6ba72",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28574f58-1fe7-4787-be73-1397e6838739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5e4faf-6942-4f14-9187-2593153c8334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0612f8ae-c26c-433f-8ea0-81ef301d02fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "059e1151-8b69-4de8-bb63-da425898c714",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53e60df2-cdb6-4f4a-954d-fb5ecbee2a48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68c3f63c-9d70-40da-95d7-c2d423892713",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61408392-7e24-42da-91d1-7e7139d8922a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "147506c2-d962-4960-8627-cafa6afdd0e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "af93439b-67ab-41a8-854c-f1776274ff36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60007ec2-4d56-41d8-b5cc-3b627853a590",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5cb2f1f-c8c4-4ff6-bf3d-2f0563db5422"
            }
          }
        ]
      },
      {
        "id": "5f434b3c-d0f2-4b68-87d3-c0bebb4ba56b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "578716e2-67cc-46e9-8c2d-29168bdca789",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9472ecb7-5f94-47cd-821b-2256fd62f390",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a9d75f0d-1f19-4ecd-8bf9-813107f1f8dd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57771b78-19e6-4861-bdbe-ee48e6418214",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d02a7e5-a445-4520-8496-7aac9ab248a3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 119.42105263157897,
      "responseMin": 9,
      "responseMax": 8581,
      "responseSd": 593.7342824473582,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706402202425,
      "completed": 1706402245555
    },
    "executions": [
      {
        "id": "a12a3d10-8aa3-422e-8c61-bd93d8d505c4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7dbb97e6-0bb5-4111-bbf9-265d3375bd2b",
          "httpRequestId": "d1345a25-e10b-4a6c-a67a-62f87ce71195"
        },
        "item": {
          "id": "a12a3d10-8aa3-422e-8c61-bd93d8d505c4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c7160532-a98c-47d2-88ec-b98dc3b5c49a",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "88862599-0f55-49bb-ac1c-39b185ea156d",
        "cursor": {
          "ref": "160b0b50-06d1-4df5-8253-2636dd88ef4f",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2ac2e7c7-8503-4be3-b39b-c3761da5199d"
        },
        "item": {
          "id": "88862599-0f55-49bb-ac1c-39b185ea156d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "47ddecfe-0d82-43ea-87a6-b2d6ac2b6728",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "da8c3a55-c2cb-477c-a641-b0d7b78aabb5",
        "cursor": {
          "ref": "579e3464-e999-4858-bd86-607a72afd66b",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e02b00e9-c88a-4169-ace5-fb9900ff5799"
        },
        "item": {
          "id": "da8c3a55-c2cb-477c-a641-b0d7b78aabb5",
          "name": "did_json"
        },
        "response": {
          "id": "ec83cba1-5390-491e-ad76-77524755a42b",
          "status": "OK",
          "code": 200,
          "responseTime": 333,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c546169d-9caa-418c-9bce-c33c89e77861",
        "cursor": {
          "ref": "136bb4d1-1ff8-4b42-b085-50a47b9ba6fa",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1632d5d1-e53d-493c-a6da-c3013e6d433b"
        },
        "item": {
          "id": "c546169d-9caa-418c-9bce-c33c89e77861",
          "name": "did:invalid"
        },
        "response": {
          "id": "54f619b0-afd4-475f-889b-2d50fc7529ab",
          "status": "Not Found",
          "code": 404,
          "responseTime": 820,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c546169d-9caa-418c-9bce-c33c89e77861",
        "cursor": {
          "ref": "136bb4d1-1ff8-4b42-b085-50a47b9ba6fa",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1632d5d1-e53d-493c-a6da-c3013e6d433b"
        },
        "item": {
          "id": "c546169d-9caa-418c-9bce-c33c89e77861",
          "name": "did:invalid"
        },
        "response": {
          "id": "54f619b0-afd4-475f-889b-2d50fc7529ab",
          "status": "Not Found",
          "code": 404,
          "responseTime": 820,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfffde59-5c89-424b-ad83-976bdca8f566",
        "cursor": {
          "ref": "22385490-7bbf-4481-af91-a9e6de9d96e3",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "55db4451-aa20-4a67-9f24-f9336b24dd90"
        },
        "item": {
          "id": "dfffde59-5c89-424b-ad83-976bdca8f566",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cdca9689-ad37-4448-9506-71df3f39efee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9506b49-863e-463b-9fd7-44e9c203c1d7",
        "cursor": {
          "ref": "e8344215-98e0-4b71-b3fc-e3e351de8188",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "76f50842-a176-4c9b-9790-546036dd306a"
        },
        "item": {
          "id": "d9506b49-863e-463b-9fd7-44e9c203c1d7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9e5c7498-3655-44e5-a1f0-d67c206c4dd4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c4abe7-5f6b-4b33-a32a-60fb87717a1f",
        "cursor": {
          "ref": "70e868cf-c6cd-4861-9c59-6fe64d7579ae",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5b14ddd3-f8bd-41b4-9f64-bac962ceeb30"
        },
        "item": {
          "id": "35c4abe7-5f6b-4b33-a32a-60fb87717a1f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "703b6721-0e41-45ae-bf0e-0f130c9b63e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd5ad73-b3e5-46a9-958b-2341142ffe09",
        "cursor": {
          "ref": "a277a1bb-d837-48ea-b250-c4212152270a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6319a2d4-d857-4645-a25b-241abfac9e74"
        },
        "item": {
          "id": "7fd5ad73-b3e5-46a9-958b-2341142ffe09",
          "name": "identifiers"
        },
        "response": {
          "id": "e2eb5553-8fe4-468d-b5a2-ceef2be5117b",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97aeb626-43c1-4e7b-8045-9c656845e39a",
        "cursor": {
          "ref": "42f80576-51fd-4390-9a3f-d937c2b1f14a",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "432c06d0-8cbe-47cf-ba1e-be69e72bb22b"
        },
        "item": {
          "id": "97aeb626-43c1-4e7b-8045-9c656845e39a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "71c80868-fb62-4f74-a5d9-7a74ece03e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d1970c-b101-455e-ac7c-41d0912ff8d1",
        "cursor": {
          "ref": "2bb1f369-19bd-4d68-9e81-d50de4432604",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8d445835-84d1-46a1-9b76-25bc8cb7c44f"
        },
        "item": {
          "id": "77d1970c-b101-455e-ac7c-41d0912ff8d1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f1bd2172-8d86-42dd-932a-f255759b91d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed2d728-024c-413f-ba8f-cf3dcf513579",
        "cursor": {
          "ref": "e31c7adb-1da5-485d-873d-27de34cbed23",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ec364fea-a883-4974-a53c-06b7f079399c"
        },
        "item": {
          "id": "1ed2d728-024c-413f-ba8f-cf3dcf513579",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c6189dab-7c5d-44e7-adc6-ae1c683f5485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590d3eb1-8f7e-4524-b305-8f5981718f8b",
        "cursor": {
          "ref": "3dec0e0c-59c1-474b-8308-f40d46725ea5",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f60f023e-e82f-4b35-8c30-7c752a5a594f"
        },
        "item": {
          "id": "590d3eb1-8f7e-4524-b305-8f5981718f8b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "df18370f-07e6-47d0-b7ae-e60e6f5e7a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa32185-6047-41da-8df6-48a05a049927",
        "cursor": {
          "ref": "6fed85e2-28fa-4db6-9870-1f230ce6f99d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8ec32825-eec2-40c2-a197-51d08bd146f2"
        },
        "item": {
          "id": "6fa32185-6047-41da-8df6-48a05a049927",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ca2a756a-ba51-4c0b-8b7a-a4e45fa2cfa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5bc7d8-5070-4220-b3b1-b25854885f55",
        "cursor": {
          "ref": "2c88a95c-5b74-46b0-853d-98f2af5bd11d",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "342c67db-7c6b-4f6c-8c35-952dbec4f07d"
        },
        "item": {
          "id": "fe5bc7d8-5070-4220-b3b1-b25854885f55",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0fe32989-9f56-4dd9-8034-d076ed2f23ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a564d6a2-5c95-4e65-84d4-a09690450fb8",
        "cursor": {
          "ref": "ba6a29a3-a78f-4f0c-8570-4cc6a038293e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "df2dd557-a467-4e36-b3d8-23a5d4edce2e"
        },
        "item": {
          "id": "a564d6a2-5c95-4e65-84d4-a09690450fb8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "eac96ea6-548c-4e90-905d-cade58aab38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7b9b01-c31a-4428-a19b-3bf67abc3c14",
        "cursor": {
          "ref": "5c772f1f-faca-49a1-b1c9-5b67b710a0e6",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3ceaeccb-98b0-4b31-83a1-b2b0677d4566"
        },
        "item": {
          "id": "da7b9b01-c31a-4428-a19b-3bf67abc3c14",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b654f981-36a4-4472-a59b-affdcf901eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82165a17-66b4-4ee3-952f-5290f7fb357b",
        "cursor": {
          "ref": "21dd78ba-401d-4552-87a2-8b643ccd151e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e1cdc6ea-cffe-4056-bf8b-6fc073037caa"
        },
        "item": {
          "id": "82165a17-66b4-4ee3-952f-5290f7fb357b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a239c350-0f97-48bf-9de2-63c047144b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcc09ef-9aa2-4352-ad4f-3aa6da4d62bd",
        "cursor": {
          "ref": "619e635a-93aa-408d-a3c4-e38ebe988f23",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6ac5f9c8-69d9-4a20-bf35-ec5d8e219cc8"
        },
        "item": {
          "id": "0bcc09ef-9aa2-4352-ad4f-3aa6da4d62bd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a5ba3be7-3429-4281-80bd-e511e4b006e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcea3705-9bf9-401f-a845-5d496ca84ec0",
        "cursor": {
          "ref": "e8e0670d-2689-41fb-8c2b-be9790ef8439",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "16509f4d-3ca6-4404-bb52-10a8c3637434"
        },
        "item": {
          "id": "dcea3705-9bf9-401f-a845-5d496ca84ec0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d4d7a53c-3a65-4fb5-9bfb-a036dfd8f6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f96b1a-3c10-461a-b348-025e6ad6edd3",
        "cursor": {
          "ref": "c69f98a9-7c2f-4edd-8394-c9d614ae6c32",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "98ba87f7-62e6-47b2-a4a1-ecb0692244dc"
        },
        "item": {
          "id": "75f96b1a-3c10-461a-b348-025e6ad6edd3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7294177c-5ae5-4d1a-8c3b-18e8c9f1f6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dda59a8-b16c-4948-be5c-5a29859b9ba1",
        "cursor": {
          "ref": "34dbf641-7208-4374-92af-c6adb8d8739a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1f2be9fb-958d-43d5-bd37-b0100925e3fa"
        },
        "item": {
          "id": "5dda59a8-b16c-4948-be5c-5a29859b9ba1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a98d4c52-166a-4639-b173-cb8f0fb78d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40795961-a527-4010-8fd3-24453ecd1cb0",
        "cursor": {
          "ref": "1ade11dd-4314-469b-bac1-e0f178569aeb",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ca6344c8-9a4d-43f7-a2dd-5578f0e8cb2f"
        },
        "item": {
          "id": "40795961-a527-4010-8fd3-24453ecd1cb0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c62d9d51-394d-4c98-994c-3ac38e262ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958e25b9-43e1-49f6-8372-94d806af2be9",
        "cursor": {
          "ref": "81d1d71d-57e0-45f6-b1e4-94494a24310c",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3166342b-8853-4930-827e-7a37f6651651"
        },
        "item": {
          "id": "958e25b9-43e1-49f6-8372-94d806af2be9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e509cc42-c0ce-4dbc-8494-c0829fc4f82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fa125a-ebaf-4962-a10c-dd70ab2fbc66",
        "cursor": {
          "ref": "6413738b-6b28-4449-8ff5-65b0962bf999",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "36de36a6-95b1-40f0-b1af-209ef6ce479a"
        },
        "item": {
          "id": "f3fa125a-ebaf-4962-a10c-dd70ab2fbc66",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8623bcf8-3cf5-456d-a7a1-15990d62069e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8158f827-ad1c-4ac3-aa52-1c006928de6b",
        "cursor": {
          "ref": "44e9f657-7f08-4483-b04a-d1f12b5b6289",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "59ca0f2f-e728-42ae-b2d9-d1483711466e"
        },
        "item": {
          "id": "8158f827-ad1c-4ac3-aa52-1c006928de6b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e0c92b53-3c02-4edc-af6b-c3c464265ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de48a37-efeb-4621-b88f-0573b28063d7",
        "cursor": {
          "ref": "229ff2aa-194c-4ae9-9d46-b55ef53bc3a3",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9d374503-4b30-40ad-9508-64885f973c45"
        },
        "item": {
          "id": "4de48a37-efeb-4621-b88f-0573b28063d7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1e15aa60-2046-453e-915e-0e0affeb0f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e6e392-5d1e-46ee-85ac-2839bcdefe7d",
        "cursor": {
          "ref": "9f2ecb18-dac9-41aa-92c5-efe26281e0f3",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "aff9a6eb-9b3a-4a05-a41d-4ef3bca554d1"
        },
        "item": {
          "id": "51e6e392-5d1e-46ee-85ac-2839bcdefe7d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d7a7465e-ed2c-4728-aff3-8c49326c19e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fa4729-f934-40a8-b843-8d8c231f099c",
        "cursor": {
          "ref": "b2884dc5-ba44-422d-8b35-c8b825acac81",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "18a02c7b-b388-4364-adfa-a51f99af6dc4"
        },
        "item": {
          "id": "97fa4729-f934-40a8-b843-8d8c231f099c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7b968fb1-3a39-43aa-8a39-eb3cfe555ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b375a55d-303c-4559-8b53-9432cf7e5d12",
        "cursor": {
          "ref": "beda7269-3a32-4a99-93e8-68cc1a71c8ad",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f3618c11-068b-412f-ad91-21a831a621a3"
        },
        "item": {
          "id": "b375a55d-303c-4559-8b53-9432cf7e5d12",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f719abec-7297-4ad5-9796-5f62475be2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb2ca81-f931-4062-8ecb-d1f8e3613fd2",
        "cursor": {
          "ref": "80b3bc5e-0794-4a2c-977b-db12fc5be090",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fe90dd1e-70f2-45cc-9cc9-ca589e50da02"
        },
        "item": {
          "id": "afb2ca81-f931-4062-8ecb-d1f8e3613fd2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "50d5fa2b-9696-4e54-ab3a-27a09d487a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae5e4e3-b382-407d-bd9d-c63a81bbb56b",
        "cursor": {
          "ref": "9338a066-899a-4d73-916d-f6ba16f2ab0c",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "76038882-004a-41fb-8790-af3c34b9d80a"
        },
        "item": {
          "id": "9ae5e4e3-b382-407d-bd9d-c63a81bbb56b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e806e8d5-6073-4df1-846c-e2d886f86265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9612b53d-031c-451a-8998-da18a02456cc",
        "cursor": {
          "ref": "378174b2-cc4a-49bc-b634-24ee2e669f6c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "66135a51-aa6a-4969-870d-b02a2ecd92ef"
        },
        "item": {
          "id": "9612b53d-031c-451a-8998-da18a02456cc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e81c7b89-46dd-42bf-85fa-d854f1ca5df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f8b8ed-a60d-40e2-8204-1ed2e59e5dfe",
        "cursor": {
          "ref": "1207cfb1-d72e-4b56-8cf2-edbd69a73c5e",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "07956d86-03c1-4587-8369-b4e616d95f8f"
        },
        "item": {
          "id": "e5f8b8ed-a60d-40e2-8204-1ed2e59e5dfe",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "eceb39e6-63af-4559-a0c5-6dea9ae4e8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4541d61-61ca-46d9-b1fe-f13e83670aa3",
        "cursor": {
          "ref": "9e538a0b-a841-4bfd-ad7b-587b750b7f7f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "208d6773-b25b-4428-80e6-45a3311274b5"
        },
        "item": {
          "id": "b4541d61-61ca-46d9-b1fe-f13e83670aa3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b971dd4d-17e4-4172-a911-5ed18169cdf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6834f28-f627-4a69-917b-5ae6ab22e2d9",
        "cursor": {
          "ref": "8afe92ce-6607-4354-91e2-c3ed6fd91649",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a46b4f34-e595-43b9-be96-c02b1e7e06f5"
        },
        "item": {
          "id": "c6834f28-f627-4a69-917b-5ae6ab22e2d9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7bfc3660-c3c0-4776-978d-aa3a6c0c1669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819762b2-48a0-4438-bd8b-df80aeaab583",
        "cursor": {
          "ref": "61fde534-0d81-473f-85eb-77001a2f7413",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f8440d6b-ae13-4e54-8196-ac4507636134"
        },
        "item": {
          "id": "819762b2-48a0-4438-bd8b-df80aeaab583",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e06a240f-2516-4e91-8ed8-326b01ae597c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1c4597-fa71-40db-80ce-348f13cb8db2",
        "cursor": {
          "ref": "d1e067db-5f5d-4660-be06-a515d4ca0baa",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ed763caf-ba36-4006-a7e8-1f74c26d5dd4"
        },
        "item": {
          "id": "ea1c4597-fa71-40db-80ce-348f13cb8db2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "90fcd064-cff0-4032-b8f3-ccb5ec00a66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b53157-f74a-40bc-82ef-c71b2e962810",
        "cursor": {
          "ref": "0436d2e8-adbb-4ce2-9cdc-21f5fbe5c6b2",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1c683cb4-78b7-491e-8e28-b9b9b3219286"
        },
        "item": {
          "id": "62b53157-f74a-40bc-82ef-c71b2e962810",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "01f7eb05-c75c-406d-b2c2-aa3a53120186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8721bd98-e087-4443-bd95-cd55ce547e54",
        "cursor": {
          "ref": "3a20aa39-f9f3-4f25-9fbc-81e8bc1e6ea4",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "270a73bc-aac0-4379-a5d2-1c2b4c3a9967"
        },
        "item": {
          "id": "8721bd98-e087-4443-bd95-cd55ce547e54",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "df403109-8b82-4735-b2f9-bac97ecc5c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a4aead-960a-4b4d-89b6-47d81841bcb7",
        "cursor": {
          "ref": "fe020128-98da-4996-a0d2-9a30fb74dc1c",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e061adea-e9d9-489f-80e5-8bb2b73de439"
        },
        "item": {
          "id": "81a4aead-960a-4b4d-89b6-47d81841bcb7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "435d383f-931f-43f0-bf2e-fa9c98863799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2e7a89-11a9-4465-aa91-32797ae2f484",
        "cursor": {
          "ref": "00520df0-1835-408d-8c33-8a9b1fa8b03a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "31725a79-e381-43dd-bf4d-4f3148ee4f0b"
        },
        "item": {
          "id": "4c2e7a89-11a9-4465-aa91-32797ae2f484",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4ba0ec7d-6a15-4946-9c6f-544970e8c9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c4e46c-ad5f-44b1-a99b-4a2274015728",
        "cursor": {
          "ref": "ef1730aa-81b9-4461-ab96-8a994d342093",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "09882d8a-6b19-46cd-b316-7f86f3e334a9"
        },
        "item": {
          "id": "45c4e46c-ad5f-44b1-a99b-4a2274015728",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c94d5e5e-8f9b-49af-813c-2160da673405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8053d62-a1c1-4e75-baf7-e82f7c1ee245",
        "cursor": {
          "ref": "195fb05f-cba9-44d8-95b7-b2bcf506322c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d63216fb-d6c1-405c-bb69-c29d3fba7a31"
        },
        "item": {
          "id": "a8053d62-a1c1-4e75-baf7-e82f7c1ee245",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "edc78b21-8d8e-466f-a60d-b1409a938c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767a0187-a320-4e9f-9d3b-1476e1300922",
        "cursor": {
          "ref": "1207a315-6155-40b9-acf6-69d59cda46d2",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "85a369ae-543a-4527-ba39-f481376cc78c"
        },
        "item": {
          "id": "767a0187-a320-4e9f-9d3b-1476e1300922",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f7a70a32-48e5-4170-a1b6-7fbde976e842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a6bfc0-6d80-4a40-818c-0eab706f73d8",
        "cursor": {
          "ref": "6ce60e1c-92b5-4fad-a924-1a596db73f83",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8530ba6e-a4fd-44ce-9e7e-25f20d935f84"
        },
        "item": {
          "id": "a3a6bfc0-6d80-4a40-818c-0eab706f73d8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b89c7c1f-d61a-4d18-a20b-a1b2a0c9529b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41fa562-0775-412e-a81f-42ef9cb24c20",
        "cursor": {
          "ref": "7adca7aa-cc69-41dd-ac3c-44019eebe4c1",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "34dbbb63-4326-47a0-ad35-c80e78d60eba"
        },
        "item": {
          "id": "e41fa562-0775-412e-a81f-42ef9cb24c20",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "41e51845-10e8-45a9-bcf3-64b4fc69b874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82450406-33e2-4271-9eed-47021da31da3",
        "cursor": {
          "ref": "cd88566f-d6c0-448a-b5ca-266f6f9ec07b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b317fe84-a33b-4b97-867c-c9d7351c8dda"
        },
        "item": {
          "id": "82450406-33e2-4271-9eed-47021da31da3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ed4ca602-228b-4ebc-83ff-936607ca0818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77e2fdb-d104-48a6-a9a7-d5d985f412d9",
        "cursor": {
          "ref": "ac0b8b23-a9ea-46de-b020-8178b8d1f371",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bb4b14d5-552d-428d-bd2a-98f0fd4501c3"
        },
        "item": {
          "id": "f77e2fdb-d104-48a6-a9a7-d5d985f412d9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "dc2d5af1-5155-481c-8601-1fd0d877d3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66fa93b-aab6-4ea9-8f25-39477f3555e6",
        "cursor": {
          "ref": "622f7fc9-9314-4b1d-b3dc-9ae4a229ea85",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d8c6719c-6104-47e0-bc8d-27e8313a13f6"
        },
        "item": {
          "id": "e66fa93b-aab6-4ea9-8f25-39477f3555e6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "28fe5bd8-a359-4382-af86-9ac6af212bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e34640b-8169-475b-8dca-cac0fe6ef853",
        "cursor": {
          "ref": "7b6f1399-11ec-47fc-9a34-3eb5457d8f5a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "095aedde-0aa4-40e3-958d-116b556af378"
        },
        "item": {
          "id": "6e34640b-8169-475b-8dca-cac0fe6ef853",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cd5727d0-eecf-4158-b1ca-b71a26c9695a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 889,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2595a5e2-22a1-4c8f-a732-4b3a6a10188c",
        "cursor": {
          "ref": "82a6a8cc-bde9-4660-b695-61f558b5bc55",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b59e8bf3-416e-42e8-bd03-2e28210a695d"
        },
        "item": {
          "id": "2595a5e2-22a1-4c8f-a732-4b3a6a10188c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "dd923825-5cfd-47f4-88c3-002e47cc255b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fc36d0-683f-4a04-be59-0e620c9809f4",
        "cursor": {
          "ref": "e29ffbc3-4bc5-4b61-b2a8-98ff01c91f79",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cf5f632a-d0c8-4323-80ee-e62dd7a9df67"
        },
        "item": {
          "id": "e0fc36d0-683f-4a04-be59-0e620c9809f4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1193946d-65bb-4577-a6d8-d0544847e9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d03ede1-9209-472b-b601-8710755d422a",
        "cursor": {
          "ref": "b7e9b89a-42c5-45d2-8d93-4d88553a8e96",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "04d3f6fd-6ec1-491d-959d-399c513f8bcc"
        },
        "item": {
          "id": "7d03ede1-9209-472b-b601-8710755d422a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ed42d373-44ee-49ec-a1e8-35903e21c256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbd7275-0a5e-412f-bf21-fdf3f76b6a2d",
        "cursor": {
          "ref": "3e9626fd-128f-4829-bcbe-86cd38511723",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b2c7e81e-b758-4de6-86f7-d8b2a6b86327"
        },
        "item": {
          "id": "cbbd7275-0a5e-412f-bf21-fdf3f76b6a2d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b013e704-0a66-49c2-b854-1fa26fdd24a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6b9ee0-1abd-45f1-8b92-9ee81797b0b4",
        "cursor": {
          "ref": "616b41a4-f73a-4e64-9a37-7458540f2567",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b61546ba-7335-4922-aec9-3440585607fc"
        },
        "item": {
          "id": "6d6b9ee0-1abd-45f1-8b92-9ee81797b0b4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "60aacbcf-bd50-4027-937f-11647c72c82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788fbb2d-aa74-4d8f-b9fb-f09875b488fa",
        "cursor": {
          "ref": "8d97c9e3-1f1f-442d-a61b-eb2130e31225",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "19918ea0-cd04-4bd7-97e1-46e0560cf916"
        },
        "item": {
          "id": "788fbb2d-aa74-4d8f-b9fb-f09875b488fa",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "414eb27b-2a55-45a2-9d07-07e7059078b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8579011-b548-4fe7-891a-5db2f6854911",
        "cursor": {
          "ref": "94b081f0-63d8-4ea1-b73d-e894df4afedd",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "70c85bfc-ec4b-4262-be34-ba1d836de1c9"
        },
        "item": {
          "id": "f8579011-b548-4fe7-891a-5db2f6854911",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f9f42ee8-6040-4691-bb01-0725d155c65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b955b6de-b2c7-442d-9bff-600b4a2caeaf",
        "cursor": {
          "ref": "ed85ef89-8df5-42a4-a4b6-f373be04df23",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2fd97da2-9ef1-442d-8d88-6727dfa74838"
        },
        "item": {
          "id": "b955b6de-b2c7-442d-9bff-600b4a2caeaf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "92abd241-564a-42da-816d-9f6c72e0ecc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753de805-3cf7-48cb-8742-d29fb38e8ec4",
        "cursor": {
          "ref": "eb633985-67d7-48c7-9494-5dd85efc707b",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a2d6b7ff-bef0-434b-b479-1af0f3781fb9"
        },
        "item": {
          "id": "753de805-3cf7-48cb-8742-d29fb38e8ec4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fae2d1ec-3770-4a94-abd2-d703c8b2db11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfcc5ba-bb17-44c6-a6f8-9e02030fb962",
        "cursor": {
          "ref": "0fbb63b4-aca8-47f0-a932-4bffd71f8c38",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f895f26b-c69a-467f-86d1-65fa111a9fb9"
        },
        "item": {
          "id": "fcfcc5ba-bb17-44c6-a6f8-9e02030fb962",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "aa70f551-5302-4bec-b898-2cc828211dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ead6eb-02c7-457d-9eb1-e3fd332328ff",
        "cursor": {
          "ref": "6eff5d28-1de4-4b07-96fd-ddfd77e2a45c",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3275ebf8-bb10-4d2d-b72a-9699db338c84"
        },
        "item": {
          "id": "b7ead6eb-02c7-457d-9eb1-e3fd332328ff",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "52990ace-62ee-42b0-b48a-60ef868b86ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cbb53f-d9e8-4d92-a266-9847be27cf17",
        "cursor": {
          "ref": "434d93ee-ccf8-4f70-bb40-84332a05ef7f",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "dbe5e96e-119b-469b-91f5-a8ab0f3f456a"
        },
        "item": {
          "id": "06cbb53f-d9e8-4d92-a266-9847be27cf17",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "31a522b7-f5cd-418f-9bd5-27a6c2692f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec191faf-66a4-4d43-8d7a-c2d69b699746",
        "cursor": {
          "ref": "cb438097-99a3-4899-b836-4b97611bfc16",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2d20411d-a832-42f6-84d0-7f432c264e8a"
        },
        "item": {
          "id": "ec191faf-66a4-4d43-8d7a-c2d69b699746",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "85ba4e3c-8597-4d66-885e-9540da889cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823dc4de-d4e2-4681-b05c-32c9f42fb346",
        "cursor": {
          "ref": "3e3d9b2a-758c-40df-9e03-26f185f10881",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "493d35ec-c171-4345-9530-5b65400ed35e"
        },
        "item": {
          "id": "823dc4de-d4e2-4681-b05c-32c9f42fb346",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8709a88d-f1e1-465f-8b64-edde7fd24304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855cfae3-1c65-4bc6-bd3a-e9c983c81ddb",
        "cursor": {
          "ref": "2285a1df-e83e-4524-bdbf-1c022080dca9",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "39e64e6b-a474-4b9c-bb57-b7f880c41e39"
        },
        "item": {
          "id": "855cfae3-1c65-4bc6-bd3a-e9c983c81ddb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1739b4cf-8fe7-4767-808c-9d9a83450065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df54793-a80a-4326-b55d-e1ea2a404ea0",
        "cursor": {
          "ref": "24603592-d64f-4aab-bc76-058c211187e6",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6e70f1b7-8c2a-4ea4-83ff-514b191fa223"
        },
        "item": {
          "id": "4df54793-a80a-4326-b55d-e1ea2a404ea0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e19087b5-ffec-4305-b720-1d94bb8ba325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7568d227-02e2-4b38-bf78-fad800507ca2",
        "cursor": {
          "ref": "56fbfda7-123e-4f3d-8951-775f1ec433c0",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b2d86d94-c67d-428d-921d-00579999a2e2"
        },
        "item": {
          "id": "7568d227-02e2-4b38-bf78-fad800507ca2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ca68c83a-2a48-458d-a04c-79970958f086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ccbe70-079a-4852-b313-a4a3fd8ad82b",
        "cursor": {
          "ref": "0b76aa5f-2064-437e-b473-473e240a9a16",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "451d0557-0ed1-4b6e-97c0-51fc9c3d526f"
        },
        "item": {
          "id": "20ccbe70-079a-4852-b313-a4a3fd8ad82b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "30c51d3e-2a28-4166-9344-10b82940161f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2d00c0-e854-4f64-b35d-7aae5e437e2a",
        "cursor": {
          "ref": "166b20d5-858b-41cc-89db-16fa4191f30b",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "12261d49-b1e3-4cfe-a913-83533dd1493a"
        },
        "item": {
          "id": "2f2d00c0-e854-4f64-b35d-7aae5e437e2a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ed6faf2d-861b-46bd-bf19-5f09b2afa8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54e7cbd-8b71-4f5e-9215-68fc4a7177df",
        "cursor": {
          "ref": "e86475ae-ffe3-4a4d-a13c-d66b50676df4",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "83813929-40bf-485c-8daf-cc6140f295a6"
        },
        "item": {
          "id": "c54e7cbd-8b71-4f5e-9215-68fc4a7177df",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "51c13131-3374-46b5-8a19-2792f208d6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f90dd79-c2a1-4331-87be-8c18222de966",
        "cursor": {
          "ref": "748c6eb2-c6d0-4e8a-a893-3a9c15f0f8c5",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "859f0bf2-3341-4421-9652-88f35ba0c679"
        },
        "item": {
          "id": "8f90dd79-c2a1-4331-87be-8c18222de966",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f496a555-ca64-4aa7-acd3-d01f081c4fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198ce65f-5e9d-4294-8ce5-d839f90676cb",
        "cursor": {
          "ref": "7d5d1872-9fe2-40d9-802e-b47df730aa21",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e36adc08-4d81-44b4-bb3e-8401d9effa38"
        },
        "item": {
          "id": "198ce65f-5e9d-4294-8ce5-d839f90676cb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "951a66e2-afb9-47f9-94ef-bb37d7549bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730ad649-4fc2-416b-8dfd-27c93247f493",
        "cursor": {
          "ref": "5e1edbf8-dec3-4a6c-ac3c-2378a99c1411",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "79e24272-f502-405f-9549-55fce36f2f22"
        },
        "item": {
          "id": "730ad649-4fc2-416b-8dfd-27c93247f493",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "dcbd61e9-53fd-4003-879c-6bfc364301e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d0eef0-d712-4369-9d44-d4f0d77ded4c",
        "cursor": {
          "ref": "6b4296ba-c06c-4da5-af02-08ff50b526d1",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "acc60663-2846-45ab-90f3-c7f1eebb74b8"
        },
        "item": {
          "id": "f0d0eef0-d712-4369-9d44-d4f0d77ded4c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1084974c-8659-461b-bdb5-3e6479ff4ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcbcea3-5fda-424a-8f81-5ff21d8a7cf0",
        "cursor": {
          "ref": "cfa81b77-f8d8-46a0-9808-0bae9f589ee7",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2881cef5-8660-4814-96ca-d1cde599fa7c"
        },
        "item": {
          "id": "2bcbcea3-5fda-424a-8f81-5ff21d8a7cf0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "580bba86-7a76-4789-ac2e-3769313f443b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514fc08f-a4af-4107-b53e-8bae41af266d",
        "cursor": {
          "ref": "82ffe2af-5f5b-4169-ba82-1352ee501140",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "822340db-2d5b-4354-bde9-3d1451995c2d"
        },
        "item": {
          "id": "514fc08f-a4af-4107-b53e-8bae41af266d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2e1642ba-ab4e-40d5-b90a-9a8ec3a4957f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52c256b-f223-4a75-9c80-a97bf1dacddb",
        "cursor": {
          "ref": "9989e4a8-b93e-4bb8-81c0-3572ed89de28",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b44616b0-3383-4382-b8f7-533ace06dc52"
        },
        "item": {
          "id": "b52c256b-f223-4a75-9c80-a97bf1dacddb",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5b3602e8-17db-488e-aee1-a7f57143a493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9088afe5-25a4-4d86-9d64-d5cf619fd910",
        "cursor": {
          "ref": "03139fde-e561-497b-a63e-85d74a751aba",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ea93135a-bbdc-412c-b322-149973b78c35"
        },
        "item": {
          "id": "9088afe5-25a4-4d86-9d64-d5cf619fd910",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3d51f20e-9129-4144-ad25-1a43ee1e4b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd78130-01f8-4962-b5ea-70a1010fd009",
        "cursor": {
          "ref": "6a71ca60-6c03-4151-8b83-14b857b41f90",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a0a4fd23-2bfd-444f-9d65-baaf50d97b3e"
        },
        "item": {
          "id": "ffd78130-01f8-4962-b5ea-70a1010fd009",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fec62340-d148-4dd7-835a-880c7df3e105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599b8004-9349-455f-b1c6-58153a706a1c",
        "cursor": {
          "ref": "75ddb2b7-5fa5-4803-acb3-b77a1a22a65d",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ec47673a-2e23-4471-8ff2-77af72ce2f3f"
        },
        "item": {
          "id": "599b8004-9349-455f-b1c6-58153a706a1c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3148cacc-7645-4a02-8a8e-0cb5892cea85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e65b1b8-2363-49c9-ad36-43741dfca9fc",
        "cursor": {
          "ref": "33072dc0-2a34-4cf6-a597-d299568b551b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "19861e20-372e-4163-9fc3-7e759318f206"
        },
        "item": {
          "id": "0e65b1b8-2363-49c9-ad36-43741dfca9fc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2fde0743-160f-4415-a86f-d39dad4c8b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30eb6e68-bba4-440c-a1e1-95b909ce2852",
        "cursor": {
          "ref": "0a4a4fa7-0a96-4c6a-b210-6dc87a0ba076",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6538725e-c933-4cbe-bc18-36f3053735c7"
        },
        "item": {
          "id": "30eb6e68-bba4-440c-a1e1-95b909ce2852",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "327e5361-3e25-4e83-9959-d6919ef0c9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33796fa7-bb94-495e-8aa4-1c9fa997d209",
        "cursor": {
          "ref": "a0268afc-60e7-422e-9a5c-bbf038ee8c40",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0ce2e78c-492a-4b02-ba09-45842cd6c048"
        },
        "item": {
          "id": "33796fa7-bb94-495e-8aa4-1c9fa997d209",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4a5cd4b0-3e1d-46d1-87d2-79048d4478fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b64276-785c-4c35-b2ed-6e8bae28a81a",
        "cursor": {
          "ref": "91aff5f0-1f37-4c1d-aebc-95bb75040349",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "efacd307-c6c8-44c3-8fc2-af6e7c305662"
        },
        "item": {
          "id": "43b64276-785c-4c35-b2ed-6e8bae28a81a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b8218068-9750-462b-a734-f40ca39373b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc49df28-b0e4-4797-af92-0d95c69403a1",
        "cursor": {
          "ref": "740fedb9-49e0-41e9-af22-a6a8ccfec59e",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "733be428-a4d4-488d-884e-8d1ee7f705f4"
        },
        "item": {
          "id": "bc49df28-b0e4-4797-af92-0d95c69403a1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f35df4fd-a4b7-4979-8a44-3cd9955a3ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54931a0b-06ff-479c-ac73-af3427913211",
        "cursor": {
          "ref": "d7e7037f-d833-4796-a779-14b184e0d438",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3db7238b-cde2-4418-b9ac-ad42c00c98c2"
        },
        "item": {
          "id": "54931a0b-06ff-479c-ac73-af3427913211",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "af18b8db-9b80-4c11-8356-d830db2d4ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b742df-63df-4249-ba2b-ad3a5e854705",
        "cursor": {
          "ref": "0a19ccb1-479b-41dc-891c-476120f889ca",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ab050f96-6b62-4d7c-aa02-df347011e66c"
        },
        "item": {
          "id": "a5b742df-63df-4249-ba2b-ad3a5e854705",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "14a885ee-2b1c-43f7-ae32-907ee0d37acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70331c5-722c-4446-ba0e-884e962ea234",
        "cursor": {
          "ref": "90c475a2-0f8d-4651-88b6-32988ed1fc7f",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6cd8e7d7-5d86-42cd-be57-580610f8919b"
        },
        "item": {
          "id": "f70331c5-722c-4446-ba0e-884e962ea234",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e62bfa8f-eaf8-45cc-8bd7-230423102875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62acd3c7-3f90-44d9-a154-815e73bb71c9",
        "cursor": {
          "ref": "07ee6522-0e0d-4fd8-9ab9-2a871c2f6e2c",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f3a1ac83-5806-4abd-9a10-1fc41f310387"
        },
        "item": {
          "id": "62acd3c7-3f90-44d9-a154-815e73bb71c9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "19bcf70c-5ab2-4367-b2fe-08807e34242a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6e859b-0cd1-4c9c-b327-466ddee85758",
        "cursor": {
          "ref": "5a72f500-0ec1-4903-99fe-6cf62bd1af12",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a88b95fe-b2be-49d1-9f29-b89a69256643"
        },
        "item": {
          "id": "0d6e859b-0cd1-4c9c-b327-466ddee85758",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "055b5e42-99a4-4c15-a42e-71e8b85b506c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f785abf-e5e8-472e-98e5-960270d6bb08",
        "cursor": {
          "ref": "2c95754b-70a1-4214-927a-bddbeb27f8a9",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "acef3306-6238-4f88-88b2-8bfecc503133"
        },
        "item": {
          "id": "2f785abf-e5e8-472e-98e5-960270d6bb08",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "495120d4-3301-43c2-a71b-db235ea208b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a4a670-3862-46f6-8e2f-913493cdd709",
        "cursor": {
          "ref": "d4a931eb-d0a8-473e-b5d3-d98c7c963648",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fa91dbc0-0640-49d0-9357-24a2241d27c0"
        },
        "item": {
          "id": "b5a4a670-3862-46f6-8e2f-913493cdd709",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4ef8ef3e-be9c-4262-94fc-2545e90282bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa61fd79-ac97-497e-9e96-9fa39ae2fd0a",
        "cursor": {
          "ref": "0b5e6af9-44a6-463f-9968-70c2cc7e2682",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e90f9ca6-0cf2-44e2-be1e-3f505696d38f"
        },
        "item": {
          "id": "aa61fd79-ac97-497e-9e96-9fa39ae2fd0a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "48cab1cc-4e01-41e2-a5c2-dc72543b0b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef4ba59-2c45-49d4-bb4a-4eb11da4f817",
        "cursor": {
          "ref": "c6754d07-cfa5-48c7-b2b0-16d8593c9c57",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a7f40b72-936e-4ca3-a46f-27e5e93398e2"
        },
        "item": {
          "id": "7ef4ba59-2c45-49d4-bb4a-4eb11da4f817",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "48996265-799e-4a35-bec8-773794b5d789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4994ab3e-6301-4e6a-8cb7-d973464160f0",
        "cursor": {
          "ref": "f59982d2-78a5-413e-a6d6-8a692d34e7c0",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "84bd146a-2fbb-417a-aa07-94ea0a31a58e"
        },
        "item": {
          "id": "4994ab3e-6301-4e6a-8cb7-d973464160f0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2e1bb888-a5a3-414a-a053-d30018e5ec05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac2ab31-8c0d-46e4-92c4-2443ac8b2da5",
        "cursor": {
          "ref": "5ba961ae-f45d-465f-b2bf-ef1b0db416be",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a9f51ae2-434b-493b-a980-5c61e484881a"
        },
        "item": {
          "id": "fac2ab31-8c0d-46e4-92c4-2443ac8b2da5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6fc146b7-65ae-46f1-8a84-f64c296a77a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a5e287-53a8-460f-81a4-ba79ee69cfdb",
        "cursor": {
          "ref": "d627f62e-c2a0-4103-ab38-75ee52db88dc",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "aa6abbfd-b23c-42d7-88a4-0666226b1adb"
        },
        "item": {
          "id": "68a5e287-53a8-460f-81a4-ba79ee69cfdb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "75e6affd-0c94-4a87-bcd7-fcd3c7fbb272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3287094f-9a3a-4d8c-a7d8-e3256a8743e8",
        "cursor": {
          "ref": "d3be2a4f-121c-41e0-b779-a33b930efb13",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "63c17087-666f-411c-84e5-8100fcd15b86"
        },
        "item": {
          "id": "3287094f-9a3a-4d8c-a7d8-e3256a8743e8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "77c693cc-e265-4533-a7ec-625745f1df83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4119b59-bca7-4ce1-84e2-f094ea54c390",
        "cursor": {
          "ref": "e974c775-1cea-4c87-8ac7-9539c74f36ae",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ca1fca25-8b14-42ec-961c-fbe66958bff3"
        },
        "item": {
          "id": "a4119b59-bca7-4ce1-84e2-f094ea54c390",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e88605f0-2489-4304-868b-4c403f6561e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ace8f2-6017-4c23-86f0-36cbb8515938",
        "cursor": {
          "ref": "9f25854b-6dd8-40f8-833a-b6a0953319e9",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ab66ab9f-1deb-411c-82bb-cd431da2118b"
        },
        "item": {
          "id": "05ace8f2-6017-4c23-86f0-36cbb8515938",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1bfe040b-b5f3-4016-8106-5194c4544e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a38d0ed-8239-4873-8798-71d902f69c7b",
        "cursor": {
          "ref": "15f79fde-8bcb-44b5-ab68-1c86f31f2eac",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1ffdc724-13ef-462c-9780-fc8c9bea3e14"
        },
        "item": {
          "id": "5a38d0ed-8239-4873-8798-71d902f69c7b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "84bfc0c1-eab6-439c-8827-fdad093bc793",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d2a9b0-de9a-4e4c-9329-ca11fe696a9a",
        "cursor": {
          "ref": "b26270a1-86b8-404d-b882-56177ed24c03",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a35d15e7-253a-465f-8b7d-34647e153688"
        },
        "item": {
          "id": "07d2a9b0-de9a-4e4c-9329-ca11fe696a9a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "08e2f692-d2d0-465b-b377-9a53ee4d2da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "42386da9-e012-4abb-97eb-be3495979de6",
        "cursor": {
          "ref": "e126d4d6-58a0-46eb-92f9-d4ac81c9ed68",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d51a7c5a-23a2-45d7-bc20-a46a9baeba7e"
        },
        "item": {
          "id": "42386da9-e012-4abb-97eb-be3495979de6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "daca26d6-8247-4d7c-92c9-09b9d3a29e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "21bdbeef-ac93-4aea-9aa3-4ab4ac5d08ec",
        "cursor": {
          "ref": "be41ea60-caff-44eb-9cdc-92fa84d2edad",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "41849256-163e-45cd-bdb1-32803cae8c3b"
        },
        "item": {
          "id": "21bdbeef-ac93-4aea-9aa3-4ab4ac5d08ec",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8c516edb-31e9-4551-8090-6696444be9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4ff7d0fa-d23c-49d3-a077-6dc5c99a4368",
        "cursor": {
          "ref": "09c7ca67-7d3c-4eb4-a5f5-cbbf498c9553",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "521ddb94-994c-4db3-89ed-355b451c41e0"
        },
        "item": {
          "id": "4ff7d0fa-d23c-49d3-a077-6dc5c99a4368",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7a39fec8-b023-4d75-a3d0-68410d6a3f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c5d09c53-1e7a-4497-839c-863501f2628b",
        "cursor": {
          "ref": "1d825155-c5a6-4a6e-99b6-8ebec89b09c6",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ab3b43fe-6995-443b-8396-93553c4e9bc3"
        },
        "item": {
          "id": "c5d09c53-1e7a-4497-839c-863501f2628b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "54fa1240-78f5-4637-8cc7-53e142cb782b",
          "status": "Created",
          "code": 201,
          "responseTime": 8581,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "413793f6-49ba-4cb9-bf81-eb8f6a0e5af6",
        "cursor": {
          "ref": "3ce40f32-bd40-4afa-b012-01d7c47a2428",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bb1864be-11b1-4980-80cb-76c9dc7ac9d2"
        },
        "item": {
          "id": "413793f6-49ba-4cb9-bf81-eb8f6a0e5af6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "21f98d45-0364-4b75-8693-a976f48c7d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b64cb348-131b-4516-9f87-c840a90ccd3c",
        "cursor": {
          "ref": "1808f146-7a0d-40d9-9adc-18318311083e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0c1619d3-e8cb-4350-89f5-958b17fc9652"
        },
        "item": {
          "id": "b64cb348-131b-4516-9f87-c840a90ccd3c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a8a99d3f-e13a-4611-a639-086afb4b00b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f79ce1ad-b66f-437e-8db0-289f048d2279",
        "cursor": {
          "ref": "444eb9bc-087c-4adb-81cd-8c1bf03fedf9",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "64f449c4-af22-4868-8265-f69a99c3b9d6"
        },
        "item": {
          "id": "f79ce1ad-b66f-437e-8db0-289f048d2279",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "08ca7fb2-40f2-4286-8727-28e2b5905157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ae2a52-3b9c-407f-9333-9c3a054c56aa",
        "cursor": {
          "ref": "528ccd37-c1a9-4a07-9e0b-9bb748959f8a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2d9c02e3-83b1-4c75-a872-4d82df33d2ec"
        },
        "item": {
          "id": "51ae2a52-3b9c-407f-9333-9c3a054c56aa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "37594b3d-3635-4260-97d2-643e93a9c2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07ca35f-b008-4b95-b90f-cee50795cd26",
        "cursor": {
          "ref": "63bd7eb7-91ec-4495-bbbc-47d59159a069",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a2eec26a-da0e-4f41-b68e-54703b972958"
        },
        "item": {
          "id": "f07ca35f-b008-4b95-b90f-cee50795cd26",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "374e953c-3a3f-4cd6-9e77-ec643241a691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cfb8e8-e188-4dec-9f43-945558e5d7df",
        "cursor": {
          "ref": "d7c090e3-33cc-42b1-b29d-4c6952be94e3",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ac7b09c8-6290-44ff-add0-f645b64cd96c"
        },
        "item": {
          "id": "35cfb8e8-e188-4dec-9f43-945558e5d7df",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3e0b8739-06c0-4ff1-8a08-ab9c62ff3220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a03061-e80d-431b-99a2-866e5918dc3f",
        "cursor": {
          "ref": "6b828855-f622-473d-9d9d-3334d965961a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8effcf77-b82d-4a55-8768-dfc2745da083"
        },
        "item": {
          "id": "38a03061-e80d-431b-99a2-866e5918dc3f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "56bc96ed-f428-4fad-a239-6120d308d17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b37435-73d1-4bf5-a916-6fbbfd513816",
        "cursor": {
          "ref": "570bf2ce-12de-453f-a50d-c9ee5d23ec24",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a0e6c424-ebc2-4d96-84e9-f40049d893e8"
        },
        "item": {
          "id": "84b37435-73d1-4bf5-a916-6fbbfd513816",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3e5170ce-43e5-4ede-aeb2-f80e87db33d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4953310c-65e8-4ef4-beb1-c4a302b3586b",
        "cursor": {
          "ref": "74288db8-369b-4b6a-881f-aeebcb151427",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1c79b89f-447b-4935-8fbb-a4b275f09949"
        },
        "item": {
          "id": "4953310c-65e8-4ef4-beb1-c4a302b3586b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b0de839f-dd7b-4e43-8d3c-b908f192457e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a9edd6-01ee-4dfe-a9e3-455a926c7262",
        "cursor": {
          "ref": "7cb6877f-c78d-4624-90a1-3c91b82867cb",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a6f66acc-0b41-4b92-b122-59cdfa4dff52"
        },
        "item": {
          "id": "64a9edd6-01ee-4dfe-a9e3-455a926c7262",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b4f89a6b-012a-4108-b9c7-6247d3b0979a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18531dd0-7c1e-4884-9dff-89190bb5e5ba",
        "cursor": {
          "ref": "7bf7dd2f-c2b1-4378-8025-d59e4fe75cdb",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c1d5a933-73b8-4e16-9801-982d6b2e47ba"
        },
        "item": {
          "id": "18531dd0-7c1e-4884-9dff-89190bb5e5ba",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "88af8dc4-6e3d-4d39-a95c-455485c97a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074a56bb-8a67-44aa-9afd-16bf1c12639c",
        "cursor": {
          "ref": "0f490a70-0d0a-4c1c-a05b-5bd467b527bf",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e07f4c24-a2f0-4a30-a826-0bd4168da78a"
        },
        "item": {
          "id": "074a56bb-8a67-44aa-9afd-16bf1c12639c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0b738726-53f1-4738-b36c-445c1e59e0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d9a714-3f0e-4779-a35c-f1ea852d5eff",
        "cursor": {
          "ref": "ce483b3a-99f5-477e-a148-88d13d69b808",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7b069869-33a8-4d6c-b68f-ea31821d0a75"
        },
        "item": {
          "id": "d3d9a714-3f0e-4779-a35c-f1ea852d5eff",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "68bcec0d-25fe-4784-868b-b7a869f62e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65e4a94-174c-45fe-9683-285ec3579dd7",
        "cursor": {
          "ref": "dc086811-e82d-43e3-95db-89b848cf74af",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "69917715-2b57-4a4a-a534-6382d83ebd4d"
        },
        "item": {
          "id": "e65e4a94-174c-45fe-9683-285ec3579dd7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c0112fce-533b-4998-9eb0-c4c52267f752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b195d7-000f-493a-aded-6abd2d28eed9",
        "cursor": {
          "ref": "9603ffcb-0321-40dd-b1b9-9f614d8ea7fc",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "600cff2c-7378-40ca-adec-60d37f95a9d2"
        },
        "item": {
          "id": "f1b195d7-000f-493a-aded-6abd2d28eed9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "da5bd1b1-20f0-4c1b-b8a9-84b5ccf516bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f3bf54-d97b-4d2a-a54f-6da6ab7d1dc4",
        "cursor": {
          "ref": "584d7913-702b-4bcc-9494-09fdea8323c2",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7cfbba2c-2f0f-4ebc-bc1e-7a9aa8977de0"
        },
        "item": {
          "id": "11f3bf54-d97b-4d2a-a54f-6da6ab7d1dc4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "afa530e3-582d-4b15-8dab-40125c5cd938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6b37d8-ce64-441a-9766-cc8f14069c19",
        "cursor": {
          "ref": "54ca06ae-277e-46cf-be9c-0ad091213b9f",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "047442b2-1979-494c-8b91-f4f7a01e38b6"
        },
        "item": {
          "id": "4e6b37d8-ce64-441a-9766-cc8f14069c19",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "88780fee-f119-40c4-84d1-07041987cf7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad62eb97-118a-421d-880f-b938fbd2f3ae",
        "cursor": {
          "ref": "4b739a0f-6046-4565-a022-440a0c409b78",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "37c2e0e3-e2ec-4c80-bd9d-f7cd5c18db8f"
        },
        "item": {
          "id": "ad62eb97-118a-421d-880f-b938fbd2f3ae",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d2aebed9-6b5f-41ec-a189-61b8317ebc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2194fc-f4c5-4fe7-89bb-c6af822f4560",
        "cursor": {
          "ref": "c8418363-aa51-4df1-9c00-8c8e8ffd97cd",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b976a153-681c-43eb-a6b5-84d003af3178"
        },
        "item": {
          "id": "4a2194fc-f4c5-4fe7-89bb-c6af822f4560",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2da51177-dcbe-4f2d-9578-6754ea7d3234",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "5eef6090-0c4a-4bab-a1e2-1981374235e5",
        "cursor": {
          "ref": "49a0f217-2f87-4a3b-a7b2-3366c38dd5eb",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fe347d7e-caca-440a-a818-422ee8aebb98"
        },
        "item": {
          "id": "5eef6090-0c4a-4bab-a1e2-1981374235e5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "300ea18e-761e-4634-80e8-bffa82e3e8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626db748-bf0b-48c1-9565-215a00ff9fa4",
        "cursor": {
          "ref": "e3622871-0f6c-442d-b269-913eb32cffd3",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ba97e932-a8cb-481b-b2c2-3b8b1ed9f946"
        },
        "item": {
          "id": "626db748-bf0b-48c1-9565-215a00ff9fa4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9b2ed4f7-e653-4433-8d98-931a97737d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b368e6-14df-4229-8535-6da559da4d71",
        "cursor": {
          "ref": "469e777d-910d-4456-a18b-fdfc9ed5f84a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4733aaf2-7189-43be-a2c9-9f8ebeb43bd6"
        },
        "item": {
          "id": "16b368e6-14df-4229-8535-6da559da4d71",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bd53e62d-6b74-47eb-9912-40b178fce1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32d8140-2312-4425-85cb-f582d2847d34",
        "cursor": {
          "ref": "b29dc2f5-1e82-48f2-8918-0c9f31c6e009",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "49c98313-ac27-48a4-8d9f-58788b92934a"
        },
        "item": {
          "id": "b32d8140-2312-4425-85cb-f582d2847d34",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "07c07d71-dcf2-4cd9-ae87-85d2e6a059e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb8df4a-2fd7-4427-9b03-97b7abb3f850",
        "cursor": {
          "ref": "456d14a9-46d2-4df3-a16b-f507818be541",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d55622cb-ca06-4eb7-9b60-8720aa4cd295"
        },
        "item": {
          "id": "cbb8df4a-2fd7-4427-9b03-97b7abb3f850",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b0b82d40-e8d0-473d-b5da-9533cfa86688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cd312d-80fa-4df2-a648-46e3b70d9dea",
        "cursor": {
          "ref": "5364206c-300e-41ea-bf9d-c0bcd381d350",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5ebf3aeb-5e88-40f4-810a-9147c7246690"
        },
        "item": {
          "id": "91cd312d-80fa-4df2-a648-46e3b70d9dea",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a33b72a8-bcc5-47c6-bdfc-ae98ef434db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d014db-0059-4afc-bbda-2223136405a1",
        "cursor": {
          "ref": "4fcb5caf-6f96-4c83-b39e-0f4840a20447",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "65e11364-2e13-4f3d-a0a7-8da9e19ee2f6"
        },
        "item": {
          "id": "87d014db-0059-4afc-bbda-2223136405a1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "714f596f-4282-43b0-bfd2-814abb80f56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447334fa-2a58-4208-9fe7-422c07d610ed",
        "cursor": {
          "ref": "8464b5e9-90c6-4fe2-a0d9-d2f87769a427",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "605fa537-79d0-4ca7-81bd-cd9aea4c0441"
        },
        "item": {
          "id": "447334fa-2a58-4208-9fe7-422c07d610ed",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "02e9a125-c32a-4e9d-a5b5-7467fe75be90",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "4dadd251-8d82-4082-9be3-3065bdd5c613",
        "cursor": {
          "ref": "61ffa7a8-be30-4637-ba1f-720cf22d6a81",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "754a153b-f76a-4c55-a8ee-e2dc276427f5"
        },
        "item": {
          "id": "4dadd251-8d82-4082-9be3-3065bdd5c613",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7e29cd2c-736e-4ffa-8c55-2c483df3cdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db06879-2ce6-4c7b-9aaf-6a6e64f0a89f",
        "cursor": {
          "ref": "11b189ff-1a51-478c-b791-b2d6073ec05a",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "02b724b7-9bbf-44fa-a329-ab0634ef6ade"
        },
        "item": {
          "id": "4db06879-2ce6-4c7b-9aaf-6a6e64f0a89f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2ca7bc0e-fee1-4dcc-a991-2d531a81ba08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2889d677-5364-42d0-87bb-746e4ec4b1b8",
        "cursor": {
          "ref": "35698d73-435b-456a-abb7-30c842be22a0",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4d36df55-d106-4cfc-bf9e-ad0cade44db8"
        },
        "item": {
          "id": "2889d677-5364-42d0-87bb-746e4ec4b1b8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c08f6c47-55ce-429f-b06e-1453fe8493fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a95348-bf82-4fda-a5da-2467e06ae478",
        "cursor": {
          "ref": "944b8759-6f64-41e6-a28e-4570979f171f",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8359c78a-84eb-41ed-a861-4dae6752081f"
        },
        "item": {
          "id": "59a95348-bf82-4fda-a5da-2467e06ae478",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "642e70bc-2d0f-456a-8ba3-bdf37b98ed3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b37c408-e01b-46ab-960b-bffa90748241",
        "cursor": {
          "ref": "54f2f97d-39d0-4ef6-a9b9-b07d4afa8c89",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b55ee542-9d79-4a55-8122-81bfb278838c"
        },
        "item": {
          "id": "6b37c408-e01b-46ab-960b-bffa90748241",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b86e7272-7c1a-49fd-88b3-dc4ae457ba5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5369bc3-8dd6-44f1-a475-da2d3076998a",
        "cursor": {
          "ref": "402b4506-1c02-4752-9261-58eed2c5bb09",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b23eeb9e-0a30-438c-ac2b-1b9916b86c8a"
        },
        "item": {
          "id": "f5369bc3-8dd6-44f1-a475-da2d3076998a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e94353ce-20e8-4af7-95e7-5b1d3a1d1699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a13281-e18a-403a-9dd4-0964ab6002ef",
        "cursor": {
          "ref": "d2e496e5-6912-4887-924c-8e8e2641455b",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "183be18c-ac53-4dba-ac48-ec4a8c69095f"
        },
        "item": {
          "id": "17a13281-e18a-403a-9dd4-0964ab6002ef",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d8586935-5e3a-4e9a-b7c3-3babbf569cf9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 97,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "31de05cd-686a-4548-a03f-aa8768320a94",
        "cursor": {
          "ref": "b5dc7a8e-aab4-47d5-9267-fd3345089d76",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "26e7f9da-003c-4f74-8b2c-c2946d481133"
        },
        "item": {
          "id": "31de05cd-686a-4548-a03f-aa8768320a94",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7a86a61a-0e08-4b0c-b9ee-9124ba6c2e4f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539fce12-7c36-4a20-a80b-7510618bab93",
        "cursor": {
          "ref": "b9b7c54a-3184-4741-8d1a-310fc4bc4350",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a0c6413f-b336-4f09-b4f1-536fed1baac3"
        },
        "item": {
          "id": "539fce12-7c36-4a20-a80b-7510618bab93",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c28c6054-d78b-4478-95b1-bf720b8d2ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08ada5e-f582-4740-b349-6a1304fc9934",
        "cursor": {
          "ref": "9d611ddb-453b-4845-9a3c-d3026eafc4d2",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c12e8711-249a-4bb6-a0c0-8015b74f8e8e"
        },
        "item": {
          "id": "e08ada5e-f582-4740-b349-6a1304fc9934",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "396380cc-5c36-4b01-82b9-2e10d157474f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2256709a-f0cb-411b-943c-00750718899a",
        "cursor": {
          "ref": "46e73fe1-b90c-4576-b340-bf3d2b54ab12",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a13bc436-62a3-42c9-8c00-4de24f3d69b5"
        },
        "item": {
          "id": "2256709a-f0cb-411b-943c-00750718899a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bf4daa8b-eafc-43a7-8e6a-4d8e47740514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e09c672-ce52-4f63-869d-975ecc1e0101",
        "cursor": {
          "ref": "70a40ccf-d0d6-449f-8c15-d69d0f6e252e",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9cd40720-8e7c-454e-a9c3-58ee49272d65"
        },
        "item": {
          "id": "1e09c672-ce52-4f63-869d-975ecc1e0101",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "51703a74-4745-4ccd-9283-7993c68819e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2851f5a7-4f07-435f-8b17-1023d175a8ba",
        "cursor": {
          "ref": "68dc4ce3-a15f-42d9-8eb3-3a87bd9403ca",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "69233e6e-5d8b-46ab-bffe-95b3d52cc286"
        },
        "item": {
          "id": "2851f5a7-4f07-435f-8b17-1023d175a8ba",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "de47fc87-4b64-4b34-b7a2-152b12c12a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6807e96b-429e-409e-8c9d-06c1c0cf56f2",
        "cursor": {
          "ref": "42ac6575-cba4-4dbd-acc4-23a66bf05d32",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9ddebae7-8d81-460d-b41c-724a67bdd282"
        },
        "item": {
          "id": "6807e96b-429e-409e-8c9d-06c1c0cf56f2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9bc49412-b6d9-4aa1-90f1-a649c4b7e790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6be0de6-2078-460e-b4d5-f9fce7c2ff3a",
        "cursor": {
          "ref": "58f6b9ea-432c-4014-a94b-5a611eb9b827",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ab0c8cd1-a5c1-4f81-87c3-a4597e9260e9"
        },
        "item": {
          "id": "d6be0de6-2078-460e-b4d5-f9fce7c2ff3a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "44aceaeb-42cd-49cb-961a-0840aa0c73b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd82494-b881-48b5-b67f-f3cd5e8ed5be",
        "cursor": {
          "ref": "e4bb8774-16c9-4b2e-b6cd-740897d00d9b",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "582f25c5-3986-472e-8aef-2c8a4c1024a4"
        },
        "item": {
          "id": "4fd82494-b881-48b5-b67f-f3cd5e8ed5be",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "de41d74b-d8e8-494a-b6ab-9188f87d6a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c997bf-06c5-493b-927c-7c1e357ff518",
        "cursor": {
          "ref": "64f65259-2386-4cbf-95e6-9999b19f2394",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6ac0f840-9e00-4a74-92fe-96f4e7e70c0c"
        },
        "item": {
          "id": "83c997bf-06c5-493b-927c-7c1e357ff518",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6435dae3-473e-432c-a641-ef6a544ee273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0080de-098e-4808-a3cf-a013b8e35a07",
        "cursor": {
          "ref": "f666d43d-f3ed-4937-8db1-de51bc5eb691",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b0eae3ad-56f8-4b13-9a4f-c60ada5dfc0f"
        },
        "item": {
          "id": "1c0080de-098e-4808-a3cf-a013b8e35a07",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9662bb78-54ad-4b66-a862-7daed0f4b388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae16f96a-6a7f-4151-8815-ae72ff8010db",
        "cursor": {
          "ref": "34a2a7ef-88a9-434f-9915-4a829365a630",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "77f72392-3e5d-413f-96d3-547134f5aede"
        },
        "item": {
          "id": "ae16f96a-6a7f-4151-8815-ae72ff8010db",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "eac18175-a550-49d4-9411-d8709d7d264f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d66b3e-163a-461a-800e-05336cfc4513",
        "cursor": {
          "ref": "a78cae27-7694-4722-a4b2-785d3cfb3e6e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a752f298-d724-4d75-aaf4-3563de41f35f"
        },
        "item": {
          "id": "a5d66b3e-163a-461a-800e-05336cfc4513",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "52529110-d3ec-49f5-aa32-c7dd1f08a024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c1413d-8bb7-40e0-96ec-faab70333936",
        "cursor": {
          "ref": "270c394e-23b9-4038-a9c1-04f0a5877954",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7b939642-d0fe-47ba-87e8-5611be0ef401"
        },
        "item": {
          "id": "c4c1413d-8bb7-40e0-96ec-faab70333936",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9cbdc5b3-7353-451e-8ee0-bcd9d64c4ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8b55fb-4573-4b77-8bcc-bba557e78968",
        "cursor": {
          "ref": "d80d7e34-cd7c-4a81-ba19-2dde172bb60a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a0d429db-5a9f-4701-bd71-84051945e304"
        },
        "item": {
          "id": "eb8b55fb-4573-4b77-8bcc-bba557e78968",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8f896020-86d2-4531-875e-25eb25893461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777aee25-6af3-47bf-93a7-dd1196224ba3",
        "cursor": {
          "ref": "0cb989f7-ec49-49f9-85cd-e69a518ab6ab",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e29ba0b3-d52b-4921-8279-07a53684989a"
        },
        "item": {
          "id": "777aee25-6af3-47bf-93a7-dd1196224ba3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f0dfd22b-0150-4070-b428-f66dcb400752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a3ea3e-7d6e-4c28-9919-aff0c9396bc5",
        "cursor": {
          "ref": "610f6081-0df2-4ec9-94a1-19b99a6d491d",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f1db1193-b8ea-4835-a422-617a2d633cf9"
        },
        "item": {
          "id": "02a3ea3e-7d6e-4c28-9919-aff0c9396bc5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ab5def97-3070-4ee9-88e7-25cc3e9229aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465b9f87-070f-44a7-ade0-a250bec0219b",
        "cursor": {
          "ref": "15aebbfe-df4c-48ee-8ea1-4a5d91fd0878",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "557f8807-63f8-423f-b98e-f94187d7e8c9"
        },
        "item": {
          "id": "465b9f87-070f-44a7-ade0-a250bec0219b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a66d48a4-4822-415b-8b7c-e5e9589f2ad8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "a202a5ac-3e47-4669-9387-dbb3b03d252e",
        "cursor": {
          "ref": "0f9d40ef-b595-4d48-932c-f23ecf60241b",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2cc2d928-83d2-4a1f-9d48-14104f0c5c34"
        },
        "item": {
          "id": "a202a5ac-3e47-4669-9387-dbb3b03d252e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "de3def22-2cad-45db-811b-033356eb0090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087daaaf-b313-4084-9995-256526a224e0",
        "cursor": {
          "ref": "952d30f8-b44b-4055-a8b1-964af7c68132",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9d82ca07-235e-4d3f-9fb2-e7bf65e9ba7b"
        },
        "item": {
          "id": "087daaaf-b313-4084-9995-256526a224e0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3137172a-e0c8-4b04-ba78-e99bcdf632a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047a9fdd-c0d4-4f74-8a24-3fe9cec71b7a",
        "cursor": {
          "ref": "9e776d48-2611-46ab-97e1-8892767669da",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "88a6b887-815e-418d-a56f-4c01723326f8"
        },
        "item": {
          "id": "047a9fdd-c0d4-4f74-8a24-3fe9cec71b7a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6d3a1712-4ab0-4d0c-b9a8-3cf51e0d92df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8007f3fa-b614-421a-ba3f-3afaf9b4b7d5",
        "cursor": {
          "ref": "e62cd36e-3c67-472c-a122-970249f7bff9",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "304bc0d9-555a-4309-9699-a25b3584e810"
        },
        "item": {
          "id": "8007f3fa-b614-421a-ba3f-3afaf9b4b7d5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "42cbb8ce-e89b-4db9-b7f8-4c1420fdbb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacb7ebf-1380-4c06-8bf7-e3472898ca67",
        "cursor": {
          "ref": "2ae89f2c-e32f-411c-b453-25d07f351ca9",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "de283957-e5ad-4806-891d-bc25b6020c04"
        },
        "item": {
          "id": "eacb7ebf-1380-4c06-8bf7-e3472898ca67",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b57a6f2a-47dc-4902-8429-61c5897cb8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b46026-53ef-4007-bd13-9dab5fcbc23f",
        "cursor": {
          "ref": "cf17d999-1717-4424-98d7-4b840b35de46",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d51e8c4a-9ff7-454a-8c76-b5d4018a0410"
        },
        "item": {
          "id": "27b46026-53ef-4007-bd13-9dab5fcbc23f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e07ccfbd-ec9e-4c5c-9dca-58d8b8dd176b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b1b9e5-c879-4882-b84f-a9f30319b70c",
        "cursor": {
          "ref": "d7d5ba0c-4d3d-4335-8afb-531a52247317",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f1794df2-3712-409a-ae96-815baa656efc"
        },
        "item": {
          "id": "44b1b9e5-c879-4882-b84f-a9f30319b70c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c5fdfd41-d741-41f2-840a-8309a1e242aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036992fb-9d7f-4f50-983f-6a314ce00eb4",
        "cursor": {
          "ref": "4e18083c-49eb-47bd-96d6-fe906fdbc4a9",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0ca01d93-a09b-46d7-8f27-9786aab8e5b4"
        },
        "item": {
          "id": "036992fb-9d7f-4f50-983f-6a314ce00eb4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5a43184a-61cd-4f42-9d01-230b4797a53c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "f0605e28-c9e5-4d5c-83b6-7283da893e02",
        "cursor": {
          "ref": "38073995-fa8a-457b-93e7-31f07cd50c2f",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fee15803-2f1a-4382-9f33-1406055c54ff"
        },
        "item": {
          "id": "f0605e28-c9e5-4d5c-83b6-7283da893e02",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "59dc4d90-4851-4f73-a714-d537bf32a5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d9bb2e-8272-4f81-914e-fb0e8a00e141",
        "cursor": {
          "ref": "1f1ba8ae-9f07-40db-9332-3353977c8a66",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f14456e0-8946-4183-8ee5-5c0a877cc1de"
        },
        "item": {
          "id": "72d9bb2e-8272-4f81-914e-fb0e8a00e141",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "31160756-eca0-445f-aae4-91b37efce794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45d8205-29b3-4acf-9a33-ed7e2a8f8b60",
        "cursor": {
          "ref": "d75c21b4-9a8c-488d-b1ae-cc27a44e4f28",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7e6ff3cb-c613-4550-8a3e-d7fceedad2c8"
        },
        "item": {
          "id": "b45d8205-29b3-4acf-9a33-ed7e2a8f8b60",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e15990c3-ff6c-4f25-bda6-3243e68366e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de31d9e-7bed-49d2-91ab-449804b9349e",
        "cursor": {
          "ref": "bc069e3c-9dd5-4b10-8977-677c6b2d8d0a",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5ea19cb5-b719-4ba2-bef1-0dd10f6a902e"
        },
        "item": {
          "id": "5de31d9e-7bed-49d2-91ab-449804b9349e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6866b333-8e7a-44f5-bf32-d97ae9a2feb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c387311-8499-4e79-bbff-47fa35840191",
        "cursor": {
          "ref": "2d18782a-6674-496c-9984-ecba5a1e0faa",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "060465b9-b1f1-495b-9649-1576be419481"
        },
        "item": {
          "id": "7c387311-8499-4e79-bbff-47fa35840191",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "24953415-9148-401c-a542-71a5bd73eb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046e8baa-eaae-4be5-8643-83cb54b70daa",
        "cursor": {
          "ref": "a8050728-a679-459e-bdea-610864b8bf57",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "11362657-e611-4596-a09b-217bb23b9d26"
        },
        "item": {
          "id": "046e8baa-eaae-4be5-8643-83cb54b70daa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dec4baba-3d66-4736-992e-e98483007341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1466e99-637f-4d12-81ed-ad9cc9df0be9",
        "cursor": {
          "ref": "a44143e8-77f2-44fc-9a77-5c8f75333076",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "36769251-6dbf-4603-adf8-af07bca8adb8"
        },
        "item": {
          "id": "f1466e99-637f-4d12-81ed-ad9cc9df0be9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7a7cca90-f79f-488e-88f1-02a98675a0cc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "e13c4711-f7e3-4ad6-a382-fc8416d4fd93",
        "cursor": {
          "ref": "017824da-ddde-4f51-a149-37ee65385504",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "725915af-3bf7-41df-b0a2-cf9bf0ad70e5"
        },
        "item": {
          "id": "e13c4711-f7e3-4ad6-a382-fc8416d4fd93",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "13c4ae18-e627-4f85-a339-b88711bc4811",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "270f44e9-f79d-4344-9e49-f8975242ddbd",
        "cursor": {
          "ref": "2a9989a8-21bd-4112-87a5-c15048b3a326",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d6db0b61-17b7-4699-9083-3abe574699bc"
        },
        "item": {
          "id": "270f44e9-f79d-4344-9e49-f8975242ddbd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "29df71ad-dce6-4f51-bed8-2fa950ad1e75",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "64690214-7c48-4ccf-9eed-63394bc8ef32",
        "cursor": {
          "ref": "c7b7a13e-2b51-49a7-af77-70cdf111bcbb",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8f9ed7fe-6b36-48c1-98d0-d99e30639390"
        },
        "item": {
          "id": "64690214-7c48-4ccf-9eed-63394bc8ef32",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8bd431b0-b921-4d5f-987f-17a40a519ab3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "6a33a089-54a4-465a-bea8-e1bc3e7e0b5c",
        "cursor": {
          "ref": "77237219-f6ee-4bc2-839f-ba75d9057c39",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9163b822-0bf2-4570-8173-4c3910a2d6c3"
        },
        "item": {
          "id": "6a33a089-54a4-465a-bea8-e1bc3e7e0b5c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "29d48e5e-b8ba-4943-b860-afb3188007a3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "e4b816d7-4ea0-48a4-9237-5ec10db5b723",
        "cursor": {
          "ref": "cbb79e2c-649a-4b53-8e43-585f663a5ad0",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5c4e9644-c9f6-4ec4-912f-a18356326852"
        },
        "item": {
          "id": "e4b816d7-4ea0-48a4-9237-5ec10db5b723",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1dc4a2c9-eb1e-494c-aa3a-75db1280f99a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "6f576e5e-61e0-4e54-b910-72d058b6abf8",
        "cursor": {
          "ref": "c0e34abe-6264-49de-b9ff-0339e1ca2a4e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "74e62268-7cad-4905-b38f-a77dc06f79db"
        },
        "item": {
          "id": "6f576e5e-61e0-4e54-b910-72d058b6abf8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0338592c-fffa-4a65-9d66-3cb77391c7e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd2d84d-ac4f-42a1-aaa5-2f374b971e07",
        "cursor": {
          "ref": "5465be7b-ee39-48df-abd7-eda193647093",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0dd76700-6049-43dd-a38d-c2f257f8ea6d"
        },
        "item": {
          "id": "bdd2d84d-ac4f-42a1-aaa5-2f374b971e07",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9cad2a45-e695-45f9-a308-08da7af1ab7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401aa9fd-7fe3-4a35-b4a4-d8c28675233f",
        "cursor": {
          "ref": "af62c931-df2f-40fb-8677-81713fd7e9a0",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1de0574b-6f24-470c-8e61-167fdbf89a01"
        },
        "item": {
          "id": "401aa9fd-7fe3-4a35-b4a4-d8c28675233f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1b5c48b4-e461-4e5a-8a20-bc2f7d2c712e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff537116-f09b-4204-a824-56b383bf0c6a",
        "cursor": {
          "ref": "eeb08ca4-4cc1-461d-bb44-7a311d0fb020",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bb5c4413-8616-49d3-a88a-157f205af499"
        },
        "item": {
          "id": "ff537116-f09b-4204-a824-56b383bf0c6a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8b6493f3-cbf0-4bc4-86a8-de4aa6427bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ec8f54-3807-4705-9948-9ed41fd65651",
        "cursor": {
          "ref": "c1fb0345-481e-4945-b480-aaa22db9d2e4",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "922c2aa5-11ea-46d8-a18c-e72f0ea622c2"
        },
        "item": {
          "id": "a2ec8f54-3807-4705-9948-9ed41fd65651",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fa3d39a4-0864-40c6-9851-dcb2b35220e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55aae742-2343-405d-ba77-1728f27089ee",
        "cursor": {
          "ref": "96b99665-1b21-483a-997c-72ad9a562879",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "31ad759a-5202-4c94-89d3-76886c30d20d"
        },
        "item": {
          "id": "55aae742-2343-405d-ba77-1728f27089ee",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c66d50b1-66d3-4131-9491-2024c53479bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1321f39-b131-4665-b7f3-9454dbce9420",
        "cursor": {
          "ref": "a70bbb0f-99e7-40b9-98d2-121e0d938fe3",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7c5425f2-2235-49ee-9963-315c43025a2c"
        },
        "item": {
          "id": "f1321f39-b131-4665-b7f3-9454dbce9420",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8c366344-1bb6-4a85-b88f-2b10f5783f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22739be-d108-44f0-8727-f69e97777849",
        "cursor": {
          "ref": "dcd25a81-eac6-4b8c-81ba-ee4b041af0fb",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4ff8c619-780e-4703-99e8-cbbbba06c055"
        },
        "item": {
          "id": "b22739be-d108-44f0-8727-f69e97777849",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9fe325a6-8f3b-4ca3-b621-e765177cf724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b14424-7ca0-43f6-bd51-1fdca2525b7c",
        "cursor": {
          "ref": "8a1e01be-8142-460c-9f21-e2212246ae0f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7ded73f7-289e-42bc-948b-8231236af379"
        },
        "item": {
          "id": "06b14424-7ca0-43f6-bd51-1fdca2525b7c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a415f926-9dfb-407d-859a-4b3d0310db17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f69182c-62fb-4fd7-9e84-3dd739953b90",
        "cursor": {
          "ref": "5fddd95f-7063-4cc2-b111-00dd57bf20c6",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ec9d4704-3727-4a4b-8fe9-e109ee2866b8"
        },
        "item": {
          "id": "2f69182c-62fb-4fd7-9e84-3dd739953b90",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "40f56de2-2839-49cb-b875-6f6ba47cb4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bfa811-6983-4122-96b3-06668d85f619",
        "cursor": {
          "ref": "5e3a7d65-4e2b-47ac-8d7e-cf3c1f5e6a44",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e0c9c7a9-663e-4255-a620-c0add0ad99c8"
        },
        "item": {
          "id": "b9bfa811-6983-4122-96b3-06668d85f619",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "54b23f81-6073-4a5b-be72-630e09d251d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6ff2a5-55e9-493e-b5c9-1f49f00b6f75",
        "cursor": {
          "ref": "890dde91-967e-4344-97d1-27a7d31abeca",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ca35af11-9367-4090-b90a-71ca28e73f85"
        },
        "item": {
          "id": "2d6ff2a5-55e9-493e-b5c9-1f49f00b6f75",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "29a12447-5273-4a65-b681-b272a652e6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67946db-38c0-4879-9634-7a4cecb3095e",
        "cursor": {
          "ref": "beead101-717d-4377-b65b-f9d6a9656e4f",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "221bee17-c29a-4c43-a374-4a03c560b136"
        },
        "item": {
          "id": "b67946db-38c0-4879-9634-7a4cecb3095e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "469a62bb-11c9-473f-ab6a-319984d46d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb56cad4-9358-4173-ba5e-ebc859811fbb",
        "cursor": {
          "ref": "8750a088-a48d-4b27-b733-cb768c3c645d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a20a8404-1199-4b24-8e2e-9fde69f43bd9"
        },
        "item": {
          "id": "fb56cad4-9358-4173-ba5e-ebc859811fbb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "82ccd076-ed6e-4cdf-b8ab-5467ab9b40db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a252e0a-7faa-4921-9c0d-631d35df9b75",
        "cursor": {
          "ref": "ac12072d-6e26-4079-89ca-07999fbea2b7",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a2b7fb79-560e-4c39-a5f2-1b1ec5d8cc8d"
        },
        "item": {
          "id": "9a252e0a-7faa-4921-9c0d-631d35df9b75",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e4d591e1-23eb-4932-81e1-a85a4a933ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee514e2-466f-469c-b842-6ecd9f77eafc",
        "cursor": {
          "ref": "4f8144d8-946c-4d20-ab47-8874f3a8a402",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "36dc66f1-5a03-4419-ae2b-f548c2b18978"
        },
        "item": {
          "id": "8ee514e2-466f-469c-b842-6ecd9f77eafc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c9d379f8-ed43-48e0-b65a-9612f3f662ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c31b583-d69f-4783-b0fd-41028ae9e138",
        "cursor": {
          "ref": "1feebe04-7d2e-46ee-917c-a1216f26ae99",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6ea3caea-337c-424d-8460-1f3d6a60250b"
        },
        "item": {
          "id": "9c31b583-d69f-4783-b0fd-41028ae9e138",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "adb6eca9-d8cb-4da9-b95c-7a401ae40edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbbcad6-6de4-4d67-87c3-affbd1f2a4f7",
        "cursor": {
          "ref": "8b45740d-1cc0-4fd3-824f-aad620c2b331",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b61723d8-b75b-4fa9-bc34-4872a5630e16"
        },
        "item": {
          "id": "6fbbcad6-6de4-4d67-87c3-affbd1f2a4f7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "df9948ab-245d-409e-aeaf-1d58344e8516",
          "status": "OK",
          "code": 200,
          "responseTime": 165,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "528513f4-f6fe-4000-a22e-aaeb8b122250",
        "cursor": {
          "ref": "0afb518b-b624-4185-b9e6-892f6933bb75",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6dafd420-2c4e-4396-8585-e26d40832cdf"
        },
        "item": {
          "id": "528513f4-f6fe-4000-a22e-aaeb8b122250",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "55a52e16-fc9b-4a1a-972d-1977f2d67dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531f75af-314b-475d-be8d-4a1109738ae4",
        "cursor": {
          "ref": "408bd0f3-916c-454b-b743-afd2fa312bf0",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5caf31a4-53a8-442d-a345-4ff8b25cac3d"
        },
        "item": {
          "id": "531f75af-314b-475d-be8d-4a1109738ae4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bf6b5db7-8f95-4b89-b507-56b90060354e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a335dc-f0ea-4b27-b9b1-4d0deb081f19",
        "cursor": {
          "ref": "0452f458-e060-4786-8f1a-e4b9501dc76e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "87d5466c-7cf8-4922-a8dc-983471cd8eb4"
        },
        "item": {
          "id": "03a335dc-f0ea-4b27-b9b1-4d0deb081f19",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e1c2c612-1044-4c75-9d15-6da2e9431185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74505cb-c078-472f-9f0a-defea3d912c9",
        "cursor": {
          "ref": "80a51a77-b53d-427a-b628-37f4f490cca6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d31a06e6-5881-4ce8-9c4e-b03d04a5c694"
        },
        "item": {
          "id": "b74505cb-c078-472f-9f0a-defea3d912c9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "54ab8efd-c618-46a0-b34b-bf7a02b167f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda6bc90-1647-4655-9afd-47965f5e0886",
        "cursor": {
          "ref": "b76579ac-f636-419d-bfe6-a8e82fce62c2",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "39dbd3ab-91a2-473b-a688-7c0dd0e8b7cc"
        },
        "item": {
          "id": "fda6bc90-1647-4655-9afd-47965f5e0886",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e847cfe4-de1d-4e0d-b434-cb9f5872352c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cea2aa4-73d8-4af4-89b8-0e860c8d4c1f",
        "cursor": {
          "ref": "b74a599b-c2b7-43bb-af72-bdd4082b21cb",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6427a325-59f8-4599-b7da-f4371c38965f"
        },
        "item": {
          "id": "3cea2aa4-73d8-4af4-89b8-0e860c8d4c1f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "29fdab0a-be55-4666-b17f-d403fdbbed36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac3d4e6-e4cd-4c79-a9fa-241d7423ae46",
        "cursor": {
          "ref": "4c6c79e7-5911-42eb-8ef4-29265407fd4e",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f81bf173-eb3a-435d-93a1-046caf5f437c"
        },
        "item": {
          "id": "9ac3d4e6-e4cd-4c79-a9fa-241d7423ae46",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "56db20c4-349b-4970-a294-9b5a4c4267fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66c6525-abc7-4b1e-ac47-a647fcda5421",
        "cursor": {
          "ref": "46bc5553-0946-4c1e-9ee8-5e125b81d50a",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8867b2d9-0927-4880-8325-5afe76abf516"
        },
        "item": {
          "id": "e66c6525-abc7-4b1e-ac47-a647fcda5421",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fdf60f7b-607c-478d-9cbb-78f55d396bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb07f61b-d963-4b3f-9599-6f2323f7dd9b",
        "cursor": {
          "ref": "ed9ec226-cfdd-46d7-b135-4c7fd4c83e4c",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "eb4510fe-e177-45cf-969b-e4e365916fe3"
        },
        "item": {
          "id": "cb07f61b-d963-4b3f-9599-6f2323f7dd9b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2c7660e3-1903-48bf-83a1-27d355ed6102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f23674-b51b-49e5-966a-1db45cc25d83",
        "cursor": {
          "ref": "f09f2ca2-9d9c-4b92-898d-e1f7224b7aee",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "39c2e9bc-1416-4437-93e6-4bb6794a5fed"
        },
        "item": {
          "id": "95f23674-b51b-49e5-966a-1db45cc25d83",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5d76d9ac-0250-4255-b1e1-9ffcc9063db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01135d2d-d39d-40e9-b7e0-aa7a88c919e4",
        "cursor": {
          "ref": "68cc76d4-ae4c-46ea-9d4b-1f405d283b94",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9c26c03d-309e-45d6-a66a-7417c1a149cc"
        },
        "item": {
          "id": "01135d2d-d39d-40e9-b7e0-aa7a88c919e4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cc55ffa7-9267-4f8a-a537-1834672ad269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2b7aca-6991-4f8e-aaaa-0791463fb94e",
        "cursor": {
          "ref": "676b0579-4ef3-4423-9daa-b88d42d82281",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9de8ad60-d9b2-4171-9723-8cbbc155ac7d"
        },
        "item": {
          "id": "dc2b7aca-6991-4f8e-aaaa-0791463fb94e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "302639c3-2ebc-4c45-ad1e-11d981195b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1736fd-5e6d-4696-a9e8-d9e7fa0ddcf0",
        "cursor": {
          "ref": "7d48bdaa-9644-4a6e-bb30-55460f39db2f",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5a368751-916f-40ce-ae81-b115b04ef0b1"
        },
        "item": {
          "id": "ed1736fd-5e6d-4696-a9e8-d9e7fa0ddcf0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "af99d4c9-4669-4b03-9417-3b1feaa1ac0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf5e461-6fb3-427a-af32-504ca66c48bc",
        "cursor": {
          "ref": "7696bc5f-dcaa-4f86-908b-4fe8798f827c",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "24978424-e059-4eda-9a5f-13cd5aa67493"
        },
        "item": {
          "id": "ddf5e461-6fb3-427a-af32-504ca66c48bc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9af3518a-9b6d-41f3-a748-7b27a64fec5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934bbc61-c0d0-470c-ad05-c263725c39d0",
        "cursor": {
          "ref": "3a6125f2-ffb1-4f7e-b2b2-f937498ec754",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "27ab7d21-2b1a-4530-8a13-28bb256954c3"
        },
        "item": {
          "id": "934bbc61-c0d0-470c-ad05-c263725c39d0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8a012258-37e8-4ebe-9bd3-d0217108ee81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80503f3-a2ce-438c-a886-12f84e45fbcf",
        "cursor": {
          "ref": "50c20f33-b0e0-4f37-857d-81a1dc2a13b1",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c7297609-455d-474d-b7bf-61d016c37947"
        },
        "item": {
          "id": "e80503f3-a2ce-438c-a886-12f84e45fbcf",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "828f2ff3-f840-433e-8e4b-cc736098c121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb783a31-8e2a-4b6c-ab67-b8d0b9471cda",
        "cursor": {
          "ref": "f53005c1-008a-4b96-8e28-223c08d55ee9",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "16f0a9e7-e5d1-4379-bbb9-e329f4040a63"
        },
        "item": {
          "id": "bb783a31-8e2a-4b6c-ab67-b8d0b9471cda",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9fc293cd-9205-4084-b8b0-6efb58dcb7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee296c5-f6d1-486c-8871-fccedf55a686",
        "cursor": {
          "ref": "cb3ae7ab-b1c0-43b2-86c7-f4d26db8c14e",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6f60253c-dfd4-4e87-bb0d-588ec4360695"
        },
        "item": {
          "id": "aee296c5-f6d1-486c-8871-fccedf55a686",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e44825b9-d66a-41a2-ba88-bd3ca2359e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0542c6-6f30-4356-a202-7dc5b0790339",
        "cursor": {
          "ref": "5d17b46d-5531-44da-a944-9e3298d8e960",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "98a18e3d-826a-44ea-9b53-bd65c43d4b95"
        },
        "item": {
          "id": "da0542c6-6f30-4356-a202-7dc5b0790339",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9b8db2eb-94c5-4a13-85f5-7b47d485d59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d0739e-44b7-43a8-9ac2-29afc0dd2fdc",
        "cursor": {
          "ref": "30e06127-2f4f-47b6-9f93-6bd94d4453e0",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d6951ff2-2c31-45cd-8b26-bebfd48ab592"
        },
        "item": {
          "id": "70d0739e-44b7-43a8-9ac2-29afc0dd2fdc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a7f13ccf-dd7a-430a-8967-7eaa4c157934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdd2947-b5e9-4d0f-b2b5-1f8f2ec85ffb",
        "cursor": {
          "ref": "73d21c09-8e71-42ce-9d84-a08ceb367daa",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d04c5ac5-09d6-4f44-bfd9-f1d2c2db81de"
        },
        "item": {
          "id": "bfdd2947-b5e9-4d0f-b2b5-1f8f2ec85ffb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fed888e1-60ad-466b-a526-a83d81015ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88289953-709c-466d-86ca-04a4e330854d",
        "cursor": {
          "ref": "9328535d-3cff-4acd-8954-47c92ab9ecff",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b006cdcd-3bd0-4ad8-9eb3-3393ee2841ed"
        },
        "item": {
          "id": "88289953-709c-466d-86ca-04a4e330854d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e7634850-0ce2-4cbb-9a16-f30b33958833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c827c4-64b4-40d0-ac4d-bb9f4e0e5e06",
        "cursor": {
          "ref": "5570919b-ac34-49f0-b4a5-63a569d96c8b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fcd7f7d8-4225-43af-b5ea-9e55e4d6a369"
        },
        "item": {
          "id": "79c827c4-64b4-40d0-ac4d-bb9f4e0e5e06",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "188a4026-cbc8-4894-b2eb-f1ac6f01fb78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32390c5d-9706-4247-9a9f-583678cbe1f4",
        "cursor": {
          "ref": "a0a48278-cda1-4445-b896-6292824aeda6",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3817d84a-8c3d-412f-999d-2ccd3f59a89e"
        },
        "item": {
          "id": "32390c5d-9706-4247-9a9f-583678cbe1f4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "87a604e9-513e-4a23-81f3-09585191af56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f39b8ba-cd01-4b5e-bdfd-4ef40088207a",
        "cursor": {
          "ref": "af05036e-71dd-4d13-8b99-33b09fb4ee67",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d2190ae4-885f-403a-a1bb-e25dd3944d81"
        },
        "item": {
          "id": "0f39b8ba-cd01-4b5e-bdfd-4ef40088207a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f4c68afa-b55c-4568-99cd-b16b83bde779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10375cb-2099-48c2-8734-93f265bff325",
        "cursor": {
          "ref": "287e8009-93b2-4428-b58b-184c07c24c05",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6d3b0bbe-0f85-4820-90bd-893f3fb01101"
        },
        "item": {
          "id": "a10375cb-2099-48c2-8734-93f265bff325",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "688e6b88-8d0b-4378-acc9-af88ea551361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd8d05e-3469-4a79-8301-c3f42762ff26",
        "cursor": {
          "ref": "43f54612-b8aa-4e27-a188-fbc9ae92516f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9f61d116-b20a-44f4-80e1-f7a35af48971"
        },
        "item": {
          "id": "5fd8d05e-3469-4a79-8301-c3f42762ff26",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a0a90ded-67a7-41e4-9a39-d47e3edc575e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd07067-e836-4e8e-8e25-e63a4dc2f6da",
        "cursor": {
          "ref": "5e0f7a54-9eb8-4ec8-97e2-c3c82045ed1d",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "10ab5846-d836-49cc-a8ee-23d292c6c7cb"
        },
        "item": {
          "id": "cfd07067-e836-4e8e-8e25-e63a4dc2f6da",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4db7d14a-1058-4fe6-97e5-ac8f6effb118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d9ada8-91a9-48e3-9393-ec2802b58fcd",
        "cursor": {
          "ref": "953e8828-95d7-4c61-99a8-8390d3f6c3e7",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "88b73a18-4c22-4b03-b477-7b1fc0414c80"
        },
        "item": {
          "id": "01d9ada8-91a9-48e3-9393-ec2802b58fcd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c120c029-bbe0-4443-968e-3d00ac558992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e459c1-e1d6-40a1-b8e7-82bd9a2eed89",
        "cursor": {
          "ref": "387518b8-75f9-4ff2-95c9-0cefba02c421",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "315b2202-eb2e-4d67-a9d3-67f9de9f20b8"
        },
        "item": {
          "id": "e6e459c1-e1d6-40a1-b8e7-82bd9a2eed89",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e37bf166-94ca-4238-8f6a-429586d6862d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7dae51d-a8e0-4711-b133-51512d2ee77d",
        "cursor": {
          "ref": "648ce162-ae08-49c1-927b-35c31123a7d8",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "302bfc40-e0a3-47fe-85b4-42f20ab22e74"
        },
        "item": {
          "id": "e7dae51d-a8e0-4711-b133-51512d2ee77d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "533aa274-dc75-4d2a-a83a-e3162f72e246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a195536a-0a6f-4d15-b22f-ecb874b7ea06",
        "cursor": {
          "ref": "d6d4e872-0263-4edf-bc38-2d4f47a2d26a",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "be321209-6201-406f-b6f7-918ed855e61f"
        },
        "item": {
          "id": "a195536a-0a6f-4d15-b22f-ecb874b7ea06",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "26371db7-360d-4e9c-a4d7-dfb23336ab66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528fc46b-5d58-4a04-a1d5-df0d6e141afb",
        "cursor": {
          "ref": "7c1f8c72-c6c8-4399-a7e0-02df5f570239",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c339fb89-d1c0-438c-9d64-2f335597bd70"
        },
        "item": {
          "id": "528fc46b-5d58-4a04-a1d5-df0d6e141afb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6b23251a-d1ee-4b45-a02e-ce0de2ccf3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ef73d4-9e05-44de-ae1b-4e1bf6dc334d",
        "cursor": {
          "ref": "4dcfa95e-3cea-4a0b-a782-83d744edd4ad",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5386cfc3-8efa-4167-a49a-4ea16f413fc0"
        },
        "item": {
          "id": "e3ef73d4-9e05-44de-ae1b-4e1bf6dc334d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "80628389-390c-4801-adf1-4ffb159157c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbe31b8-97c0-4e02-a814-d34efccb8077",
        "cursor": {
          "ref": "c87835de-59f0-454c-ab51-390ed3ee90d4",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c6ecca2c-d0ba-409b-b07c-8f13c160869d"
        },
        "item": {
          "id": "abbe31b8-97c0-4e02-a814-d34efccb8077",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c77c0173-d857-4ecc-a20b-a95cca6d75dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133b9c5e-9fe6-4ff3-a98c-e7bb0725e0fe",
        "cursor": {
          "ref": "0b878da3-e368-4f77-8e1e-c2bf385a06b8",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f892f58a-256d-4fa9-ac51-7b94b28c41f0"
        },
        "item": {
          "id": "133b9c5e-9fe6-4ff3-a98c-e7bb0725e0fe",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f92718a8-eaf7-43a5-80ca-a67b93f6c8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93178fcf-545f-458a-b96d-e04fc101af33",
        "cursor": {
          "ref": "1e751688-d441-4be9-bb1a-476bcb4bb465",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "883fada3-1095-4b5e-9e7e-5e1c4da16d15"
        },
        "item": {
          "id": "93178fcf-545f-458a-b96d-e04fc101af33",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e194527b-f349-4393-86c5-5b2eec037feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada5e365-f0a2-4f91-9751-503cc2d85f05",
        "cursor": {
          "ref": "f8eb2873-3523-4120-9fc9-e312816195ab",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e55b38c9-2608-4555-8194-a1fb446af518"
        },
        "item": {
          "id": "ada5e365-f0a2-4f91-9751-503cc2d85f05",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ceb889a3-1fd3-4dc3-a041-51bbfc874596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ac1afc-c019-44ce-876c-c8203a4a2e8a",
        "cursor": {
          "ref": "681ca131-33d4-47d6-a521-4d68845ddcf9",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d1edb529-b57a-4806-8292-136e9f809d53"
        },
        "item": {
          "id": "25ac1afc-c019-44ce-876c-c8203a4a2e8a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "50bc589d-8b7c-491b-b01f-c56d1c9699f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c2496c-f503-4967-afcc-52fc30794bb8",
        "cursor": {
          "ref": "7edd9259-6ee6-4bfb-85cb-50418389b5cc",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "dd527f55-2a87-47b3-832f-d879e0bac19a"
        },
        "item": {
          "id": "f3c2496c-f503-4967-afcc-52fc30794bb8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a44465b7-0e61-4dbe-8881-3da58f397562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ad51ca-04ef-437e-8ce1-fe9c939f4da7",
        "cursor": {
          "ref": "9a051360-d291-42d3-9ef2-707560acd5f9",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b4d23d86-80ed-4649-bae4-e41eeb99aebc"
        },
        "item": {
          "id": "16ad51ca-04ef-437e-8ce1-fe9c939f4da7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c77e1f0a-85fe-471f-a9b1-ff5d6351bcd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b40379c-3e08-404e-98be-cd9b19f5c1b5",
        "cursor": {
          "ref": "19dafbc8-7aa0-4b48-ba92-bdbfcba1aeb9",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f805a344-3782-47f9-b56a-a7318441dfb1"
        },
        "item": {
          "id": "7b40379c-3e08-404e-98be-cd9b19f5c1b5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e9e5260d-0442-4248-850c-3d1978448fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e00e58-c8d1-4eef-890b-e7c1c70dc4be",
        "cursor": {
          "ref": "7d029d33-d1e6-4d64-a7d9-7341fc1a9669",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "95fca5fe-3338-4afb-9ded-7ba49ac11fc5"
        },
        "item": {
          "id": "c8e00e58-c8d1-4eef-890b-e7c1c70dc4be",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "89596111-56ff-40bd-82ae-451354e18c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58993ac-a6c4-4ded-8066-898c14faa81c",
        "cursor": {
          "ref": "8a4e8ec3-b8b7-4117-88a0-b630059cd136",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4902a058-3572-4ee8-80f0-b484a2865f73"
        },
        "item": {
          "id": "d58993ac-a6c4-4ded-8066-898c14faa81c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4f95f56a-14c9-4c0d-9ea4-c98eb582cf99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b173f9e1-df4c-4ffc-8b6c-3a5771e4fe4b",
        "cursor": {
          "ref": "8a1ff92a-6583-408e-a168-7a24396b9c7e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b8809f70-606d-4c4b-acd1-1b308118c9dc"
        },
        "item": {
          "id": "b173f9e1-df4c-4ffc-8b6c-3a5771e4fe4b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8f36be2f-f0de-427f-925a-b4b955c5a560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1227,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c1864f-4ac6-4f87-9818-11f212a0177e",
        "cursor": {
          "ref": "70945163-f819-4b3d-9e1b-fdf5e738c73f",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bd938e74-13a9-4d6a-a3b5-8e403575f331"
        },
        "item": {
          "id": "c9c1864f-4ac6-4f87-9818-11f212a0177e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0ac3f40d-0c1c-43ae-bd89-c1f3c516dc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf37133-8a0e-4f5d-8cf8-47e86db6d001",
        "cursor": {
          "ref": "99e983a3-45bc-47ef-8665-a7dd90445df9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a9d51676-8a02-455c-ac51-0fa6d26e6b29"
        },
        "item": {
          "id": "fbf37133-8a0e-4f5d-8cf8-47e86db6d001",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "28b6a1ce-00f6-43c5-9a6d-8b4bdece3d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be446dcc-d6b3-4b31-b5ec-217d013d3190",
        "cursor": {
          "ref": "29270cc0-4101-44c6-baca-5b37dcb7e248",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3c104968-3f63-4050-82d3-d65a0cf8e0b8"
        },
        "item": {
          "id": "be446dcc-d6b3-4b31-b5ec-217d013d3190",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "50feef30-f55d-4a8e-af0a-1d149b09154f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c445b4e-0858-47e1-8db3-256f07b1f69c",
        "cursor": {
          "ref": "5fe84f85-9d1f-4247-b9f9-787a5b8ce6ff",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "969f3d30-361c-45dd-bd66-6e75ad7d44e5"
        },
        "item": {
          "id": "9c445b4e-0858-47e1-8db3-256f07b1f69c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "95d3767b-f359-44c7-af31-f2a28c9b971f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80388ef3-c6c9-4b46-83e8-b397a6e7622e",
        "cursor": {
          "ref": "cdeda846-56c8-4b86-9197-a116bb1a1852",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1b3c44f1-48ce-4dbd-9bac-9e178ffe4aad"
        },
        "item": {
          "id": "80388ef3-c6c9-4b46-83e8-b397a6e7622e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "84ca0c7a-a390-40db-8a0c-067b591ab9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7335b69c-d535-41b2-ba29-9737a51a126b",
        "cursor": {
          "ref": "40a5d061-770f-4b42-a928-873815b29e4b",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bd629d85-e2fd-4ad6-a76f-5f5a195aa97a"
        },
        "item": {
          "id": "7335b69c-d535-41b2-ba29-9737a51a126b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9064b1c5-f2dd-4aed-98f2-7cdf32e08b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7732df8e-b949-49c6-b5c1-56b861a262b2",
        "cursor": {
          "ref": "ce3c0e39-5755-4746-bd0a-26034e544d81",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ee581986-bfd1-4a31-9312-dea62f270e79"
        },
        "item": {
          "id": "7732df8e-b949-49c6-b5c1-56b861a262b2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0de41ea1-05a5-4ca2-b3c3-1c1f1ee9e778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e487195-8504-4bf9-97ff-3120e9884561",
        "cursor": {
          "ref": "f1484546-4955-493d-a997-1c57958a401f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f7d5c3bb-443b-40ce-8814-cd50a554339c"
        },
        "item": {
          "id": "2e487195-8504-4bf9-97ff-3120e9884561",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c5feaae2-b07c-4582-9c19-078b9888c09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8683dff-975a-4b2c-8bd2-c13469ee535a",
        "cursor": {
          "ref": "22824abe-8378-45a7-b3b1-e001de1a06ce",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2727550c-5436-4745-97e0-e5e1078e5aa7"
        },
        "item": {
          "id": "b8683dff-975a-4b2c-8bd2-c13469ee535a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "74e63451-8116-4fe4-81c3-bc5d69aa06c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bd14a2-4c55-4559-aaa8-7166734fdb44",
        "cursor": {
          "ref": "add9396d-8fb5-4bd4-8fc2-44657241dc4c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "74a94613-a61f-4eb2-ba23-13f6563a3428"
        },
        "item": {
          "id": "d0bd14a2-4c55-4559-aaa8-7166734fdb44",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8e621c36-5ba3-4a13-875a-036686934237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c124fa-630f-43ee-8973-1a748275827d",
        "cursor": {
          "ref": "9eef8e2f-111d-4550-ae10-54f0456a3d7f",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dedb53d8-b735-4945-908a-1f0b0a85ed9c"
        },
        "item": {
          "id": "25c124fa-630f-43ee-8973-1a748275827d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d7a2e29a-4999-4c3c-8508-287229f89477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c35b57-8f7f-48da-896f-f756c8cd9044",
        "cursor": {
          "ref": "81355a56-8310-42d8-858a-46dff6409705",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "648f1fb8-d45c-4071-bfbb-a690d1d98083"
        },
        "item": {
          "id": "80c35b57-8f7f-48da-896f-f756c8cd9044",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "34b5826a-e08e-4a99-a1ca-091469318293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bdfe4c-4f27-4f86-a9dd-a2892e0947c9",
        "cursor": {
          "ref": "ab6850a3-4222-47b0-8e43-4f8ca12c562b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3b2f2325-4085-4162-b53e-58ca08f74c07"
        },
        "item": {
          "id": "f7bdfe4c-4f27-4f86-a9dd-a2892e0947c9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2e5874fe-0f6a-4a6e-a729-7f1d7b11cc95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e154b75a-5c01-4042-918d-423f74ebf226",
        "cursor": {
          "ref": "1a6b1aee-a26e-42b8-8355-40277f81ad4a",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7fb5f5c3-3e67-450e-811b-35ceb7c46aa1"
        },
        "item": {
          "id": "e154b75a-5c01-4042-918d-423f74ebf226",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d56f3523-627f-4bf0-bcc9-187979d9f22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8199e1-2516-4ddd-9691-47be5194f390",
        "cursor": {
          "ref": "44b5130b-3362-455e-a388-128d800e6ef3",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ddc88190-ed9f-49f6-a0c6-0c93280d737e"
        },
        "item": {
          "id": "ed8199e1-2516-4ddd-9691-47be5194f390",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "93cf7f7a-2285-4f69-bbfa-cbc623537520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c846ac-2d90-461a-acc2-2d832eddae9c",
        "cursor": {
          "ref": "7b80e6db-0798-4ca3-8ba1-9878273b1e4f",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7c834a64-90d9-4060-a108-b34cb484f974"
        },
        "item": {
          "id": "e6c846ac-2d90-461a-acc2-2d832eddae9c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "073d4cec-f92b-40d1-aade-bd19ad81eeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fdabba-57e5-42d7-aaed-7e629c0a1c9c",
        "cursor": {
          "ref": "64f49efd-d710-43f0-b13b-91c387d64567",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7406e760-7290-4c56-a8df-d3569caf54ea"
        },
        "item": {
          "id": "90fdabba-57e5-42d7-aaed-7e629c0a1c9c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "07bdceed-37e9-4443-b224-f1a4675e7abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c20f7a-9e4e-42d3-8d36-c3801acdfc5e",
        "cursor": {
          "ref": "bcb163eb-819c-4bf6-8ec5-c9e69ee11c32",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5c28a7ea-1cde-4104-a3eb-aa385d17ffdc"
        },
        "item": {
          "id": "47c20f7a-9e4e-42d3-8d36-c3801acdfc5e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3bb13fbe-494d-4168-a73a-22a6be2dc790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9995da84-94fd-4c75-a3ab-1c0619c4278e",
        "cursor": {
          "ref": "44bd9ef0-0111-473d-9e58-02040b69b752",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7e120896-6cbe-4544-8735-1c8065d6c3b8"
        },
        "item": {
          "id": "9995da84-94fd-4c75-a3ab-1c0619c4278e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f1574a3f-0f80-4b14-ac88-477fd55f5257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01107eee-48a0-4e80-88ca-cb9479ff5fa3",
        "cursor": {
          "ref": "f72247b4-160d-48f6-be7c-c048303c03aa",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e93ef008-ca07-458b-9759-14c16c5e5f6f"
        },
        "item": {
          "id": "01107eee-48a0-4e80-88ca-cb9479ff5fa3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7c4969fc-71ae-44a0-a211-a395d2bb15cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1a03bf-b34a-4405-befa-0686ac032d58",
        "cursor": {
          "ref": "a645e30e-fcfe-4927-8ae1-64329ebe60bd",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9dbd0c91-5439-49d5-9b07-4fc0b879ad52"
        },
        "item": {
          "id": "5b1a03bf-b34a-4405-befa-0686ac032d58",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7a9d92a4-b8bb-49e1-b3cd-b5ddcaf73b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4500f411-ddef-4499-aaca-667d271fd5e8",
        "cursor": {
          "ref": "a304130a-e621-483a-9afc-02cc64639d18",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5cd3d66c-d89b-4f80-ae32-ccd27f83e873"
        },
        "item": {
          "id": "4500f411-ddef-4499-aaca-667d271fd5e8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2d5da09c-02bf-45d7-84bb-1e49a8b62824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675b6e30-06ad-4983-b070-d6426c8b8963",
        "cursor": {
          "ref": "abef8a5c-b85a-47c4-b56e-7ee62efd61de",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b656c4c2-0c92-4f74-abfc-2d0a2eaa7ec4"
        },
        "item": {
          "id": "675b6e30-06ad-4983-b070-d6426c8b8963",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4a543805-b294-43be-b45c-77aa85edd488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6ded6e-01c2-4ee3-a08a-ffb652e39fe7",
        "cursor": {
          "ref": "4e4f6878-3c1a-4d95-8022-fc9086d79188",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a68a7698-12aa-48cd-9846-af789bac1816"
        },
        "item": {
          "id": "0f6ded6e-01c2-4ee3-a08a-ffb652e39fe7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "db8f1281-f698-419c-b6fb-5c4940aa395a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470d5565-96ac-47c7-85fd-203dc061e7c4",
        "cursor": {
          "ref": "658920fd-5c27-403c-bfd1-1316a703bb9a",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "64fd10fa-bf7c-49ee-bc40-b2b636979827"
        },
        "item": {
          "id": "470d5565-96ac-47c7-85fd-203dc061e7c4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0561ad38-fc47-4048-9ff4-5a447e849da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee2c6d5-dd02-4c0c-be34-9587040c45fd",
        "cursor": {
          "ref": "cc1b44c7-1bb7-4f7b-a3e8-dee91bb0f27e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a03d7aee-8a56-42d6-9651-8bb64c480af3"
        },
        "item": {
          "id": "fee2c6d5-dd02-4c0c-be34-9587040c45fd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6d1141dc-4e17-4bb7-a8cb-a81f1c9bf1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6331f94-98c3-4254-9413-ff828f04a3c4",
        "cursor": {
          "ref": "cebb95e6-b9cb-4bc7-a2c8-a36f979c23f1",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0e2a8f47-a0db-4232-bad6-964e0bc04cc9"
        },
        "item": {
          "id": "c6331f94-98c3-4254-9413-ff828f04a3c4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7e3a99fc-aee5-4380-b1d7-f0f912c30ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbf4891-ab43-4ee2-9f11-81d0bae80586",
        "cursor": {
          "ref": "1dc5983a-cdd1-43bb-865d-ce6256dcda4d",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1c1a4a93-a8e8-48b6-a99a-0038d8fce8b7"
        },
        "item": {
          "id": "cfbf4891-ab43-4ee2-9f11-81d0bae80586",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1b60f59b-22bc-4715-a7a4-b47061a8b500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e1490b-105c-4be5-8ea3-3003d76e2c63",
        "cursor": {
          "ref": "6d5cbdd0-bfbd-48f7-b41f-6298e48ed7f2",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "44596bd0-09b6-4bd4-aa5d-b1673b2ca3e5"
        },
        "item": {
          "id": "f5e1490b-105c-4be5-8ea3-3003d76e2c63",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6ff01c61-ae29-4c13-b968-f1a960847938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d313801c-2cfe-4f28-8b55-80a3b9736cd2",
        "cursor": {
          "ref": "642f20b1-5003-49b8-9bb8-a957e95c4bea",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f260f9de-4f24-42ce-b477-76763e5a52a2"
        },
        "item": {
          "id": "d313801c-2cfe-4f28-8b55-80a3b9736cd2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bcf3280c-2eb0-4be2-bb79-bf2055cf28bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a31eeac-49da-437a-ae21-93f269c4dc92",
        "cursor": {
          "ref": "0a51bd6f-adee-4cdf-bebd-be94d1b91dac",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e1a3f627-ac0f-4237-ba55-41eabbe3eea9"
        },
        "item": {
          "id": "8a31eeac-49da-437a-ae21-93f269c4dc92",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b2eb6259-b6cf-4687-b118-a05d1c0929fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a28e19-8d9c-4f3e-8995-3c6d28544c1b",
        "cursor": {
          "ref": "b5b8f6ee-6f79-4822-9e21-f385de9fd5e1",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "fcc1a7aa-e846-4e56-8502-c69ce8696e1c"
        },
        "item": {
          "id": "85a28e19-8d9c-4f3e-8995-3c6d28544c1b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3ae746b8-4727-4f0c-9ce3-5438f3932ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b355d66-3102-4f74-abce-e96b683c2272",
        "cursor": {
          "ref": "c9fee35e-4921-4e92-96d8-673a38e113e1",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6d3a2b82-1e22-42cc-a490-f4b62750857f"
        },
        "item": {
          "id": "5b355d66-3102-4f74-abce-e96b683c2272",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e12aae56-fa3b-4ed0-85ca-ce424d10f84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a661b3-2346-4a4c-8509-093863354267",
        "cursor": {
          "ref": "45c62d65-5f4e-4265-ab65-d36bbf0bedee",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8cd52f43-84ec-463b-9db0-8c56cb7499f2"
        },
        "item": {
          "id": "e6a661b3-2346-4a4c-8509-093863354267",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cb4c9b87-e714-40b3-b64f-85d471f66a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd37933b-f8f3-40cf-9ef7-f76624bd7842",
        "cursor": {
          "ref": "9afe5196-0948-4c03-a5e0-14255d41a02a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "70803a1d-0dd8-43d5-8959-00f1e6d9e33e"
        },
        "item": {
          "id": "bd37933b-f8f3-40cf-9ef7-f76624bd7842",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "59c4df7c-10e2-4f52-aef6-bbfbad8cca3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ce333c-9f8e-428a-912d-23e4bfca2add",
        "cursor": {
          "ref": "0fbce0a5-02b2-4c98-86a0-bc6737e18d9d",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "794548f1-7bbc-475b-a8cc-d879b97e5acd"
        },
        "item": {
          "id": "40ce333c-9f8e-428a-912d-23e4bfca2add",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9921b326-3462-4887-9549-c3fc49f87bde",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8883e966-ec90-4e0a-8d28-a9314cb96e4f",
        "cursor": {
          "ref": "898867fe-9b90-4a29-90d5-0954032ab91b",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ab343348-1670-48bf-b123-08e50f8f09bb"
        },
        "item": {
          "id": "8883e966-ec90-4e0a-8d28-a9314cb96e4f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8193e18f-c14d-4e02-a554-319c12d12cdc",
          "status": "OK",
          "code": 200,
          "responseTime": 151,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b723571-346a-4673-beab-a9a360e6c437",
        "cursor": {
          "ref": "8520912f-5994-4860-b84c-29074bf01f1f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "64ee4ac9-530c-4dce-8eab-c8813f62bfb3"
        },
        "item": {
          "id": "4b723571-346a-4673-beab-a9a360e6c437",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3b9954aa-bde0-4b1b-bcce-b33f3c26d524",
          "status": "OK",
          "code": 200,
          "responseTime": 3794,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe26b495-d783-4926-aa2a-d0826a1dda6c",
        "cursor": {
          "ref": "19789236-4bbb-4f7b-b75d-47d0a1ea50f6",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "01c97daa-1ddb-4320-bbde-65a731dba496"
        },
        "item": {
          "id": "fe26b495-d783-4926-aa2a-d0826a1dda6c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cfb4cc6c-6f54-49c9-a0a8-4453cc7123ba",
          "status": "OK",
          "code": 200,
          "responseTime": 3140,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc6c4fa-ca0a-46fc-a131-092ab158d31d",
        "cursor": {
          "ref": "57466631-e042-41a9-9b83-be0e7f95a3be",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2962be8f-09ad-4888-bab0-acf2ea3ea0e6"
        },
        "item": {
          "id": "ffc6c4fa-ca0a-46fc-a131-092ab158d31d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "872ec6e7-62cd-47b4-947a-57ca506a9745",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc6c4fa-ca0a-46fc-a131-092ab158d31d",
        "cursor": {
          "ref": "57466631-e042-41a9-9b83-be0e7f95a3be",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2962be8f-09ad-4888-bab0-acf2ea3ea0e6"
        },
        "item": {
          "id": "ffc6c4fa-ca0a-46fc-a131-092ab158d31d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "872ec6e7-62cd-47b4-947a-57ca506a9745",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf6b2c0-7de2-458c-a0ff-cdd596219e8b",
        "cursor": {
          "ref": "565e0f0a-72ce-4d51-b8b0-dae098ebeda5",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c7bc44ba-5706-4563-98b7-108a964bf6b8"
        },
        "item": {
          "id": "bdf6b2c0-7de2-458c-a0ff-cdd596219e8b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "50c6356b-ba82-4d4d-9bd3-26c5590eeef4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f947067b-b08a-4834-b39c-781e7f03c94f",
        "cursor": {
          "ref": "2285a28d-f7ef-4628-aad2-cdc5ba83648e",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "289a0028-7df6-4444-a432-755c6978d5e0"
        },
        "item": {
          "id": "f947067b-b08a-4834-b39c-781e7f03c94f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "28448e9f-a381-42c1-ab97-1235c69e0e61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}