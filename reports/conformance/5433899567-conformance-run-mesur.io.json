{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ef8e1d63-0980-4f22-833a-215076fd6a88",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b14303f7-6c48-4caf-bc46-84d29f8368e1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "736b1956-4f90-4723-a1c5-2e4f8a99a509",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7f42ca20-7eb9-404f-a469-9e3a4fdebf74"
                }
              }
            ]
          },
          {
            "id": "72bd98fe-ad31-45e7-9b2e-9c889a6c79bc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f890fd7-743b-4a38-983d-c7563818a660",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9bcfb8ea-9415-40bb-9089-f52b3a9f439e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cc35c83d-55b7-4959-b187-bdf1d240e530",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "23abafba-7f54-41f1-a677-3cbf5591ee65",
            "name": "Positive Testing",
            "item": [
              {
                "id": "385af616-e8d4-41a6-9c25-9192888177d5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb803cef-f8a1-4d91-8cd3-6b602ed57a0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5195821a-a7ad-49b1-a873-6478325bf9d8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "653204f8-9193-44bb-af26-a27bd0fefe37",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "941d9842-54da-44ee-881f-3bb86c40b7d6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "93beadf8-7675-405f-be5c-cbf6333017fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a78ce4b9-767a-493e-8220-c0cc22d07ca6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5373e86-28e0-41a9-a5dd-e92d4e674dbe",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b339e267-5cba-4748-b003-089e2b351709"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7226846f-58b3-44c7-b063-39ce625c2bd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "757e65d8-7da6-487d-89a8-08dccf913cf3"
            }
          }
        ]
      },
      {
        "id": "c1e7f024-d0c3-471c-8863-a829bff35a53",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "86e4b0fe-e525-49c1-9746-f3656a20f85a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00ebf60e-51b1-44f5-aec6-3bc890eef100",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fbe4b465-b169-43e4-9d8c-91012d8f24b1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452d5da7-d637-4ffb-9dcb-a77a3df3108f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a859d6c4-3739-4200-943e-9efd41753f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b030773e-7cf5-46ec-939c-ed6e32cfe10a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0959008-6aac-4cfe-8df6-a3c9a73c2a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b29b1d6-da0d-443f-a9db-d0f90c02efe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb27673-2990-4913-9b61-e749c79d7245",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018c8e93-a6b7-4c19-a889-bbf74ec716fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "427c57bb-55d2-43e5-9c43-854f2ffab1e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e89d0072-a6eb-4831-bf6f-039a26de4a50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77727ec9-d9d7-48dc-9690-10880ea504d6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4b5f62-2e28-4095-9407-19f00458aed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3469dbc2-f1f2-4cb5-8143-d27f79171d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbbbd53-b60e-480f-a338-416f8c87b76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0462ba-4c51-414e-a9c9-eb0df4b1d8f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2b401366-65e2-4ea4-9dca-3f87d5a2bdf0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5903bc17-a422-46bc-82ef-3fb4d6914b8e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4d26874-8006-4212-8e57-fb942e9a4410",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "74a24b17-1675-43a6-9460-9f38c1fdb806"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9195448-6fb6-4e40-932f-bfa37a82b005",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4fbdf46b-ab5d-4a35-9890-d9152ca7e660"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ea5f0ed-0e69-44ee-8031-65d70d300e73",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9492ed47-b597-422c-a03d-695ad49fbb7d"
            }
          }
        ]
      },
      {
        "id": "e47918c8-54b6-4277-a1b6-b782a7cc6b0b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c6621d91-06bf-4ab4-8efb-2277b054c987",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28df06ca-3293-4084-91a5-5e8322e82631",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0d8c7704-b8df-444b-a7ef-4036b5c18f2f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa7d009-2eb4-4e35-b648-3190bb2dc018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7647e90-05ec-40ec-9894-b2172cdae8bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2384e7-2037-4284-a9c8-ddff36c4f824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e586dce-074e-46a1-9d04-8c42773d7752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad6ac68-ac45-4077-b853-89dd7d679874",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df1d0b1-0e1b-4b1e-b9a9-5933b01c9bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ddaa4d-a40d-49a6-ba1b-06554196f0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c7ebf7-2a94-436a-8f85-f1003238b487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03429c2c-654f-45a6-82d6-001aaf4125e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb918d25-564a-4e28-b276-468c71ad84ee",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f238368-19cf-4309-83a2-e8c0793efe15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549f99dd-b9c2-4fa8-b3d2-cb273202fda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67c6688-2a8d-4ad7-b41c-1929c7345cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c93ffdc-9d22-4d32-a2a7-7a974ec2368a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce2c301-559e-4c4c-a84c-c3463a69b226",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1d04ea-8b1e-4cf8-ab22-e59acf46dcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da6a4e7-b642-4301-8a89-0fd5ab777f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5a4c9e-0820-4e8d-9521-53e9d8f04d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa45691d-fc30-4695-9391-012fdc5c32d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c806387b-dbbe-4cc1-af91-28b8761fa38b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5bb56d-f392-4f50-86a3-d5e6203b2cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abc8884-8e63-45e1-ab05-da5caae907bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279160b2-f580-4bfb-9879-948e30591b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bd9c79f-99c7-4041-a19d-b1d27d6c9d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebf42ec-6fbf-4b05-bf70-e8026540ed26",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8503384e-76bc-462c-86b0-59e5fc9add6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185d6036-4599-4975-9845-ac627128b793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f345b37-68ba-4a57-9d83-e7ef3e4d125b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f799474-b2e8-459a-8527-863afb1fa8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977265b6-5022-4e45-85f1-e4ef77cb5fbb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da12ed7-2d92-41f1-ae3d-b24d5a59014a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549f36c2-b6b8-48e4-b9ed-240b48d1ac56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a25886-091e-4837-a23d-0ba66af33fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8890f131-556b-498e-aca6-bd24a3b44ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3024499-a78a-4a95-ba23-cba98f3a7e11",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1241d851-c8db-49d5-b4ad-ab01255ee40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7dd07e-df8c-4db7-9343-f05ab004e90c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82402f84-b780-4074-bf53-39ee5c8112b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd35e862-cae3-4ede-ba86-88199884b1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad99c270-33d0-49f2-bede-91f05b885541",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094f44bf-45a6-4914-a73a-0a9c22ffbe2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c2512d-4dc1-4329-a4cf-fd0878c757ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210624f3-5971-4f0c-9f2b-71e746b2f7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f57a485-add7-4b16-a23a-10515ff7d2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6555923-1862-4f5a-b3a9-71242e1f02d6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fd7abd-697c-4032-b55d-100c8a300475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69926c0e-5c17-48ba-b406-edc43d88db9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d910da32-3fff-46eb-99ad-5411cbb5d0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e58d970-362b-4295-b72a-40fa5e1daead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1043c9b-ab1c-46b7-8cef-9abe038cf702",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36df025f-6f10-423e-8d76-2d8b15720190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ca0053-ee76-4518-a653-0002bf79fb65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3955b8fd-b10a-41f6-a2e0-b2f41efa7d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9321e115-0bbb-44e5-96bf-42865dc18b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5019a66-8ca0-4f97-9691-b6dffe6716dd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757277b0-caeb-48ff-922c-2dc7954bc53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932d7bde-8e55-49c4-8cfd-00d206630066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab7f3bc-6fb5-47e4-a2e4-b5952ace1f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9af40a0c-3122-4f25-afbc-05c6a73c97ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e56571-2e39-416b-82e3-379e8d331a93",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7036d588-ac9c-4dec-8e9b-cac40ead6eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476cbb6e-0efe-471c-9412-f5456c79d402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee306477-ab57-4f36-84a7-f9c686c5b475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "732d996b-8412-4fe0-af91-a795a2a43d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf7c003-331a-479a-a8e9-fb3b6442d769",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df84a6d-bfd5-4657-9f3a-5f7b897fef8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e669098b-3fc4-4ae5-acc4-af0d0ec5a962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3330cd2-8c5d-4edc-a479-990a92f8e091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afcaed33-8ed6-466f-bc17-2f75cdf0b9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143e07fb-2e8c-498b-865c-7cc15d98e243",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85109afe-4c22-4c45-a08d-cf13788a6dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6acfa166-b1d5-460c-9a92-e716720ec1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c57a68e-54e2-4bee-8b84-fed34b91ab7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50c80fc6-304a-44e3-831b-590e96d3b627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f2797b-65ca-497e-a58f-ad5073b79f2f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f1fe80-1ad5-46f2-93b0-b00764cc1d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3f3c4e-bf7b-4d93-9df8-abe6d4290c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbe7d2c-4c55-4788-a076-e2d36d1c563b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b39f0c9-420c-484c-a239-f05734587d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0341e5fd-f204-4112-8e35-6215fc65a68e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f8ba55-f07d-4bed-8d4e-fc585e9b5c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76703f6c-f3b4-46b2-844b-d0518eec05bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dac3b6b-c27f-40ae-9006-6f9b972b10a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd734641-3658-4d7f-b7cc-974bc7a273ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f17655-4fe5-4fce-9a98-5be7c1553953",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42135593-09cd-4c6c-bfd4-5b943aa393ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac411ff4-23cd-4305-a922-bcfe3384b143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a3bfa0-b2cc-4d07-beeb-096c2b86a11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a807d39a-d73a-4811-94f2-bfb989b01c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a680a02-92d4-4e9c-8a5d-7e3c68d8b63a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507e21ea-b2c4-4faf-b1b1-ace185d117aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e481c883-fd60-4954-a3f4-daccb752f661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21c977d-feed-4c60-b07e-f638c14b101a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3dc93a5-10de-4b4b-9782-838d82e2f94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6118ba-c7ff-4e9a-8bd0-9ac6b3b9c4e9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dea7131-f1eb-40ce-8382-1ffa3ff642e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a876b9-2df5-452f-9c71-0684f1bc3652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5917451f-3f20-4780-917c-474f570b4003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca2973a-2369-4d1c-8465-b4d0be24d862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdec94cf-0001-4fad-b547-e84d41678597",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ab56e2-cf16-40dc-a910-aeb279fe75af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6bf6f5e-6b7e-4f30-8995-7a2e0fcc3924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e2f412-be23-4169-9c41-3483526ee958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c003ccc0-a557-4931-8964-5f50e0083e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825e80f1-c05b-4227-9d23-a3c6ddc31274",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6687de5-1642-44b3-bd00-3543259f7106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867fcdcd-7e34-43d8-b310-ee3d381930a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c31fd0-eb25-4f23-b0fd-89ed13149ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "90394b0e-e803-4b31-8a7c-90eb5ae6a1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994d06b2-7697-41ea-87a9-de1f983b475f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748a4c09-3603-4a29-a3a6-d3745b77114e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5bb019-4ab3-4e45-b838-333f74704cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7a5511-70b6-40c3-beba-ecf4cc6ab4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de201eca-9400-43b1-92b5-c888e413485d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5932de76-b4fb-406a-929f-84c10025413e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179eb475-559f-4943-a6c6-fb48c2e50dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5376fcdd-38cb-4260-99a1-a36146fca6fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98618d00-de76-437a-af92-e085f09be5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d853656-9874-4c0a-9202-18b2f11710e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75a6d50-3fa1-42c6-aeb7-e5374dbd9981",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af796c6c-72b9-46ac-be37-b2014ab19360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85144a9b-a967-456d-954f-933d7173098e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735eb41a-da00-431c-b209-ec975958f846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dabcd3cd-2f58-44c6-b1c7-deed0d842d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e301441-0cd3-4578-acff-40dff48ab1d2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e731756-85ad-451b-a644-e9ce271ec0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce682432-a16d-433c-92a7-1bc8e073f042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f514146-4d22-43ae-ab79-1fe1592606e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2223ab2a-89bc-4b4e-a542-c9a086e56dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4838b0-e481-42f7-ad95-a839d8c6c9db",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274fee98-0818-441d-aa83-ff4bd699657e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91cc6b9e-d14f-4ca1-8427-db2465150bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e350593e-6982-4bf7-af4d-0396f3bbcc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aca648f5-b47a-46df-a5d5-a28ae6d08331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e2b5eb-c387-478a-9cd7-a6815cebb7f7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f2fb51-4774-417a-921a-89cb798db3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e5bf0a-d617-48fa-b94c-7c4a85341ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ce21bc-4240-4300-b648-a71f66a0048f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d23127f0-2ef6-4be3-bcce-542d8a616f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876d4282-4d4f-4d00-a58d-fefb1a614e3a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf62a40a-7058-44f8-b485-f7e7e1a32ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0aaf81-5d18-4ec7-84f1-647d7eb8e40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22707306-1713-47fa-8758-ee67c37b27b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87232462-600b-434c-8291-f77088633aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c286319-b389-4d37-b0e3-2c5aeab14dd2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ed50a0-1916-44b9-963a-480dc232c0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3c18f8-ccd4-4273-98a4-3a9f4a10db9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af716675-6b51-4307-b46e-597d741930a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c647b13-95b0-4ed2-ad60-169a9a833f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9834bb-96f2-4e9c-8b72-cbf0c53d65b4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba9c481-d297-4d67-a05a-401dfa509b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddee062-92a0-4e80-b0db-da49ea283ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224baefd-4241-4e96-9313-6f2870086504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a132da32-53a4-4db3-bd43-b8dea098e661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16c0b9b-3fc1-4ba8-9a7e-0548d11f98d6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfbbfc6-6ea2-4735-aa0e-0611abefd26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82788186-420a-4f7d-b842-86306eaa76f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ee158b-f13e-4ad4-8219-e7ff950b31fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "636fb88b-4919-42e4-87c1-e531dcc7acde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775d394c-9894-47fd-b427-9f53349ea1cd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d85340-a963-4266-a1f5-ee6f053d394d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5f93bd-e1e9-429f-92a1-9cac57502fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854d789d-39ca-4bf4-a8cd-0e21c4b14976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22c2b1d0-64df-4f76-b8e8-eec068a7394e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e136d58-a584-4417-a9d7-a5192c0b0ac3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e86046-1007-4502-84b9-80200f0c8c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119eb962-e9a4-4865-83bd-2bab7ba9ca74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcf9ba8-9f62-4bfe-a496-aeef1abe112a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47e53c5c-1740-4e35-922c-917689f7e84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd03f0fe-75a9-4094-b23b-8e47e17dbff8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbee76c-2f42-44a0-8b12-9cef63e5612e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89906f74-1b50-40aa-b40f-e07ca8e5cc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f39db9f-5383-4e99-a99e-9c203526482c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3fec89af-c057-467b-872b-2ca6a3f064ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4852aca0-56ce-4d1c-8521-019b98e4e735",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f10b97b-f224-4cb1-aff1-efab9ba9c5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d73cf2fa-2840-4f53-8984-5401d093d4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08eae539-2ce3-45b7-b6b6-f752f55e6f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a849287e-24ae-45df-a7df-23569d559966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9c48cd-ee13-4a5c-90ea-3f6551cd9db9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d24a2e4-97e4-4915-88c4-cb304692ef84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee2bf46-3b9a-406a-9260-97360c0c38f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fae9d30-1760-493f-b86c-850f7dfb0ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5036ac3-a920-45fc-8361-f34c7663574a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507438b3-cc8c-4efd-8cbc-27673c2d88a3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0b610a-330c-49b3-b91c-029942f3ea69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111d67b5-aeb1-42a3-9147-22c0979cf8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06c8c24-b8a2-46bf-a47e-b38fe120e864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "30a70a7d-c8d5-44b0-bbc5-bcfacbdceb01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fe613f-39dd-474a-8417-15766c55892d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b0fc89-84eb-4125-84b6-fcf5abd24699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43cc1819-41bc-469f-9365-2e7d1ab3ab6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e62ac9-7293-4dfe-afe0-db110d0637f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "71c13b53-2920-4fe4-a905-cc97cb66dd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cd1c1c-cc13-4f15-9d39-bc86f41f89f3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a529c93-160d-40f3-b9bf-37865155cfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1eadb2-eb0a-40ac-afb4-0ba766ebf2f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578ae7c2-2fa1-4d77-9b23-f3fb7c49af63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "95b6d87c-5f85-49a4-a01b-aebf9f663642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92faa80-898f-405a-b98e-0997720aed99",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a56cdf-6a16-46f0-90e4-1fee865d21ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cf1b24-7331-4de2-960c-02f51f4f9800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3bd10e-f8ba-4c32-bb48-0599159be219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "20a33d06-2076-4167-80cb-a5c24b518df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cc4722-e7ba-4983-9dc5-cfe89474b198",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed44b126-16b4-4b67-9223-38c69abe0936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1c2ed0-3ec4-4afd-8bac-fcfdf1385ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d983ff6-8635-4155-88ab-f840c3fe957b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "514a6c83-bbe6-424c-b479-d474ef4092d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f564d7-e1f5-4fb6-8218-6f09afe41183",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b18893-4062-4499-81a7-e9ab85a5b4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d490357-e9fd-4894-a6e8-4f686f06f06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da818b7d-8283-4dcc-a1f7-aac86a6f7ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "963d2751-a7ab-43a1-8e67-8ac4067f4160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23d290c-ea89-414e-8d7d-f82357b71ba1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b086b0-2f76-41e3-a283-83dc66ef4e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385a80c0-dfc5-44b7-9696-4c864fb3b118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab56c83-2736-432c-97ff-7553268f1891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "61d10691-f808-4f3b-adb1-014c32337492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c997b7c-4a77-4f56-8b19-6f0843f93100",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d59c808-c9ef-4249-aed1-87c14f103328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a01f25-8e99-4947-a9e0-879e2ab9cd71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6cb4ad-607f-4c5b-9ed0-297973ea9a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0159cf3e-3892-4dca-b82e-0dd2653a057b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa45a8e-6ea6-4831-98ef-8fd438b7984c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432e3a7f-367b-40a1-8fb3-176d43a14297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72185ed9-9a63-4f75-abdd-1ed5b1bfce9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460d2041-042a-4bf1-b6a0-9f1c4768b66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99a1ab71-c247-4817-92fa-141dde6f3cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae35595b-9d9b-4cea-9708-4ab032f4f03e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a102b5-3711-4ade-aa75-2f67ec846a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce6fbde-0ee0-4bc4-ad52-226c86e74fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804bfdc5-0cde-4437-9dfd-dc1b03a8a1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5459081b-be5c-49b1-9e5e-be6ab91b844b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76741ae-7648-4596-b1d0-e1eeeb27ecbd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd0369b-aaa4-48ae-a5eb-2fb2d024a9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36690de8-8232-44f7-a38d-52665fcbb462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b00e65-52d1-4a1b-93a8-f7609978bd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84291bbd-753e-4329-a7aa-1122ade97c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4a63f7-5dea-4451-9773-d161a06ba612",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0b0f29-a1bb-4391-997e-be9aefde1ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55146509-e09a-4ae7-b69b-cd853c66435c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014dc628-10c4-4421-b373-b0afacbcabe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0564b1-7aa9-47a5-8b41-d81517cb9597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1fed6d-8ea7-4934-92e7-1ff8ccf91709",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8236fed-d286-4024-a58b-272a2544c8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b3ca80-1e85-40c2-b817-f538b18aa5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7dadf93-5921-48de-8391-90dfe93fc923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4219e7af-37f4-4a1d-a10e-1c770392cb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8881aacb-db62-4460-8d27-2852c79da2e3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86194cef-89d3-4b98-bfde-d82e6c809d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c51cf6-0c97-4cd8-8e3a-c7d705743af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e08ffa-0308-4dbe-abe0-1a0f3dd90ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd319fff-acbe-4553-bb9f-04575cdf75dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f63c7d6-996d-43fd-a5ff-91895f22ede8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d265a56-025e-4f24-90e5-89808107a947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29987807-020f-406b-8a06-c5b8eaa7fa3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce349fda-31d5-47c4-b3a2-9337bf103faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "915472a5-b7e0-404b-8522-30629c2d0bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ce44d2-bccf-4b11-897c-7ef46a7f845f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cbf5c6-feab-4150-ac25-906a58e2884f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043f16ae-aa00-495b-b8b0-766bc3cea85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e802ae-3154-4ff8-9751-978b7fce26b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24f63669-5db4-474a-9ab4-011a78e8e1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea2bcfc-74b6-4671-a75e-6d2bac026f7b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec6a5df-db08-4e5e-be24-d573d0f198bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4151f5bd-f58a-4b00-ad8d-50335f1cda4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d628e8c-7178-47ee-aa8f-a6287082d6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51085144-1354-489a-a80f-fbfa644d541c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c8db48-1b69-4001-9d3f-fcc0cff7849a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4019edc-5184-4584-af75-f6031db48e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb7176e-f90b-4551-9f91-0935c45e3bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3839cd4f-f04f-4578-a04b-ee2d10fdd3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c678744b-359a-4a17-9e56-edfc00d96aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5f48ed-4634-493c-9a33-922007d0e143",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bd5f46-7d99-42ad-9703-21b3515a8af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0de2b7-3743-42be-9c82-c2675268ab09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32c9012-72d2-42be-8572-6341a9ffc76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6529ea5d-9ccb-455d-af82-e3341101e07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860a5005-9556-4f75-919a-a6e7ccf9d9e1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4490ff5e-6455-4bd2-83f7-8c465c5fc6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4b4156-dab3-4f82-a019-2eefb8c72778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47457fd6-4d4e-44a2-a4bb-e122d9dd9610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d2d0cb-1a0c-4387-b0ed-4ea3916c1042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371797cf-7e2e-4b76-be56-76d31cc2633a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939d7aeb-9458-4414-86e1-1794aeb2a3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5a74ac-8935-433d-a390-9ec393fece89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28baac70-001e-49a8-8e09-1920896fd29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e04ba007-f98a-430a-976c-cc665bab5838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984455e7-f747-453a-acc7-f0c20c353052",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437e35af-6a97-4b72-9aad-b9af12512f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ed3b5c-b3d3-43d2-b8f4-553a090177e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3303ae5b-274f-4f4e-af7d-2970b93d05fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "63486d1e-eb93-4905-9283-77d23f76fe64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353f5667-4d06-47dd-a988-7d62be442f0b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f5cb04-9d00-4485-86a2-7f683b5e9a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618c6304-725d-4fbb-9f48-21a2f824b866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a232834f-3944-4d1d-bc62-17a449b5a658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcad0b3d-cf3d-4291-a092-252b989adb55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3cb040-03cb-4b68-afbd-1f0065a9a1fa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c186ae2-1b92-4327-9038-c27a61cf1aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3af476e-c91a-480e-9da9-b8575d92aca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ce4a1b-5405-46f9-b0db-eeb867ed77d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "21b0aca3-aa51-4a33-af9e-e22d6f73275e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1040e87-c8a2-4688-b64c-bf4e34b4c004",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd3fa16-23f8-4653-8328-09653773680c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e8beb2-7ec0-4dd5-a330-5f825f3a90c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3eaf14-4078-4fa6-93ef-a0ff1b6e78f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "de39f11c-0ffd-4e61-9fe6-5d96655a20c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3fff58-bdc5-4a83-8e7d-7a10746a806c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4512e2a-6636-446a-9337-fe27d1c62844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc1447b-431d-4d0a-8f80-547bb88ec4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135fbd03-510a-4626-918f-d8a7e19cf8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5e62f4-f2f3-4eda-b1d1-7ba991e3f40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7da45c1-f03e-4be5-8180-30d5dff5c0ff",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b22f680-18e0-4202-8925-9396018586ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c261b8e3-9ecb-4113-8d6b-f32b58011aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e42011-a24f-4c20-a025-84521022a107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0eb0dec-0bda-408d-9235-7f49c3341a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e35cb87-164d-4225-abbf-f8f085abd17f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f927e9b2-76a9-4815-aae9-7e6480a195b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525d3127-eae1-454b-acad-130b8d25cb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5334f516-2029-4f04-aeb0-8067d232437a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f471ef5-fb07-459d-95a7-33af1620c4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72fb99b-5222-44f4-a069-32a0d2785253",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c45651-6666-4f42-abcd-cc4e10d966db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb81d04e-bdef-470b-8fba-8d6dfccc52a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227be490-2c9d-440b-bd17-1b6f8b5b6de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35ad552c-8f69-4c8d-9d98-b3f6e5a72651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41edcf30-9b8c-412b-ac5a-2de8ee8972d8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c2ab65-863c-4632-bdee-c9aa4101d722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57862374-5824-45f4-b2a3-39df6d270a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779b6356-38d7-4a86-adb4-7ae7f6954ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b656e62c-e2d7-4127-9b01-3def7542a773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b4ef31-de21-4ebc-9dc7-453cf23150ec",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bcb949-4d1c-4c95-8a34-15811df1aca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5910de8d-f6f3-4f90-bb58-ff407f1822b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa0460f-e28d-4d2f-bb3d-6953bab233a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2226fee6-3a05-445a-8dd1-46b481af34db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb963cd-907e-4c76-8140-b67f62ee3a33",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862700b6-c091-4b5a-8409-a3a01819f03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e224ce21-567f-4b24-96dd-f9a4fdd6d1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dce42b4-936f-4b25-9f86-755f6b748c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "08b36843-40ea-458e-81cb-f337bc174c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bea1db4-4ab9-4fc7-98ee-6e5f37357d66",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d194d02-bdbe-41a5-9cfb-87e05eb35720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07666d91-ac05-499b-bdf8-be7436697ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559a273c-7c80-4dd0-8dfe-e565b4e10f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e672bebd-eac2-4e94-8ab9-5b3a4bb81b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236f6dc2-bfa4-4573-b732-ba6622c62eed",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c42adc4-2ba7-4b1f-aebc-ab6e9d157e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fdbfbea-eeb6-45e1-abd0-961d91a5f1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375bfc04-f425-4ba5-8e1b-055f96c796ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "233e3704-9d5d-4d1b-bc05-2ddbd866d498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f6ea0e-7f16-4ec5-bb25-b492a13168ca",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e662997a-746c-42b5-85a2-84902040580b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f469218a-1c51-4ad6-94fd-fbc6c7bb90cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49e7b6a-388a-418e-956e-7f3c8e3724ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef27e86-1ac9-47cb-a2dd-98776f96b5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdfb075-daaa-49e7-9e15-a3305d0ddad9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f896f4-fabf-472d-84e8-69658fa236e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853df216-8ba6-4348-a727-88f242eea657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca27684d-3fc5-4af3-a222-cfc4e616a3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed39da5d-1328-475b-894c-f06a77d243f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13766620-a5f4-4587-852b-bc7dc4a6e498",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2402e7d8-3ef2-404b-b0bf-a15639ba16c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd69fa9-740a-4c0e-ae64-fedebd82b114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedb60ae-49fa-4d2e-867a-db81d311e9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e33d83-e91a-4fa8-a8d0-0ef874217549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07b3a6e-9f6c-4a3c-bade-021438d4227a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e1a648-302f-4490-82d5-4125d1cec7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75dbe561-dd27-4a88-9449-67a31dc03a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b31dd5-4b1f-4c1e-b2df-ad9e39e2fc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "014ac426-a3d5-4854-8d91-593b54e6216e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e78819a-283b-4987-bd3b-9e1661e79f67",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867a34e3-6ea1-47c9-9bf0-83ede787f96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b949296-49f5-44b5-866a-a46070d5abe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18cec64-c958-48c1-b343-89d048f5889a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07d4d7eb-7d97-46db-bf18-f722f1f1088e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0b08d4-34fa-4c57-87de-c749c99fe830",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec82067-f28b-4f13-a82c-ea35a0d9af62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fba4db5-9ff2-4b64-aa23-cecbd946acba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1941372-e7fb-436c-9c21-c4b72e04c271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d471163-53c3-4ebf-8b53-9ad6b739c628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a40321a-07ec-485b-b0df-454a22d3b839",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0ac56c-5029-4789-a1b2-775254f0a4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f39f1b9-d618-4965-9418-3aa915a53c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e51c75-f749-4f80-bf64-bc9805e7a858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "392a3d7e-e100-4405-ab7c-4247e5c5b1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32d9551-85ca-463d-bd21-0da530f90704",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d776d6b-b1d5-49ff-88ee-26fdbf92fcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a78765-2337-476a-b71c-92f6d0d838a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7792c225-7b0b-4763-9878-20c45e2c5c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9278ebb9-f80d-4248-9201-1848e2080a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c35bf29-9b3c-48e2-9b87-5352f3ea5524",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa1b265-7159-42a9-b46b-4b5e5dc70dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26112050-7932-4099-b4db-f4fa1a306c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc8b9d6-40b2-4e8e-83e0-ec2acabbbb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "370a5cc9-75d7-47a0-9c1f-290af46ee4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26453364-88e6-459c-ba27-6955243e4b5b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c50600a-c4fd-4d84-b6a8-7619d027d985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6dc35cb-b2ea-4423-aaf3-aa2a81ed587b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe0cdb7-f664-4158-a178-11e2b590def7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1af83085-2105-4ee8-9f78-80a9dee46495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4530cbbf-8865-471f-a546-b0bee8db2c86",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca51bee-a233-486f-8792-bd7ec881f179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae63484-371c-435d-ad29-85be23545e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c14276-7a07-42e3-bb3f-6974d5c86979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9959d89-6710-43f6-937d-fa2be76b2930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850d85b6-153a-4125-8d64-841eec96325f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62733285-e10f-4ce6-9fe8-ee77df2f9ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac16a56-1d63-43e1-b499-dd01a45aa244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95a61fd-036b-4c34-b645-fcc46e4ab77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cbbda3-9a58-4587-8c22-358329d83694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a93cde-6083-4592-93b2-d410ef32a15e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa2bf36-16f3-464a-b969-3b28bb0400d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096a33b0-f8c9-4598-867b-face652db7b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59df834-4398-467c-a31e-998de92cf2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c080cbc-c0a4-4665-92dc-88a946b4a446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cc9225-54fe-47fc-99e7-a33253110f59",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb153c13-2a55-482e-a4a3-29f464eb8600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a376be1-2445-4d02-9b1c-e7f4d6d4d59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dde0c71-650f-4dbe-aabb-3d4e06e5de95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f32cb1e-b935-4dd5-998f-6f22b8078241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d64fe2-de1d-4181-a01f-89f6eceddd30",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1537f0a6-a271-4886-8ff5-b17aad5252e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f20ca0b-97c6-4374-be5b-19fbd6c7cee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a517b7-99f4-4ab7-8bd8-aa20ea0934f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f53e12f-c64f-4f99-94c4-8b399d838d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707a35ba-b160-4e59-8a3d-c444a1d89cbe",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f542657b-3765-4e46-bb16-8f855adfb641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8790f4a-0217-46b8-8213-6d1fc25ee3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf8ef2a-460d-4514-8497-b6f1d5b17b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a36808c5-4a15-4bb6-937f-e779dd12c7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7663d51d-487b-4404-855b-6c145b11440f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8dcac4-46d2-4c40-ae74-20aca5755874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05110f7c-fe37-43c8-909b-7faca94c8b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d226b219-2e80-4ed1-8a81-4d7da8c7b990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1bb89c6-d6bd-40fb-991d-bcdfebdaff94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe104cc-9ddc-4415-81d5-d80ce947298d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a843de-3756-4e00-8d31-36eea6507917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0131b478-f735-4297-88de-d80035eeac88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7308fe-45e6-4789-b355-67aa1ba451d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9dbd2d5-163b-4141-9d2a-78814ab64be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c5d7e2-ab7d-4f6a-9640-7923335fa627",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7e33de-11d1-4cf1-aa38-61c2cf9a351a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d2b197-ca24-489d-a05d-f93bec4239d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28287ac2-b71c-4027-8bae-076bf38af475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6798d31a-6d71-4f67-b7a9-28c2c9c81257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fc3c67-e1d6-441f-bf97-76526a08de33",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5689d08c-9888-48cd-8bc2-46aba952b29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18be510d-7d3f-434a-8e7d-ae924cc06fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4943a0-ac29-43d5-84c4-afa0e5a71be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "570bab73-2ddd-40e4-9049-f4037b009b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234eb95b-5ca1-4a42-8bbd-a6b4930e016a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c268c5b6-b357-4ea2-b52d-da79ad8d2e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dcf9b935-f469-4fc8-a768-1468535ff5fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9ed183-d5ad-4532-b58b-a6e5aba814c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa5ceb2b-12ba-48e3-b711-90c435cbe3c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b7ec35b6-3959-4be5-8ecc-405e98cff139",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6db42afc-50fe-46aa-980f-15025fedad1f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74617c5-14de-431e-baee-19a6cc8b5628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "767c5846-73f6-49fc-8d22-4ef92685bd23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ad2bb5-eaff-4c83-a8bf-8c1173c7ffa1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a101811-45bf-4289-a4a3-80f9b422fdc3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86c1e11f-6b68-46f3-93fa-ac20c20840bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06cbadaf-60a5-473f-a99f-272e89dbec76"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52af1601-8dab-4384-979e-f0a00147ea2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d19885c-fd26-4fb6-b83d-eec9d5362803"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "91e447c3-9aad-4ff1-8773-3cb00b877719",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e65d4b53-d363-4271-85a1-72686355a6d7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "97a79293-af0b-453d-8856-c643a7ce3bee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "867f0016-7495-4ef9-a37c-940e9c649081"
                }
              }
            ]
          },
          {
            "id": "60538c71-2ae0-45be-9c19-535cb9c511d6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3968dab7-5a4d-4c85-881b-252bbc42c7d5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67b435ba-f1a1-4815-9ae6-01751c60fe44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7db1fbf1-221a-4c96-8666-4215d4cb9d06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23143b89-4179-4171-a5d7-9fc4419e5ac0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cce38761-0396-4320-9880-ba3a62860d91"
                    }
                  }
                ]
              },
              {
                "id": "6e8e5d5a-5306-49f5-9a36-833e1977b537",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42f14d74-bf44-48f2-9ecd-b0db18f1504a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65f1a5b6-658d-4214-8d6b-3d8526492e8b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4de8742-4b82-449d-916f-ae62767f6532",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8c6fc654-961c-4e81-a3fe-14af0d9616d5"
                    }
                  }
                ]
              },
              {
                "id": "179589f0-b8fa-4585-be51-634448311ff9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93db5ebc-e7e4-4620-b413-6783bb12d9e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "434db84d-aaf0-44c3-9d8f-e38d72483947"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b84092c8-0362-4db6-b11c-319a8533ecde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3e3c70e6-1a5e-42e9-9362-555dba102d8f"
                    }
                  }
                ]
              },
              {
                "id": "bbdbc91d-d5e2-48f4-ba6b-7ffec85d8f53",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f8cece7-9109-478c-b65a-ddf0ebd2763e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a9d7cf9-c1c4-42d7-ad06-8ffc3af0fde0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ae6580e-106e-433b-921e-4ecfa7bfbcc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0b3af7f6-e115-4b64-8ae0-8c75d020102c"
                    }
                  }
                ]
              },
              {
                "id": "ed1a55a2-d074-4da7-811f-d023c4e5bc02",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb518b7f-2ba5-40be-9c1d-57c88b6e956d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41b135b7-c6f4-42c2-ac18-6ef14b77c313"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "100e31d6-9452-4e27-9aef-d64189438219",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "44862ea7-c73c-4912-8713-b0fe394555f0"
                    }
                  }
                ]
              },
              {
                "id": "2b9ae970-eb41-4d9b-9f19-fc7400b069a0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcc04109-01ed-460d-a292-f4e5d34a4cf7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "204774b7-76e9-4e40-bef0-56fbb95758fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2631deb6-0d78-4ff8-bb0e-0de43a0a9db6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9fb7c97b-5c59-4c76-b553-4f124be8ac0f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07615225-04ca-49c4-90da-ec561c0264ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f83c1786-827e-40c3-8c5a-0592bfe70aff"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "600fb07a-e54d-4968-9836-a76cf7945ed1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d808246e-699e-4354-9cc4-c7abd9e3af3d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d07141b-47ca-4d75-97b7-efb5d92e12f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d5a94ab7-1dda-4c90-bc07-2ee5994647ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b761ae2b-c895-463d-b9a4-c39204c0fec0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b217887c-d329-4164-8fe0-142977322d78"
            }
          }
        ]
      },
      {
        "id": "e29fd264-173b-4c96-94c5-a8bede3d7d6a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "441da3e1-d137-4e68-8ca3-561284abd4f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b5a35b0-4d51-4231-845e-df15bfef923a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a98a78f6-b7a6-4e6d-8a66-59490b3f20b1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a930753e-2a5f-4053-a2aa-4290e63d6da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0860dbdc-4ec1-4557-8dd5-b6407abec2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877dfe68-dd01-4284-ac52-eb221f58e19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4849cf4b-45d5-4d75-af6b-41ff2b52ae67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11cdb44-9995-457a-add4-3c479ae78709",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7d04fd-aee6-4741-af91-b11551f46aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c327b256-71d3-4215-a833-507cf63142aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93822f4-6b8e-4a1f-9761-c42087dd90b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc02fee6-3e4f-4e4c-8fbd-c70de14079dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0045c0d-4ae9-49f5-ab44-897af3534eb1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b99aee-0385-4bed-9e26-406cdbf00f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda0fdbf-0f4b-4ff3-ae1e-8fc9a8cb13d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786e81f9-7558-42df-8e59-7d311a098b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6104718a-92eb-4e79-82b6-5d5ac9adaa3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa97391-ae1a-45b8-85df-50024fa19f9b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b47127-35e8-4dd2-b45c-aacf068880a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fe4e9b-5004-4071-a56c-c0bea00b4aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270cf919-ff2a-451c-b3c5-413b051aced8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68e9706a-dadb-49b9-89b8-00e06f3ad236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f58f201-2633-49ab-ae2f-787e99d55175",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc20831-a0c7-417a-9914-ac24bc8b7722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3a33a2-b4ae-4fb2-ab19-757cf5f20530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b410bae-c2bb-4482-a5b4-2c7152b81ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d654eb7-af13-4683-9905-1824721697d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ea235d-e83b-404d-a88f-0e17373fb392",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010f62f8-569b-437e-94b0-9f69754e363d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3bc027-3648-4c47-9efc-e8c942a502e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65e7ead-87a1-4c3f-a4ac-0af573b6a633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55a509d7-b79c-4c3d-9f73-5cd1e470428e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513b1b9a-ec56-4c00-b6d8-769921574127",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6813bcae-87a9-4968-bf5e-5339d8dda61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16dc31b6-55fc-4e1a-ab58-58faf15f96e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0e4466-07d5-43e0-8ba5-fc5a7e58c849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a744af-43e6-439b-ae6c-c746a81dcbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedbf80c-46c2-476a-99b3-a88c854ba7cd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4a34de-10d1-4fe5-ab7b-69d394379013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7bae0a-1c54-4a80-a0f8-091f879429d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0db1633-7386-40f2-ad10-eb302440d4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dabea14a-a7cc-4096-b25a-d44fc878484f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137d2247-3a54-4c4b-a7b1-0e494aa40389",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1680cbf-ac1c-4edb-ba39-4b5c4703cc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7d5594-176e-4fea-bcd8-ce73e2f55f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b4fe5e-3572-4415-9903-ce2a44ddf3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd77331e-9cb9-46b3-98c1-6c0d1d63e755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492157f6-56b1-4566-bc17-f5e1157251bc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76bcdf6-b4da-4bd5-a8c8-28ec155dd1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bccd2ce-5cdd-40d3-a41a-535a6016612e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fecb93-84f3-460e-9a87-24d72edc5e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "365c4c65-76fa-43fc-a818-d4e8c1002a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d797b084-b113-4db5-bea0-9640f1c15154",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0898937b-9f86-4976-8cae-28c072484b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6817a33-72df-46ac-87b0-02b8238d1e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908abdc5-bb09-4b1f-a46b-391b0d2ef6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "043bcc78-7d6c-4556-b9db-d732e8306b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c6118c-a079-481e-8a64-05155c2bc0b4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dd27f0-8c79-4306-9602-7847d77658e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee45a43-e888-43ff-a6a9-c86386ed12e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d14c70-02d4-4582-b215-1e58461f4d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4895f3c1-a989-4e53-8ddc-a6744ec0ba10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4981c45-8f75-411d-b06c-d50fcc7a37f3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abcbbd0-6d43-46b7-a8c4-de827ccdd9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ca4343-35ec-47d7-aa75-5322d18cfe19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e269a05-8daf-4a42-b808-effad9e0a1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6de784f9-92d8-4a4d-9671-1dc4a00c36b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba990a40-0e59-43e9-8aa3-df8842ee3b7b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d451ade-ba12-4779-b7a7-676d8cff7705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74434a4a-316d-4df4-aabb-9eed1cfbb024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7af7646-75bf-4b20-be03-ad772ce7da09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2e21c5-4eca-4a59-ac75-e6c7baf3459e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899b37ff-e50a-437a-99e6-d34e6e49115d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30290e71-3626-4a6e-b1d5-d35f7f1c2d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df389a3b-92bb-4aac-bc3d-f38ba6a45ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9163b7-cf93-4001-8696-0e8bf4f89a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "838dcc17-6453-49bc-a477-c4830abaf6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ac680e-0c35-484c-8e67-6e67a832d099",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52067c2f-3bbc-4bf0-81b1-d88371b9292a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8ffe07-8bf7-4097-86dd-e6e87525443f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e99445-1d72-4580-9fa7-7cbb89fac1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a55be2e-9c6d-4431-b797-607ed105c1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4865a0ba-70e3-4a9c-942d-d486d68f44ef",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54798925-b126-4ed7-8c06-2ecf745f5a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eaf2afa-6bbe-4761-aac9-818f5d9a5f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2885f7b0-ebe9-40e3-8a63-972cddf68243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "abf4c0d0-e18a-4391-9337-dd497d351d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ef4a1f-dafb-438a-8a3c-e476979ca868",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8b5e11-7fbc-4068-8411-e3ef3213a948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fa2157-7e9b-4722-b294-829bd44924ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88b03fa-39e5-4122-bffc-8414fc69d86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "50291ea5-501e-4a51-8894-1d3b36d7ad52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544b460b-e2b8-499f-8f25-d2ef0972ad0b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7d1337-2f8f-4057-9697-39ee378f6897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91918426-63a9-438b-a152-f68da7482ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2fc2f9-10ba-47b4-8ed9-3dcb9123e0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f10b4fae-1d25-4cfd-93eb-2869b3ab80a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665098c3-00d4-4f12-8d99-01e1f2b25ab3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e0f271-0471-4453-a526-d50f29d821ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf7ac47-d363-48c0-84fb-19e012166184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad0b45b-8603-4b1d-bc41-02c267c3f3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f95f7665-eb3a-45d0-be43-a800be0090dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e68cf88-94a9-4d85-8071-d896c4d65864",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afb8566-804d-4c97-9fcd-90b5bc2da098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5f5ec2-2182-481b-a323-9558505021c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b145f34-7a25-4f22-bab6-c3229a43e9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63600595-32c3-4a13-9e51-5a1f61451853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451794ad-bb5e-4c5b-87eb-ccd57777c94a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6924f189-c5a2-4a8a-bc7e-818d5103bd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0108a44-64de-498d-90e9-c134229f27a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef073381-1fa4-4b63-aea1-2d3948a79f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ee9065-650a-4611-b4c9-540c01b072b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87343b3e-0de1-4235-812f-c57e84dd543e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b118105-f4fa-43cc-bbc7-d154644dad2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f30744-f21c-4900-9c25-de7977fc697a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27466eb-fdef-49cb-b841-2fa943bdba71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b335096-c283-4faa-b2cc-0db83134b242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b7227d-636a-4d04-9a0f-10548759486e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b078fd-b0b4-4f4e-a4b0-500490e3e34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db3da5c-c394-4f58-9a72-ffd77ce97871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5b736e-1640-4c58-a159-da6c91feeb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51025e1d-02c3-47cd-adfd-b4e6a2eba283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85e9930-4634-4b94-bd56-74efbc963d8d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c13ad7-933f-47bd-a352-1b7b6e83d6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb9ec7e-8931-40a5-8dfe-5f995a4f19ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df161fa9-8cd9-4870-ab76-c723a048377e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90b227c1-391d-4fae-83f9-ab9ba19ab2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f49106-34fb-4ec9-b191-3529cd854720",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94db4cb-21ef-4a3a-9b96-9767eb5fe9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e737fefe-14b6-4457-bb9a-5d5edacf64fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2328e89d-2352-4ca7-a9f8-507a2049dfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a2de93-9840-4ef9-94dc-e3bdec69417c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9a08ef-39b7-49e5-ae1b-5314446ae05a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf3604c-06d7-4a7f-94a8-8f33e2c6822f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6789e74-20eb-477a-bfeb-f12d4f7e7c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8838bb1-37c9-4ccb-bf1c-631bf95aefc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67f2ce40-ab70-48b1-9f6e-f1f1032b221d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2078f0-2a5b-4310-b6e5-1d30b1ad6761",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dce463d-e51e-4815-ad7a-e238bf6d4a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463644d4-e076-4534-9f94-f448aaf9861f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca4fa99-68d3-4b6b-92d0-bf04fba6ffa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09ec8344-fcaf-43e8-b273-d0c33554316c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4c6f8c-306a-464d-83ad-afb4a6e0c630",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54867756-7f87-4688-ba1d-04f6b6e79665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7b7ceb-ccf9-4e53-b44b-1b2ab8f0f705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201ffc9f-baa8-4e02-9e88-4165e6eb38a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5843712-fffb-4596-987e-157c22cf6e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e376ac9f-b7a8-44c5-8f7b-931510a0b280",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d406828e-a0b8-459b-b405-52f9b3379a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2130a0-fd59-4b9c-b103-4b3c4b2ae105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1bac1a-8439-448b-afd0-2bd3e6ccfd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd1c577-a280-4e54-adfb-3ded415d4852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd909db-38f8-4793-b064-d7a09cf16d78",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e060ea1a-453a-4794-abba-233a6bfdbbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "625ea27e-30bc-43cb-bbee-cc99eacd144e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d9b680-eec8-4246-bc89-c44a4d1b49d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2fc4fa8-9992-4205-ba63-7bdce2086909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accf8c4c-cf83-4373-bbcd-bfb3db929303",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adde0ea4-f0f6-4f8a-a9cb-fbdb574214f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7690e66-86e6-4ac4-8bde-8444f8d64cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715c6537-71fe-4f36-b583-1b261777b073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86774ad3-cdf0-477f-9965-173345fab81d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "522d50a4-9179-4ee4-b215-1d8c5c74ec06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a27765b-1e43-4ab1-89ab-6529ff1f0d73",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb804ec-3b99-477e-b8a4-5dc3333efdcc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0d776e-5fc8-4202-88a4-9d7c10388418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a63571-8459-4184-8b06-8236de53de8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "060f2fd1-e0cb-4545-91ee-8603e21a9023"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9b2fec2-22e8-4f19-958f-b4e670daffac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b3aac0d-1f93-4456-95b8-db19614b5917"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98d42517-86e0-4814-80c4-759cf3808663",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a936268f-347d-4049-b7cd-b9f0afbe0a19"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ac966ec-08dd-422d-b105-5790e4d4ec4a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c698faeb-d050-42b0-af96-392982ea2743"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5567c4b-281e-4ec9-9db1-b89b479b702f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ccf274cc-0588-402d-8ea3-0fe2ded3de11"
            }
          }
        ]
      },
      {
        "id": "73af8200-5000-40fe-8a22-7a4ad31bfc88",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bd14f5e9-efdc-409c-961a-5bb36d9a566f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8930c67f-c936-43ff-ba0a-8ab0be5fe5dc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7a7ac8ea-5014-46bc-9559-57bf27bff8b3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e99572-18d9-497f-882e-38c3484466d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a13574-7047-4aa5-9d35-0afc42e78104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b34706-c8b3-44e6-907a-954ae0741629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed50ffba-67cf-46c8-b419-17906a2da685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ea3ec2-785a-4000-8c15-78fa94f4c651",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc16406d-1845-4f16-a908-3fd342a71e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeeb043c-841d-41be-955f-1a89c1d7f182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f568cd42-6bad-4ec8-9dac-e0da589b831f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58f4c467-cd59-4be4-b80b-595ea404e83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cee943-fc2b-4312-905b-b42248820d1a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5bdf82-08ed-4289-881f-030440e58597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c03be9e-0590-4a53-a550-f186cb0dde90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc5c375-b3a7-4c28-9336-cc62a14beee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a4d273-9cb2-44da-956c-149240d5562a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3c2f9a-915c-436e-9628-200c56c792db",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4484c1-1762-4ff4-927f-8164b247072a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881f2dd0-5ce1-4b64-8ad0-0ff7878de04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c1584d-a9a2-43a7-a840-2b5102177d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11e3bcba-fd79-4aa4-9dcd-428554a36607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9858de75-99d7-4c35-960a-190fe5d0340e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b3226e-a7e6-4f06-bd2f-a1ae96246544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514dbaaa-a807-43c7-a9ce-13e3869eb5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03dc2616-2bd8-4f2b-90a1-0cd1ea863e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1641f1f8-8dda-488b-a742-4d809d046c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ead9858-f72e-45e5-bcde-5d12b47c6ef4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a31379-0742-4b80-9cc0-4ac008df9c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95687668-51fa-4c0c-a129-e358c08ea0cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886a1005-f7d3-4ef9-8639-16f4650e5692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2b6f61-33d3-46cb-9ebd-30595f9a35e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f951b1-9d21-4962-9be1-aa8f9163fc73",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb33f29-dc3b-4f63-95d0-d8736dfed64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889815dd-bcc4-4bff-b475-20000a51cb73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f63941-58c7-4100-9cb8-602e553bafbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "23d30735-5325-49ab-92ab-e472188ac4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6332d91a-f106-481e-8c14-0720a8fdfd7c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23a3338-cd64-4e41-87e6-538f102cee19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225f25d6-3265-41c4-b9fd-6e2c64d192ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8fd0be-9287-4f8e-84fd-b04a3c8ba9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54447557-1dec-4c36-afc9-f79c5a377734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb22f110-746d-4d8f-bf11-6c0a924e0441",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8f2cf8-8072-4412-bd6b-28e1fac20e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91da5df5-2948-44c5-ab53-8e61a26c1342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987336ff-c199-48ec-9ee2-b28550bff5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b80cd96-b8cc-420c-878d-dd3e07109cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4090a192-1260-4f8e-9174-db96f58f331e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405ace29-1565-4cad-b198-68375c61de76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a05334-0ae5-4d06-b25f-e32e2166dbc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3965dfb3-f33d-4f63-ba0f-f55940224c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d9607d-76cc-4adc-9531-74a7ac60fdd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebfd893-baec-4511-a570-cf12afaba405",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e1030c-5114-451b-9b06-4e1365e7d9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54490d5-e4b5-4b75-9292-3473ada7eaf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3459b69a-0700-4d69-ad3f-79214e6ab839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf13174-6da3-4107-8dce-f4a2c4a28809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e01fc5-2bf6-47a1-bdef-57a9c3ed3a66",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c95d07e-48ee-4781-9f67-f25e36fc0b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a686e70-b7c0-4967-b496-d896e6c24312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ab0fb5-c987-4e25-8ed6-4e91f9132c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77f1a41f-d437-475b-b511-8f998b94c136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37490a0-cb3f-4018-813d-c3917822c951",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b46092-dc68-40fa-a330-b554b98fd134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c6f346-27f0-4686-b9c5-c0a44e27282d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1194555e-67bc-4b85-9caf-96d1da241f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8585d56-accc-45aa-a13d-eae9ed5e66b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b92bbce-b320-424c-b5c9-50ebc5bdef7f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4255455-b888-455b-9772-8456a889dbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee96b47-2bfb-4a82-a2b9-33581d1e8731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423e0040-1937-4ca7-9a44-ceda69a10d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4d0b4e-1bb1-401c-9dcd-0d321570158c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43aee5bf-a4d3-4662-a50c-8ada0d114646",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe0151c-7421-47c7-b256-cf15b612f17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ac0e12-a996-422d-bf18-7fc642ef96ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a39adb-2490-40ee-a017-9a4e2e78e64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfb88a3-8a0a-4a5e-b575-d909a188ba87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6150525-9b8e-4ec5-901b-4f6929639bb2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be3ad16-65c8-4e93-8a2d-eddc800930c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19833706-fbc1-4acd-a044-8b4892368691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19219903-771d-4c93-92c6-a5685451dd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b81216-48c8-4334-8cf2-8b289e42d99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45e4856-68d2-404e-8b49-1bfe08e95b09",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2d81c7-098c-45bd-ac80-e0f92b302ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281156dc-67c6-446f-b7cc-d569b61e5550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd05e1a-efb7-4481-8440-011241dd92d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf68b2bd-e873-493b-a82e-891095edf6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf0aa22-1023-452c-b8ef-f36f04b09dc8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f581e0be-a671-4fbc-a6c7-b45ef1eef300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bfb94b-4df8-451e-b68c-72004519959a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4480dd-2e17-4dd4-8d9a-ab4d33679393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bcad400-d729-4a12-920f-f188e75bb168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00b14bd-a77b-49e5-85d5-aa14d6bdfddf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997021e1-95fd-40d5-834f-2a2f1c23c879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28bdd122-eefa-4d4d-bf85-f23a08fcef9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1d7504-dad4-4290-a5b7-73b7f05cebd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cc3c59-31a1-4b9e-8111-9c006ba40dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5896359-7d76-4ea2-8e92-c4cbc7a1dfca",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc30dfa-32c2-4e3b-888f-526dfb7858b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14451901-9a51-48cf-88bb-43ff66dc55f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f50e8d-63fb-4202-940f-df4ff0af435c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90b97c68-a873-4183-b3ea-d17913d5ceeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4bf8e8-bd3c-47ab-adcb-5f88a94b1815",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c5d2d5-df43-457d-9e0d-7ab2328644c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a54ad65-a6b5-4cc8-96ea-1807bac6a0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ef0a7c-e728-4174-a2ea-c044b3117c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a3c0fc-56d6-4202-93f6-34b98fc1e653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5696e17-a755-46b9-9629-c506c19122e7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35420e4-2e6f-4262-b43e-1c5a4bdeea20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd35a8b-758c-420e-a2da-0bfb4c021add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92be6c1-953e-4293-800f-6198b66bc95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07014ec6-6793-482a-81f1-36b89530fa21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc657cc-0f19-4ce1-981c-82b730ea8951",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b60f755-715e-4b13-a170-16cbc27be9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfcd7c5-3ccc-4e98-9c9e-1a3c96041fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1dbf1d-68e2-4235-b505-d4740b449c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "912c6899-1291-4e7d-99a8-6885796ffcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cd27b5-704f-4e7f-99ea-5f55a18596f8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dababb9e-47ae-4621-ba3d-21035530642c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8017871b-977f-4707-8fd5-80bb81c2fdcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc7e157-9d89-4b35-81f3-cda6bf5097c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85137e2b-3377-4fc6-9ae5-1ed85651a421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799a2d0b-df18-44de-bba7-7be45db371da",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c2212f-4168-4366-919b-663b3c9f172b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3454df4a-8d48-471e-a809-8b1647e58210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5e44cc-ad6a-4712-82da-ed8659b20e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84dda3f0-6fee-4588-9918-8a49cd67ebe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9fddfd-cf43-4c1e-87a2-6799f64ed784",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3daa315f-7bfa-4195-bb10-299c7d89bd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830041b4-54ca-48b4-b2db-eff8c530a236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791f310d-612c-43ea-9d24-a6d097d5aa99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57772b0e-0249-43f9-9cc4-d216a0b8267f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e81cb8-057a-46d3-ba3f-9008320b9430",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370465e8-50d7-47d7-86f8-fd37346b3463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211e8418-f0db-421f-aa09-05434dc59b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64da585-ca61-4777-bc6e-bed309b35987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9504e8ab-c54d-44a0-bab0-452c4fbcd604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0ee5c3-8885-46ab-9033-507aca22801b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1dff2e-a2fc-4db6-94cc-488ef7328d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c347f975-bb40-41c0-9337-93692924bf27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e26aafc-9bc5-467d-b373-7b8c3d98c95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd125acc-e4e2-4957-8dcb-d542298829da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbc6daa-28a5-4be0-a1b7-a6d72034cfed",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0c5740-21a6-4896-b9a2-23a3e0422f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bb0087-4928-41bd-9af9-7628e49b4ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d379f4-001b-4586-bf58-4372b8d1a4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d94a0b2-9631-4e49-87c5-925d62388a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da79825b-3749-4d2a-93f2-e4dfb44806da",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a98039-69b8-4f86-a78c-13ea9e0258e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308dc634-6b9e-43c0-8429-fccb3251b5de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d97c74-cea5-48fb-b953-3a3edb46156e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a634b91-f699-4b58-9b36-18b6f2544f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a5fa55-2543-45d9-8d08-6aa14a7d6c70",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8045e9c6-9141-4593-a8d9-e5c364d5f0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01de5448-2d7a-4377-9fe0-3a1be8b0db09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81caafd-ead1-40db-9ae8-bb571ad5f503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab29141-b6ed-4caa-a767-2f3201c0df99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63503ebf-c422-469a-bf4c-8c40b13e9c8f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93232c09-e7ce-4e95-b233-9007fd116d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f854687-45b5-496c-aaab-3ddb6e311264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10fff92-1273-4068-a078-e7191176b13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6017998f-ca5f-46fa-b7d5-ab879a523157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a72b03c-4f5e-4b71-b3c4-b3dc3a80c1d8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a60d61-76f4-4c1a-882e-a90aedd85dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b26a35-2413-4537-bac0-fd695b55913e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5c415a-4329-4573-bc33-965bf788a388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "209e9252-6e86-4d0d-9b28-8f3a47964a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cdc4e6-9ecb-4bbd-8239-556cef4b05d4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edbbe13-70de-4b70-ae43-e6c27dc730ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b14685-e8ff-4b67-a46f-e1d93919b99c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00217d14-c38a-418f-96fe-db5a603ad7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f569586c-7696-4732-bad9-b983cd59f22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b6eeed-d328-4b2c-9c5e-e735fe0bae58",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57bb612-679c-45f7-b7e1-ff5bb2eaed11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7de9c1-cb05-41c8-b60e-b0d0bc64f63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28f658e-b48e-4959-b325-38639f6912cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04033158-84d5-4e1f-97b6-9d6fb1374337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8ca92f-0180-41cd-91f1-9d0d5a2c8a42",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5778bc1-3f65-4260-abb8-49616a909557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d51279-9000-4c88-886f-4498a5cdb6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840d0dea-9a97-45b9-a6c7-c040ba01009d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9855f70b-ea04-4bd3-bb31-a32b182badb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad55765c-2fdb-4c62-bc3d-095387a08e3d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dec979f-541a-4e36-8aa4-d830793257b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749327b9-8ed8-4675-a941-ee0af82618a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e73f28f-8b8f-4572-a0ab-8eacec079167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8ed467-be72-493b-a26c-ab731812c095"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89417c0e-646c-4888-a7ba-50542b031e26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a723c7de-96a4-48b7-8c78-9184ac50554f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f623e359-b176-4f01-bae5-5d504293685e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "83a78b42-4dd9-48a9-983b-c8a0706ac1e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c4dc13-1100-43ca-8762-61f6f445e7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "387442b3-8a0c-4af0-8c46-9597ca880d45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5dad908d-56bc-47fc-bcf8-ebb618ad20b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "368872b4-0e29-4220-b5fa-3d5579be33b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36387773-973f-45fe-bb6b-fc10024aceca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf6273e4-9b91-4e1e-8aef-bb53d2c3c365"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "406dc539-b058-4b75-8416-48eaf1c01ae7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dffcb9f6-6cbd-4174-a489-ba797a64b121"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b8f15d1-4391-468b-857d-d2eceb4a477a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ec291f01-93f7-4ed4-8a02-e98133bd09c2"
            }
          }
        ]
      },
      {
        "id": "9f45fc1a-ce19-491b-8528-bf87e4caba69",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8a1db153-7d00-4c20-ae6c-bd56e0c4bf7f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e59646e0-dcab-4a0b-b653-6a363a6d375a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "171d2d29-136b-4a9a-8b50-29b4b08a993d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85394d2b-8f4e-4ec8-986a-c90579fe9aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9312a267-6a94-491f-ac28-20c64c6568d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d217877-c00f-413b-9b74-8f84c11606e3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd49d4e4-393f-4b9f-a2ce-e67102ffea19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fdc2c74-1634-44c5-b182-4aa50544be8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56e1231-4981-4e6e-8568-f97828f2d823",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1c8a20-e95b-4323-9732-7e01f8de5e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b3121f-bf4c-4817-9592-3ba7813177b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f35293-9ecc-45b5-b561-0600c8f8e779",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cd677c-d536-4051-bfce-cdee94dce249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b1e482-f17f-49b9-ac55-c4674df0c904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b49152-3c1a-4fd0-aec0-5ac50d0604c0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbbf9b4-5bce-4490-8699-f4f260c4b777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d65864-2b79-4dfc-a59c-7253858e31e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8539cda8-fb4f-4ae7-912c-e0beeef57e46",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1596c5-cca4-40f4-9ffd-84c14df13292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd87a979-41f4-415e-b356-01fb91cdf942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7e8cd2-e107-41d4-a1b8-ec9cf4874c1f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b34412-49b5-407c-bb8a-d879fc7b3376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea0959c-298e-488e-9116-8ae3e75d4b11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d46714-db22-43f0-9e09-8f62a66524dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b085ca-c53d-48ac-8519-46ab4c1b0523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb41b1cd-53da-43fa-8291-acb4e99f49bf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedf8839-6b42-4c25-ba02-783ae1fc8525",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be01c243-8c99-4092-8aab-8a204bbd9487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924c871c-4ef2-471e-9c12-aab11c2d0b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c54861e-da89-4019-bdae-8e95e45e0617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb27a204-9db6-4fb8-b52e-8fdf7d02d7db",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbc0ad5-9b59-420a-9c8d-a009cb7ca898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d526615a-711a-48f8-8eeb-ef23987ce877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29998a6-0fed-42d0-8166-e1572041f592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da005ed-de64-4fb7-b264-d3ceb8f1e2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b23bd7-009f-4150-adf9-35e24eb1508b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a2ad94-80d8-49ce-bc84-26e60b5e6cfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f23fed7c-31cf-496c-8f27-24620ca5d0cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e40229a-c8bd-46e1-a075-5074bba52dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d51f8aa-6fcc-47a7-9533-930649eb54b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd58525e-f7db-4519-a103-f1bb782f6108",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb889324-bafd-4fb1-b8b6-0f4ed80a7dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9fd3eb-a11f-4e04-aca5-9ed9c920f424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0747ab99-0349-49bf-a1b6-6de2ca68795e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc417e80-e216-42cb-b6e1-a794e8f87532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e839d0b9-1f4c-4c3e-9125-6422bace4b36",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367c959e-1c93-43f1-a29e-05d5967085f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730e62b8-8d7d-4046-be6d-92c40138b21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27acaba7-c951-486c-9693-0baa24499a8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f025084f-e17e-41f6-894e-818cdc59ce8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ba1106-8904-4d6d-8a6e-8ae10bf9d5e0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5947ee1b-a0b9-49a8-97c6-cc850d593f92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd0b1815-7766-4219-934c-8e15f773e064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47240cc5-5cd0-4a7a-8939-64575617eff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae8d542-60e1-497a-a202-1bdc84a7fe26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4d9f7a-0864-4fe3-b88f-7aad53e1b85b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d058341-ba10-42e4-b9bc-28dc52050157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "245c325d-5a96-4d8e-a9be-a8d2773b4f37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3d9939-b503-4a57-b96a-7269f268cf13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04fdd3f-ec9c-45cc-b82b-7b9936cf31ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987bea0f-d215-4c04-aacc-14729767a828",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bd1f92-f6a8-47d3-9d2d-c23f83d9fff3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52b300d3-0412-44f8-804e-0890166a99ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61ff0b5-e9ad-4982-980b-d68acc9c61bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d45f5d-c421-4a23-a431-2a3d9c2fd9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1023c5-88dc-40a0-8fb2-2543d9da31f4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42868614-99fc-4b0f-8fa7-dd85c286bd01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35e95df9-6e7b-454d-a58e-f6ebad2b2963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80509a3a-7318-440b-803f-616883251242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b6691d-b88a-4788-b5f4-a1beb328d77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d774d8d4-240f-4790-887b-570049488f67",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a846bb1a-791d-4bde-a6f6-25ed0eda17ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2135fe96-b673-401d-8e46-a7322f350128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f12a11-287c-47f9-8a0f-483157e57fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff5541f-5c97-45e5-bd74-5f6a7672a8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c1059c-571e-4288-b6d0-1267d4adf489",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e067f87-b175-4385-955d-fab07dafd2a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5f0df1-a29d-4f35-b801-7e38fa9087f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b2795e-4cea-4ae0-999b-d2b0ddb17fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92664ea2-17f1-4353-b71c-e742dd8e0e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06efe6d1-d3b7-483b-b065-5a0e1767ea74",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e794162a-03a0-4bb6-acba-10a618f8179d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7fe012-ccf9-4e1e-939a-b2c9111b2297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb088d9-ac3e-40ed-a794-01c51352ac5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ffa45e-fb45-466a-8825-82f8f1f6db9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bd90b2-bdd9-458e-abfb-e55370903633",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83af5f0f-5182-4180-8681-44b867f9245d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f02228-9b96-4f75-8c7b-d8ad927ba47b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2b18a5-d18b-4f9e-a535-1275e8220cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c87c824-2914-4cbd-970f-f253586785aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a455ff3d-bfe4-45d0-956f-571d259b1c83",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5090b7b4-d25e-4bc4-97ee-cec933472719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28ce303-bbe0-42a1-98e9-88338042e01f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c442f4af-69ac-4d8f-9c61-2bb4f3053229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd4c435-c724-4f70-9d03-0fd7d55ff282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1954091a-e77c-4705-b577-39b31423d5f1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcb9614-35cd-48f7-818a-6fa313c8bbaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a74fff-0f2f-48a9-8066-a075d393b343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5f3fb4-3d0b-43ce-bb27-adc06e0b97d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8b6e3e-eb83-4aed-b9d0-214c62ed57a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fa0486-bbb6-4a32-912a-67c5bff4d831",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648956b3-8941-49bb-af1c-3ed587e7a722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5c2612-831c-47fd-8c7d-55c2307e018c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c914743a-8497-4912-b9b6-10ab0e65f53c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8dfeb5-d498-4ddf-8dd4-b444cb9e3dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2c7ce6-615d-4624-adb9-e1742306867e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ef6134-5586-4ff2-9ce8-af6b822cf26d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8425f46a-8f3a-4cc5-8f3a-1304f02a6f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10d3df1-48be-44f8-ab4a-22a6140fc867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e6450d9-91f9-4ea5-b16d-fb44338e1872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ad2f20-15f4-4e61-9b1d-06c6d7d78cc2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0a5e2e-85f9-45f7-90d1-e9c80a9887fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f47c08f-877d-4391-8f7c-78056976a7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e280f09-8fb6-4a0c-95c8-9daff33b7fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab41bd46-2f44-4f40-ab4d-0d5fd25eb20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9050b89c-0ba5-4036-af6b-624e9e0afb97",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c7e92e-e8e6-4f28-b84f-f6623882741d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0148c50-fc06-4dd0-9030-5f3848c616e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9c96f3-16c6-4097-ae07-042abcddccea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cbb6709-2959-47bc-82e9-8fd65e55f661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0d16c2-fd12-4dc9-822f-ea09bc770b55",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13152f5-1a03-4862-a843-7c8983c4cc37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b21e453-6604-4751-98fe-2f272094be85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28d42be-aa8f-4827-9b5b-36b95e06c9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95824e11-0812-4de6-8474-18d49700a4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e977b1c-9a65-4747-b4bc-39b2777d3d42",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b4c551-96c5-40aa-b84b-9f1b26a3d7c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89ed54b-7c06-47e7-9220-313be5f18cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11800dcf-745e-4ed7-89ec-240431b8872a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527927b5-ba00-4b3f-b425-6260c601597f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799a77c6-47b7-4411-bc9f-869120286393",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf4ff55-9a08-4c65-8475-4b3af1e11ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5ba9dfd-80d5-4e24-bd24-d46a0e7c1c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a5c701-0239-4350-ae9b-d61c5847fcf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c7fcdd-c04b-4aa9-98fb-acdd09d9b272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ffa407-3b21-4c9f-a856-12efc5083459",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f4eddd-0688-473a-987e-7ee44dd6f9ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aa1b4e6-fa62-4ff8-8b00-1a962e3dbff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f978dd5a-2e85-48c5-a646-3b0ee2c24588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a4ae2e-828e-475e-9150-c80cecf7ef39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b398acb3-c0e8-4a71-90b6-35499d144eec",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4557c9f-731d-441f-944b-017da7e0dda5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf3add06-5c2f-4753-b8fb-89ca33aeeccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c4f40e-9744-4c5f-9b4a-4016b38576a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699fa3bc-fae1-4bbd-b5b4-6dbcf779c05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b736acb4-0f02-4190-9d0a-7eb691fb2b0b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22745432-7844-40ba-9917-83396c762e45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49850dd4-01c7-417b-bb25-24f1b8e2bd4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f85f57-f5e9-4fdd-984a-64f11f1ff26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da3947c-1e3b-470f-93cd-2f8477f10627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f908769a-7f4f-4e85-8241-1c0d187bc79c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4517835-f06d-4955-ab84-e459e32682fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2afc3779-98be-42a5-8bdf-11096d881e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16469023-088e-4038-9cd1-28854a9bfb19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967c6da8-e99e-43a7-9083-c34dea088b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9e9a53-4a7f-4ca1-ac17-43cf05d565af",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb9a672-d885-4df1-b966-9d545fc63ca6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e842d76b-fefc-4ac5-a2b9-656ab8a50776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef254943-8fda-4d1e-904e-e59bad631271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a29bd8b-80f0-47a5-9926-217b5d6c7b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdb96a0-28e9-46a1-b4d6-0b2698f39ac1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ffe249-f999-4552-9a76-c823d760513b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "123016a5-ca43-4732-a618-1447e678ce92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508489d7-a696-4f6e-81bc-f2d1de6b4990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708ca55f-820b-4410-89d2-4699d9ea7a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5952ab87-2a1e-4ea4-be54-d552e1d889e8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822e572d-305b-4ec6-8759-4bb456390db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a877b1dc-fe30-4e66-8160-ee696fcf7a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c542ed-1eec-4b2c-a2e7-1dde1e6bb5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80cfa8a3-6bfd-46bb-9e88-d14d24b18476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a08d8d0-ebdf-4dfd-8d28-7639f5359006",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d2ee75-9b61-4f79-9a78-3199feb5af8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d153df45-5a50-4268-99f2-2b960eebf8f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de863b0-ecb1-41b9-ac3c-0cdf09b411f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4feab8e-c0fe-4864-8fbd-3e5b18e6ecf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c95806d-a3ec-47ad-8926-6d123573510b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91bc5a2-d7cb-46e0-a06a-7b3b084435f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272ff53a-968c-436b-bda6-f4f89467ffb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f1f697-1713-4454-b756-7bac3eda2b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b76b90a-d637-4b2b-8371-7c8a2ee37f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b4f7e9-30d1-4549-9258-c48e8a954951",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af106c5-68cb-4b5a-97b8-a43349192cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0852fcd0-d43a-41d4-9023-99e6ef68f92d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d10519-e860-4ff8-a619-7826323b919c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92cbd0d8-c20b-4d4e-a34d-a4f58c7f66e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de15d24d-bb41-4c64-aa68-88de369d9f46",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad4e5ae-b179-4f27-9438-814149f9c132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9573ca40-a018-4e26-a389-02b1e89b4528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a581f1-3523-4ec8-85af-3f3b7486c7bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc8679d-6abf-4b4b-83a4-086c3a838429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d256c6f1-684f-43ab-af87-26e09cd32f6a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc509740-e664-49b8-a2fe-1b0972e60f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3468394c-19ff-4434-9a70-fd6202894683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "737743df-f261-4a99-affe-e79119b4f507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e986596-5c01-4b23-90d8-5fce1295364f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9847dbe-d898-440f-ab48-b322a1e3a052",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfba69d-83d2-47cc-b17e-cdd720218e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a2eeb5-0a19-48e1-beb6-dd3d0badcdbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d61e52-a0af-4c5d-85d6-52231d4e85b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18becf21-354e-4ee9-8f98-69516ad3aaa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbc5761-16c0-4cf6-ac69-3dc214dabeb7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019d28cc-12dd-4b5e-81f8-3bdaa5937dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e5a618-7e8a-4b75-9089-dac161c048b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c7a78d-006b-4c41-b7f2-2d7536beb895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e727139-ed17-4e55-990f-81444d7395cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522520ca-bf59-417a-93a6-1235bfc4b170",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ef267e-6b41-43c3-8b9b-bea2634ba52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fdd2b7b-759b-4d0e-a36c-7b3c60f9a990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c50623c-9f86-494b-b5bb-7962a0b3855b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0530d628-0ebf-4b68-b52e-8d060f4cdf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378ea98b-8fd1-4fb9-99ea-ef927f2f9a3d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbffa74-f9ad-4937-b4c7-e7bd5c19753a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c82d42-9a50-475d-9827-c1c1dda7f598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3ecc17-02f1-419b-870c-23fb28898334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f71dcc-f932-40f6-aefd-c47207a5c301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9155763e-8257-487b-9f4c-e20aa7e7b7fe",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f67a30-57bc-48f1-8067-2d4879b57c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b0b7e1-2606-461b-afb0-3f4aaba8b54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "603b1ae4-49f8-4449-8f75-6fee130f2c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c117142-78b0-4e95-b1b5-784ba0159f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9c576c-7ccb-4707-8f48-047325f16236",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3b3bb0-f55b-4bd9-a74d-15405d5a965d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf1c8d6-fc01-4094-8603-ff5b9bbafde5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb4e7d2-5078-4a0f-967d-ddc801aac966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead8e314-1e8e-4b66-aa3c-3d607254d302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7531d95e-0e0f-4d64-a55a-2cff92408ae8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d418904e-494c-44ff-9774-147a3c1a7d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd786d6b-12c4-4c6e-b146-67c3f0fe23c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c683bb-a90b-44e3-a71d-179f677fc776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61ed7c6-a9c5-4b86-b76c-a6cfd3dabd11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7686c7b4-e56c-4bdf-b7a4-9bd140d5a662",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e2d65f-8579-4639-8c84-72c02dc54ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21741eb-cb63-438c-af18-fa9c09cc4c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cee6edb-7fe6-4153-92fb-4ce522dc8fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bba9ba-07a1-4ece-ab09-72ea1a60f431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8660c9-cdc8-41f6-becb-e3603cf05438",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05fe644-9b83-4486-ba81-d9d0b0e03a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc034fb7-a333-4cc9-9d59-3e2bb29bda97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00321ce9-cb6d-4d32-8680-da48e2a924fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b6a80f-6319-4224-a090-886f56e71659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffba61d-5546-4704-97be-c6dba7d91a8b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d852c679-12c6-4f79-bb76-681df518faf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e9ceb7-7080-4ba8-b637-3a57bffd35a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e8e649-dedf-4b14-bb75-ff15375e5f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a9b079-820d-4063-a123-52995b34b3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1103339-eb27-46f9-b576-665f9b17c5d4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6633c7b2-9c3e-488b-835a-a7630b6030d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17629051-74e5-42d7-900c-8a66d44e09c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a83f15-75c8-4666-86bf-00f0a6c651d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb68a732-2dfa-41e6-86ee-4b5420788679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db54e364-c891-4b5b-84c6-8d222a09277f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac2eadb-6f37-439f-b08c-4c8c53615ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf56c470-0f49-4b64-92e2-f02844c9f6a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf30b31-834e-457a-9aaa-a61c6e771bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4c69dc-e9cc-4d45-9169-13624501b3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7ae48f-a34a-44c0-9733-cc4475dad4f7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a455a1a-de41-4cb4-a6ce-03f3ca6aee9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c9a814-1fdd-46b7-a5b0-37df0662b1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7599f9a2-9eee-4642-9811-dc09a04a1e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1050ae54-a400-455a-b8de-2c7b2f650bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1443e05-f3dc-42e4-ae84-ef078b5dd285",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2699da7-f16e-4612-a8f2-d457e459b706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf05d989-a730-4d83-b410-7129021f603e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5781c82-979e-4a43-8aee-fcf906c5da66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b7bb21-7222-46c3-85d6-cf3edf51e9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c838e401-2e94-4a79-8e44-71a80bd44f35",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d9b4fd-816d-49dd-bbe3-62018dc25a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa4e5a7-5327-4683-ad7d-ec82976ceac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d271820f-3757-4104-b8ba-de521afd05b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60722ed-3dfc-48c0-b2c3-5d9e8ad2c769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99971660-9958-44f4-b5e6-df9233e3c0b4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebb02bf-8635-4711-ad5f-395cb1bfb684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d255e51d-9160-4420-b748-3a4e681176b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d35d67-4e5b-45af-a0df-08f56a7d3d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6338002-dc26-456c-8569-09bbef3cf804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af56b56-4d39-499a-ad3e-eb0b64d8a81d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016ee31f-452f-4ae2-aee6-f3ee58de622c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fe71a7-1dae-4851-a3c1-64906b6b71a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018aa91f-2d04-4086-b78d-b691e9abfccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12de9e70-63be-430f-b3eb-3675ece9e27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952d1186-9b66-4b6f-bb3a-39e450914f7a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60769069-1eec-41a9-b98f-920a2b7b2575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481f30f2-4e34-46ac-a234-bfca2186ec56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fab125b-21c9-4926-93be-88dd1efcb5f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99819d56-6030-4c6e-9453-f22b27199742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b884c1-f1bd-45d5-975e-adfaff731e2c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53917f19-cffd-4fa8-84ae-4836291d06b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef30f96-3aa6-429c-bd8b-16b46dd30ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f21dda6-ba76-4a81-8e69-7a9b5b8a8966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3c6bc2-07e6-4749-a73d-c99810fae260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b75e81f-0e57-4b22-b477-58fae8eb0b14",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0480be-6a4b-4f14-8304-ef7fa5cff586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18572dc7-7674-45b6-ab35-ee34e0a76ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e7aca8-070a-46ee-a85e-8e251ce38a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5adfada8-e839-4652-95b8-37dac502d7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772b02b7-4506-4214-8a56-a79ca5ad2362",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c1d8ae-7f89-49c9-979b-8a5eff8a246f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174b1d8a-ab2d-44a5-8547-47bf4d5a000e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4039a77e-bea2-4e97-a260-d29e4208d153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7149556-bca8-400c-8f37-d48e04b07fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bbd83f-c959-458f-a028-7d5c147245c8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42751ed5-a46b-40dc-876b-033c7bb7bd9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1140b58d-bd96-47f9-9c76-53ab153f1ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb89bdc-ce9c-450d-80f6-de3bafeedfe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6744de-51ee-4e46-bb83-cb7b596bf199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164c9726-e243-4d9b-923c-f6d8c28f7a5c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b90994-81dc-421e-9a5a-e205495dc0b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f84106ba-1a17-4e36-a11e-b516cea9035f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3799cb5e-7ef2-483c-a1ec-5791e3b39109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57da8fe3-5fad-486f-9d34-4589d974ed25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975d91f4-1069-48e9-80d7-54d9a390d287",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1946f2a6-c91e-4dd2-a6b1-578addefcdf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c259d57a-2b86-4d97-a44c-73681a26a882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9aab10b-a89b-4ad7-a8bd-99bc3866f315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972d7396-9eb5-4de1-98e3-3f3da955dfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf455e2-06d5-4dbb-a0d5-5f1d1dded05c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3705ef-bf28-49d1-9ed9-6ff38acf2a23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "383183c0-4777-405a-ab70-2c4877bf7444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66147f7d-84aa-4220-af96-f2de8e0648ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42784091-e194-4c10-9b55-36af70f544b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4ec560-6456-4e13-a82a-30ac3bbc1f72",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f111f20c-2351-40ca-9f4b-b1cdfee2ccd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef6e5009-9cc6-4878-b6fb-491d7c89aa86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8619fa-248b-4859-942b-f0c37eb6d6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd94b13-687f-4bc2-8879-3bb668173a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773aa6da-28a3-4f8f-8fd1-6f934050b9d8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d97b0f7-4d90-4177-ba60-2dd07a5fc4b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1658abac-3ab6-4cc2-a3c9-8dcc5344931a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d7672a-4852-4092-9e57-3c0e914bb4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a1087be-673e-45da-838a-ed96ed069256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b82b8e6-58c1-4c38-b48c-bfac76bdd4c1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7320f864-8c03-4c2b-bfe2-38ba9fc8eafc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "478fde26-6bd6-4100-a0af-ffabf89a1773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070f1451-d792-409d-a004-e350994a16ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37da514-8b78-42cc-ac26-cd0c44f69e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d6dabb-bdbf-443e-a6fd-e78e36a28fac",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021b468a-8600-4427-a3c3-4d058729003b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34fc43d4-e5ff-43a9-a9d6-a8621166ee5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df19961a-6c27-4208-97e5-2c4b12570668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c48157a-5bed-47f1-b75b-3a3dbdc6a6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3bdd85-2bd9-47de-b92f-8374eb16696a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b286c7c-c063-4308-9a85-5bb68a3f89b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2581f6c-0c75-4f8e-b6e7-6e749b79df9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea75f3a-bb1f-41f6-ba1e-fc8baf828ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd31c56-0f9c-45c6-a82d-bca1b94e2d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c730d93-61b7-4464-ad07-fb5cb9afde81",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74490209-0782-4971-81e4-3a8fb556e581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c81dbf51-ad6f-48dd-809d-e07c31a848e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcb49e3-657a-4373-a654-03cb2b11ae3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0599c59f-f169-40cb-b174-d0d5e31ce5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7455fc8-4f34-4d6d-aa40-447171255e41",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e481909d-47b7-488e-9afe-cc5c078cf5e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf9286f6-b31f-45f1-b592-c3adf16a53ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390e8761-cf64-425e-8bf4-fdc34b0d3ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f75313-1371-47af-9173-f0d7a5aef189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3eb500-6f6c-41b7-95f4-2e9c41651412",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c30c8b3-e2a1-4772-8693-479f49d49776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8906cff5-4e97-46b3-a6ea-c0c7a3bca859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8dde36-6c53-4659-8879-a5074fbbb644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a2075d-645f-4300-8ad4-408b23e8cf33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224c78a9-24b1-408c-818a-55749cf04ca7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e45366c-611b-479f-952a-65a5e7ed2be2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7c013a7-2b64-4e44-ab1d-ece0bfdbac62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b0d9c9-1c92-402a-ae6d-85bfe0b7a47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57795c08-2202-455c-9b30-2bb2445986c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a160200-6615-4673-a082-6f6ad3b7e538",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d651f4-b024-4508-97c5-2a5473648542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d7a232-07a1-4d8d-a614-4917c244a20a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a56809-ea45-4843-94b6-1e61b0d8b963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7225cc-5869-4746-9764-327e00d40ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c2628a-02a1-40b0-921d-34fa18432150",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5d0b5e-7338-4443-84df-c2664e7498b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a0d5304-e39f-40ad-812d-15cfff43f6a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf6ead5-25fc-4a12-bdfe-630e008392c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7df48b7-1555-4789-9153-c2f8c5eee436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354361a6-ba76-4c36-b633-889e50851fd1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7600e818-b290-45ec-a26a-ef10c1568768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db719e4-22c8-4159-b252-bf8e2312bbc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3394d6-0b8c-427d-b917-03d9ba4c592c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25795d17-1980-4617-a0a0-1a0620a516c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21930f33-aadf-40cb-ac39-59a02cd949cc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e2d4af-a032-490f-b62d-7f1530f73cb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "394c226a-545c-4eb8-95d9-c1c79e4c3c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bcc951-645b-4ccc-a7cc-cd079f2f9c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db15788-9b14-4730-875d-b23552e57340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d60368-1296-4db2-b4cb-09a19d099256",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5b1d43-04b1-475d-8537-e194a1bc3389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41235917-703c-4b09-ae53-a55df1ffa458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "324fb7ad-867f-4d3a-a8b3-9f1f9df73cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8094eb-48c8-475c-8086-1b7724fede21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc43d85-966d-4b77-b831-94464a206e8f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d420fb-4cec-478d-bf9e-bb250bac0838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc05eca-e22b-4ca3-b945-487ed908f7c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8129384f-c8ac-471a-b056-d6be465c0853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "843e65c0-98b5-427c-8e59-1fd086ba9adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf103c22-e194-4f00-a398-ca80f347d9b3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac4e4b1-2480-4b74-bae9-5e3cdadde80e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f2186c9-feae-4984-8eb5-491cb616f6ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50dbcaca-9aeb-4f12-966e-f431d3efc321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b710b12-2500-4bc7-bfc2-2d73724d1ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406abde1-78b1-4fe2-acb1-dfb0e4f4ea1a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5478c39e-62eb-40d8-bd7c-c2802d06cdd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66a4bba1-b38c-4811-8dd5-952f475beef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab78830-fddf-4188-a605-0294b1f9bdbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1766b6a8-1afc-4cdf-96ce-dc5d90a6f4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfacf168-deca-4581-a7a5-16d082979641",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a13689-f00d-426c-909c-41e1a6ff1527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbbb6fb2-1226-4b92-9638-25b9442daa03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de4925a-0c25-4454-9d34-bf8a65fa53c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0530b6b8-7365-48e6-96cd-d72a00b7f9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d90fee-dd19-4878-8d42-daee45177c81",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81516ea7-3ef9-48ba-9703-3683487dd659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61dfa90b-d474-4e60-aa7a-5ac5052fd12f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "905fc7e9-66c3-48c5-8492-7e645b120234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe84c570-cd33-4bbb-b168-3513594faffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eacb6fc-c520-4072-bef7-173c5d996acd",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61316975-687e-4a74-a7d3-f46f38167569",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b577a84d-6695-478c-8206-8c8ee3efb3ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9956eb-3db5-4d60-9f1c-42a7c8ff48a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859860e8-8d8f-40e5-8f76-c8128140451b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e0ae66-0859-4a46-b59b-d648f07d00c4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cc2d8f-14a6-4709-8168-5092a7ea253e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2ef9681-6898-4126-af8f-7422c71768c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442c67c8-5085-4973-bd19-24f05bbad9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e02db74-a497-4953-ae73-2cb9750ff933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767ac852-74b5-4001-b0e2-8758dd825a39",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b5e6f4-a119-4665-8de4-193c2aecd1f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f91d9d6-70db-4309-bfa3-71524c495a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d869b5c4-daf5-45d7-be31-6d2c7b4cbea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e1bed9-8bbd-45ec-87bd-364cbf3e2def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab32296-2b67-4a61-896a-8d05f5f7d4b0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e50b2a5-73b9-4ea8-8513-ee191fd3bd56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72f6d97f-1717-4e37-8a46-1d6fc75f5d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e54ddf-e5a2-43c5-824a-bd0643a761a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf1e5d8-7683-4cf5-9dd8-cf713d51bc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6fd483-a161-48b1-a282-903546abfa2a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b381b666-9f35-4d96-9694-84376995e00f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c3c42b9-6a08-4bd8-ae78-d1f931148ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d23eed8-ff4e-4e73-8f4d-7173f27147f0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7f7a4f-ba9f-44f1-a954-72cc0ddef130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a16a8b-0866-4f64-9454-6d0523348ddf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28673af2-f968-4662-92db-4343c962d8cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4087045-635a-4e7c-940b-fec949cdfd48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64d51e6-e2cf-48ec-b84b-2ff9d38b8c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a13cd5a-9524-458a-b9ce-46947505cb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf30fe2-b2a0-4229-a66f-b38fa20e52a9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776d8fc4-f046-4c12-993a-51423ce90718",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aad82b17-937f-4923-8849-2a969b75765c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e59a50e-e0af-4345-a891-cb7546aed7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d4926b-a276-4422-b338-37d072acd011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6f04ba-69e2-49b1-8a71-2d7d6227d859",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66520d8e-2c3b-442f-bbb9-47bf1c0f2c29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e0a294a-7c20-4e19-9821-a1427fcffe9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd3daa3-076a-4c19-bcf9-10a8a9dd2f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a4c5b8-5107-4d54-9f3e-773ee3daf5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ea0cfc-a59e-49d3-b651-14fa4afa8928",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bdf158e-e3d2-4284-ae72-1960ea97d73a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f82e288-acad-48a0-82b5-a7cbb4b1c1be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da090e53-d571-459b-bbe0-58976d19f89b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2dc31d9-454e-4c14-be90-d940f7978732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbefe088-d1ae-4948-a0d4-d3a51cf29f64",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3214be52-9985-4a7b-ab3b-3dd92b4e17bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a7af200-6d1d-4cf4-936c-8b4a872d09bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13933a1c-a055-40eb-853b-e07749447543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd294386-649c-4756-9c49-58364c24581e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f0c88e-13c7-4eab-adec-59d554d88cf5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efe0e77-9aa2-4b0c-9f43-5b287f77bd37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad954ac8-3683-4988-804c-dbe487b12851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54dad51c-4a3d-42bf-9b56-15b1cd1e07d8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65496a8-bffa-41b6-b809-773c01e9b416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d667f75-6728-4927-a187-a03e39fbd7a4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dcab8a-d9e9-468e-a29e-8c19845d9096",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcd143b0-2134-4d0a-896a-bb598aa0e8d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ea16c7-efd6-4501-a120-0d00f68398e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13877303-a75c-45fa-b7e8-4fde58304fed"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b51acaf-cdeb-4efd-aed4-fcc9ef314cbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c28012f-a805-4c71-a96a-d911b3a32bad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae6f0846-3a31-450f-866d-471c60c84b78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b59ceb4-c4a5-49d7-a1e2-4e0c172e3fac"
                    }
                  }
                ]
              },
              {
                "id": "a3fe7d66-31dc-42dc-afb0-dc821192c03d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9de2a288-60a6-4f4c-962a-c3f17e27593d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7159a7b7-d98b-46d2-8cd2-d9e22c5e7678",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d3563dbd-be62-4302-a6f4-6d3e7ebf1d55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb4403c-a789-432e-990d-5848557032a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12f9cd6d-3655-4c73-bff3-b0258dd84c72"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66ee7c7c-c16d-419c-aba2-e2c6fdd9fe0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a748bbab-7357-4fc4-b60a-0ff340f42917"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65af0591-9622-4008-af62-46a7ef5b6015",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b566c6d9-a088-4ef4-a9a9-15418f345a3e"
                    }
                  }
                ]
              },
              {
                "id": "725564a1-e6c8-490f-b928-412ec999a666",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cb3683f1-807a-4974-b4a3-642e0146c5f7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42fccab-874f-4633-b492-ca4b25ed82a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ab8e9d94-e18e-4cc9-a06a-9573ad02659d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ac9aed-18d1-42b7-b9e1-1442266c3dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb2e626-227a-4a8b-b967-1f2c1e4564bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "63d3d05e-2974-4d6a-ae8b-eee7dee36bf9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eacfeefa-6be8-46e5-b417-f1592367605a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4c3912f-2785-49bb-8730-6a4a1c5719d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "71a5eb1a-0742-4cff-972b-d28e715ba581"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7176722-4234-4850-8f44-e25df23f1668",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "453a6a7a-0ab7-4446-b8d5-72ec84db5277"
                    }
                  }
                ]
              },
              {
                "id": "480bbaf5-97e8-48a4-82b0-b30fffb86613",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53476dd0-a617-4704-81e0-b40c61da58d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b5568886-744b-4cfb-8ee4-5d40157501e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb219a62-a890-4733-ae81-0957e4e39af2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df382c90-6e2b-43f2-a074-95340657e426"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e41aa8ee-50f0-4ef4-84fe-9c4dfe026503",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7c85afda-997c-4040-adf1-1a4db25b8c0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f5a31f9-7d2c-42b4-979f-4e1d6f879413",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f607f53-fac4-45b0-bb7b-8a55ac82ddd4"
            }
          }
        ]
      },
      {
        "id": "16bfa78c-fd02-4b5d-b6d2-fc223385c127",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a4fb88ed-93fc-4c0f-b01d-edc90690259e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ab8b6fe-76e3-41a1-b616-779b9c7f7464",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe9d5624-6e16-4047-b2e4-4326d2aab3db",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6098c89-88eb-4018-bd02-150cba5dc9fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7baa1b0c-32f3-4153-aa04-6527098bdeed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c754098a-a5ae-451a-bfc2-a5f623f78fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38484bdc-c408-4148-b2c4-96f7184c170a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54f16be9-0f5e-4915-a794-7ef48429dd1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f836bd27-e70e-4bf7-9aec-6ec60456c912"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "080f846d-7244-4610-99bf-47827091824c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c72c5e8-0bbc-4e05-af78-66f00953efbc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d67579b7-a69a-44d0-b293-0f12d33a08dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "05f6e299-17b3-47f3-ba8a-7c4b24780763"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae46e1c1-c1ee-4988-92ce-0d1e45408827",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bccc9aba-ddab-4100-bc5b-7d4ea0a1830d"
            }
          }
        ]
      },
      {
        "id": "08d74890-739c-4d95-96b4-1b0cbd2af1a7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9421ea6e-c80d-4a28-a133-7d6e0d327ca9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a88d545-74ee-44af-a6ba-5e36bd1837bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b10be7b9-7e6e-405c-95dd-f4ed6856c0cb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3366f172-7ea9-432b-aaec-54f72eda059b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6caf1c5d-68ef-41e7-b3bf-b3e904d71a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bb13f9-b8c1-4a16-99c1-788d94f7ad14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "579b3b99-450c-45f8-9abc-1be7c5c36f53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdf67423-439c-4b5c-83e3-f089b348d32d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6d77a97-50ea-4a1d-a960-f5ed8d2c5ae7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5099fb92-b93f-4054-b53f-55f729ae8df4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54548d13-feb9-44b0-9c3e-b424698d6c0d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "087b9689-98d0-4b3d-acf5-70112adc8a18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "49bf69dd-aac1-4b41-92af-174a8ca1018d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76366532-03e3-42e1-9e87-42c2ebb1eb6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd5af028-7bb2-4937-bafc-697b903462a6"
            }
          }
        ]
      },
      {
        "id": "e8dc04bb-b2b9-40e7-820c-75b0d4d51494",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b6def829-70cc-4089-91ea-497a82e3367c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7602b43-5446-4b3c-8322-b2c89748d581",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2cffeaf-69d4-47ac-8825-7cce7c3f2464",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8816f20c-cf9b-4ac3-a40e-ac52601feae4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a67a8ad3-2dc3-4e94-97cb-40d1a5988a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0508a2a6-d420-4742-b593-fbad0b4dff83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70147e5c-aff7-44cd-8e45-2c7f73546aa3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8da012d6-afa1-43fd-aa95-2275ceaf2d68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "319f5489-f389-4550-a1c1-7da262152b51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "275415cd-2b87-4a94-a21a-622482e89f58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e30f341-d883-401a-8f2a-afed618e704a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2def12e0-93eb-413c-9093-36a72fa166c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "64ad7e6f-4088-49de-b360-9076ad8f96f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cd6ab79-6521-4c3b-88b9-e2e11e6eb30b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "243705c7-15fb-4f08-87f6-0c7921533fb0"
            }
          }
        ]
      },
      {
        "id": "aba917cc-f48f-4447-b257-4a035f9aeafa",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b0d8f56-4541-4459-8304-dd978a19a1ba",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45ea5e0d-6414-4f31-9e51-bcad4b864b90",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "db378418-52d3-487a-b854-f016bbc64e1c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0686057-71e5-4ee4-af5c-7782e786a0bd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "168f7ba0-bce0-43e0-af9b-9ff3d790e05a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 33.78873239436622,
      "responseMin": 15,
      "responseMax": 291,
      "responseSd": 19.477083314744885,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688259017550,
      "completed": 1688259038415
    },
    "executions": [
      {
        "id": "b14303f7-6c48-4caf-bc46-84d29f8368e1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2d4ad2ca-c435-4910-8a9f-9f7404817cbb",
          "httpRequestId": "047bd3dc-1982-4a5f-94d2-2964c25badb2"
        },
        "item": {
          "id": "b14303f7-6c48-4caf-bc46-84d29f8368e1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5818fb50-de75-416f-9bf1-6c26af67cdb7",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 0
        }
      },
      {
        "id": "72bd98fe-ad31-45e7-9b2e-9c889a6c79bc",
        "cursor": {
          "ref": "f7b3e2c7-e4cf-403c-8c4b-01dcafe31994",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0d5f98e5-af0b-4280-9232-7a1c1be5c589"
        },
        "item": {
          "id": "72bd98fe-ad31-45e7-9b2e-9c889a6c79bc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c71484e5-e70e-4267-bf9b-3ec56010b66b",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "385af616-e8d4-41a6-9c25-9192888177d5",
        "cursor": {
          "ref": "8effae2c-43ae-4a3d-919e-cb65c68ef28e",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0e4d1f85-f1d1-4bad-914b-6419a2afe5b8"
        },
        "item": {
          "id": "385af616-e8d4-41a6-9c25-9192888177d5",
          "name": "did_json"
        },
        "response": {
          "id": "73a94ce9-2b03-4a52-a156-85e6c11e2c0b",
          "status": "OK",
          "code": 200,
          "responseTime": 132,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe4b465-b169-43e4-9d8c-91012d8f24b1",
        "cursor": {
          "ref": "fd934221-c183-45b2-8d00-53d3a93acd49",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d6bc3c32-7402-4545-99da-7275af2a69e2"
        },
        "item": {
          "id": "fbe4b465-b169-43e4-9d8c-91012d8f24b1",
          "name": "did:invalid"
        },
        "response": {
          "id": "b20c246b-a576-48ad-a848-b6701ed14c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe4b465-b169-43e4-9d8c-91012d8f24b1",
        "cursor": {
          "ref": "fd934221-c183-45b2-8d00-53d3a93acd49",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d6bc3c32-7402-4545-99da-7275af2a69e2"
        },
        "item": {
          "id": "fbe4b465-b169-43e4-9d8c-91012d8f24b1",
          "name": "did:invalid"
        },
        "response": {
          "id": "b20c246b-a576-48ad-a848-b6701ed14c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b030773e-7cf5-46ec-939c-ed6e32cfe10a",
        "cursor": {
          "ref": "364dcce2-8901-45f6-950a-e7f253e97276",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b5efb732-c6b7-4268-af85-46bdd4e92b5d"
        },
        "item": {
          "id": "b030773e-7cf5-46ec-939c-ed6e32cfe10a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ceacc53c-0965-46c2-8103-ff5336c6f598",
          "status": "Not Found",
          "code": 404,
          "responseTime": 77,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb27673-2990-4913-9b61-e749c79d7245",
        "cursor": {
          "ref": "8e75fc7c-3f52-41b6-831e-1d643fdb8003",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "29cb338d-aed2-4ed2-a66f-142f8c251d1c"
        },
        "item": {
          "id": "bdb27673-2990-4913-9b61-e749c79d7245",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e42789fa-b3b3-45b2-95cd-cc2e9ff857ea",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77727ec9-d9d7-48dc-9690-10880ea504d6",
        "cursor": {
          "ref": "32c8870d-7ea3-460c-9bee-22f997ea59ad",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "76d16104-f8d8-459e-b05a-a9e807616d60"
        },
        "item": {
          "id": "77727ec9-d9d7-48dc-9690-10880ea504d6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d83106ac-8449-4477-9a34-47a13769a358",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5903bc17-a422-46bc-82ef-3fb4d6914b8e",
        "cursor": {
          "ref": "40f50181-36cc-4b40-8385-1208fe2cc376",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e458785f-7d87-4752-8f73-a85c363884b8"
        },
        "item": {
          "id": "5903bc17-a422-46bc-82ef-3fb4d6914b8e",
          "name": "identifiers"
        },
        "response": {
          "id": "97d76d1b-4b61-4819-84c3-998361219abe",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8c7704-b8df-444b-a7ef-4036b5c18f2f",
        "cursor": {
          "ref": "4dfebf57-8674-423e-b053-8bb6386ed7df",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fcc98435-2e35-4b0f-8e39-593b4d28e010"
        },
        "item": {
          "id": "0d8c7704-b8df-444b-a7ef-4036b5c18f2f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4ae035dd-9c73-4f81-9700-a63d0b3b57c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad6ac68-ac45-4077-b853-89dd7d679874",
        "cursor": {
          "ref": "48e9f9f7-af7e-4173-8aa0-4a166b23d6a7",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0a3b4819-b4f1-4baa-9a86-a8cb85dba358"
        },
        "item": {
          "id": "0ad6ac68-ac45-4077-b853-89dd7d679874",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0b904485-ee4c-499b-a77c-a650e28d85bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb918d25-564a-4e28-b276-468c71ad84ee",
        "cursor": {
          "ref": "8807b04a-f20b-453d-a40e-baebd96ceb65",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d6974b5a-efb9-4775-bfa0-97fecd485694"
        },
        "item": {
          "id": "cb918d25-564a-4e28-b276-468c71ad84ee",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8ba196e7-c36e-4fc1-91d6-62bf3d3fb159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce2c301-559e-4c4c-a84c-c3463a69b226",
        "cursor": {
          "ref": "b1039436-a32a-4cd8-a517-5b0a55520426",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f6cde94a-4742-419c-8a8c-f81e00ebcaea"
        },
        "item": {
          "id": "7ce2c301-559e-4c4c-a84c-c3463a69b226",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "798299ff-8aa2-4c2c-998f-cefff97f2ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c806387b-dbbe-4cc1-af91-28b8761fa38b",
        "cursor": {
          "ref": "7f567a75-8117-4542-aa73-0eb441bbd9e7",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "273422a1-328f-4342-b1b6-0266836152f4"
        },
        "item": {
          "id": "c806387b-dbbe-4cc1-af91-28b8761fa38b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "17ee8b77-55bf-4c46-a9d8-b73ca8478e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebf42ec-6fbf-4b05-bf70-e8026540ed26",
        "cursor": {
          "ref": "b52936c8-2555-450e-861c-5b197dcaec45",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9b20cdcd-6adc-4744-8091-d6d703b9adab"
        },
        "item": {
          "id": "9ebf42ec-6fbf-4b05-bf70-e8026540ed26",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0f3e362d-93b3-409e-a56a-037ba3da3982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977265b6-5022-4e45-85f1-e4ef77cb5fbb",
        "cursor": {
          "ref": "f03e75b7-06a3-4764-b32c-3cd134b1514e",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "83316bde-3d1e-48e8-90cd-7ff33336996c"
        },
        "item": {
          "id": "977265b6-5022-4e45-85f1-e4ef77cb5fbb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "52723c9e-0eed-4fd4-8e1a-f810dd70bcf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3024499-a78a-4a95-ba23-cba98f3a7e11",
        "cursor": {
          "ref": "74b3f545-0f1e-4fd9-a0e8-2f219457c642",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f7fc03f0-4b85-4bb1-934e-c0f8e21a1b37"
        },
        "item": {
          "id": "a3024499-a78a-4a95-ba23-cba98f3a7e11",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7b4f2783-eae9-4451-89e9-f926fcf73c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad99c270-33d0-49f2-bede-91f05b885541",
        "cursor": {
          "ref": "43ec050a-c1c5-4a9f-ae27-43efa6bf10ca",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "37476859-d9d7-4e77-9a2a-fbf650413178"
        },
        "item": {
          "id": "ad99c270-33d0-49f2-bede-91f05b885541",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6a8321e6-827d-448a-8791-7946d6987eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6555923-1862-4f5a-b3a9-71242e1f02d6",
        "cursor": {
          "ref": "5fbcc951-6d68-42ca-a91c-fd37612fd34e",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8fece94a-907d-4c84-9620-c12a5dc2daa9"
        },
        "item": {
          "id": "b6555923-1862-4f5a-b3a9-71242e1f02d6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f52ab890-8072-4c55-aa20-00d853e5da01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1043c9b-ab1c-46b7-8cef-9abe038cf702",
        "cursor": {
          "ref": "8b7b0c73-5b1a-4087-b282-dc5ebf73ff68",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "10634370-c4c0-4f1f-a8e0-999d62d26889"
        },
        "item": {
          "id": "f1043c9b-ab1c-46b7-8cef-9abe038cf702",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7574484d-3fe2-4fd7-9b1b-3f31c56b7953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5019a66-8ca0-4f97-9691-b6dffe6716dd",
        "cursor": {
          "ref": "fd78f64f-0363-481a-9bc6-7854ac5f00c9",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1ce5ace4-1ebe-4e7b-8bb9-d0c78d6f5e17"
        },
        "item": {
          "id": "f5019a66-8ca0-4f97-9691-b6dffe6716dd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c7c2856d-a446-4737-bb7f-49a8b9198806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e56571-2e39-416b-82e3-379e8d331a93",
        "cursor": {
          "ref": "4cb4e521-e98e-4986-99a2-7464cc4e2ed4",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f231779a-dc6b-4182-9d8d-f1d7ab045ea6"
        },
        "item": {
          "id": "35e56571-2e39-416b-82e3-379e8d331a93",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "90cf033e-7b9c-44fc-af92-9fedf6c064e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf7c003-331a-479a-a8e9-fb3b6442d769",
        "cursor": {
          "ref": "240e8386-46fd-4256-a573-cdc40015255e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f6f4abfb-e99f-4c96-966b-3c2c9f13df1e"
        },
        "item": {
          "id": "bbf7c003-331a-479a-a8e9-fb3b6442d769",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ee25956a-7fca-4019-8940-b7bea4e73b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143e07fb-2e8c-498b-865c-7cc15d98e243",
        "cursor": {
          "ref": "7fb0c177-d39b-46ba-a8b6-3aabac678c2a",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2cb7ac31-7722-4788-bfa8-3fc019b439e5"
        },
        "item": {
          "id": "143e07fb-2e8c-498b-865c-7cc15d98e243",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2cc652b3-0922-4681-b05a-b71eacb24ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f2797b-65ca-497e-a58f-ad5073b79f2f",
        "cursor": {
          "ref": "c96c4834-e9e2-433f-921b-265237dc7ee4",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a5094ccf-7575-4b26-98ad-03caf8a85e64"
        },
        "item": {
          "id": "d1f2797b-65ca-497e-a58f-ad5073b79f2f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "245f97e0-ca79-42d8-806c-954cae25fc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0341e5fd-f204-4112-8e35-6215fc65a68e",
        "cursor": {
          "ref": "57168068-a530-4bda-b1d1-3c1dcd0ac808",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "57b5b3e2-2eb0-4ae2-b4d6-6c56c10017c9"
        },
        "item": {
          "id": "0341e5fd-f204-4112-8e35-6215fc65a68e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cfc39f76-0fc6-4aa6-83c1-1ec7976198f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f17655-4fe5-4fce-9a98-5be7c1553953",
        "cursor": {
          "ref": "b6578415-ef11-40ec-8062-07b4bd884e7d",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2e635a09-f59b-4f1c-93d4-e81fbc19c3b1"
        },
        "item": {
          "id": "64f17655-4fe5-4fce-9a98-5be7c1553953",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "305181a0-4bd7-47b2-98a3-79027ac7a4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a680a02-92d4-4e9c-8a5d-7e3c68d8b63a",
        "cursor": {
          "ref": "0f78debc-c6ff-4813-a2f1-06e42e36e6ee",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "53613859-55be-43b4-95ba-10fd6bc9e8d7"
        },
        "item": {
          "id": "4a680a02-92d4-4e9c-8a5d-7e3c68d8b63a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8002b80a-a5a0-4e9d-940b-b44b7d27fa55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6118ba-c7ff-4e9a-8bd0-9ac6b3b9c4e9",
        "cursor": {
          "ref": "db0e979b-8683-4578-9dde-de987e8005d3",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fcae8726-00e7-4d01-af8d-67a5e43fa8c3"
        },
        "item": {
          "id": "5d6118ba-c7ff-4e9a-8bd0-9ac6b3b9c4e9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5e030150-8de5-48ae-b04c-9c3e706bcc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdec94cf-0001-4fad-b547-e84d41678597",
        "cursor": {
          "ref": "cc3217f5-3c0e-4522-912d-bb08d6aaddb3",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "20222f3d-edca-4c88-a95e-1b23ed84d64a"
        },
        "item": {
          "id": "cdec94cf-0001-4fad-b547-e84d41678597",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "36ec3c01-d50a-4351-9f4b-b1e74fa1db3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825e80f1-c05b-4227-9d23-a3c6ddc31274",
        "cursor": {
          "ref": "86f3a368-dc60-4a6d-82b1-13a4cf6650f8",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "691f1edc-97ab-4e58-824d-c0e3d456c791"
        },
        "item": {
          "id": "825e80f1-c05b-4227-9d23-a3c6ddc31274",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "54f52132-eb8e-4e71-bf4a-4344af464ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994d06b2-7697-41ea-87a9-de1f983b475f",
        "cursor": {
          "ref": "fc030a5f-698e-4c3f-b494-d491d565a0fd",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a524c862-9ad0-4e55-88e7-c2f19f596d31"
        },
        "item": {
          "id": "994d06b2-7697-41ea-87a9-de1f983b475f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9e6709ff-6f9e-4f47-9a46-bcfaa3a35b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5932de76-b4fb-406a-929f-84c10025413e",
        "cursor": {
          "ref": "8bd1efe1-fb36-4d9f-a7f4-874ea22b8370",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "797c802e-6eb2-4a4b-834e-cc36b9383faa"
        },
        "item": {
          "id": "5932de76-b4fb-406a-929f-84c10025413e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "30c4c65a-9108-424f-a264-f24817d0e235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75a6d50-3fa1-42c6-aeb7-e5374dbd9981",
        "cursor": {
          "ref": "7408e679-18ff-4a40-ac8e-c4acebb18f75",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ae286a12-e93e-4757-a4dc-5c75fdbda43a"
        },
        "item": {
          "id": "b75a6d50-3fa1-42c6-aeb7-e5374dbd9981",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "86f71225-f9e4-4669-b136-e8f152f9ff19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e301441-0cd3-4578-acff-40dff48ab1d2",
        "cursor": {
          "ref": "0f910425-d940-4057-bbb3-4479c2c08091",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "103b1c99-6b3b-4858-b386-4b71f5130f83"
        },
        "item": {
          "id": "7e301441-0cd3-4578-acff-40dff48ab1d2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "50e1fee2-62ae-41a1-a890-70f51ada6fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4838b0-e481-42f7-ad95-a839d8c6c9db",
        "cursor": {
          "ref": "39874b30-c918-4744-b9b6-b216582831db",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9063aa22-8bee-4529-bade-3003d990c510"
        },
        "item": {
          "id": "ca4838b0-e481-42f7-ad95-a839d8c6c9db",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "132c5060-e956-4c51-90df-b213455da81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e2b5eb-c387-478a-9cd7-a6815cebb7f7",
        "cursor": {
          "ref": "37d7d7f1-269f-4bb6-a1de-e14ef8a0bcd0",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "de424ba3-82ad-4920-b752-62bc536f274d"
        },
        "item": {
          "id": "19e2b5eb-c387-478a-9cd7-a6815cebb7f7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8b27ad3d-04ac-4475-9f25-e347ac2ee602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876d4282-4d4f-4d00-a58d-fefb1a614e3a",
        "cursor": {
          "ref": "80f3e244-d3e3-423b-8a91-9897bd297ea8",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "29fe5737-8df2-448e-bf5d-865ff27e3f3d"
        },
        "item": {
          "id": "876d4282-4d4f-4d00-a58d-fefb1a614e3a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "384be11a-0ee0-4110-9dfc-7d4e668871d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c286319-b389-4d37-b0e3-2c5aeab14dd2",
        "cursor": {
          "ref": "ecd983c9-2186-4166-8a0a-dbe356e51ba4",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "99f8fb8b-7827-4f66-8be9-4b4e15b46a31"
        },
        "item": {
          "id": "8c286319-b389-4d37-b0e3-2c5aeab14dd2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "41226d2d-f1c4-4f11-8da6-e23d82d3fd6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9834bb-96f2-4e9c-8b72-cbf0c53d65b4",
        "cursor": {
          "ref": "1e0b20c6-2145-4602-9334-ea02cd0a40b4",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9b506235-ce29-4f64-bf51-0f9f1490de1f"
        },
        "item": {
          "id": "7a9834bb-96f2-4e9c-8b72-cbf0c53d65b4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ec153c5b-7888-4d2c-bbe0-b46df7f9aaf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16c0b9b-3fc1-4ba8-9a7e-0548d11f98d6",
        "cursor": {
          "ref": "f313a7ea-2f1e-4779-8b21-a9b7d6b27375",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4a7518a7-c341-4186-a933-ab0c850beddc"
        },
        "item": {
          "id": "c16c0b9b-3fc1-4ba8-9a7e-0548d11f98d6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d9bfc8a7-1945-4068-80c1-fcd3dafb3ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775d394c-9894-47fd-b427-9f53349ea1cd",
        "cursor": {
          "ref": "8dd4c307-5bba-40be-b7da-ffea4abfe8c5",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "aa646c5a-5dbe-467a-87fb-480f087de796"
        },
        "item": {
          "id": "775d394c-9894-47fd-b427-9f53349ea1cd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bbcf82b5-8904-4c93-94e5-8b44f377e550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e136d58-a584-4417-a9d7-a5192c0b0ac3",
        "cursor": {
          "ref": "f9a836e6-d641-4e42-9e2e-6254cbc25fe0",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7e8351cc-b285-4a48-9563-80af5aba5a49"
        },
        "item": {
          "id": "5e136d58-a584-4417-a9d7-a5192c0b0ac3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ad3e8b85-e9e6-4a06-863d-c97e825eb549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd03f0fe-75a9-4094-b23b-8e47e17dbff8",
        "cursor": {
          "ref": "2200f862-2099-47e8-aadb-76e9080f57f4",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "96fa09a5-8ab6-4c08-af8d-446f5f24b1fc"
        },
        "item": {
          "id": "dd03f0fe-75a9-4094-b23b-8e47e17dbff8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7fb28ed3-1636-4bbb-91cf-7ce0b2f7595b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4852aca0-56ce-4d1c-8521-019b98e4e735",
        "cursor": {
          "ref": "e4783233-ff24-48ee-9045-ad0a7a61351a",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b6e5a479-8f0e-4ccd-9c9f-aa6d23ab8eba"
        },
        "item": {
          "id": "4852aca0-56ce-4d1c-8521-019b98e4e735",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4b36e390-de33-418a-bc02-c2f9b174aef5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9c48cd-ee13-4a5c-90ea-3f6551cd9db9",
        "cursor": {
          "ref": "01663b51-b27f-493f-9b00-654a1c2f6446",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f6819258-7a5d-472b-890d-0a005320cb85"
        },
        "item": {
          "id": "bc9c48cd-ee13-4a5c-90ea-3f6551cd9db9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f200aacf-165b-40d4-b58c-afbde985c29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507438b3-cc8c-4efd-8cbc-27673c2d88a3",
        "cursor": {
          "ref": "9226a9f4-9d5a-42af-9202-a845d401d3f2",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "194de164-a860-480c-8cbb-52ad230f7ad5"
        },
        "item": {
          "id": "507438b3-cc8c-4efd-8cbc-27673c2d88a3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c6847700-d061-45c1-a457-9891f8e5dc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fe613f-39dd-474a-8417-15766c55892d",
        "cursor": {
          "ref": "deea872e-5f13-433d-b01e-daeca642c9b2",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "200f1d70-6912-4aa8-91ab-aaf03ca9a648"
        },
        "item": {
          "id": "76fe613f-39dd-474a-8417-15766c55892d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c494ce21-77c0-442c-ada4-d474d93a71b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cd1c1c-cc13-4f15-9d39-bc86f41f89f3",
        "cursor": {
          "ref": "8869e4c4-fefc-4953-bf0d-27e65349ab65",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ed30b057-4ab9-4faa-a43a-b5ad7aa631b9"
        },
        "item": {
          "id": "77cd1c1c-cc13-4f15-9d39-bc86f41f89f3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "93fe7cdb-f375-4c11-9532-459a1379323c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92faa80-898f-405a-b98e-0997720aed99",
        "cursor": {
          "ref": "4c0edf2e-0782-4c5b-a8aa-236b0fab84c6",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5f55a555-8b10-4427-8451-f6a7ed587c3f"
        },
        "item": {
          "id": "c92faa80-898f-405a-b98e-0997720aed99",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "263da5c1-b03e-46e7-a1d7-1e51b7ed7e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cc4722-e7ba-4983-9dc5-cfe89474b198",
        "cursor": {
          "ref": "6133e6ed-f7c6-41f2-ba3e-ad2892dcfb6a",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d820a1a9-14b8-4a1b-a98f-ee7af25e798b"
        },
        "item": {
          "id": "38cc4722-e7ba-4983-9dc5-cfe89474b198",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3805b444-d0be-410b-9124-3d7a4a8b1cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f564d7-e1f5-4fb6-8218-6f09afe41183",
        "cursor": {
          "ref": "0dd31f78-4bd2-46cb-b4f6-ce6ed2679444",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3af79faf-6714-45ea-9732-5d858b965bdc"
        },
        "item": {
          "id": "b3f564d7-e1f5-4fb6-8218-6f09afe41183",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e81a8866-f13c-4412-917b-d5b6c8cff85b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23d290c-ea89-414e-8d7d-f82357b71ba1",
        "cursor": {
          "ref": "5c7821d7-5aa5-4a2f-aaa9-819b9e52012d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "132c8ced-eeae-45f1-b778-8143c147ff5f"
        },
        "item": {
          "id": "c23d290c-ea89-414e-8d7d-f82357b71ba1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "122d8e48-48c6-4702-951a-0045574e908c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c997b7c-4a77-4f56-8b19-6f0843f93100",
        "cursor": {
          "ref": "1da21d2e-b2dc-4be2-a640-e426889a3dc3",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "08d542eb-bd48-4201-a8fa-7ce950153e55"
        },
        "item": {
          "id": "9c997b7c-4a77-4f56-8b19-6f0843f93100",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7cec46b5-85b4-4352-908e-55aa0cf02b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa45a8e-6ea6-4831-98ef-8fd438b7984c",
        "cursor": {
          "ref": "b9c49bac-0774-40ee-b179-36fd8158344f",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "22a71213-5fc5-483b-88cc-f6dfbdb6a551"
        },
        "item": {
          "id": "faa45a8e-6ea6-4831-98ef-8fd438b7984c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "10d9cd85-b089-40b9-be2e-2e486f22f7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae35595b-9d9b-4cea-9708-4ab032f4f03e",
        "cursor": {
          "ref": "0b392f80-6c4b-407a-b036-ae5d7e50358b",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ca940e3a-22d0-49ac-9872-d677ff2413f5"
        },
        "item": {
          "id": "ae35595b-9d9b-4cea-9708-4ab032f4f03e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d1389286-ee8c-4136-bb7e-6c392f3585e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76741ae-7648-4596-b1d0-e1eeeb27ecbd",
        "cursor": {
          "ref": "6de91df8-d7d4-4ec6-869c-3872bd1b27dc",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "12def629-59e3-43c1-af5b-ae7bad1c44f0"
        },
        "item": {
          "id": "f76741ae-7648-4596-b1d0-e1eeeb27ecbd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "efd6f8ee-a732-43cc-ab6d-f16a77083c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4a63f7-5dea-4451-9773-d161a06ba612",
        "cursor": {
          "ref": "61f22b44-60bf-4ccc-b91c-4967096e8b82",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c105f623-6f1e-42fa-be80-8ea08f98a883"
        },
        "item": {
          "id": "ae4a63f7-5dea-4451-9773-d161a06ba612",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8af2e184-43c0-4c13-a111-96361da2d747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1fed6d-8ea7-4934-92e7-1ff8ccf91709",
        "cursor": {
          "ref": "11153b0b-8a6b-4015-8273-7032bc529f78",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "98a4c732-3ca1-4ed9-b7df-acd697bf28d3"
        },
        "item": {
          "id": "8c1fed6d-8ea7-4934-92e7-1ff8ccf91709",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "589d124d-881f-42a7-9c53-a477b389213d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8881aacb-db62-4460-8d27-2852c79da2e3",
        "cursor": {
          "ref": "5ae55cc0-09d3-4cc3-9a1d-f2e6a742949a",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "388537b1-1bb0-4d94-be4b-d0c322fb07a5"
        },
        "item": {
          "id": "8881aacb-db62-4460-8d27-2852c79da2e3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "78041c30-9c27-429a-994e-0dd6ced1d5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f63c7d6-996d-43fd-a5ff-91895f22ede8",
        "cursor": {
          "ref": "9f7d3e4b-e5df-4bb5-ae08-5ab40c7f0ed8",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ce52f388-5fb7-4aa1-b58b-0f41e495dd06"
        },
        "item": {
          "id": "9f63c7d6-996d-43fd-a5ff-91895f22ede8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3a6ca0bb-41c9-4a55-99f3-63ffde5488ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ce44d2-bccf-4b11-897c-7ef46a7f845f",
        "cursor": {
          "ref": "42da362f-6787-4ac0-8204-f659c6797207",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0ca8a5c0-a0e8-431f-9454-4adee7160a18"
        },
        "item": {
          "id": "c8ce44d2-bccf-4b11-897c-7ef46a7f845f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "95f15d26-eaf4-447e-9ace-15ea7392f70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea2bcfc-74b6-4671-a75e-6d2bac026f7b",
        "cursor": {
          "ref": "4caac180-4790-4637-abbe-72b7a462db35",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3c4ddb4e-73cb-47b7-bd4a-d2dc4e13a8bb"
        },
        "item": {
          "id": "bea2bcfc-74b6-4671-a75e-6d2bac026f7b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7fe87a0b-1ddf-4807-a273-941370dfe4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c8db48-1b69-4001-9d3f-fcc0cff7849a",
        "cursor": {
          "ref": "26110f97-4466-405b-a802-3ffc4822363e",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "64a5f088-92d0-44aa-8a8b-4703b3c63eb9"
        },
        "item": {
          "id": "24c8db48-1b69-4001-9d3f-fcc0cff7849a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e07d4360-cc2a-41b8-a2d5-c743c5b73246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5f48ed-4634-493c-9a33-922007d0e143",
        "cursor": {
          "ref": "a81f7f3f-fea6-400a-8c54-4eafad09b7d0",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b99dca03-4adc-4310-8c33-7bbc8168a659"
        },
        "item": {
          "id": "2e5f48ed-4634-493c-9a33-922007d0e143",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "50a7b809-3639-4c12-adde-28f53427a373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860a5005-9556-4f75-919a-a6e7ccf9d9e1",
        "cursor": {
          "ref": "d847235a-cbd1-4b89-9dbf-9087af845542",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "97fd04fe-982e-4782-baa7-cebd883f490b"
        },
        "item": {
          "id": "860a5005-9556-4f75-919a-a6e7ccf9d9e1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f2b62322-be42-4121-9ab2-0b30d2e918b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371797cf-7e2e-4b76-be56-76d31cc2633a",
        "cursor": {
          "ref": "014ec2a2-659d-4d02-affe-4ff7a717ee97",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a0178e5f-dfa6-43bc-a441-1c7c4cf17ebc"
        },
        "item": {
          "id": "371797cf-7e2e-4b76-be56-76d31cc2633a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c5ffb1a5-aed0-4464-a0b3-651fc86d1d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984455e7-f747-453a-acc7-f0c20c353052",
        "cursor": {
          "ref": "2b2e4e06-d548-44a8-8723-3e618cc7d5f0",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d05979b7-9d13-4bc4-87e4-e1789af4ad6d"
        },
        "item": {
          "id": "984455e7-f747-453a-acc7-f0c20c353052",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6298b1bb-063b-452f-9ece-9fe02f901d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353f5667-4d06-47dd-a988-7d62be442f0b",
        "cursor": {
          "ref": "f8cd8446-15d8-41a6-9589-f81ab64e6db4",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7cdfd75b-9279-4fc3-8004-750ad896fa85"
        },
        "item": {
          "id": "353f5667-4d06-47dd-a988-7d62be442f0b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7750bcd5-646c-4eb9-8608-aab36fedd0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3cb040-03cb-4b68-afbd-1f0065a9a1fa",
        "cursor": {
          "ref": "e0796fc4-42fe-4581-8d35-d5ec58fbfa8f",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ea736c95-ff20-4c13-b292-a7d3a1fbc7da"
        },
        "item": {
          "id": "4c3cb040-03cb-4b68-afbd-1f0065a9a1fa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "07429bcc-4c3e-497d-ad7c-bb5f20d6ee0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1040e87-c8a2-4688-b64c-bf4e34b4c004",
        "cursor": {
          "ref": "8d950987-8b1e-4ee1-9cbb-c825b491af89",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "acd0e410-bfc1-49e9-b0db-4da1ebf9ad66"
        },
        "item": {
          "id": "b1040e87-c8a2-4688-b64c-bf4e34b4c004",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6ed7509f-8c68-4b37-b2d4-998d4a5e072f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3fff58-bdc5-4a83-8e7d-7a10746a806c",
        "cursor": {
          "ref": "52de5005-f94c-44df-904e-794f418070fd",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "37e15ef6-a68c-4e20-95cc-575ebec4348e"
        },
        "item": {
          "id": "cf3fff58-bdc5-4a83-8e7d-7a10746a806c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bdd05a3d-fa7b-4346-bb2f-4cd7de171765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7da45c1-f03e-4be5-8180-30d5dff5c0ff",
        "cursor": {
          "ref": "e66ea9ab-7fa1-45b3-ae8b-f257a8f87767",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8a040f05-c888-4a69-bfe9-30be472970ba"
        },
        "item": {
          "id": "a7da45c1-f03e-4be5-8180-30d5dff5c0ff",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f674a37b-2252-4916-952c-20926c0a07b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e35cb87-164d-4225-abbf-f8f085abd17f",
        "cursor": {
          "ref": "a01fa8f2-743f-4040-82f2-df7c1cf10c24",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fa1e018c-5b97-4a38-9225-4843c7bd54a0"
        },
        "item": {
          "id": "4e35cb87-164d-4225-abbf-f8f085abd17f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4a5392fb-a554-4afd-a7a9-31d9403abac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72fb99b-5222-44f4-a069-32a0d2785253",
        "cursor": {
          "ref": "c3259994-8e98-41cd-8d77-3521fb301cb3",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "82bfda5e-f1d4-463e-9329-852e1568df8b"
        },
        "item": {
          "id": "e72fb99b-5222-44f4-a069-32a0d2785253",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4913e41f-aee3-4d2b-ab4e-186b1a1653cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41edcf30-9b8c-412b-ac5a-2de8ee8972d8",
        "cursor": {
          "ref": "dc885e8c-3cda-419c-9e09-38331082a364",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "90f2b87d-df29-4186-8897-5bb2e0004315"
        },
        "item": {
          "id": "41edcf30-9b8c-412b-ac5a-2de8ee8972d8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d0056043-58b6-4cf2-b043-b01718f35f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b4ef31-de21-4ebc-9dc7-453cf23150ec",
        "cursor": {
          "ref": "ab40b72c-3ea5-4538-bb91-ed5dc329d979",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3e47b1f9-9aef-4dc3-8d7d-6d3e5e13d2f9"
        },
        "item": {
          "id": "40b4ef31-de21-4ebc-9dc7-453cf23150ec",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "781c59be-9f5e-415f-8525-df8546654a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb963cd-907e-4c76-8140-b67f62ee3a33",
        "cursor": {
          "ref": "0882de32-8b9c-4d42-a98f-e692d6ca0712",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6bab78b7-c2cc-4f2a-a188-574806012360"
        },
        "item": {
          "id": "9fb963cd-907e-4c76-8140-b67f62ee3a33",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d018e062-b413-496d-a565-8855c64990d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bea1db4-4ab9-4fc7-98ee-6e5f37357d66",
        "cursor": {
          "ref": "0e57894b-8873-4add-9d02-25d780ec74d1",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b7d9ba9f-28e6-417f-b934-869d22ad31c1"
        },
        "item": {
          "id": "3bea1db4-4ab9-4fc7-98ee-6e5f37357d66",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f6db9d56-d374-440e-80dc-32fa3c308ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236f6dc2-bfa4-4573-b732-ba6622c62eed",
        "cursor": {
          "ref": "1ffab6e1-c67f-45cc-8e82-5db83ad46e9b",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a115451f-8952-48c9-a508-2b714ffd3907"
        },
        "item": {
          "id": "236f6dc2-bfa4-4573-b732-ba6622c62eed",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "14bf10ef-48f9-4ad7-af80-f9e966251766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f6ea0e-7f16-4ec5-bb25-b492a13168ca",
        "cursor": {
          "ref": "910f8550-716e-47ab-b14f-031bc46ec327",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "37eca9cd-8828-4bee-be24-d14e32f06e4f"
        },
        "item": {
          "id": "21f6ea0e-7f16-4ec5-bb25-b492a13168ca",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3736b796-1df8-42d3-9cf6-ab4a3c34ef44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdfb075-daaa-49e7-9e15-a3305d0ddad9",
        "cursor": {
          "ref": "dc2a39f6-78fb-4978-9723-0c69ee78ab09",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a25e0105-2ae3-4484-a3ac-b8e2866c52e7"
        },
        "item": {
          "id": "9fdfb075-daaa-49e7-9e15-a3305d0ddad9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cf8e1640-2414-4506-9d4e-ac1fb644dc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13766620-a5f4-4587-852b-bc7dc4a6e498",
        "cursor": {
          "ref": "93852396-2228-47e8-8834-2db528adc03d",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8e0dda20-88ae-4fd0-98d8-794f3248bd32"
        },
        "item": {
          "id": "13766620-a5f4-4587-852b-bc7dc4a6e498",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fed35448-24a6-46ed-8311-901911e6e002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07b3a6e-9f6c-4a3c-bade-021438d4227a",
        "cursor": {
          "ref": "cd4eb73a-b8b1-453c-b383-171823a08688",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4865ebe1-7ce2-4737-9f8e-91274834e791"
        },
        "item": {
          "id": "c07b3a6e-9f6c-4a3c-bade-021438d4227a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fae91b6e-7f5d-4567-87ca-c0b0fb875721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e78819a-283b-4987-bd3b-9e1661e79f67",
        "cursor": {
          "ref": "6d41a346-04df-4b0b-9e73-e74f8931f91c",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6d4a4344-0e5e-43e5-851a-a71da0b8859e"
        },
        "item": {
          "id": "1e78819a-283b-4987-bd3b-9e1661e79f67",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0fac72a7-87d1-4de8-b8af-5959b162698b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0b08d4-34fa-4c57-87de-c749c99fe830",
        "cursor": {
          "ref": "f85c8dd9-ac0d-4660-aa94-41141dd15412",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "79ceecbd-e4fa-47d9-8b3c-43df55b35cf7"
        },
        "item": {
          "id": "ae0b08d4-34fa-4c57-87de-c749c99fe830",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2b7201f8-1d1e-480c-bf0f-57dd55727b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a40321a-07ec-485b-b0df-454a22d3b839",
        "cursor": {
          "ref": "97b93c7a-292e-4f9d-9152-525342b078e2",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cccc7610-469b-49cb-936e-ac935c7c169c"
        },
        "item": {
          "id": "5a40321a-07ec-485b-b0df-454a22d3b839",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8a092d6a-54d2-480b-a26a-15c67c6fe578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32d9551-85ca-463d-bd21-0da530f90704",
        "cursor": {
          "ref": "ba59e988-439f-4da9-a17c-d1abecea7c4d",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1cddd334-128f-453a-a51b-a679fec5681b"
        },
        "item": {
          "id": "a32d9551-85ca-463d-bd21-0da530f90704",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1b25e84c-1cfb-4e2b-bb98-5b6145b889a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c35bf29-9b3c-48e2-9b87-5352f3ea5524",
        "cursor": {
          "ref": "dd516593-c234-454d-a55e-d150f24028dc",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d1024da1-7c7f-4ac0-a6ac-d4d6a56774e3"
        },
        "item": {
          "id": "6c35bf29-9b3c-48e2-9b87-5352f3ea5524",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "def9d20e-0d66-4907-9d60-e801d0e48b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26453364-88e6-459c-ba27-6955243e4b5b",
        "cursor": {
          "ref": "0bcd95f3-f336-4f17-b777-fd10018357bc",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7b868cca-a3b4-4d3f-8743-57185b4ac1b8"
        },
        "item": {
          "id": "26453364-88e6-459c-ba27-6955243e4b5b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dbadea77-0833-461f-9b50-2be6acb04d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4530cbbf-8865-471f-a546-b0bee8db2c86",
        "cursor": {
          "ref": "5296d8b0-d02c-4bbc-b90c-8a55a330b769",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2b28ee74-b642-483b-8a07-a7afeebd2e6f"
        },
        "item": {
          "id": "4530cbbf-8865-471f-a546-b0bee8db2c86",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e8950079-ac54-43b0-bfec-3d1952c03eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850d85b6-153a-4125-8d64-841eec96325f",
        "cursor": {
          "ref": "9f7f1329-74a2-4c74-b885-e1318bcd9f13",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ce79da0a-232f-4700-810f-7c532b961348"
        },
        "item": {
          "id": "850d85b6-153a-4125-8d64-841eec96325f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "457d6fa4-d6e0-4271-a064-56e5ddbdb74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a93cde-6083-4592-93b2-d410ef32a15e",
        "cursor": {
          "ref": "50e4b4b6-eaa2-44f8-87f3-ce168c11e5c3",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f5288abf-dc8b-4a4a-8c0a-6b48622f6c61"
        },
        "item": {
          "id": "49a93cde-6083-4592-93b2-d410ef32a15e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cc0764fd-a70e-4077-926d-142e9c8e399f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cc9225-54fe-47fc-99e7-a33253110f59",
        "cursor": {
          "ref": "dfe33d13-ca0b-4b5f-8f88-219778b7ede5",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "afb85b1b-0417-498c-928c-4e423666e405"
        },
        "item": {
          "id": "90cc9225-54fe-47fc-99e7-a33253110f59",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d9b4fd6e-1fa2-42f7-a81e-d2c9803ceb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d64fe2-de1d-4181-a01f-89f6eceddd30",
        "cursor": {
          "ref": "1cbd9a7a-e1e0-4360-a981-85fdf5b144d7",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1dd7edb5-a5b7-41c2-bab4-5425eca75623"
        },
        "item": {
          "id": "48d64fe2-de1d-4181-a01f-89f6eceddd30",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "71caf6cb-5c1c-4a2c-b91f-c8f12bff996c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707a35ba-b160-4e59-8a3d-c444a1d89cbe",
        "cursor": {
          "ref": "306cac18-087a-4f4a-a687-571422673b7f",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a88a65e0-47d8-4900-814d-ae7acaa4f238"
        },
        "item": {
          "id": "707a35ba-b160-4e59-8a3d-c444a1d89cbe",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e268ec53-d578-45ba-992e-fa4fe78bcbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7663d51d-487b-4404-855b-6c145b11440f",
        "cursor": {
          "ref": "4ca17b4c-fffe-4431-b15b-b815a6e3f47c",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "03d30552-b6de-41cf-b92f-41a71ef83ab8"
        },
        "item": {
          "id": "7663d51d-487b-4404-855b-6c145b11440f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ad8d5595-439e-4dce-86e1-29d75bc16f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe104cc-9ddc-4415-81d5-d80ce947298d",
        "cursor": {
          "ref": "f5b3f7ec-a52c-4a5b-9e69-cddc2fa6d957",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7ad21518-1e7f-4c4c-8bb4-a845c973da6e"
        },
        "item": {
          "id": "dfe104cc-9ddc-4415-81d5-d80ce947298d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4bf98f62-79eb-452f-8e9b-80fc6356c1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c5d7e2-ab7d-4f6a-9640-7923335fa627",
        "cursor": {
          "ref": "5985ae0e-ed69-4d4a-aa32-60f2aba89b01",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "685136ec-2f78-41db-90b1-b7e658986f3f"
        },
        "item": {
          "id": "a8c5d7e2-ab7d-4f6a-9640-7923335fa627",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "36ea9c2a-6472-45a7-8842-12f65857952f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fc3c67-e1d6-441f-bf97-76526a08de33",
        "cursor": {
          "ref": "69f7ae81-b9b7-434a-abcd-73f187f1780d",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "61024760-d16f-4125-9a7b-bf6231cc1e0f"
        },
        "item": {
          "id": "30fc3c67-e1d6-441f-bf97-76526a08de33",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "36c8e7d3-9890-46b9-9fd0-bd080c5bfdd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234eb95b-5ca1-4a42-8bbd-a6b4930e016a",
        "cursor": {
          "ref": "cb7071dc-81e7-43fe-a511-c4cf36ac4928",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0716fac0-8229-4f6f-8129-0fbc8f9540b3"
        },
        "item": {
          "id": "234eb95b-5ca1-4a42-8bbd-a6b4930e016a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e4477272-7294-4e8e-b995-26497f34d490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db42afc-50fe-46aa-980f-15025fedad1f",
        "cursor": {
          "ref": "42b1a037-75c7-4d6b-8a26-10a8cac5eb73",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ca537aee-076f-46d5-b6f1-87f6bea61aa5"
        },
        "item": {
          "id": "6db42afc-50fe-46aa-980f-15025fedad1f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "49991dfe-9249-49c9-a9fb-578055bb3a43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3968dab7-5a4d-4c85-881b-252bbc42c7d5",
        "cursor": {
          "ref": "167a82bf-f936-4db5-abf5-db3633b69e6e",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7e98710d-3d23-4016-8af5-d25d3de3fe65"
        },
        "item": {
          "id": "3968dab7-5a4d-4c85-881b-252bbc42c7d5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a08aeed3-29db-4791-bb5e-4ca0e2566dc5",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8e5d5a-5306-49f5-9a36-833e1977b537",
        "cursor": {
          "ref": "8de0df36-1e2a-4cca-9f45-78bbe8f8dd81",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "668b3afb-2511-4f7b-8d08-e203c55a3770"
        },
        "item": {
          "id": "6e8e5d5a-5306-49f5-9a36-833e1977b537",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2b4a1f9f-30e7-425d-8674-b6373ae0e363",
          "status": "Created",
          "code": 201,
          "responseTime": 115,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "179589f0-b8fa-4585-be51-634448311ff9",
        "cursor": {
          "ref": "f50eed5c-7db7-4ea0-b5de-caca32eae71b",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0c0ed260-534d-4297-9dd8-31998c10eb2a"
        },
        "item": {
          "id": "179589f0-b8fa-4585-be51-634448311ff9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d9ef990b-9e17-4740-9e1f-0370c2485eac",
          "status": "Created",
          "code": 201,
          "responseTime": 47,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdbc91d-d5e2-48f4-ba6b-7ffec85d8f53",
        "cursor": {
          "ref": "7506adf5-da52-413c-b4c2-794bc5631994",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "394f62b1-2d44-45f5-83cc-86383ccc896e"
        },
        "item": {
          "id": "bbdbc91d-d5e2-48f4-ba6b-7ffec85d8f53",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f9adea0d-620a-4b59-8b72-799ede19f605",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1a55a2-d074-4da7-811f-d023c4e5bc02",
        "cursor": {
          "ref": "e030ae1f-0365-4568-b447-df5bbb78e8cd",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "860cc9a0-7096-4552-a6d9-f71217b3f812"
        },
        "item": {
          "id": "ed1a55a2-d074-4da7-811f-d023c4e5bc02",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "237a4efe-95b7-49a4-b991-6917456ed4c0",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9ae970-eb41-4d9b-9f19-fc7400b069a0",
        "cursor": {
          "ref": "29ec8dd2-b037-4a94-9f25-8b84556f450c",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "aa3fe302-a5d8-4368-9357-65f42f15dd7e"
        },
        "item": {
          "id": "2b9ae970-eb41-4d9b-9f19-fc7400b069a0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6ed33e91-4863-4940-b593-914a55dde5d9",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98a78f6-b7a6-4e6d-8a66-59490b3f20b1",
        "cursor": {
          "ref": "15f48f04-d27d-403f-b75c-5809509d0977",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "dc480c00-2cc0-4bc1-8c48-891244fe05c9"
        },
        "item": {
          "id": "a98a78f6-b7a6-4e6d-8a66-59490b3f20b1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b1693f1f-e79b-4de0-9f31-f7f083e648a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11cdb44-9995-457a-add4-3c479ae78709",
        "cursor": {
          "ref": "ef4ac66e-44d3-4350-94f0-74206fe5689e",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "80910cd3-fdd3-497f-85a3-3714cee785c6"
        },
        "item": {
          "id": "e11cdb44-9995-457a-add4-3c479ae78709",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8f2f6ab3-fe63-4653-b9bb-261e6e51fd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0045c0d-4ae9-49f5-ab44-897af3534eb1",
        "cursor": {
          "ref": "54ddae9d-278d-4911-97ac-9782c6b5c738",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c9a4f1ec-edcf-4d10-a854-40b380a283bf"
        },
        "item": {
          "id": "a0045c0d-4ae9-49f5-ab44-897af3534eb1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "40357110-3b98-4c5d-9eb1-ab0638f866c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa97391-ae1a-45b8-85df-50024fa19f9b",
        "cursor": {
          "ref": "674fe2ba-9b55-489a-b8a9-a22eefd5ad2f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "914d56a1-a4c5-4e75-a387-c0475391680c"
        },
        "item": {
          "id": "9fa97391-ae1a-45b8-85df-50024fa19f9b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "973c31a4-0065-4372-a4d7-79ecc06c8fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f58f201-2633-49ab-ae2f-787e99d55175",
        "cursor": {
          "ref": "5c0a3e8c-89a6-42bc-bbd0-5b46c09d92cd",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "92368bfd-23a1-4dbf-8a6a-033bc8d9b155"
        },
        "item": {
          "id": "8f58f201-2633-49ab-ae2f-787e99d55175",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "612ea590-9109-4d44-9e31-04cf8427ad50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ea235d-e83b-404d-a88f-0e17373fb392",
        "cursor": {
          "ref": "83747201-5c34-47cc-9bd7-806b657f3954",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2225d2fc-4c93-41ce-b112-a939ffe6519a"
        },
        "item": {
          "id": "92ea235d-e83b-404d-a88f-0e17373fb392",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f947393a-e2d5-4693-b3c6-7dd177320ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513b1b9a-ec56-4c00-b6d8-769921574127",
        "cursor": {
          "ref": "15761b6b-b7b2-4b46-b502-80c5b59e0a43",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e1be2eed-1fae-437d-b56f-987a039c48d4"
        },
        "item": {
          "id": "513b1b9a-ec56-4c00-b6d8-769921574127",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "82eee955-b95c-442d-bf13-58c6ee4192a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedbf80c-46c2-476a-99b3-a88c854ba7cd",
        "cursor": {
          "ref": "f37f194b-3cda-45ae-99a1-c77e37727194",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ed6e8a7c-d233-4724-9aa8-3c1e9c29968a"
        },
        "item": {
          "id": "fedbf80c-46c2-476a-99b3-a88c854ba7cd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "85e3e5da-a7eb-4d0f-8652-4f2a21b39f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137d2247-3a54-4c4b-a7b1-0e494aa40389",
        "cursor": {
          "ref": "c546256f-c5c3-47e7-bb20-ca7c1719789f",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4efbd2cd-16a3-401e-bb5f-bcfd95e87464"
        },
        "item": {
          "id": "137d2247-3a54-4c4b-a7b1-0e494aa40389",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "54196781-e579-4313-93da-92bdabab1e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492157f6-56b1-4566-bc17-f5e1157251bc",
        "cursor": {
          "ref": "8cb6dcf1-134b-4285-9551-bf98a8a1c60b",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c39197d9-b120-40b4-b4f1-11dcf505c867"
        },
        "item": {
          "id": "492157f6-56b1-4566-bc17-f5e1157251bc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d80e4f8a-1d8c-4cf8-a3f5-712d869eb8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d797b084-b113-4db5-bea0-9640f1c15154",
        "cursor": {
          "ref": "8464854d-ffd9-4cfb-8c1a-bfe8b46aaf42",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3791e2a9-05e3-436e-a09c-d9ceb6243c92"
        },
        "item": {
          "id": "d797b084-b113-4db5-bea0-9640f1c15154",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8644dcb6-81f9-4397-86a2-e81c788c1f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c6118c-a079-481e-8a64-05155c2bc0b4",
        "cursor": {
          "ref": "a289b7d2-3f27-4c6c-9907-45dc5d82cb44",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "80b9d81e-f8ba-4355-8841-cebf32d762b5"
        },
        "item": {
          "id": "13c6118c-a079-481e-8a64-05155c2bc0b4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cc0ddd5a-29c3-4225-a03d-5fba2c29c534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4981c45-8f75-411d-b06c-d50fcc7a37f3",
        "cursor": {
          "ref": "5fb77ad1-1223-4632-86e4-216c78ee37f8",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4bae876e-0337-433e-9d76-a25d52e0a788"
        },
        "item": {
          "id": "c4981c45-8f75-411d-b06c-d50fcc7a37f3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e41ae3bf-e612-480e-8c50-defe6c602f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba990a40-0e59-43e9-8aa3-df8842ee3b7b",
        "cursor": {
          "ref": "166f7f52-8871-4045-9caf-8172a20136fe",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "39e2deef-7e53-4a05-93a0-130dfe94e50b"
        },
        "item": {
          "id": "ba990a40-0e59-43e9-8aa3-df8842ee3b7b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7c571f6a-7704-4ab4-84e8-86669b106f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899b37ff-e50a-437a-99e6-d34e6e49115d",
        "cursor": {
          "ref": "566641c2-ba8c-4873-9584-f7927d160de8",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "841f75ea-283b-446f-b920-a06c94cd5b26"
        },
        "item": {
          "id": "899b37ff-e50a-437a-99e6-d34e6e49115d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b1a58569-57b0-4bd4-880d-338add46d596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ac680e-0c35-484c-8e67-6e67a832d099",
        "cursor": {
          "ref": "cf462795-70d3-4101-ad50-b05705393c33",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4e10a9ac-d84d-43c9-b1aa-36d4a0ac3b6e"
        },
        "item": {
          "id": "80ac680e-0c35-484c-8e67-6e67a832d099",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "def4b4b5-3071-463d-8f39-abbf99b08215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4865a0ba-70e3-4a9c-942d-d486d68f44ef",
        "cursor": {
          "ref": "88b12fb5-0a11-4edc-9e26-65db77a99130",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d82ee9d9-ea43-4310-b7c6-288b414dad76"
        },
        "item": {
          "id": "4865a0ba-70e3-4a9c-942d-d486d68f44ef",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4e5e08c1-76ae-4415-8a07-4c3d911e3b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ef4a1f-dafb-438a-8a3c-e476979ca868",
        "cursor": {
          "ref": "5430baf0-f395-4016-9e8c-5bc27c773435",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "35529c7d-6def-4d96-9e8a-dfdc066c2e50"
        },
        "item": {
          "id": "48ef4a1f-dafb-438a-8a3c-e476979ca868",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "573a0c76-ecda-451f-8dcc-56d5841cb5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544b460b-e2b8-499f-8f25-d2ef0972ad0b",
        "cursor": {
          "ref": "53b1b18a-c7ac-44af-9463-17ccd257be9e",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4acfee9b-d67c-4320-a0cd-553631c37b32"
        },
        "item": {
          "id": "544b460b-e2b8-499f-8f25-d2ef0972ad0b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ffca1cf7-90b1-444d-a569-4c918cbf2d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665098c3-00d4-4f12-8d99-01e1f2b25ab3",
        "cursor": {
          "ref": "57d46352-156c-4f80-ad1a-f786080f37c2",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a34ef790-e777-4672-932b-981f5f10e7dc"
        },
        "item": {
          "id": "665098c3-00d4-4f12-8d99-01e1f2b25ab3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ee02f02e-7b46-49dd-8fc8-92ec46485978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e68cf88-94a9-4d85-8071-d896c4d65864",
        "cursor": {
          "ref": "7927b0fd-1e9a-4b66-9a33-a991f7cc5835",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3c464787-e1a6-4a5e-91e1-6433416f4117"
        },
        "item": {
          "id": "2e68cf88-94a9-4d85-8071-d896c4d65864",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f2e67e50-4ad1-4a95-81a5-502d8e7e7665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451794ad-bb5e-4c5b-87eb-ccd57777c94a",
        "cursor": {
          "ref": "330bba62-ab8c-4df9-bad1-53a30b8fec92",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "39da621d-05cc-4f05-92fb-957e65ae19a8"
        },
        "item": {
          "id": "451794ad-bb5e-4c5b-87eb-ccd57777c94a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "04847762-3e59-4ce7-9a3e-43d026f5a742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87343b3e-0de1-4235-812f-c57e84dd543e",
        "cursor": {
          "ref": "6689665f-aabb-456d-b926-a8f9e3c6ecb0",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b088a276-4f50-4588-973d-76dc51cb5658"
        },
        "item": {
          "id": "87343b3e-0de1-4235-812f-c57e84dd543e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fa7ef603-fcfe-48b2-8bb3-d084140db0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b7227d-636a-4d04-9a0f-10548759486e",
        "cursor": {
          "ref": "37ca0447-f411-4b32-85af-abd98061a136",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a016b827-154a-4cda-95a9-f9e499a434f3"
        },
        "item": {
          "id": "b1b7227d-636a-4d04-9a0f-10548759486e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "266da44f-969f-47c5-86a6-5536d5f5a78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85e9930-4634-4b94-bd56-74efbc963d8d",
        "cursor": {
          "ref": "df8e1657-a4d3-404e-8682-7a086147f9d5",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e348e260-f28e-4d00-97d0-4ea30486844e"
        },
        "item": {
          "id": "d85e9930-4634-4b94-bd56-74efbc963d8d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "450f7d77-dfaa-4689-8b29-0ec483576f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f49106-34fb-4ec9-b191-3529cd854720",
        "cursor": {
          "ref": "3eee5711-ebe7-4dbc-b530-2f95fef1edef",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e804d55b-5ed9-4e9e-ac6c-5b03d61eb695"
        },
        "item": {
          "id": "e9f49106-34fb-4ec9-b191-3529cd854720",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6a96a1a9-3ca8-4c2a-b063-313633660a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9a08ef-39b7-49e5-ae1b-5314446ae05a",
        "cursor": {
          "ref": "5ec2c1b3-1443-4243-ba80-d4a2685ff241",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4844a867-b986-4b04-a79c-014882a2e4b2"
        },
        "item": {
          "id": "7c9a08ef-39b7-49e5-ae1b-5314446ae05a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "089156ba-1881-4d60-8a4a-16238836700f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2078f0-2a5b-4310-b6e5-1d30b1ad6761",
        "cursor": {
          "ref": "71f68482-c744-4b85-baf0-6c00d84ccb5f",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4b005f83-9432-457b-ac8c-dc5d8d906029"
        },
        "item": {
          "id": "fb2078f0-2a5b-4310-b6e5-1d30b1ad6761",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "48688bc1-4ef3-428b-ac04-b7ea40d904a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4c6f8c-306a-464d-83ad-afb4a6e0c630",
        "cursor": {
          "ref": "899282bf-057a-4707-8fde-45f1dbe54357",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "40b51934-42ae-4b28-a137-f9ee403f3bf0"
        },
        "item": {
          "id": "2b4c6f8c-306a-464d-83ad-afb4a6e0c630",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0f34eb61-54fb-475c-acf7-f6305332d9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e376ac9f-b7a8-44c5-8f7b-931510a0b280",
        "cursor": {
          "ref": "6cc2ec39-dfdd-4c2f-8783-6244adebe01d",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "522bde8e-d254-4d71-ad1c-5a229c638cbc"
        },
        "item": {
          "id": "e376ac9f-b7a8-44c5-8f7b-931510a0b280",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0f110554-0b10-4261-a47c-7146f38f36df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd909db-38f8-4793-b064-d7a09cf16d78",
        "cursor": {
          "ref": "d5923cdb-eb65-4997-a382-9bfc02bb966d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3c6f3839-7db7-4a27-9fe6-8c616dc10725"
        },
        "item": {
          "id": "9bd909db-38f8-4793-b064-d7a09cf16d78",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "60c4590c-c71a-4e86-a646-09b250bb4d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accf8c4c-cf83-4373-bbcd-bfb3db929303",
        "cursor": {
          "ref": "1a75606f-c95c-4b7e-80ba-923ce37d795c",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b30d849b-626e-410a-bd0c-7bd1855a87b9"
        },
        "item": {
          "id": "accf8c4c-cf83-4373-bbcd-bfb3db929303",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "59d4c63a-4db1-417c-86df-dfe81bcca8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a27765b-1e43-4ab1-89ab-6529ff1f0d73",
        "cursor": {
          "ref": "8f43b894-4212-4ffd-9301-b66e31a0e3ff",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "296429f9-7dc5-4b5d-82f3-5d131206b87b"
        },
        "item": {
          "id": "0a27765b-1e43-4ab1-89ab-6529ff1f0d73",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "35362eca-950a-4f38-8b36-e18c4a8cd60b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7ac8ea-5014-46bc-9559-57bf27bff8b3",
        "cursor": {
          "ref": "32c777a7-ea71-41e9-8bb6-3b705b157010",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8efe666d-7828-466d-ac10-2aecf3cc8a20"
        },
        "item": {
          "id": "7a7ac8ea-5014-46bc-9559-57bf27bff8b3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0b3cb05c-6474-4e99-bdd7-7e35632be47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ea3ec2-785a-4000-8c15-78fa94f4c651",
        "cursor": {
          "ref": "8a4cc722-bee6-4ff5-99ca-c407a1596e51",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "05ae3b88-177a-4be8-9528-e4cadcb7dbc4"
        },
        "item": {
          "id": "b5ea3ec2-785a-4000-8c15-78fa94f4c651",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ef2b154b-e4ed-41d4-86a9-af9064f3a740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cee943-fc2b-4312-905b-b42248820d1a",
        "cursor": {
          "ref": "c9b87474-d257-4ad9-bf85-2737855e3424",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3f757137-4e58-4159-bde6-8f17f4b4add6"
        },
        "item": {
          "id": "80cee943-fc2b-4312-905b-b42248820d1a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "12fd0bd8-4d55-427e-89ca-8c47b58d001e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3c2f9a-915c-436e-9628-200c56c792db",
        "cursor": {
          "ref": "d7942f32-2a72-40ee-b0b7-a229e96d6dae",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "10dc46ad-7442-4af7-86c4-5604bf1e6fae"
        },
        "item": {
          "id": "6b3c2f9a-915c-436e-9628-200c56c792db",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7d390774-77ad-4cc2-be96-06d308d65df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9858de75-99d7-4c35-960a-190fe5d0340e",
        "cursor": {
          "ref": "4d3eaaf5-bffa-48ea-89f8-97cd4653e553",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "39abf9c5-c2ba-4ae9-bd0a-fd01854ef2fd"
        },
        "item": {
          "id": "9858de75-99d7-4c35-960a-190fe5d0340e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3d0de0d8-10a7-4941-90db-c9e792f6c0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ead9858-f72e-45e5-bcde-5d12b47c6ef4",
        "cursor": {
          "ref": "1add9f2c-4fe8-4df9-ac4e-b0d48ffc26cd",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "39dd3619-394f-4714-be7f-23e08ba2dbe4"
        },
        "item": {
          "id": "3ead9858-f72e-45e5-bcde-5d12b47c6ef4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c37563b4-7294-4ea6-b777-ad02a249cd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f951b1-9d21-4962-9be1-aa8f9163fc73",
        "cursor": {
          "ref": "b3e0dda4-9b61-4b45-b6d6-36d8cb9328f2",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6b0dd444-d770-4f7b-ac52-4d0ea9151d95"
        },
        "item": {
          "id": "38f951b1-9d21-4962-9be1-aa8f9163fc73",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f4c48443-bc2c-461c-9ffc-6bf03a254851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6332d91a-f106-481e-8c14-0720a8fdfd7c",
        "cursor": {
          "ref": "af91a65f-67a4-4bb0-979a-0d4895ce3ce5",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5f9a5be5-ff01-4f1b-ab3e-5a265d342628"
        },
        "item": {
          "id": "6332d91a-f106-481e-8c14-0720a8fdfd7c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bf62296a-22d1-4efb-92b9-b606c15b651e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb22f110-746d-4d8f-bf11-6c0a924e0441",
        "cursor": {
          "ref": "b130e352-a13d-4f71-8477-9cd7cbd74150",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6cde2a0e-c2c2-4ae9-8cfa-44c0e3bf1b55"
        },
        "item": {
          "id": "fb22f110-746d-4d8f-bf11-6c0a924e0441",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "eaff3d12-b29a-4e50-9c59-cba91afd8084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4090a192-1260-4f8e-9174-db96f58f331e",
        "cursor": {
          "ref": "5cbe7f5b-7edc-4ae4-a192-01e403c83da8",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7e2b76b3-89e0-420b-8bce-985dd3cdbb8b"
        },
        "item": {
          "id": "4090a192-1260-4f8e-9174-db96f58f331e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9353c6f3-b396-46c1-a627-1c9508249a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebfd893-baec-4511-a570-cf12afaba405",
        "cursor": {
          "ref": "5b6331ad-599e-46ab-b971-161a3f2f930a",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fac5aa15-6c0c-4a9c-8a7b-5a32e7539d8e"
        },
        "item": {
          "id": "3ebfd893-baec-4511-a570-cf12afaba405",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3f64cf17-07a7-4d12-a118-78e2ff7a0c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e01fc5-2bf6-47a1-bdef-57a9c3ed3a66",
        "cursor": {
          "ref": "cbbdb374-257b-4c83-bf08-e019ba944788",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8e60be4f-4d8a-4e81-9140-83e1f5fd2552"
        },
        "item": {
          "id": "09e01fc5-2bf6-47a1-bdef-57a9c3ed3a66",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8975afac-c415-4b12-9765-1145757c7ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37490a0-cb3f-4018-813d-c3917822c951",
        "cursor": {
          "ref": "df8d02ed-5a8a-4116-bd27-6a588a8a0c65",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "65fe56de-29c7-4d5b-b035-758c60d86044"
        },
        "item": {
          "id": "c37490a0-cb3f-4018-813d-c3917822c951",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ea625e72-967c-41dc-bb90-4345f7804476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b92bbce-b320-424c-b5c9-50ebc5bdef7f",
        "cursor": {
          "ref": "2e72d911-d625-4789-a368-0afcdf42074e",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c20152f5-1a8c-4139-a65f-73a062841061"
        },
        "item": {
          "id": "9b92bbce-b320-424c-b5c9-50ebc5bdef7f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4382b103-00d8-41da-aa82-f581987ed13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43aee5bf-a4d3-4662-a50c-8ada0d114646",
        "cursor": {
          "ref": "b40ccf7d-41f2-4162-a68e-f8c1ad27b8ff",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c47d2a24-1f59-46dd-aac4-bdb1457cdbb4"
        },
        "item": {
          "id": "43aee5bf-a4d3-4662-a50c-8ada0d114646",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1713e1bf-d02e-42a5-b292-796b222f383e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6150525-9b8e-4ec5-901b-4f6929639bb2",
        "cursor": {
          "ref": "948815f9-9be6-432a-9040-4c8b87253c38",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "73605d85-f1d7-4910-92bd-f1f2bfe25bb4"
        },
        "item": {
          "id": "c6150525-9b8e-4ec5-901b-4f6929639bb2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d2a7a490-2285-42f3-acf7-c20ee3c3cbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45e4856-68d2-404e-8b49-1bfe08e95b09",
        "cursor": {
          "ref": "b499ef55-9f46-4159-b690-17dc163fbc22",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e4f4ae3d-fe1a-490f-85b0-f1ef4f3db6f0"
        },
        "item": {
          "id": "d45e4856-68d2-404e-8b49-1bfe08e95b09",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7cb91883-7fc6-4dff-8ca5-09c682a24478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf0aa22-1023-452c-b8ef-f36f04b09dc8",
        "cursor": {
          "ref": "27e97e4e-0d5a-4b0a-aac6-a3405bcfb7d2",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6ad7f8e8-41ce-43d6-97b2-6e3f301eee4b"
        },
        "item": {
          "id": "7cf0aa22-1023-452c-b8ef-f36f04b09dc8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e9bd4177-ef77-49d4-81d4-a6450c07a4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00b14bd-a77b-49e5-85d5-aa14d6bdfddf",
        "cursor": {
          "ref": "d50e9d91-ef71-45d2-bbff-0e5003f43036",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "13820fd9-fca0-41d2-9acf-1a95f82835e3"
        },
        "item": {
          "id": "f00b14bd-a77b-49e5-85d5-aa14d6bdfddf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "02c0b7b3-f2bd-4b2c-9dee-8de31284cbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5896359-7d76-4ea2-8e92-c4cbc7a1dfca",
        "cursor": {
          "ref": "62273d84-e2f8-48b2-980e-73bb1a35d46b",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1892ace2-fa66-4c00-b3db-7484c4d131fe"
        },
        "item": {
          "id": "b5896359-7d76-4ea2-8e92-c4cbc7a1dfca",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a8f22c28-dc0b-4f1c-8a55-bbdc37692766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4bf8e8-bd3c-47ab-adcb-5f88a94b1815",
        "cursor": {
          "ref": "c15cda7a-b996-4871-a2cb-82963362023b",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "37d5d2d2-92f9-4bd0-a7a9-e1a8b969607a"
        },
        "item": {
          "id": "ce4bf8e8-bd3c-47ab-adcb-5f88a94b1815",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3759854e-8c6e-421c-8bce-18d9ee0d4cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5696e17-a755-46b9-9629-c506c19122e7",
        "cursor": {
          "ref": "51631902-eb2a-4739-a07e-f5e3fb762297",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "42468acc-2d8b-4e28-bd89-5fe03ef37ed7"
        },
        "item": {
          "id": "b5696e17-a755-46b9-9629-c506c19122e7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bdb2097f-39da-4a77-ac63-f4adaaae97ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc657cc-0f19-4ce1-981c-82b730ea8951",
        "cursor": {
          "ref": "4e9ee72b-c055-47a5-a376-cb0119a477f6",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7c78fcf9-3dfc-42ad-9c9a-cdb44feca856"
        },
        "item": {
          "id": "6fc657cc-0f19-4ce1-981c-82b730ea8951",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3b7706a8-ce31-4c3c-9831-8d6b4f5a8d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cd27b5-704f-4e7f-99ea-5f55a18596f8",
        "cursor": {
          "ref": "5f01ce32-c372-4749-80f2-c241d72c6e37",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3682e957-b907-440b-af01-0d560ccaeb27"
        },
        "item": {
          "id": "84cd27b5-704f-4e7f-99ea-5f55a18596f8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "586d07cf-a629-4b09-8259-cce75b79eb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799a2d0b-df18-44de-bba7-7be45db371da",
        "cursor": {
          "ref": "364bdad6-33ab-4e6d-b361-6b4927101756",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "23990c73-93c8-468b-b549-afed8f796c02"
        },
        "item": {
          "id": "799a2d0b-df18-44de-bba7-7be45db371da",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c6721630-663e-4456-aa94-01318d771ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9fddfd-cf43-4c1e-87a2-6799f64ed784",
        "cursor": {
          "ref": "c89cccec-6966-4ce8-9ed3-cc738d7adfef",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fa7528e9-359b-461e-9f0c-4d095d32d6e2"
        },
        "item": {
          "id": "af9fddfd-cf43-4c1e-87a2-6799f64ed784",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2b6ee65c-a902-402c-8e57-026e351cf339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e81cb8-057a-46d3-ba3f-9008320b9430",
        "cursor": {
          "ref": "c6097677-116e-4020-ab6d-d0c21f4aea84",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "46687d9e-0ac7-424d-ae9a-b7fdc1540ee9"
        },
        "item": {
          "id": "b0e81cb8-057a-46d3-ba3f-9008320b9430",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9d76e210-a1e9-4c5e-9ea3-f07b7a30c42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0ee5c3-8885-46ab-9033-507aca22801b",
        "cursor": {
          "ref": "8f81310b-6d38-4997-878c-1c6727da3e19",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3e53b164-f21b-4d8a-a4f6-5e555286d2e1"
        },
        "item": {
          "id": "bb0ee5c3-8885-46ab-9033-507aca22801b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "234a7fb8-5ee0-4f4c-9f22-62c842a83fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbc6daa-28a5-4be0-a1b7-a6d72034cfed",
        "cursor": {
          "ref": "826eaf23-c34b-4fc1-8851-b1f6fca55257",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "26716a8f-916d-4f9a-817f-8178ca2094bc"
        },
        "item": {
          "id": "fdbc6daa-28a5-4be0-a1b7-a6d72034cfed",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9a43a0e3-41fa-4b7f-8b07-cfaadd18deb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da79825b-3749-4d2a-93f2-e4dfb44806da",
        "cursor": {
          "ref": "5d1d3b0e-3098-4e1a-9be0-a4453859143d",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8050034a-5557-4313-8c7c-a1847d3dc2ba"
        },
        "item": {
          "id": "da79825b-3749-4d2a-93f2-e4dfb44806da",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "234db5b3-f3ab-442a-a05d-73990145e1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a5fa55-2543-45d9-8d08-6aa14a7d6c70",
        "cursor": {
          "ref": "3aa69b8f-7feb-4734-8e29-c6a7a0efb0a1",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cda4fcde-674c-4510-a6d2-8cc5a3744229"
        },
        "item": {
          "id": "c7a5fa55-2543-45d9-8d08-6aa14a7d6c70",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9c862d09-65a8-4f54-a450-7994cafd3a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63503ebf-c422-469a-bf4c-8c40b13e9c8f",
        "cursor": {
          "ref": "24e3d31b-8012-41ec-806c-99779a93b7f7",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e7489fd7-9b52-4f0b-8235-ec8b21ffe10b"
        },
        "item": {
          "id": "63503ebf-c422-469a-bf4c-8c40b13e9c8f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6fa45f8f-56ce-40b6-821e-076c69565ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a72b03c-4f5e-4b71-b3c4-b3dc3a80c1d8",
        "cursor": {
          "ref": "52989a26-16dc-4f10-a603-8f088129036d",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "67f4ba86-4454-4b8a-9e74-f42b4d497d29"
        },
        "item": {
          "id": "9a72b03c-4f5e-4b71-b3c4-b3dc3a80c1d8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9df88fae-aa94-47bc-9285-f0a7516789b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cdc4e6-9ecb-4bbd-8239-556cef4b05d4",
        "cursor": {
          "ref": "53cbd390-e289-461c-ad99-b9111e58dbe9",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b6041fb4-e9d2-41ee-b9d0-7e79e01d56ae"
        },
        "item": {
          "id": "29cdc4e6-9ecb-4bbd-8239-556cef4b05d4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c8df3c45-38ae-448f-a05a-b8b6cfc7cf7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b6eeed-d328-4b2c-9c5e-e735fe0bae58",
        "cursor": {
          "ref": "db9dc62e-f40c-454d-8d9e-66c6235c0dcb",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b1def14b-d3f4-4736-9231-7feb3a6eca94"
        },
        "item": {
          "id": "f5b6eeed-d328-4b2c-9c5e-e735fe0bae58",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "406bbd9e-7a7c-45f2-8398-a314dc5ea616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8ca92f-0180-41cd-91f1-9d0d5a2c8a42",
        "cursor": {
          "ref": "1c5f6d64-aab2-45c4-a9d7-b42c5cf08087",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "eb3183f0-a271-431c-a1d8-1942e2b7f7e0"
        },
        "item": {
          "id": "aa8ca92f-0180-41cd-91f1-9d0d5a2c8a42",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f51f2ded-56c8-4751-9570-c331a0352154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad55765c-2fdb-4c62-bc3d-095387a08e3d",
        "cursor": {
          "ref": "dcba6ab3-3bd4-46df-852c-b8ba3694b745",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9b12db93-3647-49ad-b93d-cbaed7a7a419"
        },
        "item": {
          "id": "ad55765c-2fdb-4c62-bc3d-095387a08e3d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8e8df4ac-2feb-4bc8-ae30-1e6188ceb0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a723c7de-96a4-48b7-8c78-9184ac50554f",
        "cursor": {
          "ref": "2718024b-b6cd-4271-832c-284b7ed7ea85",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a4694580-4e6b-4737-a058-0ada91365bc4"
        },
        "item": {
          "id": "a723c7de-96a4-48b7-8c78-9184ac50554f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0a920141-e3b8-4554-90c4-492ab998d8b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171d2d29-136b-4a9a-8b50-29b4b08a993d",
        "cursor": {
          "ref": "53b67b38-9306-4225-8dae-6f745dbab8e0",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "18580fef-c67f-4177-993e-c1863ddd9bfe"
        },
        "item": {
          "id": "171d2d29-136b-4a9a-8b50-29b4b08a993d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "93c42496-888c-4e34-bae7-f6a6fa3d36be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d217877-c00f-413b-9b74-8f84c11606e3",
        "cursor": {
          "ref": "e56e98eb-56c8-4ee1-b919-729a6603eb24",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bc2d5f4c-383b-4a53-a9d1-7a05c0f0f825"
        },
        "item": {
          "id": "6d217877-c00f-413b-9b74-8f84c11606e3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "85a0386a-67f9-4e2d-ab6d-992c947b6bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56e1231-4981-4e6e-8568-f97828f2d823",
        "cursor": {
          "ref": "b8ac11ac-f5b4-43ef-91a8-832d14ffbc28",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "10b53871-6156-47ad-a0d3-416ccbd61db8"
        },
        "item": {
          "id": "b56e1231-4981-4e6e-8568-f97828f2d823",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ebe11ab9-3e16-452e-a225-be228f72f8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f35293-9ecc-45b5-b561-0600c8f8e779",
        "cursor": {
          "ref": "5dbf5f78-9c23-41fc-b1df-a018119e9b0a",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b7b684bc-4bb5-471c-aa20-dc99816d0d4f"
        },
        "item": {
          "id": "63f35293-9ecc-45b5-b561-0600c8f8e779",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "293f5cfc-1ab0-4eda-9fdf-0c9b5abdd07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b49152-3c1a-4fd0-aec0-5ac50d0604c0",
        "cursor": {
          "ref": "c60a7e87-5fc1-4a99-8a81-87105ee2e7a2",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d45f4678-2126-40cb-9081-dd072f690f94"
        },
        "item": {
          "id": "41b49152-3c1a-4fd0-aec0-5ac50d0604c0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4f9b84a8-6d52-4875-bd3c-5b18962e2262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8539cda8-fb4f-4ae7-912c-e0beeef57e46",
        "cursor": {
          "ref": "c29ff589-f650-489f-8ec2-3a64e2c121d0",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "98a92f9a-222d-43fd-94c1-9be171c94994"
        },
        "item": {
          "id": "8539cda8-fb4f-4ae7-912c-e0beeef57e46",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "278f5e33-25dd-4c44-a71f-f6a8e86f8fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7e8cd2-e107-41d4-a1b8-ec9cf4874c1f",
        "cursor": {
          "ref": "0e1865f9-2c33-4596-a14d-a1b18f9d2cc2",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3827e601-4fe0-4cae-aa86-9694a2984c70"
        },
        "item": {
          "id": "1f7e8cd2-e107-41d4-a1b8-ec9cf4874c1f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e36d1dae-9fb6-4da9-b791-de2942780d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb41b1cd-53da-43fa-8291-acb4e99f49bf",
        "cursor": {
          "ref": "292fd92b-382d-44f9-9740-aa734f02edec",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8cc0107d-054e-4b1e-8a57-040e0825831b"
        },
        "item": {
          "id": "cb41b1cd-53da-43fa-8291-acb4e99f49bf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8ae97b64-4037-47b6-a058-2bb37273a6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb27a204-9db6-4fb8-b52e-8fdf7d02d7db",
        "cursor": {
          "ref": "5ddd63fe-60da-4f1e-b9c3-48708b810064",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0a46f3b4-0a3e-4cba-aacd-b1fb9b4201af"
        },
        "item": {
          "id": "fb27a204-9db6-4fb8-b52e-8fdf7d02d7db",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "94036192-a637-4a08-b386-c867101f995f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b23bd7-009f-4150-adf9-35e24eb1508b",
        "cursor": {
          "ref": "3165bad7-35bc-483e-a9ff-1010e9c9e509",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2f63b01f-9036-4e79-886b-2b3c02bb11f8"
        },
        "item": {
          "id": "f7b23bd7-009f-4150-adf9-35e24eb1508b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e830b06f-5ab8-4a3a-adf7-6f07014ef53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd58525e-f7db-4519-a103-f1bb782f6108",
        "cursor": {
          "ref": "de099827-8ba9-431e-bc52-8c645703ac16",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "effa3b41-608c-4ebd-a2a3-1f140eedcce4"
        },
        "item": {
          "id": "bd58525e-f7db-4519-a103-f1bb782f6108",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "22ac2d22-abad-465c-8392-842d70c46200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e839d0b9-1f4c-4c3e-9125-6422bace4b36",
        "cursor": {
          "ref": "516c3f1f-f044-4153-bfc8-fe37afe8144d",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d2518d06-c98f-47b5-8989-f43c1f18a569"
        },
        "item": {
          "id": "e839d0b9-1f4c-4c3e-9125-6422bace4b36",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "49d65590-9d0d-4ff1-b0d6-79ae90656b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ba1106-8904-4d6d-8a6e-8ae10bf9d5e0",
        "cursor": {
          "ref": "8cc12a3b-b43f-49cc-ba4c-62f8055fe7cb",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "04728463-a5a1-4ea8-87d5-64845a5d54c8"
        },
        "item": {
          "id": "38ba1106-8904-4d6d-8a6e-8ae10bf9d5e0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "83e6a7f8-4c98-4278-84a0-7586ea372e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4d9f7a-0864-4fe3-b88f-7aad53e1b85b",
        "cursor": {
          "ref": "a4373368-f97b-4a61-9b59-d2a75dafb354",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ce441b63-27d8-4157-a0b5-e28f7b0b1c31"
        },
        "item": {
          "id": "cc4d9f7a-0864-4fe3-b88f-7aad53e1b85b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bbb5192d-a4df-44bb-9a4a-ed5087cacf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987bea0f-d215-4c04-aacc-14729767a828",
        "cursor": {
          "ref": "73bd6b4e-342f-4ba4-9939-caed9eb5c81b",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "71bc1f36-61ff-47bd-92da-2f7eeef5aedb"
        },
        "item": {
          "id": "987bea0f-d215-4c04-aacc-14729767a828",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e802b41c-34e4-471a-a231-6785ca4ba4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1023c5-88dc-40a0-8fb2-2543d9da31f4",
        "cursor": {
          "ref": "b71d06b0-3578-45e0-804f-09aa0211af70",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b31cbaf0-d1c1-475b-972c-468abfac7b54"
        },
        "item": {
          "id": "0f1023c5-88dc-40a0-8fb2-2543d9da31f4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d780a12b-f492-410b-82c7-81dcc73d2361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d774d8d4-240f-4790-887b-570049488f67",
        "cursor": {
          "ref": "8f8e5b7a-8a98-4e3b-8487-5bc3c42704c0",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d3d8ea4a-b729-468f-8257-ee833b376888"
        },
        "item": {
          "id": "d774d8d4-240f-4790-887b-570049488f67",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "aae75e1f-3831-4608-b0e8-a50e246a4908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c1059c-571e-4288-b6d0-1267d4adf489",
        "cursor": {
          "ref": "41ee1be3-f4c3-4402-8cbd-8b8af658a253",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "93ee66a4-99d3-4637-bcc5-5569cfc66df5"
        },
        "item": {
          "id": "54c1059c-571e-4288-b6d0-1267d4adf489",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "637dccf6-af7a-4bd1-b451-2638f1d8a6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06efe6d1-d3b7-483b-b065-5a0e1767ea74",
        "cursor": {
          "ref": "33ef0fd4-b18f-4a62-a576-3c40c73af048",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "72498a63-cffd-4383-a34b-7790825843cf"
        },
        "item": {
          "id": "06efe6d1-d3b7-483b-b065-5a0e1767ea74",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "94183e30-5c49-45a5-8923-1e536ad1f750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bd90b2-bdd9-458e-abfb-e55370903633",
        "cursor": {
          "ref": "d9953f13-be67-472f-9aba-9f2618cbf036",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8d30c0bd-db5a-4567-8768-c1de7b8c42b7"
        },
        "item": {
          "id": "a6bd90b2-bdd9-458e-abfb-e55370903633",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b887afea-49e0-4c69-b03b-6ca8fcc7f360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a455ff3d-bfe4-45d0-956f-571d259b1c83",
        "cursor": {
          "ref": "6b896070-c0c5-4049-bd88-87299f09c850",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ba147ec3-c024-4776-af79-754b8ee44940"
        },
        "item": {
          "id": "a455ff3d-bfe4-45d0-956f-571d259b1c83",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c622d3a9-d803-4be2-8047-c432c3933a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1954091a-e77c-4705-b577-39b31423d5f1",
        "cursor": {
          "ref": "d3deed10-ca2f-423e-89f8-e098a0e37ef3",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8f9c40ab-05d5-4620-96c7-059e7589b0aa"
        },
        "item": {
          "id": "1954091a-e77c-4705-b577-39b31423d5f1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f55f5abd-a0ab-4ab2-a83b-ac6340cb278b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fa0486-bbb6-4a32-912a-67c5bff4d831",
        "cursor": {
          "ref": "092d3471-0b7e-4709-94fb-d5e10c5a36b3",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "76b1b6d5-18a8-4ca8-9603-fd504ca31a97"
        },
        "item": {
          "id": "80fa0486-bbb6-4a32-912a-67c5bff4d831",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "274eeb9d-9c5a-4dff-ab29-b772514d7105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2c7ce6-615d-4624-adb9-e1742306867e",
        "cursor": {
          "ref": "3aad41d0-c905-42cc-a08b-ceb2ddd4538e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5a7ea5a7-d589-4db6-a481-5e511b9ca1ec"
        },
        "item": {
          "id": "4c2c7ce6-615d-4624-adb9-e1742306867e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a6205919-9abd-40b5-83b5-4c7337781957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ad2f20-15f4-4e61-9b1d-06c6d7d78cc2",
        "cursor": {
          "ref": "cb42883c-78da-437c-acd0-c53f2ecad884",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7128949e-9489-4601-94c8-083254172c3d"
        },
        "item": {
          "id": "29ad2f20-15f4-4e61-9b1d-06c6d7d78cc2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8cc3c554-26be-4679-9eff-45f34492c1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9050b89c-0ba5-4036-af6b-624e9e0afb97",
        "cursor": {
          "ref": "327dd6aa-c1a6-4f42-913e-ec7acbb1e6b1",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "18853e8e-2813-484e-979f-131b74c5de1a"
        },
        "item": {
          "id": "9050b89c-0ba5-4036-af6b-624e9e0afb97",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "efc590c2-6684-4011-a1ec-88b5792b2244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0d16c2-fd12-4dc9-822f-ea09bc770b55",
        "cursor": {
          "ref": "55f02915-4d62-437c-87b6-f17214ad9dd1",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6f1b9a2d-5dca-4e9b-84c0-eb56a98fe2a4"
        },
        "item": {
          "id": "8e0d16c2-fd12-4dc9-822f-ea09bc770b55",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c171e505-0bcb-48c4-9259-55769fe2cf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e977b1c-9a65-4747-b4bc-39b2777d3d42",
        "cursor": {
          "ref": "2f09f011-a270-49e2-98fa-2e5000cdfdf9",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7f5c606c-9351-4c56-9bfa-cad2815e1339"
        },
        "item": {
          "id": "7e977b1c-9a65-4747-b4bc-39b2777d3d42",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3371bcb9-8d13-43c5-85d2-99200dbb935d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799a77c6-47b7-4411-bc9f-869120286393",
        "cursor": {
          "ref": "0bb098ca-42bd-4144-88e9-89fc17277ceb",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e7f5a3c4-73dc-4c54-84b3-3596dc9c68f9"
        },
        "item": {
          "id": "799a77c6-47b7-4411-bc9f-869120286393",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5edf9238-768b-4093-9179-8c31afc24956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ffa407-3b21-4c9f-a856-12efc5083459",
        "cursor": {
          "ref": "4decc70d-4249-4564-b60c-7a0b5f538908",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a1ea99cb-df52-48de-aacb-83b0cdc41d52"
        },
        "item": {
          "id": "74ffa407-3b21-4c9f-a856-12efc5083459",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0bc192ed-b47a-4bc0-a231-c78a810fc963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b398acb3-c0e8-4a71-90b6-35499d144eec",
        "cursor": {
          "ref": "0ac04704-fa6d-4ede-9539-bee6751385ee",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0ca417da-9b3b-4f6e-a6c4-1db7c4fd82b6"
        },
        "item": {
          "id": "b398acb3-c0e8-4a71-90b6-35499d144eec",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9184dd4c-7581-4249-bef9-757849d01046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b736acb4-0f02-4190-9d0a-7eb691fb2b0b",
        "cursor": {
          "ref": "c161565f-bfc9-4be3-b082-fbec06a43175",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d208227c-46a9-4bc9-866c-4e5ce2c7ffc9"
        },
        "item": {
          "id": "b736acb4-0f02-4190-9d0a-7eb691fb2b0b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ae5ade68-596b-46d6-94c5-b768d779273e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f908769a-7f4f-4e85-8241-1c0d187bc79c",
        "cursor": {
          "ref": "dedccf71-d836-42c4-b5f0-d637c34148f8",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "227b6c10-5f8f-4694-8544-b051c45ba4ce"
        },
        "item": {
          "id": "f908769a-7f4f-4e85-8241-1c0d187bc79c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7e4f6001-f3ed-4ac5-8b42-523aa1ed3c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9e9a53-4a7f-4ca1-ac17-43cf05d565af",
        "cursor": {
          "ref": "ccc6dd79-7976-4e8a-9bd8-71d41bf3712a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f257f4bb-ab73-492c-91b0-6fcae24b3a13"
        },
        "item": {
          "id": "ff9e9a53-4a7f-4ca1-ac17-43cf05d565af",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "99f3251d-50f5-4422-a248-34a3642cb237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdb96a0-28e9-46a1-b4d6-0b2698f39ac1",
        "cursor": {
          "ref": "5c5d74ef-89d9-4c7f-9f01-ceb0dad7b969",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "15850015-cc01-4ca9-8cd2-8daa5caad23f"
        },
        "item": {
          "id": "0cdb96a0-28e9-46a1-b4d6-0b2698f39ac1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "268bb5f7-b0ce-4d0b-82c5-5ec2fbd58a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5952ab87-2a1e-4ea4-be54-d552e1d889e8",
        "cursor": {
          "ref": "a7e253a3-b9f3-45dc-9146-674da059c631",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0eeb78fd-2c75-4a66-98a0-e92ae6dd89c9"
        },
        "item": {
          "id": "5952ab87-2a1e-4ea4-be54-d552e1d889e8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4d9b5796-a607-4130-8004-9d8df8a6e187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a08d8d0-ebdf-4dfd-8d28-7639f5359006",
        "cursor": {
          "ref": "1f98abe1-39f1-4d62-9976-414aef44179e",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6f558fa5-952d-4217-9bb8-e7cde37abe35"
        },
        "item": {
          "id": "3a08d8d0-ebdf-4dfd-8d28-7639f5359006",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "09893f02-6b0a-4c01-8ca2-45e301290889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c95806d-a3ec-47ad-8926-6d123573510b",
        "cursor": {
          "ref": "d54de416-83db-4c90-9ac3-5d9bf76a5ca8",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a1fe20a7-ccb2-4cd6-869f-2ea8b184e981"
        },
        "item": {
          "id": "8c95806d-a3ec-47ad-8926-6d123573510b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "665e2c28-d922-4534-a106-0b6952285c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b4f7e9-30d1-4549-9258-c48e8a954951",
        "cursor": {
          "ref": "2f760331-f144-4b6a-8721-711d975c0f4d",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3ab773c7-d77a-4ba1-892a-204ca413dac2"
        },
        "item": {
          "id": "51b4f7e9-30d1-4549-9258-c48e8a954951",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c8e0acc7-cffc-47e3-8e87-b7478e0a8f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de15d24d-bb41-4c64-aa68-88de369d9f46",
        "cursor": {
          "ref": "f8945ec6-835c-4e7e-8d78-8ccd8b1c5969",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "dd9fe6c9-1188-480c-abb6-241399426834"
        },
        "item": {
          "id": "de15d24d-bb41-4c64-aa68-88de369d9f46",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "52405d52-da76-42fe-abd9-09f0a905f29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d256c6f1-684f-43ab-af87-26e09cd32f6a",
        "cursor": {
          "ref": "3b86130f-01fd-4c61-9e65-5db41ad6b376",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5f8fce78-cf67-4df2-8ad0-4aba7d1d7886"
        },
        "item": {
          "id": "d256c6f1-684f-43ab-af87-26e09cd32f6a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "abf79087-446e-4a87-84fa-63b9e71619bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9847dbe-d898-440f-ab48-b322a1e3a052",
        "cursor": {
          "ref": "250ac881-24da-4b89-8e65-9b36b7a47c08",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "44fd9c30-a5f2-45b3-ba0b-a25b1e12f6c1"
        },
        "item": {
          "id": "a9847dbe-d898-440f-ab48-b322a1e3a052",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1d40034d-b5da-4879-998d-1468cefd9c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbc5761-16c0-4cf6-ac69-3dc214dabeb7",
        "cursor": {
          "ref": "ecf22ca3-d8be-4af9-9612-87966a1edadb",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "29e9331c-e99a-49e5-a4c9-fd18f5722911"
        },
        "item": {
          "id": "bcbc5761-16c0-4cf6-ac69-3dc214dabeb7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1c6c0dc9-e145-4d13-8a0c-f9e914037033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522520ca-bf59-417a-93a6-1235bfc4b170",
        "cursor": {
          "ref": "558b2c2f-a9cb-4a20-82d6-34dc551c6154",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e34291b1-7876-4981-b812-b743b7df3942"
        },
        "item": {
          "id": "522520ca-bf59-417a-93a6-1235bfc4b170",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a0e7f48d-0f66-408a-b1b7-5bddf6a97d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378ea98b-8fd1-4fb9-99ea-ef927f2f9a3d",
        "cursor": {
          "ref": "83da887f-e615-4704-9d8c-0c39bcfa2586",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3d9ab497-2ee9-490e-8b15-0550b39195df"
        },
        "item": {
          "id": "378ea98b-8fd1-4fb9-99ea-ef927f2f9a3d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0770d325-0a15-4b3a-a2a8-407627e41fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9155763e-8257-487b-9f4c-e20aa7e7b7fe",
        "cursor": {
          "ref": "fb52f82d-fc67-4440-8d54-c1c418a4ead2",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "30c7a925-c2dd-4f1e-9049-c495b87a49be"
        },
        "item": {
          "id": "9155763e-8257-487b-9f4c-e20aa7e7b7fe",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bfdde7ec-595a-4495-8f0f-0ed6b7116367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9c576c-7ccb-4707-8f48-047325f16236",
        "cursor": {
          "ref": "7b83faed-901a-4dc2-805a-e9331f6e8a0b",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "74fffa96-a613-441f-aaf9-ae5eb5a8cfeb"
        },
        "item": {
          "id": "fa9c576c-7ccb-4707-8f48-047325f16236",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7f503599-f883-4e4d-a2d9-c51ce548bc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7531d95e-0e0f-4d64-a55a-2cff92408ae8",
        "cursor": {
          "ref": "90998274-e5d3-4ffc-9b2e-fa3573360e31",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "434e666f-e39f-4ad1-967a-992266e7c93b"
        },
        "item": {
          "id": "7531d95e-0e0f-4d64-a55a-2cff92408ae8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "389705fa-02dc-4a72-b9a9-72279c928e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7686c7b4-e56c-4bdf-b7a4-9bd140d5a662",
        "cursor": {
          "ref": "0cd7a237-cc13-4d89-8735-b26f508804f0",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f11b32bc-11fa-45ef-9388-15dd3680db17"
        },
        "item": {
          "id": "7686c7b4-e56c-4bdf-b7a4-9bd140d5a662",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7a841de9-c4cf-4769-92cc-4a64b89cceca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8660c9-cdc8-41f6-becb-e3603cf05438",
        "cursor": {
          "ref": "d7a23e9d-fa77-4c5a-9e7d-c6849b015645",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "244df298-d78d-48b8-a9c1-76aba38110a1"
        },
        "item": {
          "id": "cc8660c9-cdc8-41f6-becb-e3603cf05438",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "50cf50c3-d20c-4751-aff4-fe732cf5d92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffba61d-5546-4704-97be-c6dba7d91a8b",
        "cursor": {
          "ref": "5a252cee-fa35-4359-8ca0-3f47017421ce",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "318bbfc2-51ea-4ead-9345-587289747857"
        },
        "item": {
          "id": "9ffba61d-5546-4704-97be-c6dba7d91a8b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "26fa366e-40c9-4a0d-b520-78d9f8245a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1103339-eb27-46f9-b576-665f9b17c5d4",
        "cursor": {
          "ref": "4042cb0a-ce44-457c-b715-d69dd74cfbf7",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f850569c-29a5-4e4c-8690-38f6b7883c19"
        },
        "item": {
          "id": "b1103339-eb27-46f9-b576-665f9b17c5d4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "22514104-4cb2-4428-8a83-2373b3d7902f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db54e364-c891-4b5b-84c6-8d222a09277f",
        "cursor": {
          "ref": "5fb566ed-8caf-43e9-b6cd-96d6fb737935",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "33f42b50-d381-491e-9e6a-5fc12e2b0735"
        },
        "item": {
          "id": "db54e364-c891-4b5b-84c6-8d222a09277f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "558bfaf0-5e8b-4c2b-b832-63203e62394c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7ae48f-a34a-44c0-9733-cc4475dad4f7",
        "cursor": {
          "ref": "edc99823-34fc-49ed-8db0-82db98575d60",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5ce03d14-eb86-4280-963b-5cbf99644fee"
        },
        "item": {
          "id": "df7ae48f-a34a-44c0-9733-cc4475dad4f7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "894bc5ca-85cb-477c-b99d-0c975bbf97c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1443e05-f3dc-42e4-ae84-ef078b5dd285",
        "cursor": {
          "ref": "18d8ab93-bc44-4aa6-8268-9c48472cbfb8",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "eda852e8-56b1-4708-aad3-541184202a86"
        },
        "item": {
          "id": "b1443e05-f3dc-42e4-ae84-ef078b5dd285",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b108454b-d024-45aa-8fae-a3a6838be9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c838e401-2e94-4a79-8e44-71a80bd44f35",
        "cursor": {
          "ref": "8353dfd5-2ac8-477c-8ce9-00878c472807",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b941d72b-cc6c-4e52-9e94-5ac0cf4a7f45"
        },
        "item": {
          "id": "c838e401-2e94-4a79-8e44-71a80bd44f35",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6d751f33-d581-4246-9cb9-35aa915f11c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99971660-9958-44f4-b5e6-df9233e3c0b4",
        "cursor": {
          "ref": "ae0e318c-25c5-4638-9e2b-ea4ecbb0de35",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4fbaa6c5-577f-4b6d-bda5-ae31788a4a73"
        },
        "item": {
          "id": "99971660-9958-44f4-b5e6-df9233e3c0b4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b1bd523f-cdc9-4277-84fc-36f0c5c3dfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af56b56-4d39-499a-ad3e-eb0b64d8a81d",
        "cursor": {
          "ref": "4b693490-c3cc-4112-aca5-8ebb1c536a78",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f40877af-0e3b-4482-99e0-888757ae40f6"
        },
        "item": {
          "id": "2af56b56-4d39-499a-ad3e-eb0b64d8a81d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "41f01962-0f39-4eee-a9e9-73903f3ca99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952d1186-9b66-4b6f-bb3a-39e450914f7a",
        "cursor": {
          "ref": "629dfef7-0996-448d-8c74-840384ed0289",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1b6afe59-373d-46f3-a539-60e6aeb00022"
        },
        "item": {
          "id": "952d1186-9b66-4b6f-bb3a-39e450914f7a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "57e5f31c-0c2c-4419-a868-9f22962071ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b884c1-f1bd-45d5-975e-adfaff731e2c",
        "cursor": {
          "ref": "a2ae0911-bba3-4188-99bc-dc6ef05e1e22",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a77c4729-68e4-4a32-95c9-e64c16777a9f"
        },
        "item": {
          "id": "05b884c1-f1bd-45d5-975e-adfaff731e2c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "021115ae-d92f-4826-9430-996590a74191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b75e81f-0e57-4b22-b477-58fae8eb0b14",
        "cursor": {
          "ref": "b07bee65-3851-48d5-ba8e-fcc0a4f817b7",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5dcea97b-9aee-4e8e-863c-816b45d7e837"
        },
        "item": {
          "id": "8b75e81f-0e57-4b22-b477-58fae8eb0b14",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "94e03001-6caf-400b-bb03-6384592e4419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772b02b7-4506-4214-8a56-a79ca5ad2362",
        "cursor": {
          "ref": "4bea1296-de63-4357-a0b1-85d5112e216a",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c35501b0-adfd-4772-a0da-7b3680829a5c"
        },
        "item": {
          "id": "772b02b7-4506-4214-8a56-a79ca5ad2362",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6568c5aa-3d64-4853-ac06-22341e033d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bbd83f-c959-458f-a028-7d5c147245c8",
        "cursor": {
          "ref": "77307c21-7e04-46c2-8087-7b866eb20776",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "aab26871-af26-408b-afa3-f278917eb09f"
        },
        "item": {
          "id": "e2bbd83f-c959-458f-a028-7d5c147245c8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b3a2f378-ecc2-4ee8-9e5a-2354cc589713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164c9726-e243-4d9b-923c-f6d8c28f7a5c",
        "cursor": {
          "ref": "aa5302e2-4ae2-4226-bba9-e7826089c4be",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3ab9a6dd-0206-4b59-bfa7-873ad536a150"
        },
        "item": {
          "id": "164c9726-e243-4d9b-923c-f6d8c28f7a5c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "df78afa7-4042-4314-bbb1-1603d6b6cadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975d91f4-1069-48e9-80d7-54d9a390d287",
        "cursor": {
          "ref": "6580ecff-b5a0-4389-ae6a-c10209e8a620",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "aaa58457-806a-4382-854a-879c9ec3c0eb"
        },
        "item": {
          "id": "975d91f4-1069-48e9-80d7-54d9a390d287",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9bda1b1f-13d8-4ed6-b1dc-71b3b01d4004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf455e2-06d5-4dbb-a0d5-5f1d1dded05c",
        "cursor": {
          "ref": "d4ebdcf2-bc36-4ce6-9d0e-a0f0bb94748a",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0e240398-5599-4c04-9406-eb274902b296"
        },
        "item": {
          "id": "8bf455e2-06d5-4dbb-a0d5-5f1d1dded05c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3cc4197a-5153-4ca2-88bd-469b12841b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4ec560-6456-4e13-a82a-30ac3bbc1f72",
        "cursor": {
          "ref": "d6869960-a3f3-4d6a-95ec-00e8e48451e1",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "60be7406-aede-4142-b83f-2328f2453b41"
        },
        "item": {
          "id": "bc4ec560-6456-4e13-a82a-30ac3bbc1f72",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b6d38faf-d099-4471-9112-c5ebee639546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773aa6da-28a3-4f8f-8fd1-6f934050b9d8",
        "cursor": {
          "ref": "ed78e0f5-087f-4e0d-bc0c-2e8429c6780d",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c232b5eb-d8c8-4f22-87c9-9bcb5e2f39b3"
        },
        "item": {
          "id": "773aa6da-28a3-4f8f-8fd1-6f934050b9d8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "13b245cc-923f-47dc-8501-c7a422239e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b82b8e6-58c1-4c38-b48c-bfac76bdd4c1",
        "cursor": {
          "ref": "a408985b-1280-4a0c-840e-66112992cde4",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "33586d04-dc47-4bef-9249-f39dee2ab29e"
        },
        "item": {
          "id": "0b82b8e6-58c1-4c38-b48c-bfac76bdd4c1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1714f4a3-09cc-42ce-87e9-7f6153cfdec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d6dabb-bdbf-443e-a6fd-e78e36a28fac",
        "cursor": {
          "ref": "3e19740a-7db4-4972-9d6d-9f11b80f1869",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6a7d5d02-454f-4f8c-82a2-eda7f5190db5"
        },
        "item": {
          "id": "a3d6dabb-bdbf-443e-a6fd-e78e36a28fac",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2e458fd3-83ef-4e0d-b859-3592190626d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3bdd85-2bd9-47de-b92f-8374eb16696a",
        "cursor": {
          "ref": "8d8bb230-bccf-4ea3-9aba-7297f44643da",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7b1a75b9-1658-4dec-8032-8d5330e55a1c"
        },
        "item": {
          "id": "8d3bdd85-2bd9-47de-b92f-8374eb16696a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d2e86011-9746-4fc5-b368-574edaf65b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c730d93-61b7-4464-ad07-fb5cb9afde81",
        "cursor": {
          "ref": "853c2f6f-0675-4250-845c-2c6c4195709f",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b88ddbbd-f8b9-4bf5-95f8-4370553ed79f"
        },
        "item": {
          "id": "1c730d93-61b7-4464-ad07-fb5cb9afde81",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b9dd4c4a-9e2d-4fcd-bdad-debf949a8fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7455fc8-4f34-4d6d-aa40-447171255e41",
        "cursor": {
          "ref": "b590bc73-4ce8-4cdd-b7ca-f10e42b6c192",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "87262e20-b7ad-4766-ba02-6484b751b556"
        },
        "item": {
          "id": "a7455fc8-4f34-4d6d-aa40-447171255e41",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7d489172-01ae-45e4-aa36-f9356a459ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3eb500-6f6c-41b7-95f4-2e9c41651412",
        "cursor": {
          "ref": "f97b5627-24a4-4970-993a-f6bb94fb163b",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5b9850b2-7a41-4dba-8bb5-4b6bf4dc495c"
        },
        "item": {
          "id": "6e3eb500-6f6c-41b7-95f4-2e9c41651412",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "515361e6-e26d-4ea3-848b-e5cc8bb0b7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224c78a9-24b1-408c-818a-55749cf04ca7",
        "cursor": {
          "ref": "772368b8-2ad9-4884-9daf-6189acfdc054",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "061a3d39-9369-4a87-acd9-b8c90403e136"
        },
        "item": {
          "id": "224c78a9-24b1-408c-818a-55749cf04ca7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1c9f0e54-b7b8-4669-b497-692823105fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a160200-6615-4673-a082-6f6ad3b7e538",
        "cursor": {
          "ref": "b8c48f55-a05c-4e93-b130-81eaa0aa11b8",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e978933e-f998-4b40-9f9d-e950f7320bc5"
        },
        "item": {
          "id": "7a160200-6615-4673-a082-6f6ad3b7e538",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "59a3afdf-5496-4adb-9442-a38c6e6d6082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c2628a-02a1-40b0-921d-34fa18432150",
        "cursor": {
          "ref": "b264a74e-5ce5-4e0e-9d8e-8a43486acf92",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4abb2053-8ac3-4a09-aeaa-5ff5c1992f43"
        },
        "item": {
          "id": "52c2628a-02a1-40b0-921d-34fa18432150",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ba7cc5f8-6a3e-48eb-acbe-d51112ff3aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354361a6-ba76-4c36-b633-889e50851fd1",
        "cursor": {
          "ref": "b6f70d90-f45f-4116-ad4d-dbfda35be934",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a266a713-58ee-4512-a4f3-380c033ead3f"
        },
        "item": {
          "id": "354361a6-ba76-4c36-b633-889e50851fd1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "110e3a36-0be1-443b-a491-be3e0e542e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21930f33-aadf-40cb-ac39-59a02cd949cc",
        "cursor": {
          "ref": "c56f8d1a-aaa6-4bd5-be4d-40b3db95c5dd",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "af8108f9-606e-437b-8e05-61669b3f800c"
        },
        "item": {
          "id": "21930f33-aadf-40cb-ac39-59a02cd949cc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cf4b8208-42a3-48f4-8c17-45dc60e66afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d60368-1296-4db2-b4cb-09a19d099256",
        "cursor": {
          "ref": "bd142330-1ff9-4524-b21f-9518d46bc51d",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "227bdc1b-b835-447b-8db5-b68b7bbfc5d2"
        },
        "item": {
          "id": "b8d60368-1296-4db2-b4cb-09a19d099256",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "03109bd0-dd82-4048-aaec-5e287fa62316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc43d85-966d-4b77-b831-94464a206e8f",
        "cursor": {
          "ref": "da85c6d8-703b-47d4-b1cd-34294760e6c3",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9160bb8b-edc8-4d1a-a7c1-3593709313c6"
        },
        "item": {
          "id": "2cc43d85-966d-4b77-b831-94464a206e8f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d73010c9-9eeb-4584-af03-8a544a591b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf103c22-e194-4f00-a398-ca80f347d9b3",
        "cursor": {
          "ref": "5d2969b0-7bed-46d4-84b1-f9877e9c733c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "84b3efae-8f7f-46a2-8489-deb4d1c17ed5"
        },
        "item": {
          "id": "cf103c22-e194-4f00-a398-ca80f347d9b3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "401fc890-8268-4387-aa5d-f32db0db6007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406abde1-78b1-4fe2-acb1-dfb0e4f4ea1a",
        "cursor": {
          "ref": "5f617426-be1d-4235-a231-42d854093771",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0d7b26d8-b252-4740-bd5b-e39e17b6d117"
        },
        "item": {
          "id": "406abde1-78b1-4fe2-acb1-dfb0e4f4ea1a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "788d587d-5d30-4d6d-bc97-3cd48d8b3998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfacf168-deca-4581-a7a5-16d082979641",
        "cursor": {
          "ref": "137ea506-8055-4565-be9e-186d6aa778b7",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b4ec68e7-6b5c-42b6-a400-e27e37033bd6"
        },
        "item": {
          "id": "dfacf168-deca-4581-a7a5-16d082979641",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "afe054ae-059a-4351-86d4-d3209f7c455a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d90fee-dd19-4878-8d42-daee45177c81",
        "cursor": {
          "ref": "11c883c9-e4c5-43bb-bde7-2858615357a2",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e00d942b-954f-4a48-a9ed-622ccb97a14e"
        },
        "item": {
          "id": "a1d90fee-dd19-4878-8d42-daee45177c81",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "50dc39ca-2a33-412a-951c-d698364f4c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eacb6fc-c520-4072-bef7-173c5d996acd",
        "cursor": {
          "ref": "4902d57a-ffab-45d4-8d79-e0df9272ffc1",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8ab96c2d-1519-44c8-ba7b-6287ea01cea7"
        },
        "item": {
          "id": "8eacb6fc-c520-4072-bef7-173c5d996acd",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d96d810b-9779-40aa-a167-2880f777e4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e0ae66-0859-4a46-b59b-d648f07d00c4",
        "cursor": {
          "ref": "662dba21-e776-4a57-b167-7dce45e90650",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5d617075-afa9-43e9-8b18-02e92fcb313d"
        },
        "item": {
          "id": "d5e0ae66-0859-4a46-b59b-d648f07d00c4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "dfbeb614-8993-43cc-86d6-1930f9cbf47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767ac852-74b5-4001-b0e2-8758dd825a39",
        "cursor": {
          "ref": "0b6b9717-a61a-4843-a9fa-178dfdd5142e",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2c435446-69bc-44ee-a6ba-7c63c80e68ef"
        },
        "item": {
          "id": "767ac852-74b5-4001-b0e2-8758dd825a39",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6a8ed4e2-ec3d-462a-aa89-91475b164b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab32296-2b67-4a61-896a-8d05f5f7d4b0",
        "cursor": {
          "ref": "d3707b77-7416-47e9-a255-f9e01b320c83",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "65fa7362-dca2-44cd-b5ef-75f204f4e543"
        },
        "item": {
          "id": "8ab32296-2b67-4a61-896a-8d05f5f7d4b0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9c86dc75-bec6-49e2-86bc-b405199239e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6fd483-a161-48b1-a282-903546abfa2a",
        "cursor": {
          "ref": "d1d239eb-5148-4e5f-83de-475d964364d2",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "bbf3bebf-e0b3-4bb0-add8-44eb7736393e"
        },
        "item": {
          "id": "ab6fd483-a161-48b1-a282-903546abfa2a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4fd4edac-6b00-482f-b057-a6e9d8f08eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a16a8b-0866-4f64-9454-6d0523348ddf",
        "cursor": {
          "ref": "43cadbfe-b83c-4fd5-821c-7f86ba1c98fc",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4846e271-fa06-4367-a36a-6e4a94369aea"
        },
        "item": {
          "id": "e4a16a8b-0866-4f64-9454-6d0523348ddf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "412eaee9-89d9-4ae5-8c46-dee1d536d858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf30fe2-b2a0-4229-a66f-b38fa20e52a9",
        "cursor": {
          "ref": "d88726fc-13e8-4beb-975d-c420955dfd32",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9834cf41-210c-442e-a794-61407b1b0a36"
        },
        "item": {
          "id": "dcf30fe2-b2a0-4229-a66f-b38fa20e52a9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "53f58ee5-e93c-4c79-ab4f-22e6146de53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6f04ba-69e2-49b1-8a71-2d7d6227d859",
        "cursor": {
          "ref": "ecf0ec88-5343-4bad-93ee-3e8f62d89fd9",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3939536a-cdbb-4228-90ee-971cd8e923cc"
        },
        "item": {
          "id": "cf6f04ba-69e2-49b1-8a71-2d7d6227d859",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7fe8cc8f-ca49-4a8d-9dd1-bcedf29092bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ea0cfc-a59e-49d3-b651-14fa4afa8928",
        "cursor": {
          "ref": "17e05251-6a1e-4a8f-b4e5-2c0971f8c656",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a8fc1e08-83bf-4e5d-95c7-26973fde2154"
        },
        "item": {
          "id": "c2ea0cfc-a59e-49d3-b651-14fa4afa8928",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1fed786c-2aa4-40c2-8f9d-4c1e23c145f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbefe088-d1ae-4948-a0d4-d3a51cf29f64",
        "cursor": {
          "ref": "cb20173c-7589-49ab-99a8-2f614691ea65",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "66220edc-9310-4aac-9bd4-5393b1bd5ce4"
        },
        "item": {
          "id": "dbefe088-d1ae-4948-a0d4-d3a51cf29f64",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "40697560-d9e6-4a95-9c7e-cd15030f15d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f0c88e-13c7-4eab-adec-59d554d88cf5",
        "cursor": {
          "ref": "d7d76713-8921-4792-a5d4-d94287bac355",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5a9dd426-ff91-4c8a-9ad4-ec4c9815310b"
        },
        "item": {
          "id": "96f0c88e-13c7-4eab-adec-59d554d88cf5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "53aa581c-7dc1-464f-867d-502bc977d853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d667f75-6728-4927-a187-a03e39fbd7a4",
        "cursor": {
          "ref": "f6a31dda-57e6-45d3-a06f-56430d9a48a6",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1fd0ce07-4034-486c-909a-80580214add5"
        },
        "item": {
          "id": "9d667f75-6728-4927-a187-a03e39fbd7a4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bfb4544d-b222-46d9-ad4f-cd8e5553bd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de2a288-60a6-4f4c-962a-c3f17e27593d",
        "cursor": {
          "ref": "aab0da7a-e308-44eb-9e1c-407bc47d38e7",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "8fe095d2-1079-44f7-b1ce-699f543cda48"
        },
        "item": {
          "id": "9de2a288-60a6-4f4c-962a-c3f17e27593d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "72227a0c-dc52-47d7-995d-281d9c5bf622",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3683f1-807a-4974-b4a3-642e0146c5f7",
        "cursor": {
          "ref": "48d5ad23-7b3d-4ca2-9843-faad03e3978a",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "78aa3aaa-606d-4a20-9312-a66122d8e27b"
        },
        "item": {
          "id": "cb3683f1-807a-4974-b4a3-642e0146c5f7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "154285cf-1f1f-4e2f-9bc9-b8a81286cf9c",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacfeefa-6be8-46e5-b417-f1592367605a",
        "cursor": {
          "ref": "27a3b937-9a4a-4c6c-99fc-23774258f5ca",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d296fd72-8634-4e88-96a5-6508b46655bd"
        },
        "item": {
          "id": "eacfeefa-6be8-46e5-b417-f1592367605a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d9b2ce5c-bd69-4079-8dbb-3674d2269e7a",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "480bbaf5-97e8-48a4-82b0-b30fffb86613",
        "cursor": {
          "ref": "14df2d1c-8756-46e4-8165-c8a2a89ba506",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "794af678-6856-4107-9687-8c6ac3ee4083"
        },
        "item": {
          "id": "480bbaf5-97e8-48a4-82b0-b30fffb86613",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "73b70292-f408-433f-8256-771d7afde9cd",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9d5624-6e16-4047-b2e4-4326d2aab3db",
        "cursor": {
          "ref": "7b95bd72-3819-46ca-92cc-b22b598fa5cc",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9c21bce5-14f9-49e9-af9c-bc290558e710"
        },
        "item": {
          "id": "fe9d5624-6e16-4047-b2e4-4326d2aab3db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d33219ca-7336-40bc-9032-d62a537e6617",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9d5624-6e16-4047-b2e4-4326d2aab3db",
        "cursor": {
          "ref": "7b95bd72-3819-46ca-92cc-b22b598fa5cc",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9c21bce5-14f9-49e9-af9c-bc290558e710"
        },
        "item": {
          "id": "fe9d5624-6e16-4047-b2e4-4326d2aab3db",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d33219ca-7336-40bc-9032-d62a537e6617",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10be7b9-7e6e-405c-95dd-f4ed6856c0cb",
        "cursor": {
          "ref": "21c4beb1-e2bb-4765-a193-d2330aeb8daa",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6c5a6a26-795c-49e5-85e1-65efe9626c5f"
        },
        "item": {
          "id": "b10be7b9-7e6e-405c-95dd-f4ed6856c0cb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5d5a39ad-28a4-4ec2-82e7-89a961a8d9ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cffeaf-69d4-47ac-8825-7cce7c3f2464",
        "cursor": {
          "ref": "7abb1311-f08a-4d1c-8de4-d8e7bcdfd882",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6316ff85-1099-4c93-b6ea-a803d34b4f1e"
        },
        "item": {
          "id": "b2cffeaf-69d4-47ac-8825-7cce7c3f2464",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b4b59eb4-b226-4d6e-8ee8-705e807ae11f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}