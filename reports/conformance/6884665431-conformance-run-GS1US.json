{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9f96e794-790a-4347-9f5f-480dab73bb7c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cc562e55-db6d-47a3-a9b3-6fe9844c5de9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a26636af-1da6-4b5b-8edf-dde5b60e102f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7dad1af3-4699-41fc-acc1-56b26ef3aa69"
                }
              }
            ]
          },
          {
            "id": "d2eb6403-a966-47d4-aa11-7e3a3babc58e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3d797ac-c0b8-4aa1-bf49-b016fc2afe08",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c77ae05d-ce67-4630-9931-bc81f57a3dfb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "39b94a06-c60b-4788-8889-b95bd6ac56c2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "003f3f51-4442-4068-b1eb-6968d0f036e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "057e2555-296a-4a57-a801-d4e3435d0e53",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c12f4323-bcac-458d-b1e2-d216bb432932",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "482b23a5-b8d4-4e13-9d2d-59cb87bf63eb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1807f87-daf9-4a22-917d-7b7a9fa4a14a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "43924cda-13bb-4f96-9ca7-b79e9d1f3b48"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "969beb37-c331-4523-a10f-0b568dc52580",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1982135f-9856-4f92-b764-4b7c2b30458f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78549e14-72c2-4daf-9526-550dcdae523b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f4c2b563-69b7-404d-a141-642f65a51bdb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7a42409-c59c-49fe-9b02-5a9d151e7f28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7b1d0e4-c3dc-4365-8489-6a1205c4e951"
            }
          }
        ]
      },
      {
        "id": "aedfadfb-48d5-4abd-b009-2e77a88ec83e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ffa03a1b-41d7-43e5-b3e9-1ff07f9d0df6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c10ada89-5270-4a27-b849-c09988f5aef8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c49ea5d8-a5cc-483f-800e-1962795ab25c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b5f0bb-e246-45df-87fb-60299135764f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5bce1ad-e2a2-41a1-85b2-eb8bcada4e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d90413-8d3b-4c28-b206-b4d0570c2f57",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa838c0-8fdf-40f7-9cd5-3cf6f9f0a792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75a5de3f-4a3e-42ad-820a-3a09f26ac570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfef7d5-925c-4f71-98b2-04ce15b42cf4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60a074b-832b-4bb8-918d-8c586fee8848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8a3db91-249d-49bc-b879-b28de66849af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "91c53673-7b5e-4c80-99c1-57e3d2198d70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0fb3fb87-66da-4611-8777-b93efdf805ed",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e72a8a-d8b1-4f0e-a7a1-97e816271a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bce9093-c85e-40d5-89fe-2dc43ac0f82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2ebb37-986a-40d1-9634-228c0ebf37fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229b2ac5-75c3-45c2-9510-1c8d11e76787"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b525675d-a1a7-4702-8531-150662f37a6f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "adad156a-930e-42e1-a471-96c5d5faf870",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a76309f-a872-4be4-a435-0d6b079279bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b8b77eff-7123-4088-99d8-b27a6a36d537"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ab5ccb9-053e-49c2-9cb5-691e736796c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4a049d78-df13-4c44-a70f-c9a2fbea8a75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f683b52e-5ea7-4ae2-a3cd-8433323a7872",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c843fe8-9f23-49c8-b227-023525533914"
            }
          }
        ]
      },
      {
        "id": "4d023c04-7aa4-44db-877d-096b56071c61",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "75858ef3-a05a-4165-b2f6-1e0a7b60f0be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cfc5bfc6-8834-4396-b18b-bae17483a32d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d2ada22d-cf39-4605-9f0e-a3d48038cbe6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d7a137-e0d1-461c-8592-bf58b2cc937d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d310e88-5a83-443a-9f55-543a09a83a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f004d2e-23f1-4435-92f7-3d3f7a1e8e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0e04d04-ec59-47eb-8aaf-199799aa7ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf775fd3-2b52-4a36-ba85-e6e6ab29bf01",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ed9658-4c57-4612-b13b-69a6a3140add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e736c6-849d-4c08-9344-f6730e547056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d27e00-d215-4c55-888b-86923ca2cd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30461139-c60a-4219-9eef-c3d2e728f2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9220a272-8fd0-4960-853e-cae670b843bd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d95011-2bdd-4206-977b-f31fd76cd28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99804d3-f2e6-454e-9338-70457dddf652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3de2ce-fe85-45c4-bde4-4e59c73daf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbb81eff-abd8-40a6-895b-c4f25fa1efe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094fe46b-c228-4eb0-8d37-f7f4ea90a107",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486baab7-e77f-42fb-b0bb-b139fcc98c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60bf378-b9a4-4ce8-b502-cc7814be0af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11acf59-4c7c-4a23-b75e-5a079b44fb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d31df16-86d8-4be9-ac53-e7a8a2cf34f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2d5e7e-ebb5-465a-a713-4e464521b988",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8027ae-b433-4664-96a8-7243dbb848d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5597d36-9bd8-4e52-84f7-6e5470cb9c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231e93c5-71ae-4924-9261-caeecefc47fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "090ac113-de35-4dd2-865b-a581cf45dc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b3526f-814e-4b39-9e34-fad91f40b6b8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6252f0e-0930-4b83-b3d5-0595ef793602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a424ba3-89bd-4ca5-95b7-3b182fc4561b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ff93b3-2d6b-4f9b-945f-8b73aa9ca842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21c8f98e-9b74-48ed-9d62-275f69fb98ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ca78b5-27ae-4655-93cc-4cc6931e020d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887e9633-eb7b-48db-8922-f81c002a7990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57472a96-88a3-4839-aba3-f8b109c059b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea92744-eab4-48dc-9124-d1e440349be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af1b1467-8b7c-4d37-8ac3-64f01120e6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34940d51-5e74-467e-92f0-fc5860460b39",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca5e358-9b86-4d87-96b7-829341ec795d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10bb34a-9adc-4397-a6ac-376742d9e031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea30d70-2389-4bcf-9a74-ff5ccea3f7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d5d8f84-3122-4fd8-8134-4e94324bcdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab5eb94-21d9-4435-a9e2-8d0cc45af411",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f374bf97-5871-4af8-ab51-70f055305297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618313b8-4e5d-40b4-8f50-5e35090a93e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b42b4f1-ca03-4cf9-bfc3-3c3a0f3b433c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "615b4d2c-6d7a-428d-ba71-5ab5e1664781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9978cab-56fc-4424-9315-3ca1c99e4a5f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac018260-7d5d-47ad-83cc-d3c93d98b821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b34ae2e-4113-45ae-beaf-4c778f3c8748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a281c2-bc51-4687-bcf0-1fcab86865a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1091e24-1cc7-4eac-89ea-cd6545e7039e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4efcb2-7f60-4a4e-8aaa-88cb0838ad03",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe5ece5-6a2a-4925-9a36-bef81670e2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0e9554-a7ee-463d-b50f-360cb03c1e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51645e59-e4c7-491e-925a-d9028adab7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c4ad204-e037-46fb-a784-fca5a94c0f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07d88ed-46fb-45bf-bb67-2e102e209435",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3988d7a7-4313-45a8-9cd6-24951c580a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b286011d-55eb-42d3-ac10-af1e972c02b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650df23f-e0a2-4af0-a398-0462d8feaf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "649402e8-278c-4df1-994c-b4272617d507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583f4ad9-bbba-4902-bf13-5964923f81f5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7e0d27-3cfe-4e56-9d17-73fa8f98917d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2baf9d1-1dae-419f-962c-237f95c93bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1b719c-ff7a-4c94-a975-d5f5caa74664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8d6bdc9-869d-4d8d-9a66-0f236ebd193c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6074ee9-5af0-44c5-a43a-69943cc6eb39",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b178feb-2d6e-40de-850a-5157abbd2c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affc62ab-6f10-4982-a47c-0232641e8139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e57dcd0-3bce-4dfa-a274-30942494d6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9f6621a-b9b4-4b81-ba82-d042b2aad260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f40148-2198-4791-be63-d51492a2c2b5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d5404c-0676-42f2-80e0-52abc2483dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d334e49f-c86d-4cf2-8fbb-b7404cfdd0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568435cd-691b-4bae-807b-fbe211b372e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e13ef3c0-769c-4997-b4c9-57561fe48276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a9c94b-f637-439f-821e-879a77f555be",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9831a3-aaf4-40db-b676-57932b539552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc49297-7c31-4927-8f55-097861287680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f04d01c-27ef-4396-93ad-ae77de3f1e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "620d7182-af7b-4286-b3db-917777afc14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691f3534-706b-4443-9532-52cf12d7b8d8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf7caa8-67ae-494d-8723-00e2cb6b4cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5dc7d4-663e-48a4-99fe-3efebf96effe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4664d50e-fad6-4ddc-b435-10494e5acb68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f98763d8-907b-45f3-9567-0578c6c09b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a147e74-c0da-4d36-b69b-a003989b49aa",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac1bac5-78d0-4cce-99d5-4239e8f5252e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d14e94-236f-4286-9f73-c7216fc82f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2daaf2e8-9033-4a5c-82fd-56d5a20e7f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad11a6c-b72c-43b3-8102-3110ecbd26cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0edeb4c-2b6f-488c-b271-39dc72ec930a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf11765-d46f-4643-8499-213ed052f548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37401c6-bfe7-4594-8057-7d1ebe16e9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08dd128c-1f9c-46a9-bf5d-b07d5ecf97c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3c223f-64df-4dd1-ae6a-e3dabc5158de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363e5b74-5f8d-4a44-abad-d5b2b99c4ec9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8b64c4-b8fe-48a7-9d6e-17415354f67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7254dfe4-41bd-41db-99bb-10ca620b7ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341ddf66-667c-4510-8c37-304707ba644d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c15ff09e-384f-4a4f-ac48-838ce5ca0470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25666397-f514-432b-9dd4-2de80db22232",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430b718e-7a61-4424-bc17-0833c38de952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2037655-83ab-4fd6-af4f-ce045a2717c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8a1413-be9d-48ce-b1f5-b0c99eed8762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bde68da1-49ce-4493-88a6-359074291a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c950c3f6-d7b3-44ae-ac08-04ddc9e1ba08",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12b90ff-d2aa-45d9-a78a-f41d01432d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e04b90-9a09-463b-a06a-2474d306583c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74853287-edaa-4843-b38a-f72c05714fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "920f1ded-ff6e-45e8-9a96-ba28bcf5fa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75c1f26-fb0c-4fd2-bf7b-6fd72cd0a1a7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba04755f-4086-4e2b-a2f5-684efbe4c94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7681020b-7e7e-423b-a43f-89ea45674c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79531e8d-8831-4ae0-96fe-313bab1fd26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79d0f0cd-d621-4825-87e1-498fb1a8111b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125518d3-1d53-4b9e-9702-f78178bc4cdc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e88593c-ac2f-497a-a7ae-b1a3b2974b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6020220-728e-402e-a2fe-342615ecc3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5604ea-02ba-40eb-ba76-914b13184aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea0ce33-b2e6-4548-abb1-528b7ef79166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7baa1e4-27a9-4ad6-9a11-c6aa962dbc6e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794d598f-190a-4e16-a64c-7c271a58cb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f30b960-bf9c-4cb7-8fc4-c4ef1bf72a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5feaa6bb-3592-4b08-815d-76fe8b901579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "add9e882-396a-4664-9b34-e50f175820b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b534f0e-89fc-4108-bcc6-6893cba01671",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2511a201-fff5-4f78-adfc-a634133e852e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9219d09-0ee0-495a-8bf8-1b37c150086c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea7bbf4-3715-4c19-9162-05cfb27a4c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a33d18a6-56b2-4d8b-919d-cc2a7a41a66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2afd5b9-34d8-4522-bb47-1c66490185dd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07393406-3a7e-4698-94c0-32cb51476ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b856188-9c13-4289-8927-69de6559477b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cd5529-7e71-4926-9153-649c950885b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64d28035-4194-441e-bf6c-bdb9dfde264d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f139899e-9ab9-4ab1-8481-6b628c92ee5a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbaa927b-ac5d-4fb7-b6cf-1a2b41bb9df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "089d099b-fe78-4bfe-9d2c-bc24e529a8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048cdb30-ad85-4aa4-8ff6-3da522611f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5689ba2-43c8-4555-9b4b-f86477410e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0029d7c0-588b-4119-be0f-0b8342415ecc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebf2693-465f-40da-bfe4-01df442ce9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b08077-0007-4081-953a-704bc7cfe38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d0e5a2-d046-4222-9e1c-1163ca8e744a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50ea3069-7b13-4090-a3cf-3fb62c500c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d97749-dd71-4428-87a4-1ba39f120c2d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c81e8e3-05b1-4ad9-8e5f-5b153d491e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a609aebb-7a8e-4e00-9490-b516b38d5778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2eb0870-3e52-49ba-85b4-26182029e50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec5e86e-f2b0-4022-877d-d9b101871d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0546c786-82cf-408f-8df7-5dbf5c1cd127",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b1f5f7-5662-400b-a6ac-9ccf04c525bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb093c8-d7e9-49ad-8d11-2b7e83ce4379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282b5ff7-ed31-4578-8f01-3c28264db5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd842cf-e9c4-4663-918d-f1c67cf97538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ab705c-2a13-4548-bb04-9389d0fefbda",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e3da39-55dd-4790-9cf2-d8d0f4d98a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c68dd1-70d0-4e70-ab96-50ec8d51d4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2e2c0a-40bf-4c1e-996c-756fc5addda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b41dc03e-42cd-4962-9cfe-8e9c6845bc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c60b740-0688-4ea6-9fbe-ee83eed047a6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5527a837-add5-4359-a088-c0d2872ace4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ec20c6-e204-4909-9e06-e5ed1d506853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce41fd97-1bfb-4a92-b26e-438337ae6bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39002ee2-26c6-44d1-b1a1-22fa9c20abe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5fb997-3b10-4b23-9270-24be50eaf435",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6722f44-9442-411f-bde6-f2021cb0dc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d110cc00-15fc-45a1-bdb5-c05a214d6b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754dc282-76fb-47a5-805d-b2078efba127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78f3a5ab-d0c9-4c78-a92d-6ce30cd0902e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555c5de1-f71c-4242-83ff-1b44a670c066",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd85eba4-72bc-4696-bc22-5dcd7e7f2f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2498b3-a7fb-4931-b666-783251c69b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c65ec3c-e3bd-4b54-9101-67232f0cf756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cdbca2b6-462a-4371-9683-76082d98cfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9965c0-23d9-462c-aace-bfedc3155d0f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c5870a-7fdd-4698-bac7-368a06bf920f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33d96bb9-5a6c-4be8-b542-b6390e5c48b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd57dd82-1a3b-48d5-af05-251b3351d976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de5643cd-dfcd-411f-8bf5-6a990b39de5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0520e301-c145-4a0d-b697-29d5a42069f6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99ffa94-d8c3-4f88-9267-5dcccc74dc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf74ff2-2b83-465d-956d-d63996586f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477decd3-28fe-4fba-befd-2f7b4255bb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f314699-e701-4a1c-ad8d-454bf336c310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34994e9f-e596-43f5-ba14-ba6c88aba738",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cef268-13dd-46af-a2bb-09cfd0fc35dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a76a4e-f92d-4742-a0bd-4b77dd49f548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85700a6-42c8-428a-9415-0aa4fb8d6f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb6d3f5-9f5e-45fc-8b17-6b3c4afe925f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e8f65c-e170-4101-81db-ebbdc420f65e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d81ff7e-fb37-43b3-a629-f81d58ee0e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58661f55-0079-4f85-af4a-cdf8c0ccb961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21726450-2a47-40d6-82a7-8c9bb31beb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "76e741ac-e5df-48bb-b187-66f56b8e2746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c22a6d-c12c-4ccd-8945-e4adf08edf23",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5947ace-0e9a-4237-8dfa-1813760312af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a352ec7-f07f-41bd-876e-80ce2dd67ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480febf5-72fa-468e-8cfe-055ae8639c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "69718314-342d-449b-88f5-f959de0ba55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4f0665-81c8-4bd8-952e-5476f581d5ee",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22716f87-640a-48d8-9e1f-579416b207e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33deeb84-af9c-43b7-8554-3e7da6a2528b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65548fe2-7451-46bf-8838-016c436c4d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2b3d74-6c41-4019-bc63-a605349d6e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54552c5c-5831-41a8-b53a-686cb6b271ce",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93a301a-ccd5-45eb-8645-182b8f4b8498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c93fef-75bc-48e2-a316-7a334cee8a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6a7374-f7c8-4ec9-9335-803ba070a2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd3ca56-2faf-464d-8012-386eb40e9e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d9d2ff-9017-4cc7-abb2-e7f8deba2a99",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abeeef0-38c9-4931-ba39-54ed4ea4794a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ff57f9-aac5-4d84-b2ff-53614e2a8f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a74144-45a2-4fe1-a508-0073278f1568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d92d9c-5d19-40c0-9807-6bc0c3dd6869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efa641e-d744-4e9f-9db7-59d0b2eb6333",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2199dacf-7a99-482d-9a08-202e517dcd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca7cf90-296b-48c5-ad57-28f2b675acc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdd87c3-358e-4f6e-949d-9027eaaebc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3061115b-aeed-48f4-bc42-a5ac8fe50474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9e43f7-a4df-4303-b7a8-9d2c2f6ae07b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d3d994-70b4-44db-b05d-a2b3ff97c685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d366262f-fcbe-4bee-bf8e-6e37ec6f760d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fbc455-2e08-4b97-91c6-b07d0aed6e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "66bbbefa-8d9e-4a9a-b998-44c6c2fcb408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba902d76-4c74-4c12-99ba-3cfa93303311",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a64efe-3dc5-4a71-886a-1ffe78e0aa6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5a3db0-d60b-4ef2-8fcc-2871f6fc16ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35e9a54-c7e1-4694-b6be-1f12a2a94775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c65dcbfd-9f23-474e-a67d-290452e1ee16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f598a6-5076-4ef0-b4ab-9600e6a9d9ae",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10ebd08-6d9b-4eb2-95ca-a7bbe80e7fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6910c53-9c8b-49cd-9697-1ce5686a7dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ffb76c-029a-44b9-9f44-5e1d8b40fdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f96dd81e-ecc8-476d-b16c-4e4562869e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33375e4d-48ba-4a63-b04d-d709780ccf5b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16294817-826c-457f-8697-21f2ae89b5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da917741-91dc-42c1-a0da-eac9bbf52009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e71379c-cc7e-4614-b32c-a6396c0ca453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95cf90f2-3f87-40d3-848b-fc42806d7945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef1dafc-18c9-45aa-b29e-cbab09e75b5e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7eeb2f-935b-46d5-8958-bc4e5d16309a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9024f41a-5baf-4b2a-82b8-52957737c556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6544d564-2f83-4a6a-80fe-d3007ddecce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6378790b-8701-4790-a946-86f4f130a41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bce4538-bb60-41f4-a068-ce1e1e4c43d9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff289f4e-2eaf-4932-a818-77f509747099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f59612-1c25-4cf3-9cf8-17e0f25f68ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6726722b-d6ac-4bc1-966a-6b166af6e9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89e942bf-4e9a-4f30-ae15-637cda64069c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa635115-206b-435b-bf40-493930e74d97",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62405ad1-9ce7-44ee-bb74-f8035efcf018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7134f3ee-df73-45f4-ac9a-ab2983051949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd8ea54-7d64-48e9-a107-b0732f33f899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "636a645f-5ac2-4bac-89b3-587b1c3b77d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2869d14e-2631-488a-9c9f-596d413d9ad0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eac69b8-f96e-46f1-b93f-cd2bf7e263bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99640dc-f067-4147-bff0-b07becdb8b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ef67ac-9df5-4ab7-8fb1-208932d4bcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8628e4-bb3b-4bc1-9111-d9ef54768efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b4e5ef-0131-42be-93a1-382526292aeb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c34a06-9316-44a0-92fa-76b409f0b922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9054566f-7d02-4aec-abf4-ee1af0bfeb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5427174c-40d2-4284-b7dc-42ca9f56f439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25e12ad9-da76-4267-a8c6-809cc70ecb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58886cb-e9d1-4be1-8b2c-9c5b5a3c6856",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c950af2-5ec3-4b53-897c-fd15fe264811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935f033d-8e64-4a7c-a436-b0dea23fe215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3baa9076-2ee5-407f-b372-9664797a5156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "917573e4-bfcf-4a77-b520-e6aa3598c548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010ef7d3-c789-4862-94ce-3156fc522ab3",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bb7dad-8a84-4030-876c-d9a507aae1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58822337-e5fd-4283-8be7-311737b906e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4ee2ba-436b-4622-b467-deeb7c4725f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c38e171-4ac2-40c1-866b-64c2cc9053de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd90591-9b2c-4bf2-b82f-38fab44087b1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5162043-21ac-4a8f-abb7-16662a054152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006a85f6-9bae-4d52-8195-22da5fdce15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721a74df-ad34-4b1e-a771-90c8b7a0676e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b6498d-ad7a-4335-ab8f-1f632374759f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e108e2-cb2b-40d4-b268-35b6f1261677",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dd636e-853c-43ef-b045-9b7bd93da880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5461663f-c8ab-4e55-9098-9c255efc663b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc786f9e-9940-4b6b-b4cc-693d0883d4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce736b3f-9293-40e6-9485-7c22868e3aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbb6630-7c6f-4d9c-bd42-bd9e2998885f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f2c2ae-7a00-4569-b3c7-c119660bf73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42678486-410e-47fa-8af0-2b650c3b25f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c12a04-4940-4858-a8ca-059c33a8fd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5166a9-29d5-4f61-9b9d-bb4e33dfcede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fab3c51-740f-4747-b316-049e4e12bc05",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cec78d4-a090-4c42-8089-a88229ac1bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def2efb5-b510-4f64-b4c3-568c94a2661e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f1d9f8-4e03-4a98-9798-4933fcb9e76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "caf0115e-b265-4917-bec4-54ec5f4b14f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33b4128-78b1-4111-a41f-050e2409c1a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c275464b-2ca8-49c5-825b-6e5047100411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d69fded-aba5-4cef-8548-a64d11e9cbc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f4fbfb-e0c1-42ee-a6ab-a4f2b3fbd1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "24ed08a9-6829-42e5-a9f0-07355f6d4900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5290571-2310-4e8d-bd2a-f5159219ee16",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a3de32-2c81-4baa-9c57-bc6c1d8b6a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50058aa-def9-4d96-8b40-cb698f6a3100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f868d1-d0f0-4c69-a423-27a1e3d37cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d040ec5-bb78-4311-a7bd-227865af499c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3637ba-ddce-4fcb-8fe9-100e392cb0ef",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073efc45-08df-4b8f-a14c-b22433be2f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd35600e-3d67-4979-9028-fd7d82354801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268c2f83-d0a6-4fee-884e-6f72c02e6ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8539f69f-e024-4921-8497-288d58e759f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf872ff-b92c-4858-9f3f-8c2a108e91b1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a659aca0-40fa-4dbd-99fb-434bf319bb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066e5ac8-c150-4ed6-9854-7b37d606414b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b84f57-df06-4cef-8a78-eae539536f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "81ffeb3a-dd8b-410f-9c72-c79143efa2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4be48fb-2737-4d4e-8922-7c17d87b3430",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c1ce24-7f4d-4668-99e4-96d4349a8947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5784f78c-49fa-419d-a1a0-ee2fc43a0963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea83838-ab87-428c-ad21-104ff10299a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2200754-3455-4695-8fdc-5de9ff3a6b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0749efa1-a3b0-4d86-9b19-296cabee432b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001d8ef5-4c37-4dfa-90f6-357a9363489f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a111aea1-cef4-4009-b253-6df9cc41dfbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3719c9c0-dc00-4909-9db3-f151337a6787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "526a5629-56ce-479c-b411-0e3c8a9c2810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05097d31-10f3-48fe-a9e5-e49fde6c05d2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844ac81a-446a-4dbc-9547-5d70538f7534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3055f9f1-b93c-47d4-862a-904733ab4af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54b63e4-d837-4af9-8bab-b815d6f324a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "089e4ce9-240a-4bd0-93ba-77df3fa85f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a44eee5-d03d-4080-9c3d-6407413ab87b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a565e3-42d5-4c75-85c4-6432516c9ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb00b7db-ca4c-403b-b12b-93d15813ca6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0eae72-ace9-4462-96a6-04eed6605965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72969b4f-bea0-48b1-9b83-dabd6f9d42ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f452296-cd14-4741-9327-4a0377b01934",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5073a429-af4d-4929-8c8d-4e35be15a013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2b90d1-28ed-4290-86d6-fd6188c86a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fd656b-6cb4-4b37-af5b-253dbdb1c6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "98d979fe-146a-4d43-8cff-0af7f1f6c689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f654e3d-0c3e-491f-9639-a85257226485",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd653ee-723f-43ed-ad71-a93f0fb2a136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb83c946-ccc9-43cf-b8a7-748f9808d8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4361aa4-f496-4165-8353-fc5362e62517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "63a1784b-66d6-45ad-b107-3abf6872901b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5748c0b2-d6dc-4b19-96de-fb3eb0962eb9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddad2e52-d2f1-4afa-a071-985a0a597b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435b185d-c50f-47c6-8d3f-366cf80ce31f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661ef3f7-086d-4a8a-a1a8-c7b39fb9ec62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8583d99-cc7a-4bc6-b53a-0e3ec85785a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761bdafa-196d-4572-b934-6c812399750a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43328fe0-660e-46b7-923b-a875e1c095c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31308fd2-8504-42d9-952e-e30342e96916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2ebdd4-7302-4fdc-88fc-3df76c78842d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c7458b-2568-4bce-ab56-5e26f3a1cba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a182f9ed-0ece-4724-aef9-ddbb46d73062",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc30e08-b7cd-4ce0-98cf-f97b30514509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ca44fa-3188-4b8e-887f-e51a1cb25cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0464bde-e8cf-472a-a799-36c3a4559144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec5ca74-b75d-4ec7-8134-0a8cff357224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7c4419-4d63-44df-8cdc-3576491b38a4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b0859a-adff-4deb-bdb8-736e5a9912e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1606ff-c53e-4549-992c-47263e21b3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669fd607-d0eb-4282-a4e8-ed9ee1fa4832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08e784ad-abed-4488-8b74-cc429452ff40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7329d6e8-4909-4e10-838d-aadca35e059a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc9b709-6fba-417e-8e4c-6403c242eeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823ea4c1-3ae3-4c10-bb1d-0df666096b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97755ce0-b084-473d-b725-6fc76d388383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3731880d-2a48-4b21-86df-4cfde0ad0b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3100e0e5-cf91-4b79-b1b0-2abaf2ee947f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a9fbe1-3f2d-4be7-9190-82fb4c7a3396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bee795-ab97-420b-985d-77ecef45d246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4171f0-5989-46ca-8a5c-2b9a74b2d23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3cba8a-cdb2-48bd-96d0-d712b779bb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744cc271-0181-42ab-a586-99bd3ed2dc75",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97ee6a4-8dd6-425a-922b-4236cc8e46aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6631f6d9-02f5-4207-865c-d89cd1100275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2ecf70-cfcc-49bd-bb52-db0e3157ebe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e676f5fa-4e3e-41a6-944c-8221009afb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b111a319-7b1b-4c71-8fd5-98367dd3471a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb84bcb-cb80-41fb-b5d4-0f21a0ed5c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9324b298-f42e-4e85-897e-6babcff8316d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2337c4b7-9cda-4179-a3ec-2a0fdf728a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86e033fa-d583-4dbc-a121-22ea937283b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f13eb37-fb20-4ada-8d98-d92d7de334d3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dc0303-32a3-41ed-a96b-bfa74b549e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c272eff9-2879-4804-abb6-ba47b7c2af47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3041825-7771-4b4b-9818-caa18e2c59fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec3ca12-97c9-4f61-8e13-2be2a8991964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3ef93c-aa04-441c-962f-4bdee43965d6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d044c342-20b4-4628-9f37-f9bf77820918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c71934b-a5f8-4984-b1c0-129991310ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc4e999-378b-469d-b258-3eaa76262df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "98381897-8d71-4194-b260-651bbf47314c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29888a8b-0652-4474-8a7a-5c589334c06e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a74d63-7630-4264-b773-4f659ed14b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d547e6-3e62-47b6-bcc7-b5f5a68ba762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9424a49-e735-439b-b55e-5cc437a5dabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa88794-6368-4d25-8b59-27e37fe7d363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdef2eac-2ea6-4ab6-96b8-71f9bc79fdd6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be49541-4263-48e5-83fc-0697c87cfef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28dc086f-6200-4094-8de1-babc484e18d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232137a8-fa08-43ce-8934-3099e96d545e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "acc7d8d6-23dc-4fbe-ac18-4b1365acf527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c792df89-b5fa-4fa2-bf83-2766b7e30414",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8622661a-6879-456f-b190-3ca14391e18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948a9a48-0c23-425f-a168-7dd185843d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f411a0f5-e318-4342-9a3d-6ddd86f28122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "645daf12-ae20-4ca1-9e12-5b4a379907e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe1649e-8147-4cb0-a63f-63a66e975415",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbcaef1-d815-4c20-96cb-d822db625489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca45ff0-232d-46c1-8200-7824cb1f6014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66563ca-540c-437c-879b-355d3b37266d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd76f86f-d178-41cf-996a-763cf14135f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc613471-d6c0-4237-979b-d64540a386d3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d6159f-6330-4774-9d86-9ab89b6b1a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47acaf38-8f9c-44bb-8a9c-827653f64513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3576fb39-cc05-4f95-b801-df6fb40590c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a16c969-bcfb-4726-b652-2a3869b1f0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6f78c7-3e26-4bf6-8f7f-bc6ef1b595f8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2535f1a-d6bc-47bd-97a4-4402af9def87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f883dfa8-cdaf-42b4-8c82-f5d8ec7046fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09047d1f-8f3c-45f6-a994-b6afc9e20870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23379fd1-30c9-4a74-ae27-80f67e44589c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc3f4cb-0c1b-4ac1-b154-1523669a516c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eaefff6-6b66-41f0-b1a4-adde243de927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36fb2ec4-b7a8-4a69-b060-e06d74e7f136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1f1275-63e9-463e-bb24-38b75da32743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16380519-c2ae-487e-b923-1dee886e8f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba156255-0b18-4bfe-9204-f13ca7f42537",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d824a32c-53b4-4e85-bd16-382a65755a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3a89be-6ff6-41ce-bb0a-8001ba1e17d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141732c8-82da-4913-b154-b9167357e02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "252f4bb3-85d9-4f04-a85d-3df3cf6d8d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5de642-27c3-454e-8157-06c9d3c7c607",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4894a69a-ebef-49d5-89f0-327750077eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d7d268-7a05-410b-8e05-cd20d5fec9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1473dd6f-0ed6-4e3b-b9eb-4c496bc63701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb1ee11-2f32-4e90-a7ef-858310370428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d582f708-44d8-4995-985f-7eaafbb46552",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3da421-9522-4da8-979c-df952e12608c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e46444-6a2b-4c8c-a792-b4d12d04ba51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cfa316-82c9-4473-9dca-5afbbe7130f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd4cfbd-b32f-4929-bbc6-ec02d97035be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b00d6e-457c-4c08-9dcb-751c388b764d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bb81da-88f0-4108-a0b4-2742fc542268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9542ca-dc86-442e-8cd7-f9422c82a6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5956583-c9b7-414a-86ae-b09575867909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "70a96595-0e08-4ba2-8f26-ee8e6ad5f464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b371434-af74-4084-b3d8-0bf081fb5f0e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b935a5-cdf3-4990-a290-b68e669476d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00045cee-bb94-469e-913a-0f8c9f36ba6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a7310f-9bed-4370-aff5-110f73ccd622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4699dac7-eead-4de6-a80a-ab817c74e431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9eb3817-cebe-4b46-b8a6-a607ed4b3960",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a946e08-f6de-408c-9a2b-f6ac2a69d41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "54469078-f433-4cb8-bc06-afaf24c5ade0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f388dd-e805-40fc-8e61-d3958b5da51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e55a386a-972f-461c-831d-b30dfca8a0e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "99ff7913-6e3d-4044-b760-cd4b1d73619a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d10c5e78-2ff1-467b-a6ff-86678d9f2012",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859e0005-8efa-4ea7-9aec-8f006258b845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c287fb9a-cf1f-4cdf-8c24-9ffe16ec9f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37ccbdf-3aec-4077-a894-bfe7a8a26cb7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "937b23d3-b4cb-42f5-889b-f0249572bc0f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68a347a9-04c5-492f-ab71-ddd78d5cabee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92bc836f-4863-449c-b884-cc4dbcad8bfa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17f2c678-9da3-4d80-8e66-6307e27abd8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee08c8c6-d8ee-4ae4-a54d-5732772e4b9a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "61b5a0fd-ad4c-43d0-b70f-814230ab97d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "666adde6-4dfb-4939-aadb-9baae5bd71a0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "41ba5f04-aff6-43f3-b738-8d9db7061008",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae1143be-bb67-4a4f-9bbd-52c97fce7e2c"
                }
              }
            ]
          },
          {
            "id": "a8539a6d-a616-4acb-a3f5-6252768d6249",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e9b6424a-2653-4ab2-bbbb-e694556dca12",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "969a979f-61d4-43f4-923a-4d05bc729289",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c32fdc9-2fdd-4646-b28f-973f516f06fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a7416d2b-fb99-4bd6-a2fa-4954555e7b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d538122a-2e45-42b1-bbf2-c2382e9e63cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1698c1b6-9b83-464c-96fc-f0cc3b140ed8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "14546bf2-b088-402b-84f0-87fbbd2f9fc3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0558bed-0630-47bd-8fd3-4db77ee65a8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "981cfbb3-e976-4cbd-98bd-cc60a7897ac9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "453c70e7-9d00-47bd-be95-6e9b320a04bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ead5750f-f5b9-4cd5-9709-ed059fdad4b7"
                    }
                  }
                ]
              },
              {
                "id": "c3c62732-f7c3-4576-bb46-57b47bf8660c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fd90eb8-2fdd-48c8-b8f0-68b4cedf5cc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b88ada7-17a6-4a5e-b8fb-8fc0b70e521b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df61953a-c339-45da-bbbe-6a35dfce810f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "20491bff-9d62-408e-bbcd-ad669a483783"
                    }
                  }
                ]
              },
              {
                "id": "b586aa05-f61d-4fcd-858b-ff7f77bb72fa",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d36e675-140f-4f26-be27-9b958c304839",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d482f3a7-5d90-494d-8e5c-ca999c037e03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "731c0757-eee5-4780-8efb-ea57fff44c6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5ea9897e-bb8b-45d0-a6b8-f55db06a4359"
                    }
                  }
                ]
              },
              {
                "id": "958839b8-3c34-4574-9761-fa9d5345f8d7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b93b606-ad78-4532-9caa-fa2cb8271c5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89fd0f5b-4c69-4edc-b6b9-c04800c9ddf5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ef5fdf6-c1d3-4b60-bb0f-4c9da9ea510e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2d178f48-1bbd-4d55-825e-6b46d08033dd"
                    }
                  }
                ]
              },
              {
                "id": "ec2156c9-f47e-43f8-9f22-b522bc3e4acc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c9b2958-ecba-4a08-8730-fc49806d0a09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35131cd4-e420-4d6c-bda7-6f0f2cca3c93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7845fda2-35ca-4f8d-8278-1d0093806856",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b69eb874-23ff-4d00-8ef5-495f9e0ba626"
                    }
                  }
                ]
              },
              {
                "id": "5947985f-fcf9-475b-a866-1b27d95e98ad",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a593d63-d30d-4fda-b37b-e8b807ae8dfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c1d5f58-6f3f-4da8-969a-01338c2662cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe735f91-8270-4e8d-931f-e51a9c4ba2cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8974a4aa-5eb5-452b-a1e2-0c868faa70a4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "28dd25d6-aea8-4af3-bda8-4adaaab0d676",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4289d726-5ddc-4ac9-990f-5fdd8ce9d8d7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b4285281-c751-4b67-ac8c-615e78b5c660",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fedf5b08-1f7a-4f8c-8d53-8208b34cd994"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4f5eeb8-c3b6-4e49-9bff-44e37c0325bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "10accf45-84a8-4c67-9d66-7b04f5314719"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c80dba4b-0263-431e-9b43-6d2120bf3569",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b398dbdf-7ee2-44cb-a422-80d39589d093"
            }
          }
        ]
      },
      {
        "id": "937d94dc-153c-4876-86d5-3936667dcd7d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "df59c852-c646-4668-8309-d65455a33415",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4fa4bd9-fd0a-48c4-abab-a81d3126dc5b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c969d35-1398-44cc-8599-855730ee7dac",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b4d2ff-8bb0-41a6-8440-9eb304877a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00de5723-8b79-4027-b67a-e4931276d61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94188aab-fc10-4818-9469-8301a2b75336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc9a16c-e595-43d0-9a3e-ef5add1dd50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e89c4e-71f4-410d-8dbc-fb8a18d57649",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82176307-92d8-4d99-a083-1da89fe42600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "777c7de9-0578-4cab-a3b3-412dab673bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24198ab-b29b-4c94-a323-5074ba573e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "925bacc3-e36a-4e10-9c90-abe062d471da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429b64e6-f98f-4db2-9ec3-1c6e0a3b9ac3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d1b7b1-7673-4607-ab15-a6d5791447cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da84448b-c86d-4fa2-bf54-0797b38ba6b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ab0c06-309d-4d7e-b8f3-31812efa294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1689dee-7bdf-479c-b7db-3b90ec5ac702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a152f34-d936-4d0a-a00c-c41f79623ba1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17acd99f-6d29-4394-bb02-acebd3c25495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce7a372-4ab5-4148-97e0-7197d8235e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6619d493-5478-4486-81b2-9cb5b66b1ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d90248a8-671f-4672-8228-bd0f3969b74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c9b427-3c2d-406a-9d2c-80ea5f4674b7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee08a34-1f4b-451f-9bd4-d2f41e80af9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda681f9-e055-4ce1-849e-adb5b379b192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70792fbf-a28a-47b7-9e55-725c5d964764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "340000b6-3085-419d-a9cc-44b7e1849513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3207677e-c2f0-469e-acf2-b35c0152c917",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb89a3e-926b-4202-80af-62f06cae6432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64aae58-bb46-4c4d-ae4f-8855a327d4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6fad09-d0c3-428b-b569-7c75ac138cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6150da-2358-434b-9d32-a3df06adf38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6b3379-d909-4f17-b0aa-a9dffa3b3d49",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38edd5d2-6094-475a-b257-599512f63f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb1b42a-ae18-48a9-94d6-91b2b5b9f184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cb9f1d-9ba2-499f-8fb1-a687cb78cce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a73c151f-b67c-4694-ba54-9f35485e3f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e72f989-89ce-412d-9b1c-e9894309c378",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6e5589-3abc-4e4b-b326-3de94d161044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1b23d2-6b29-4356-b81f-6eb96d66e886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8065c8b1-4bec-43c5-ad3d-34f0d23a3bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26bdc270-ea9a-4e33-af79-b39d75f1e655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bba377-4b3a-4de3-9d01-ad11c8df147a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fff980d-e994-4b48-a0c5-0fbbea6b9a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0626e7c9-64bf-4060-945b-a32679256261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89e87cf-2b79-4a2f-9d9b-46b01dd40185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cef803ef-beff-4c4b-8605-775b964cff0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae738cb-c5ce-44ef-a1ec-37c7c35db44d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f709787-2bd7-4d30-9dfc-835d3a023b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53aa82ec-d1dd-4d50-a9b6-9a9d7e868749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398ca72d-cef3-45d3-aa4d-8a54a5938b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aefa1a4d-4ab1-4fd4-a0c4-08ea34d1525d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbef0d42-6a75-4da8-bbe2-d21cde1f608a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bb7281-1e50-4c83-928f-12758d39e077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b340e517-b905-4f76-beb9-ef6516bb007f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6eaeb2-cd4a-4ab8-9624-303ee07fa3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "187ecd5a-e608-4200-9f28-51bd2465453e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f07fe6-47ce-460f-8332-bd1e669264f5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991f629c-1e8a-4e62-84e5-4160c7d6bfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b75425a-9a5a-4a11-a5a2-5e0aa4f7d194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9048b2dd-6cea-4cbd-b84e-2791be599a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc31c81-51aa-4015-91ea-33f1986a177a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0675f5fa-83c8-45e2-aec6-73156165e452",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d116835e-6361-43a0-9052-d4f2e2133519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2313118e-5bf3-483d-a4ad-9c5f9df84e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30744344-a7f1-4b44-b7d2-4ad77933e4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c49035-eaa0-4c1b-8d02-78f0bbf34bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e562bca-b41b-4934-bcf2-f6ddac47e42f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1319de60-3fa4-406f-9a05-845e5f153038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4caf89a-f5a3-4162-9c99-bb7c0a429ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f445872-e5a5-488f-945f-205b697404bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9556ffb-fe64-467a-a3e2-da2886521a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2303cab7-8a0a-40d3-b6dd-d9b4b952ffba",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea4b4f4-35d0-4c0d-826e-9bf9a377e7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9807f6-e09c-46e4-a415-309030687983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443d9b18-4fe4-49d1-8492-ef7af189db7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb2ab03-0e3c-437d-8bdd-e7d78fe358f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fca811-fd51-4e8a-9d5b-d7aed47cdcee",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636bd455-b597-4397-8d27-b86db4b98968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b498b82e-411a-43ad-8f20-f6c224c325e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76fa449-c7f1-45ac-847b-0666570b9716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4b1721-6a2a-4801-ba7c-3e19e25b1b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bdff61-f314-4758-8d34-78ef44b5f242",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fec133-cc8f-4567-a765-781691241cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8dd9f09-e67d-4d0d-be36-75ebe625f914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06aebf9a-05e1-4174-a323-990181864c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "08000146-1763-4319-a5c3-11bbf966dba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a59b2cb-14fc-4e59-93ac-fad720ce9dfd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4dd419-d60c-477b-a150-dca45b7c3b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d94d2f2-1d25-4c44-b30d-46e149e607a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fe3280-7eac-430b-ac5c-9fed071ea8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ec166c-ab47-4bba-a1ad-d13fa15fafff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc7bd1b-805a-49b5-a720-f3e0ee754b2d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca37425-3be2-4303-af02-53c9390f3b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19df1488-fb07-4f70-b2dc-1ed7ab270bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68169be-6125-4ed8-a2be-6d9536b71c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d60e6ad4-2038-475d-9e75-74972ae90180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82db4444-a6d1-4502-a160-9a7cfff29c30",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8c1743-b0be-4f46-9baf-311f4190c57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b763d94-375f-4283-8f2f-4c19b237c012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0eb6c2-0486-4279-acd4-262888053276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b734bea0-0a61-46e1-993a-94dc397bd3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0754a5-68a5-4f3b-8431-5b9ce9b86d16",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae8d571-6392-4f54-a401-5ee083e5a06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49410bb8-0572-4e9a-9cf9-46bf7dce3cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1348045a-a50f-43f2-98eb-9cfa4c470112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e3c833-14d8-49a7-ba14-c8d45319a651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0404239-fd92-433a-b655-d6f8c13d3a19",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ed0cb0-4ece-4ebf-a41d-d7b71a49b765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75729f32-cf83-4d37-9605-4e4de53b98c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d67c45-85e2-4ab4-9cf7-0632c76db4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "591151b0-5331-406c-b55a-d87b7164d592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85d5522-3c55-4c05-934a-83172dd2a707",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c256969-7f35-4a54-931f-c4d8e9a3f44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8cc35c-ca0e-4b81-956d-c0d7ec2eb4b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76dacfd1-85da-49ee-b2c5-234479a4a9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01633af5-7f87-4def-a38d-6729e0fd718a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec0b412-0660-4df7-8c68-6e0438a48338",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21b057c-0cbf-4cb2-93e6-bd23ee362359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a49895-14ca-4e3e-bf09-5bc2e65a8b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5d1779-c09e-419b-8b43-89879a2380b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89d05781-71b9-4ac8-b95a-605e8bb978c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41713a43-fe2b-470a-861c-375af60f6853",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dce31f7-72b8-45bd-8ea0-0eba2171dbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa57fb4-f576-4eb3-9135-3b6c3f21d1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb53120-a2f2-4b98-b322-ff9d8473e9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82b508a1-ca07-4488-8537-3ee43721de76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f5ccd6-5010-4ec0-b973-398b2d6d322c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c5ae22-a291-49f4-8923-901e4a5f089c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c3edc8-cf2f-4372-bd52-d1c3d789bfb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7414a299-f475-4a59-85ec-394e87120fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc4c84c-f501-487f-a810-0c726045a7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130e446a-4cd6-4e11-a51f-68abba306e4d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beab5c81-b891-4043-9bfe-7172ca9bfe01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf26523-05c7-40ee-8688-6f2ae04d2cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ad2c0c-89ce-4a9f-97da-58e3487ed554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e4ae9d-d356-483d-8d81-6db52393cd77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ba9c87-a6ca-4a9b-9607-fab41c2b7777",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acbea4a-9ec3-40aa-b652-812d2431529c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f7d50b-bdb1-460d-958c-70c6e2288290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e466ff7-c986-4db7-be55-288c838f0691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68438b0d-31ce-415f-a7e3-619dde0de825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20202b59-560a-4dbf-85d6-aec9743a87f7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e793e761-4c65-40ae-98b7-5b693ac8b2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3d9798-3f96-438c-844e-f5bce73c4926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680d4667-2648-4c64-8940-3424ca042c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e314c6bc-78b7-49bf-bc41-7def2e3aead1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d890c5d3-ffd1-4340-b19e-6a000fb0083c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1003a285-7f05-4c60-b710-87ba72030bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3b1f88-6551-4ab1-aa12-9b1869529741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf54cbd1-9fc9-476f-8f58-84415f0d95dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c2006d1-651e-4795-a549-a5f0134c2da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333bda73-8785-49c2-b8d6-2a2da1066a80",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abdab4e-2d55-41b5-8152-52684b556b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8131b6d5-aa02-4f0c-a653-2dad964c2f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f31caba-679c-4698-8fc4-8bd4b281746a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74b8fa0e-b697-4072-a17a-ab91a9530cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356f84f8-146d-4baf-bd24-3a3c4b2078d2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780976e3-f277-44f6-b5ac-fdcd59e704bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91ff39a-cfe8-4912-a4dc-1a18872bde06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d20d187-1a11-4d24-873c-e2c481290d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd7e980-e022-4293-affc-4926d64c01eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "85f41223-5c95-4950-afb3-44e31f823fc6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "196043b7-d8f5-4553-ab5b-cec304254b39",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb5c80b-50cf-414c-94fd-64b85c4d585c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "edb301a0-c4da-4b19-8300-08af5a356a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aae50d2-d003-4b01-b9ca-18d54b083503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b3ad6b8-f7cb-442f-9e70-5c4e6c29246a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9b8d44b-a090-4424-bee7-cd33221d5c04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07da6fc9-a35f-4133-a095-bb87a2c09e71"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0eaaff8-8df3-4271-8dd3-0a7b90213482",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e276e761-a531-47c9-9580-b3b82e0f9815"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf415ad8-3264-4ba9-bbd4-54a4d6c21fe0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7e353e0e-0107-480e-a78e-d1b0bbf42c86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21b72b6b-b02c-4bff-ae41-1b8ba1ef00fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "074f424b-5ffc-48cb-80ac-3ba7276017ee"
            }
          }
        ]
      },
      {
        "id": "6c41f289-8e5f-4e4f-a38a-e3ddc07c8b80",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "71c53abe-2680-43ef-aff0-feb96d0f1553",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c69a754-e2f5-4fc2-8793-b7a437c828fc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "24a22678-de16-480f-bc9f-a2c28296cd15",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdee2b0-1111-4f42-a14f-a28e8c9c3927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e24f93-73c1-4f21-80a1-f82c04b86c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e0a39a-b317-4915-9b0f-de6ca3b9ad1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1219dd-ecec-4b22-a315-87a2331d2803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe29c766-e0b7-45a0-ba1e-adddc5bd58f4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830ca24e-eab4-4e1c-a165-3bcea041af98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a1e922-8c26-42b3-a818-1043c3976b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9759a496-de77-482a-b0c6-e869a6b81620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d1f61c-a3da-4a1a-81e2-dac44474e30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aaf2f9e-980f-416e-9415-9b5d57fa27e3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f850b29-c025-4af6-9df7-9e36894c08a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa04ad2-23fb-40fa-b8c6-de2ad2fd8be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8343fb7a-34de-4e88-852d-dfd066f5281b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e71d6cc-4934-49eb-88f0-1e2951e226c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b0ada6-aefd-4cea-93f5-59db8d9c32f8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5e4b7e-1296-4e55-9ec1-0bab251c7d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2e66fe-b2f5-40a6-8ad5-36c54557c8bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b69e61-5434-4246-bd44-df11e418579f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9afaaf0a-4ebf-4b95-9ed8-1096a071cb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66c4c90-f561-4a71-b07d-d71c235da4c1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c95d63-6f87-4552-9cf3-f220b85eb450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e460ee9-d671-4421-bcc3-42b644fb0336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a21116-1373-4aa5-af4f-222f27f7f311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e040093c-dc9f-4c21-ae03-0ae443b71972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1bdc48-4d16-49d4-ab70-e20218cc1118",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c79908-9da1-400f-a915-36e6bc7227e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c00966-425f-4aff-9871-1ecc192bad23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959d8187-6be2-4437-926c-a6e2e280ab1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c75cb08-7490-41c5-bc0e-046d1963aef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0241660-e315-417d-8b74-11692a0e5ab2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fee8df8-15d6-4d31-a836-76513586370f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25749fa1-17c5-4665-9ce0-b841578621c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550f93c0-0613-4163-a664-564ff0690280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "162a6d3e-6ee2-4ec6-81e1-630a3f6e1389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57f58c9-2f62-479a-9cb9-a35986535d9a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab8615c-7097-40eb-a576-cf4cda12ccec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac3e1a2-843a-4b92-938f-9f1e5bbf3526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22a9d07-83fa-40f3-ac6f-3c511252d8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "538204e1-3d9e-4d22-b002-8927e3f8480b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93c0e66-c2dd-44f4-8d3d-25e129ba19c7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e64c75-0697-43a5-850a-016e2b1d04ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c35979-c6c1-4945-9718-025054dfd1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c4a57d-f6e8-425a-80c8-dec0b537a7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09b8e35b-b7d9-41ea-8c45-30d265b62fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129d45e3-a99b-4eb6-a54f-66cd04ec3262",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7d382c-d349-4667-a86a-6d6b2de3aa89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0b6c36-a146-41c8-b17c-501d8794b3a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f33ef8-8582-4c7b-ba5f-1a4b51014f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd54cff1-44b7-432d-9d20-a1387bb9dedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821425d0-28b8-417d-8cd0-6d8e815b5146",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25931187-0523-4ab3-a9d0-ddb168ed5dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d7502f-23da-4b0d-9e45-04de806e6c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c4ee28-3c3e-4571-a36f-b3fb94a7a44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3cf982-8537-4782-a189-4f50acca5b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c84486-ac28-4bd9-966b-799eb9209a13",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf74c4b9-cb52-475f-b888-a47118e90c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb3540d-16fb-4c35-a301-6b6a102b5b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3c5e1b-cb3e-4395-a4ab-4141732a3068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "519d1426-7c0c-47df-8ad6-fe71fb382d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c7f2f8-dfba-48d5-9029-4ddbf50fca24",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73db39ce-0c72-4fc4-ba0a-92e0ac860480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88dd72ab-7da5-401f-a25d-ff6a27fda4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70c748c-cdf9-408d-af80-07eda451dd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0e232a-c810-4af7-ae82-2e2b5cd73501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f7c93e-616b-4b96-9903-bde79f168208",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ace6968-d015-4cdd-980f-bcfe6f6aab3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe730f6-33ff-434c-931b-ba1a09c215f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f8c17a-3717-49c6-8634-6cac9980c7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cecb7e3-7ee3-4c86-9490-ad2a1f9a9f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55aa6d2-d7d7-4568-bc68-01d93cb762b8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0128792-9953-4134-bc20-555f1a0b5f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a78fc63-0674-4ec2-94c7-52eb1ed5b778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a04af94-6d04-44c3-9730-5cef24813007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2587d8f5-579c-4acd-b252-4b3642e70bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bee22a-b5f2-49ed-a5d1-b0ac35a621c2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda27831-513c-490b-aea0-e3883aa70f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d898f59-1f53-44dc-8d47-8610e4332de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ea5491-b5e2-4195-bdd8-beef5660e3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f51ae26-c587-4b20-afe1-e638322251aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad4f836-ea14-46f7-8153-2965a7bde4f6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1634a669-3f12-4990-940d-57671ae9067f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce456f6-5e3d-465e-b6c8-4b6b957d2084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99022e99-ddb1-45ea-993c-9221aba5d412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b577ab87-ab07-47b2-82e1-26d45a3c3d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a676174e-2d21-4e3e-94ab-8150ecc647d7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829f3acb-cfb7-48ca-8fad-e925c9afd963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6ada31-65a6-486d-a42f-a37cc0f41c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68805691-cdcc-476c-8fc4-652712acfb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b22a2efa-a4e6-48dd-8eaf-a542cb1fd2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a549e1-1e06-40f5-916a-7783425ebaaa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ef4ffc-bfea-49fd-8b65-8831669b7444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea21452-88a3-485b-aa15-52637c456c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafe13bc-b949-4702-a49f-65117f2d4052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d16f8cf1-a092-482a-9db0-b2f63374475f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50aebfc-cdf2-4ab2-8cfc-71d7d3e77576",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad98d20b-7804-4f06-9527-1ce8ac1fa55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6e7586-3c06-46d3-a215-e91444ab9ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bee9c52-0d82-4250-a895-729f6a1eb421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b8d179-4656-4df6-811f-f337bd2452d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0976b626-bdaa-4af0-939b-e73813e3e809",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0668b97d-aee1-4b47-a300-09e76b6ef7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93272f48-99db-465a-9b8b-97b2fb575e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7e410f-dd01-48b8-8932-22ffca930a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "631dd9cc-c4cb-4b88-8ae3-69afedf25a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58c982a-67a2-471b-b7c7-1e1d0f37eba6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa0b2b7-068b-431b-867d-4b260b72f638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02de62f-e251-4fc4-966a-45e240b43e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f457c2-4f46-419a-be9c-8dffe77dff5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65d20cf5-3e66-4a41-8494-f4e83e44f450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f557a6-c701-4635-a2e2-d6b66265887a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789fe1c8-be31-4885-953b-eaced73aa467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a611af5-d46e-4da1-88c3-31d51c2cc53f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8210dbd-e39d-4eb6-81c5-e18efe99e0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f72c60-4e79-4a16-b32a-273fa80add59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31db9ae-02e9-4a85-9e7f-66a467b0dba4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce202a63-4098-437c-8e4a-b333f7dc6eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b14573-18f5-4f11-8a3e-bbf93340925a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00651e17-9c34-46b5-8ffd-2823d9fa847b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a7d974a-b327-4c67-8171-d201a4f6cf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f762a02f-e91a-44bf-ae6d-6dd613500046",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddb73df-bc0c-4a53-8d16-f7b73c2da74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1def09-d32c-4702-bbe4-d286d65a3cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1056fb83-fcbd-43ae-91ab-1e23b3312027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aeaae97-0d1c-45e2-925f-9c4396cb01e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2f910f-29bf-441e-acf6-14ba94900106",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46389ea-a4bf-4beb-9410-13d8568c5ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56590c71-881c-4ea3-beea-ed0d6176e075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a724f8f7-79c8-42b1-843f-a5bd5934c9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f938c3-1c29-4177-9b46-c979ef4655e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8ae17c-bbc4-4ca1-a15b-ee7bc3c4c9af",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba21d168-3cc9-4162-931b-c6d451f4feae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d85956-56a7-4b4a-9020-fac7eb510723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9f9125-6bdb-460b-8797-6392aca22cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1016ac-9337-4e98-a8f8-2fc0fee854ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a31f38-11c1-4fd4-b4de-b0ada96dfdcf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df04f2e-d977-4ff5-b333-4a9563654d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee4fd1d1-8ae3-43fa-978b-8430909e2189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc8586b-97f9-4bed-b921-2b6e5fd0e56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac005ee-d0ca-42f2-bc6d-8b8da1884ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07046818-03e2-4415-aa37-cbb456549406",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c16356a-8f06-43dc-b6c2-e3d825802e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97893d74-3017-41b1-88cf-0eaca330fce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a83839-9a31-4604-a253-4999a8f966ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89e3e2f4-b455-4537-a741-fa3379e1ab84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9a9762-a9f2-4867-ac9a-0ab3e78502bd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5708a2-c7cf-4bff-af99-d7c3f36def35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6d5964-7e34-46d5-a300-b2211ede1cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ef9955-16cc-4c22-9808-bed00557dec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8af32bf1-3469-4106-8170-fd16d05dcc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5ab642-21dc-4f68-ae11-74d0f2ae36c3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce538c2d-3156-468d-a6a4-4bb7d1111f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5683ab18-f799-49d1-b1fa-4352f0a032c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846928fa-5fa4-47f8-b955-9e1308a0e340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1af852-9c7a-4838-bed7-375e22a54edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7ad797-9d5a-4c85-9a92-6144599a6116",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d50f17f-db97-480a-98bd-1bba22a8df08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7718991-bad3-4566-aa52-c6e7ea531ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598a1ac3-0893-4807-be60-c52980248081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba431ac7-e90b-4c81-9078-dcc6ab23dc23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471a7d59-f39d-4dce-b5c1-57a02fd8b114",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259299ff-7e89-447e-b66e-112df5a554f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b74dd2-bc33-4a71-a489-f1aaea3e365d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8dec0f-63cc-452d-ae1e-e04b2a5f49f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78d6991c-2680-43d5-b3dd-6918bbf78bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d378499-4496-47f8-a356-8afb1e9958fc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d625c52-723e-4085-aa04-b21e95b3aba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44611559-3f1c-4840-840b-64004b7f5f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03410e24-180a-4d2b-9511-4af8fb4e2317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "430ee570-ee2f-4bd3-927c-62a0162f468d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677ca892-9d2b-49c4-b4b9-9308317844c6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db41fa3-49ea-4435-ae75-513362668aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2ddb13-1c0f-45a3-a23b-a32ace5332f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c626ff51-8c41-4dd0-868d-d0f98161cbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7429e111-8057-4ed4-9ee9-8e0964d3ba78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf18f3f-524c-45bf-87b2-664f6dd4d30d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838c11c6-28aa-42ab-bf4b-f520e9a9c4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c6f527-0046-4c2e-855a-399b20357363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55164b70-ba45-488e-a7e4-05b103b19647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1808fb-a26a-4edd-8669-0d058240ba6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ba5f9f-7144-410a-ae9e-fead098ac575",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99861a7-f861-4121-8f21-4d59f19a885b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a78ab10-79ee-4593-ba0f-a8e897dcf722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c2449d-7fc2-42aa-8487-e7d11b0d5b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d51d8428-6842-4286-afb8-68efc2002aef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "08fe61bb-ccc6-4447-b495-fc38b15c84a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9673c60c-0987-4165-96d1-65e38cb0d77f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59edd21e-87f3-4eb6-bd99-fdf41fe0e256",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5df94d5c-09d3-4321-9ac2-46d57732942d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cd2630-ef31-48c6-b2bd-23ee29605323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e11071aa-1b47-487c-99df-63b103b9b112"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85267c26-85ef-4164-879a-0f8557e078b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "084bcb9e-9201-4775-a173-425f43e3c265"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbd1c26f-9c1f-49ab-939f-53b1be76d72e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bafe049-83a6-4dfc-ae8c-fe853a4829aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b97cd159-ef11-4386-a8f5-7b484bd2135e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dbb38c94-f6e3-4733-a33c-13d81c63a37c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ac742bc-9983-488b-9104-b2243605bb82",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79bf36b5-6a5e-4b56-9aa4-b983d4288b9e"
            }
          }
        ]
      },
      {
        "id": "b7853014-ac2e-4961-b807-a6ab5cea72c5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d9d4f3dd-01fb-43fd-8285-f372063210ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e03ecc5-e2c4-420e-9b1a-a5e872123cb6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e5b69b37-68ee-4c77-b193-41b0cf054a8d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1145aff3-846f-4724-9960-527f6a9b8235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750d9fe2-be34-4fb1-8edd-60c633faaebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd926cf-896e-4021-aa59-1bbe1a3407b3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634e1821-a162-4a4e-b68a-6e0554dd9368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c578e6-0417-4611-947f-710c25e94047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9305e493-09ad-4b33-a835-f179bbdaa74e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03d5358-fe75-4798-960f-aad5003f47da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b760c987-68b7-49bb-a972-dc4856056239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579dc8dc-b4a9-4b4e-80d5-3cec783ff2ad",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75af88e3-ea09-408b-b466-1807cb9d7a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77d9cdc-f89a-4f99-abc0-4f5079fd8ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab2b8ee-83d7-4ed0-9521-84f3b9b6b1a0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba6a1f7-4d5b-4f6d-9ffb-1e7c97f9cce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5037ccec-b8e0-45fe-8465-617be5eb6294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02ec91d-d9c2-4b51-a32d-80be5e109123",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8dca842-e3ea-4e20-b794-55544ee3096a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14a0904-7d93-4976-98e9-86fc085d1041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e973fc9f-025a-459f-9ed2-a8bf681d5da5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418a8436-099d-4b8d-8a3f-8704265b9dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c52c8e-7e48-4b97-9132-50c968107ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bed2fa-15ab-425d-a449-64d1878da312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72d4f37-4a10-4ace-82ec-c5908a2257be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091467e0-72af-4957-ac4b-6114b8e7ca99",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8302b00f-bd97-45b5-bacc-47d0bf51801d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b6251ad-c867-4485-9c6d-ef2aa113a7b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f363fbd6-a3ef-4d3f-880d-201a9ca6a5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f191610-0a70-4918-b6e0-ad0b1b6a0eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f93f028-cca1-4e3a-8a8e-a293dfe905e8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7caadef9-cb56-4c0b-95c5-02e6e634642e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3ab07e1-2f76-4ed7-9292-f9c1110bab5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06992f7-b037-4e1b-b9a0-0a3538e29d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de9c31b-0c24-4ed1-a492-146acf476de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e6799f-9890-47c4-8af3-3deb060472cc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f849f4-e957-432f-ba6d-b292e472a54e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d21d64d3-a044-4b96-9363-debc42d192c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4318da-80a3-4a23-90de-95f86ce90f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673136e2-ce4c-4c28-9e7f-8f943aa45fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5ea148-08d0-4d65-9901-c5f0a4c8a877",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb97c91-c0e5-4862-bbb1-6da1cc153650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38bf31b7-287b-4841-bfc2-384b496aa7e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc3cd9e-7b32-49c7-a1dc-ee630dcc2bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622c987b-2c5c-452a-b14d-b4aa2e3216f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374a9a02-fab1-4b06-aae2-d9519427e9b7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fae05d-90f2-4682-85f2-f20ca9b8d286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26dffb15-41cf-4018-8076-5c94922a9d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2882ffc1-75d9-46c0-a93e-643f02e35bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0f2242-4d19-4128-bc6c-f90327a0e0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbed1cb9-19df-429b-8208-6aefee5a1d5a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c3a900-518c-483b-9d25-08781d79c59f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "718d8b1d-42a0-40d4-be2a-a095218d817c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70d3f47-bfdb-4ba7-a4f3-99c03a44e9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf58dc4-dbc8-47f5-8da4-7cfbe7241934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c89e96a-3832-4fbb-bee0-b3bc1f380a1f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae9b6da-e079-4bc6-8126-6555729e2d30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93ee8297-cd5e-482f-b1cd-f4ecd234cf4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe2b834-ee75-493e-bbb8-7f9f0b6e9adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b844be82-85c4-492f-a3bc-693a6af42f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb11afd-1e05-4be0-9929-d4f08748fa48",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd63314b-329e-491a-a7f2-e382fd105d8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81af3c51-b848-4443-921c-d158bc220030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a0a995-6541-4b6a-8fb5-d1b4669fca9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e798196a-6ee5-41fd-b5a7-23b906ed02ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21fe0f3e-ba80-4d06-853c-804b97373cc2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad4fb47-c6fa-4cfd-80a2-b49d4b1b0848",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2db6ac6c-99a4-4c69-a3ba-cc6d15326d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db4f7f0-b23f-42e9-b87c-54a82e095bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b3aa93-35d7-498d-bca2-fe05df0f3b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f79f1e-a543-4a29-98a5-746ad7eeb1de",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53521352-8e6e-4f45-a687-5e75bfd2b98b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43993efe-c636-4ac2-8a80-51178764439a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b04cccf-146a-4ab3-afea-e5ef85387d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6c19fa-3060-49c8-b842-edaba9c23ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe74da4-837d-4bda-ad97-a4e4bf941196",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc358588-64f7-457a-8dcf-7a8c51fdbfc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14812c35-20b3-42f1-96c9-88e3f6a84ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8be527-eb45-4808-b7c4-86f012f4b635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31273672-7a83-4ffc-8125-f3356e331321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0b0694-ecb4-4927-9b5b-f6efa23f6e67",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e58a55-caf2-4285-b544-d15423db30e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da325f89-933e-4656-a039-749200d98a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f669208-66e8-4438-9741-7b56fc6900f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81b947a-5360-42e7-b345-93221cb680a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af48500-6443-42df-8c9e-0c75d52741dc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae60700-f253-4c51-9e86-976cc77b1a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749c55dc-8c43-404d-b1bb-85fd3e472057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53f802e-c252-482a-8860-b1b598d90f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae076cef-b057-4e43-a77e-8ea9fa3c82bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba8cdc5-17e4-48ef-9ce3-e4cd7ad8210b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2bd4a4-38d1-40f5-9e7c-a2471d895d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ce3290-b349-4455-a9c6-43e3272e99be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f21d640-3080-4e98-a419-e925b21767aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b63c76-205d-459b-940a-f14eefac54b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc744e54-1ba2-4ac5-88f2-7e739a84a40b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1e3899-cfa6-4913-b189-fc7b6d5011b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61d6267-5ca1-4263-bf35-6b6671fd6f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fc2323-3004-4485-8407-56ab56a96fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241c5a84-4c2a-4da9-84ad-f6f7aeaffd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20718bfd-2fe4-4864-9f6e-b2525c7eafdf",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3979c79-9c16-479d-8a6f-6872078c562d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619fbce7-d9d4-447f-86e6-a64cd0d2de3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1d5c98-f951-4b30-869f-a5b20bf16c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d6c274-7185-42db-af79-47d5e766262c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d9dfb1-6e4d-49ae-910b-433e2b50a7f7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1731738-e725-41a1-83b0-6040d13fcdfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02d43a3c-aaf3-4da5-a5c8-b7f021456866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e342f9f4-1ca4-47dd-9438-b5d8037f47b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442662fa-de09-4cac-b457-3b1e7245d12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed1c20c-d40b-466a-a7a4-ee1f1ccc9557",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d244973e-8a3f-4bd6-837b-943e44c1c561",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b29c914b-0323-430f-ac1a-a4a5dc76b117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e263644-d35f-40af-8a13-372ee953fc5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c26544a-6195-4613-8c27-5e233f4f129b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142cacdb-1d07-434c-a022-f3ead3c3395a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd572e6-e4d0-4d1f-aa52-b79879e00d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52109cfa-174f-492f-adbf-b097cdc9f513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa82abe6-1593-4161-932d-edf2a17321c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca146f4-781b-490f-9140-6062651f1cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271b9e42-1b81-46cc-bf71-d4255ecc28a5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522a36f1-94af-482f-9606-21c365d62e44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beac50fc-f4cf-411d-adc4-af8c7f3014fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac9e01d-de8a-4115-948f-b30972a3334d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9107f311-c948-4593-937e-ba89cb318ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa931a2-fa82-472d-89d7-1191de860ef6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4949302-f3d0-42bd-9bc2-1eed413f7dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd822672-ae31-40d5-8c6a-a42c79081cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2903a935-2966-4aa0-ac0c-052f040dc6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cff5280-2b7f-47d1-92b5-d6abbc5291ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21696e01-b35d-42e0-8fd3-108f0eb66efc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fc1311-e2b9-4376-9fe6-b9851078feee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db8f31b5-a878-412e-aefd-b9d205fa11c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace99403-f1c4-4eae-9a0c-af1f64370503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1bf396-f54f-4c25-85e5-6cb2f1900c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9a33a2-0f29-4ced-9482-6b47f3fa234a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55d7b10-1b7b-4554-8b12-b2510057c3bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bc96407-551c-4854-821f-907aa0984270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "637c6126-3f72-4c1a-99a6-0dc85df463b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4b3220-b92d-4d3f-8e8d-16cca27713fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0a9f84-ac8a-4e9f-a8e8-723cd9be9d42",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c71af72-7d0f-4c5b-9493-2f181a6e402e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f90abbe-e74f-4947-ad3b-f5abc486a235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4a567d-d494-4971-b666-eaee375ee18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96699161-cc64-4e0f-a0ff-5ebb234e49d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a3c4e5-8ae7-4bca-9d2b-9745222f2335",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f350ce-fbea-4f3b-a3d2-c8c3a27c6888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f429e591-a8a9-4fe3-9eb8-a6a672eb6b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f19f07-46dc-4337-9690-eb4a062229b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205be932-e472-4745-9796-4248cc0b3326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcedd63-b5d5-476e-a42f-84d344e05ad7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf8105a-c262-4349-bae1-a33c06380a79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b695086-3e11-42f7-8fb0-6da7a7cd9545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3625e5e3-d744-4576-a1e2-1a57c1e7392e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a5b653-8787-440b-a4c2-424f781ee982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f044260c-f725-42ae-9450-84daa1841427",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce51e217-bb42-4775-b0db-9d0bd63058d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4274a86b-bb3c-4975-8f55-6e021d3b7bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de13840f-8eb6-452d-b188-a8c583a20c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7dfba1-ff09-4f4e-a876-6ed605d4d36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e923f42b-13ec-4a67-bc71-c8b064bb0cc8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055b68f3-46d8-483f-9aa3-ceef7718280b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d3b53f-8af4-459f-994a-b4eac7d20a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614d7827-3443-4e17-99d3-bb0b078a6e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a752f1a9-c968-4708-a6e5-ca5f3c141474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4995b9-ba8c-4748-a902-ac2e4b00d409",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41a848f-9f43-408b-b065-4641744b9906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b73de1-3642-4afd-a302-34bd7e68536d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb698870-4306-437c-a8c0-0f7a77a74728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f0e719-c996-4e73-aba1-ba32775034f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1396c7-e0ec-43a9-8835-bbe47191f738",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad602db8-855e-468f-a797-52a6be0acf41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9acf4eb8-5d3d-45da-89df-269e0da36348"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23687e4-fa77-4f9c-8ef3-4f750cc8fe98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098054fe-6b61-4573-a376-162648afbdca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44274432-05b1-4a97-aa76-133a92d2ccc9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae426d3-8b82-4c9b-b815-52bec46d2ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1194408-f8d6-4032-9e4b-202971ef4dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a9a4fa-f0be-4df9-9d79-daa1e00f51a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b16615-559d-47f8-81cc-b5078ab520cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf74260-428f-40bd-ab03-603568e4d5f9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d91f93-a4f5-45c6-bee1-050f1fae97a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0767a2-f8b0-4c15-985b-396caf4e4ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3f654a-a035-43eb-b9d1-1d5933628db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d1b408-3959-4c6c-8b33-dd20c2ae20ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f2b34b-865f-4b50-869c-3ea0e2ada54a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fae782-a944-4071-a9dc-7fd2ae11e26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e44e2e-9175-4dd8-ba05-89130bb53cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc7d6cc-ecb4-41b4-9f4b-248b5227b1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d75a139-8fe7-4f1a-8ed3-24992534db07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231dd731-d52c-4572-978d-62b1f9934503",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2903e2c4-0e21-43dd-b3bd-ee7f9afc73df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2c3940-489b-423e-87ad-21ad40e9c8be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed89734-a120-4388-ac0f-1b0c8efe5695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3ff19e-b035-4b17-9a37-d7fd73b85ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf79abc5-b264-4780-b7cc-5a0522217b97",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c82d1c1-c7e9-4e03-8f21-b5d091b5cdb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312d2d42-cc1b-483e-b6b1-babcac115844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "469d0bf9-565e-4a89-b868-cf02bb2eac21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c929a59e-ac21-4629-9212-d46b1d353fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c854b9e-bbbf-4cb0-a9da-01f05db8b0b4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f90c310-6d1b-404c-b999-c46b0c58c168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f828550-6dec-4743-af9d-dec563d93467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "051dcb3b-b472-4b7c-ae31-bff1b5ce2e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d409db3a-cbe7-4599-b1ec-d75369c65428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a433a971-c2a7-482f-a8ff-a3f677f614b0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda3b1c8-121e-4ff4-807a-7f848ea4588c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6d8ff9-55e7-4a14-a1f5-fbee8cfc08ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96efe47b-a83f-4f66-abe2-9498b08cd8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9704b368-0c38-442a-a931-1a070b74f792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99e433d-d7ff-4817-9dcd-62612e9a4a49",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbeb04b-5387-4bb1-9374-809eb2a74d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00be94a9-7e34-4297-96a4-29d95df08987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81158551-c9ff-4a2c-8500-86068eb37e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac2fc0f-14de-4a04-b930-56742c7e7481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7529184d-2008-4629-8c7a-a2aace26244b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd459460-e246-41e5-9ca7-9d84c25f649e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d771228-2c82-4b0c-857c-f5796cd1a94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e697caa-0329-4b44-af4e-b24a8891c64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c256b855-2961-421d-87b6-c57cfbf01b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46930469-2df8-4ecf-9194-2a59202b4f15",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53210ca-619a-43c7-b800-0f37d48fa5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134331ef-400e-448b-9a87-ea2c649e88bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5004d50-f03b-42ea-a397-6efb83a567ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f344b7b8-574d-48f2-85e3-fc166a0a28e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdc38a0-35a2-4882-a488-f91bc1fb1e4b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71c1052-4eca-4380-a5a5-63c6fc1c1bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac561c9-4aa7-4342-8519-34a695ab799e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6511823-79e3-4f62-ab77-1a1a69feabed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1599ad-e77c-4543-b4ad-523ee626fe6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa49bec-af83-463d-b237-6e5189c35e5c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37f2f95-cc5c-444d-bfec-51e8b97c87e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a59137-7b28-4e4d-91a6-dbe5c88b2a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b096fb46-5c00-4a4a-b227-dc4271abfe4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d329cc5-c0fd-4895-ad76-bebb2e23b673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e88b74b-8549-42da-8813-737b7d19393f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6646aebe-6bb3-4fe5-b6b6-d2cb953f48ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0665763-710d-4347-b6da-cf6ec874402c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e82a486-cb18-4f60-abd5-df5f4f256604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a0dbfd-77cb-4270-ba10-33d38dbee7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a00201b-5855-4201-b667-b9cbb0bea628",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c814a6f4-0f4a-4038-b1ae-ce0a327d1554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c48260f-e3bf-4d69-af28-4eb0b68839d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0d1005-e8e2-4374-99da-5ecec259f3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29edd7a1-8d29-47c3-aa76-a798097dcf45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2978a56b-3d5e-44fa-be13-c4b857e0a7f5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fffbd0-812b-4ed1-ac37-4477312d1064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0712c688-5bcd-4ffa-846a-c11a674d9b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10fa116-e925-406f-ab94-3d9f841e6932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a481a0-5b66-4d43-a6c2-138a2320ba4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fea2918-330c-438d-9e76-3ccc92c0b561",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1cb206-7961-4569-8176-b8c3d193321a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7de613d-fe63-44a9-ad2d-585fde1ed722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0616ecc-474d-4ef3-a62f-6737c9261c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49330974-8885-4fee-b948-bfc37dd4cf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fb2cd5-d1c8-4969-a626-77a776f9f44f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aafe03c-aa74-4566-acbb-bf7457e15971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0ec82c-ffbf-4a99-b09e-3c962a65998e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678f4c64-e25f-45c1-8e81-07927375b081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2ca24f-2f1e-4ec8-9a88-0144574b6e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f77451f-392d-47b2-886b-f8d9aac1f84c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c8ac98-610c-41e5-93bc-57d03ac2379a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86df22e7-db4c-45ad-b03f-dacc1118e90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef80f65e-89d3-4b46-8e8b-8aebf77b5d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518a6c42-a4bf-41c4-b4e4-64ef0135e419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d3cd2b-1f17-45ef-b249-580b75267b29",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752bf71b-30f0-44fb-9c05-f4d6a76d2b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2500abd4-a51e-44c0-84b9-776bafcde5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1a8c53-d399-4982-a4f7-ea0ac6a584b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b84f8d0-1ea0-4560-89ac-6b88af32e79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b47728f-fd5d-4892-8ac7-61ef40de6afa",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afaccc8-bd7d-4fa0-b7a9-2d22aec1f6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706dbfa8-265b-4484-9d20-0d3c99c92621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c528325-d009-4889-9043-4566582e8b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d22584b-4502-4dd2-841d-e1f143e516ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae94b6ef-2566-40bd-ad32-69af327cc41f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148c8f88-1039-4eb8-8317-07608060a2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7b059c-fcc4-4450-a6d9-8634f71808e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bf77e0-4c48-4223-9bd0-00a2171e57d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95deaaa-3f8a-40d8-9015-900267bb3b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf700f1-8f5b-45be-95a8-385b572375be",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b593ab-17ce-4859-bd35-3a7153ee8b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04042be4-1382-4cdb-9ab7-2d0657509dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff239d0-2b82-4411-85dd-b19dd46d6570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3507f12-f9d6-4c7b-8089-dee7b5e08ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d7b5e4-2083-47f8-b740-5cd6dd26d910",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4815bc3-5b90-4172-a1a6-436785aafa5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ea192f-3c1e-48ac-8e93-cf61b163d1e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209a1571-d0d5-44c7-b37b-4f94d593122b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630e5f4a-9019-4bb7-82ce-84637cabb823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370d7bcf-3bf4-46f5-a910-003313f48b12",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c42643b-c4ae-44ee-b351-51e296f4c843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505a5ec5-065e-42ae-a515-0e1ac8c85dc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f9ce8c-8c9f-4783-b15f-15beb00fa43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951a220b-9343-4d89-84d5-76ad19a2bed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62d61ad-ebf9-4293-9b47-ce5e351069a0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2674e30c-c988-46fc-b45d-0ca7f19c0e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d65a8f5-3458-4e7d-8d41-4104293e1d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455ccd06-f449-435b-aac6-a725d3de0786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedd81a2-8525-4609-adc0-3e2138a3176e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb45196d-3c00-4ff3-8f77-6a793f136b4b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07205b43-1848-4dde-a329-0a647b3057ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb234916-306d-431a-acee-6dc4ba59312b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd6361d-127e-4175-9413-992c52ce7d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba72f1bd-e9ea-413a-a70d-5e93c3d4371b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308553ba-7b27-4516-8693-a4f4f7fc5b68",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd80ba7-5f40-4c54-a806-d24d978e941c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91e6d80e-b11c-4d79-b437-6168899bf63f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33bb094-c553-48ab-9062-7b6699f0fb84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d702ff33-33dd-4391-8ed9-71d23929bcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a378237-2e16-483d-a522-b8366d400822",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ff8580-ca85-4add-b04a-08360c2fd642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d0f8504-8206-4fbe-be79-6fbdf5e9b733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d687cf67-ad65-4b2b-88eb-dc8aa3bbe8a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426fa2b1-9c9a-4466-b902-358fcebc4288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ff6419-f535-434d-8b2c-bedeb225f6f2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c395befa-93f1-4ca9-afd6-07c17657a184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7660970c-8240-48b4-8535-6a9dedc6ed1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbbf89b-bf66-4e40-a8d5-6c4a61e28d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2b884b-0a35-4bb6-a67f-a7f0be9e3547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae8479e-31aa-4f18-b354-c8b221693ffa",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f86948c-dad5-4cc7-84ed-695520fe4b36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a152a65-cbba-4446-b770-8cfedc7b73f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6413c3-8c8f-41e1-9061-21b3fe902ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08c1fb9-abdf-4f5b-8b67-b7c2122da8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb4bd43-f9b7-406e-838f-d56ef97f872e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de02167-c3dc-401e-a1a8-def07e674f9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c2520ea-aa42-4dbc-99d8-c90989e56dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f64343-91e4-4b4c-bfcb-4f07b91fb9ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279c7140-13a6-404f-85f2-e57e1743595e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34fb3ab-7519-4497-9638-a0e49b1c7c79",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356a31f4-c453-4183-b9f5-a88a28a424d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35407540-4ed4-41b7-a55d-c6c9482efb10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c456a4-9eb0-4e6e-8a7d-9e122cbcdcce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c92ca3-bc4c-416c-8c66-4d1e49ec9480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3045587e-5e15-4838-b88d-8d16f5ea89db",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2630a771-b4a1-4abc-8e92-cd9b1859eb8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6ef0ae7-69ce-4291-bfcc-e51584852e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998464af-a27d-46f6-a696-cd98a96bede3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014c16ef-e9b0-44ee-b78e-11cd53c974c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cd4604-0307-4d8f-90a9-9632597275d8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5400974-546d-40c3-abd5-abe9d737c2e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4fa8202-a0be-4e9f-87a5-caf839b82c68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0b7a14-e887-4eed-a8af-0b4ec2f4ae95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f99d80-5c50-41cb-ae8a-eca710999cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c616be8-fd76-404e-aa80-d237f4166249",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e52452-5f65-4583-ab21-a643b3a5e5d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8633f71-7622-4fc8-8cdc-fb556ba56df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee01116-a5dc-4308-8a8c-40661cfe0709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9984c94c-8079-45b3-92b8-8eaeb54c15f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336384d6-2b35-4f15-b710-bf197d040067",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77448083-4cae-47b5-ae01-b03923d3680c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "970783ea-0ef1-4e11-af8d-b26410ac6375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce4fe30-a6af-4bfc-91e4-05a6c53570da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01bf187b-b2ab-4ef9-87c8-9a931bd0b72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53df4a6-e1f3-4697-a652-67ca24f0e372",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e71ebc6-16c9-4046-9368-38164b6cf05b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f62da7a9-bfb7-4735-ba48-a685889b5171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f0d5f3-8734-47bf-ba5e-4e920adfa882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c974f2cb-6c5d-40b7-88a3-037b3d54784f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d03934-83b7-4a45-9b82-5d57004ee8cb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6572511c-1d76-417e-a721-f043164cee89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c1c30ff-5a45-4a73-8b18-52803ff5ce52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c954b81-247e-4d00-a0c2-75087b06f769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e3c27a-0647-4d1d-b6d0-efd70ad286c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77734766-1511-43d6-a3e4-73ccf54268ea",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4584d7-b887-4c17-aa12-f59eda4c2908",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8298dc28-933a-4fa3-b28d-a691b591d84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c64899-3efa-441b-a0ec-82e95c1edf3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d54a9c2-249e-4a6f-9b28-de84f9dee0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f56f17c-6b6c-4d96-b916-e2ae46a37435",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dbae77-3c05-4012-a22c-28d44bf4973d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9730739f-15c9-4bbd-bd88-b554d9ceae1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aac34f2-73db-4809-956c-4c499c524b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86eb6f86-f53e-4e63-bda9-20f32ed7da73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea3ffb0-6b90-4af9-930d-ae1a29e6ffe5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2459c14f-87ab-472a-a75e-acbd29a9b338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63444cef-c1b1-4d7f-af42-9d1d9c49ec58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f1dca5-8f19-4562-b583-3f9c508eb150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4756b912-1236-4b20-a462-7b483e35ff16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6c5b07-c7be-4847-b6e4-97ccd96dc35a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114c0626-ac13-49ec-baf3-633373b2ccfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0559673d-e43e-42fc-beb1-007cdcbab1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855aa5be-dc4a-4750-ae6c-16ec5e8af135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45642dc4-95da-4cce-9e7f-294dc590e5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2d46cc-48ec-4403-801d-6763148f6094",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b96f40e-80a9-4b7b-ae91-e689876820e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f46ee2f-1bd6-43a9-8357-05bfcfa0c909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c29a723-da6a-4549-a0f5-706967db8ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e9d4ef-fee6-4d5e-9dab-463afa01a2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3addbc7b-c6b0-4a23-90b4-e1825fe353fc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dfb890-6761-40db-9c12-a2a49996c091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdb7eac4-a9a1-480a-a6a2-42bbf224ceae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64ec374-7f41-4020-aa90-633cbc505953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d65148-0446-4ea0-9441-671538647102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe193c6c-7ed2-40d3-86bf-614ec10873a6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a901c6-2d36-46eb-9a9f-fc298a1c4c4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7db8992d-43d7-4aef-87c7-899dc710697a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbe0f85-437d-4767-868a-b977d3da262d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4d1151-cae6-4947-9fe9-c6f1b0a6bdaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f1e765-9573-4225-a44d-be4557e62a72",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2e7858-6b63-4bf1-b069-b7482925715a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "539d8723-4236-4ff4-8ab8-49431f164840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "964d46ab-7952-4bc2-9277-767d9e0ed7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912c0621-8826-45a7-a217-6394d8270214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc24317-df95-44c6-85d9-8ea73fdc0ddd",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a081f6-49b2-4725-90e1-b1efea2121ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c5054e7-9906-4ff7-b3fd-0016c4ad810f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacb0cbb-bff9-49bf-9b01-05a785882954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b66ee14-e1aa-48bf-9866-93cda4d9577e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4d6a1f-cb7c-493e-bfb0-6a5ade0d0f8c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696d1f7b-12fc-45aa-8635-049b04d50d57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d17ff124-7d71-4562-b6cc-19094a2116d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02cb8ba-98e6-4ab4-8948-9f89fe92aedd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44915f99-8b71-4951-8c39-9dc493e2f0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59b15ca-88c1-438e-8c04-8e8a4f3df90f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655ece3a-b1a0-4351-8afb-d8e9afb43e3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c88dc90-7d11-427a-9d68-a4e8af9964d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221a0389-18e0-41a3-bcf5-bad356a4aad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd19648-9df2-4e2e-98f5-881b3e7c46f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576453c5-5608-4ee2-b6d4-fb5174e1610d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1cbfdf-2f71-40ee-a408-45a8fe9f931c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1531d773-7a95-469f-8e04-6b51675c10a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc24e77-704d-4524-b120-5e7f458435a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5402c832-b624-4431-ba83-36ec4e854cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c583510e-1f1e-4652-aea7-0d8826bc4a4f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87918cc-4917-4afa-aabf-bd0aecac370d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "481b12d4-b7ba-430c-9420-7f13b326771d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ade648-e98d-4c42-b1b6-a6e966acc7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105e8f5a-47ec-43ac-a360-97b76cc9f2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3ff335-012a-4b06-a6dc-ab6c3b6fa04b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc71a6e-8cf0-4457-8ece-059174ab4bf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "415e3216-d118-46f6-b2cd-e93135d02744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bcdc6f-edef-4bc0-aa8e-5f074c5b9f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6e911c-748e-4a94-ae50-e0ebd53c5229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de8dfed-df6b-4343-b74c-5e2826213761",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b90bd06-9093-4cbb-b0db-55ff28882cef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6289f78-ab1a-4b10-b838-11bed66d3a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b98be0-8dbf-44ec-8223-0f856e98213a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd882c4-21ae-496c-9f7c-dc61e491950f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ae03f5-752a-4b32-8625-067aaaf6bfd6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f402a4cd-1142-41e8-9c81-3d459f24e8ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fab924fb-71c3-479d-82f6-fc77dc765e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624f6d42-2430-434e-827b-4af605131f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3342edc2-1e1d-4720-88dd-213eda5e3d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdc8ca1-6387-420d-9b81-6ad5642d320d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ab849d-6727-42ec-82a4-129b7ad12157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18c4dc7f-88da-4855-91e3-2d36186f6e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e7c388-4457-4bce-ae34-3f9dc95d25c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc16c760-bc0c-4923-a0a4-0354cd82a75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d85cc56-c562-4eaa-8c88-440853360521",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bfe6a1-d598-42d4-b3b0-96182edd1ead",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "056703a2-80ad-4712-9157-29133cc03484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814b1906-34ea-4aef-92eb-962a4a23edac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f7910a-1716-491a-aa02-1d9c1256a4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d359ca0c-b47e-4fe5-bccc-c3abd2c3812b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0a7459-5918-49f1-bb09-7f47b9122e67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f0eba72-6869-4c0f-bc44-b587e8b4d6ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0486930-55db-4afa-afb7-316d1f5b79dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3befdc83-7394-49ff-8711-2c7bbcda62a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7b808a-411d-4d67-a3bd-e9039f7fda59",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db046a61-fe55-4421-9095-1c1d9e4b1c11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77f82fbb-156c-4386-b41e-6b513318f2eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0f3da6-7b50-40b4-a237-dcf347f8fb91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984e3227-1ba1-4e5d-8bd2-d2c7e42feee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c29adb-3d71-4434-b377-eb916154b1a4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbee5f43-b14f-47d0-92e6-8f9e2ef9a4ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79d135b8-cb66-4c24-a327-2487b7002dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ff11a6-df87-4dda-9c13-dbaead44a751",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb4e5c3-8f27-47e4-aed2-4826c13deeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65846e7d-ec8a-41dd-910d-31c920cd03fd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06a30a0-1a8b-4d67-8246-b912d5722074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5c5e264-c571-4e32-a688-43a81e1392d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef22ac32-8cdc-4a48-bfae-b4155e23ae9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2a9163-fd55-4750-997f-34dbf4575faa"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a00caf74-8657-4650-bc7e-ec689dc72c2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0438b04-ddcd-4f9e-bd85-4ff328acb259"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61cee84f-5d18-4f01-8a46-29f84a97969c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0338357-446e-4fc4-8d75-b53b1ebcf8f8"
                    }
                  }
                ]
              },
              {
                "id": "b211dde6-4055-4d81-a728-63cdc4a910af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78d66f3a-ee96-4d13-a1ea-9d3682b96f4d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e90d9cf-4162-4410-b23d-ac35a6a8726d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "503623dd-b418-4c1f-a427-933ae7328c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2b1edb-43bc-4220-adbd-ac9e1ab76c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "974bb7b1-036e-4af8-b16b-927d9884e0e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5476e72d-4949-4f1f-a5ac-17dc1e83d323",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70465c08-d2eb-441c-a801-1c54365fb9f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8cae04d-d405-41a3-b169-f73e718a26f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "393c9488-356e-47dd-9c00-143b661c121c"
                    }
                  }
                ]
              },
              {
                "id": "6b4f2d95-6b1b-48ad-8d17-121980b9c62f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "068de12b-dad6-4dc1-9082-70aaf52d498e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1cf63ed-482c-47d8-bd92-8e4228303c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0aaabc60-0785-4c84-afe2-5d09e2e9413e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f26030-8a5c-4208-9a9c-64316e9e6208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ebef78-308d-484c-8455-1377c1e6f6d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c3fa7944-5447-4eef-a21d-db48812c346f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "78ec3a40-9488-48ef-b485-ceac2afc87a1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29fefefb-a87e-4e1f-894d-978a764d065c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b6561a41-b1fb-4710-929b-681f221286c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b199e177-3b8e-40b7-b29c-70e6441790de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cdfc431-daeb-4d01-a147-e57c15c89390"
                    }
                  }
                ]
              },
              {
                "id": "2fd9e20b-3c66-429d-bc47-f14b13bba9be",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3dd2339a-08c5-4035-8661-60ca47538d95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "52d839c9-bf34-426b-bf36-4e2f7404fcfe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34c0ccb9-eb70-4335-8bbd-a1dec721d659",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d01d081-29c5-434c-8e65-be8626bca06a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "237ccbe7-9e46-4911-86fb-1431056c3465",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bcf9b823-6351-49b3-b4c2-aafa80e90794"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43f9a0ec-c2ac-4c71-8b36-ea815ce0d658",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "290ef7bc-c0ac-42f7-80bc-29c3d3305c8e"
            }
          }
        ]
      },
      {
        "id": "01de57ec-0303-48de-a25f-1e648a057dc7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e1f2025e-8a13-48d6-9aa7-8ed843950e5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d24923d-2aa7-4d20-9c09-1637b5bf31ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b06a7c0-9f15-4cbb-a11a-c66d099a72dd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9137e8e7-b440-4099-94a2-9a68ee84a41c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8af7a802-39ab-41cc-9519-2c1b4a6638f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ac08cd-fa18-453d-a244-7843122941a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4799248-9689-4728-b52a-e367f0c8d743"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e33c14a-f576-4238-8e7c-fc78cc4f0d9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbaadde3-95e3-4d62-92c9-7822c87f5879"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "438ac41b-78de-4d7e-a774-478873a3c470",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00b42816-7d7c-4b56-9581-2deec6b427a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f556c8dc-7dc4-4cd8-8d99-66fe1cdd2b13",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3c38455d-d297-497c-b823-1e4c3a7575b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f897c27-b6a6-4b69-bc68-5c45f9085836",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee3c240f-ed13-4ea3-93ca-507d9a4a77db"
            }
          }
        ]
      },
      {
        "id": "4ebfff3a-4284-4998-a50c-a9677c80d77d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e8b513c2-fcb8-426b-b4b2-7f1188430947",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f4d0fc1-2ee1-4255-ad29-89fc76a1868e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3885d798-0f81-411f-8df9-543713ca793f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63b29af-481d-4120-8035-34df825fec92",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "971319e9-2164-44fc-b847-56412741da90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d76db23-252f-4de3-b38a-403cac71c756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37175957-19c9-4d10-a3f7-cb595c7edec9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "785f3752-8e87-43a5-9f0c-b30135aa65eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "333206fa-4bf1-4ba5-9828-f2efdd6575f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0611ee9-dbf2-488a-af3f-c7f9266762ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4d6472d-a4ac-436b-baa4-be7810a406e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "855b25b2-e6c6-4dbc-8e7e-cac3433f692d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60abbf3c-0287-4edb-a5c5-aca38979d669"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bf0f8a5-e8f3-484c-a5d9-cdc44dada4b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fcb05204-4dce-4dce-a57a-82535813b46a"
            }
          }
        ]
      },
      {
        "id": "dd90d2af-5555-41e7-80fc-56ada10100a4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7f067d0e-0f14-4a04-ac00-b030a042be37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82a379b7-6cad-4cd0-9146-a3644cc3cf5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a659b0b2-392e-4e52-b662-cab170296168",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35223f1d-4c8d-4eb8-80ce-bd2b557d8433",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "533aca5f-7603-4428-9ffb-7e5cad2de9f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4077a9fc-bc3e-486e-9706-5e84aae7f667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc54553f-291f-4c17-bdb5-3a39cd623cdd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9683b3a6-bac6-401a-ac4c-9bc94d9c191a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81427b79-7ffb-455e-9701-c55cae00769f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bca15427-3d9b-413e-b448-a1b94e1ed990",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd22014b-1c65-4b70-8b4e-bdb314916784"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6be0e892-3ebb-4390-8653-cc6184d32952",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa61eeed-8f93-4079-bd52-47d09f663738"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "195da446-c9f6-4071-8b64-734ab1d3c55a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98d57891-4853-4f45-b4bd-380ac4709b35"
            }
          }
        ]
      },
      {
        "id": "cd568cd7-54c6-4d52-86b8-f63d6cf6215d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fe2fab3-9f25-496b-b43f-5332c6239de3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ae4a0a8-7bdf-4324-bee6-70f6bf5ce80f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5d682258-1ced-4fe6-931d-95da93f89f80",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2c95ff1-b464-402d-80df-5f565807e33e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8fc75be-824d-45bd-9845-5cff291e5bf1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 113.44912280701753,
      "responseMin": 8,
      "responseMax": 9886,
      "responseSd": 668.4841887205758,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700094939323,
      "completed": 1700094980685
    },
    "executions": [
      {
        "id": "cc562e55-db6d-47a3-a9b3-6fe9844c5de9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "daebd941-20e4-462a-9081-24d009629e88",
          "httpRequestId": "7a1e7968-8d5f-45aa-ad1e-a93efd878dd2"
        },
        "item": {
          "id": "cc562e55-db6d-47a3-a9b3-6fe9844c5de9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d3afccad-e11c-4309-bda9-9c2849dd3e41",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "d2eb6403-a966-47d4-aa11-7e3a3babc58e",
        "cursor": {
          "ref": "525a6dfe-8521-481e-bfe2-f4fdefa60c58",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ef9eec8a-3f57-41da-bd76-ebb6b38efb98"
        },
        "item": {
          "id": "d2eb6403-a966-47d4-aa11-7e3a3babc58e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "daad1bcd-72e6-405f-93fa-383436388eae",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "057e2555-296a-4a57-a801-d4e3435d0e53",
        "cursor": {
          "ref": "5979a97e-2411-433b-a7d0-241f3fa5e314",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "62acd711-5a58-494c-acec-636bd31f7bf7"
        },
        "item": {
          "id": "057e2555-296a-4a57-a801-d4e3435d0e53",
          "name": "did_json"
        },
        "response": {
          "id": "b9e234ed-867c-4fbd-bb72-3f89abdc9604",
          "status": "OK",
          "code": 200,
          "responseTime": 566,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49ea5d8-a5cc-483f-800e-1962795ab25c",
        "cursor": {
          "ref": "05a9149a-cf4b-4506-89fa-4fdfc96e8a38",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "472e5aae-6f80-4532-91b5-a1c931920636"
        },
        "item": {
          "id": "c49ea5d8-a5cc-483f-800e-1962795ab25c",
          "name": "did:invalid"
        },
        "response": {
          "id": "c692c4df-0f30-4841-9a0f-0ef4a28d67cd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 920,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49ea5d8-a5cc-483f-800e-1962795ab25c",
        "cursor": {
          "ref": "05a9149a-cf4b-4506-89fa-4fdfc96e8a38",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "472e5aae-6f80-4532-91b5-a1c931920636"
        },
        "item": {
          "id": "c49ea5d8-a5cc-483f-800e-1962795ab25c",
          "name": "did:invalid"
        },
        "response": {
          "id": "c692c4df-0f30-4841-9a0f-0ef4a28d67cd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 920,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d90413-8d3b-4c28-b206-b4d0570c2f57",
        "cursor": {
          "ref": "4beb8113-eb22-4cdf-86a8-3cca6c8111d5",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0170c0f3-2a57-4e47-b467-e2e94dc98749"
        },
        "item": {
          "id": "76d90413-8d3b-4c28-b206-b4d0570c2f57",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7634aa62-6c4c-4ff1-b4f3-3c99bedc3e07",
          "status": "Not Found",
          "code": 404,
          "responseTime": 123,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfef7d5-925c-4f71-98b2-04ce15b42cf4",
        "cursor": {
          "ref": "8c940c51-cf63-4597-b424-e9033a6fef21",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2cd64580-8c1c-4dfe-b0d3-737fa8c625c1"
        },
        "item": {
          "id": "ebfef7d5-925c-4f71-98b2-04ce15b42cf4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "59727f0b-43bf-4176-b666-801f748bc215",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb3fb87-66da-4611-8777-b93efdf805ed",
        "cursor": {
          "ref": "c9a85bc5-fcb6-44b6-af41-cda88bcda1b8",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9d7f3289-b054-42ea-a3e3-97e5914f489b"
        },
        "item": {
          "id": "0fb3fb87-66da-4611-8777-b93efdf805ed",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "465177e8-9077-47cd-877f-5976788d37e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adad156a-930e-42e1-a471-96c5d5faf870",
        "cursor": {
          "ref": "4d1f47d9-783d-42a3-941c-5693a4189031",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f36f5912-152b-4dfc-9322-b47640c8f051"
        },
        "item": {
          "id": "adad156a-930e-42e1-a471-96c5d5faf870",
          "name": "identifiers"
        },
        "response": {
          "id": "fc446a7d-8e8b-4db2-aa27-2cd5e769401d",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ada22d-cf39-4605-9f0e-a3d48038cbe6",
        "cursor": {
          "ref": "9a6a9f70-4e24-4814-a203-ecf68d7a758d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "97f91e36-d8c1-44fd-bb8b-8d7987c63c9b"
        },
        "item": {
          "id": "d2ada22d-cf39-4605-9f0e-a3d48038cbe6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3a741b14-c75f-4b0e-afae-997b36ce6ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf775fd3-2b52-4a36-ba85-e6e6ab29bf01",
        "cursor": {
          "ref": "6a2bda6a-fee9-46da-b0e5-e96c880d0bc6",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9266375d-e80b-4b70-84fe-6710230ef167"
        },
        "item": {
          "id": "bf775fd3-2b52-4a36-ba85-e6e6ab29bf01",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "94197613-269f-4474-8e35-13400a2f44c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9220a272-8fd0-4960-853e-cae670b843bd",
        "cursor": {
          "ref": "ea6a8177-c90b-41e0-8d99-93d0e2cfbbeb",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2b1e1626-bc5f-4523-925e-448ae136894d"
        },
        "item": {
          "id": "9220a272-8fd0-4960-853e-cae670b843bd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "332eea8e-88be-4194-bdb7-d75c17803343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094fe46b-c228-4eb0-8d37-f7f4ea90a107",
        "cursor": {
          "ref": "78e8521d-ec02-4924-a0a3-df5a7a630036",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7e1eb64d-9fb7-45d0-9171-d92773c2bf8e"
        },
        "item": {
          "id": "094fe46b-c228-4eb0-8d37-f7f4ea90a107",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7d8f9b36-9790-4512-9a65-9b2177a5e86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2d5e7e-ebb5-465a-a713-4e464521b988",
        "cursor": {
          "ref": "11c18ace-4a35-4bb0-8efe-6b49bc594b5c",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bfaf6ae5-92db-4554-8724-615d1d1965a5"
        },
        "item": {
          "id": "1a2d5e7e-ebb5-465a-a713-4e464521b988",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "543631b5-280b-41ef-b347-7ce1b5d1e9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b3526f-814e-4b39-9e34-fad91f40b6b8",
        "cursor": {
          "ref": "b380f5d0-b2a2-40ec-9b3f-7e2199a647fc",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a5e135c7-333b-43a0-ba99-ecffa847e476"
        },
        "item": {
          "id": "36b3526f-814e-4b39-9e34-fad91f40b6b8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c2bc1ec0-2b3a-4089-9223-31e7d7900755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ca78b5-27ae-4655-93cc-4cc6931e020d",
        "cursor": {
          "ref": "665b74cf-a098-4c37-bd07-251d221e177d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b6329215-6207-471f-bc4b-d7b51fd89c56"
        },
        "item": {
          "id": "11ca78b5-27ae-4655-93cc-4cc6931e020d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2e26b9d2-83a6-4b58-9bdf-451a0a8e68c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34940d51-5e74-467e-92f0-fc5860460b39",
        "cursor": {
          "ref": "fbac8310-c868-4210-9ea3-65927ca168fc",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f95c1bb0-62e3-4c31-9257-8f96b3c046ad"
        },
        "item": {
          "id": "34940d51-5e74-467e-92f0-fc5860460b39",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3c416d4e-4ba8-42be-9f55-07e768e16c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab5eb94-21d9-4435-a9e2-8d0cc45af411",
        "cursor": {
          "ref": "1bbeee60-443a-4e41-a204-15a50589c083",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d8e9b80b-6f31-4e1a-9686-d773e9cb490b"
        },
        "item": {
          "id": "2ab5eb94-21d9-4435-a9e2-8d0cc45af411",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6d19c076-2a4e-4729-b24a-098e5d94006a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9978cab-56fc-4424-9315-3ca1c99e4a5f",
        "cursor": {
          "ref": "ac11b71c-044e-4e64-a1f0-f3a3f3701db5",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4865061d-64dc-4d12-bb1f-c2bb6679bb93"
        },
        "item": {
          "id": "d9978cab-56fc-4424-9315-3ca1c99e4a5f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "78bbda13-7835-4824-bceb-39c63d769095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4efcb2-7f60-4a4e-8aaa-88cb0838ad03",
        "cursor": {
          "ref": "517c48bd-63fe-4cd5-8859-171c65568a1c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "89a06d17-8ef8-42bf-abd6-73c2cc8626c3"
        },
        "item": {
          "id": "eb4efcb2-7f60-4a4e-8aaa-88cb0838ad03",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3f08becb-a0ef-449c-b6f3-def2db71dfc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07d88ed-46fb-45bf-bb67-2e102e209435",
        "cursor": {
          "ref": "a9cab195-5e47-4335-a857-804b4553da27",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ba277b13-d60b-4dec-80da-98c707f91fba"
        },
        "item": {
          "id": "a07d88ed-46fb-45bf-bb67-2e102e209435",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "56b770a2-cd07-45b4-b300-e9d04e70eb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583f4ad9-bbba-4902-bf13-5964923f81f5",
        "cursor": {
          "ref": "87c14ced-02b0-4cac-b497-f2eea22fe3d6",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "82cbbf9f-dcaa-4a2e-99ad-b4d15df64dd9"
        },
        "item": {
          "id": "583f4ad9-bbba-4902-bf13-5964923f81f5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4f2f605f-2174-4a81-9cad-787df2d4d154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6074ee9-5af0-44c5-a43a-69943cc6eb39",
        "cursor": {
          "ref": "8bcbcdc1-0f18-4c42-9249-1cda11251085",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "511944cd-f3bd-4344-a289-d8041866e350"
        },
        "item": {
          "id": "e6074ee9-5af0-44c5-a43a-69943cc6eb39",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f75fd777-a40f-41ec-bb5c-1c9f84047555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f40148-2198-4791-be63-d51492a2c2b5",
        "cursor": {
          "ref": "792ecd41-91d3-4bed-98c4-2a09c0817421",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5dcb509b-25bc-4440-9add-55bf1ecccce6"
        },
        "item": {
          "id": "94f40148-2198-4791-be63-d51492a2c2b5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ad9a04fd-3915-44f7-b261-31d20a539948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a9c94b-f637-439f-821e-879a77f555be",
        "cursor": {
          "ref": "28960997-dd32-490d-82ec-b36ce56979b1",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b611aac8-8d87-4287-b38e-9ee1fe77648a"
        },
        "item": {
          "id": "94a9c94b-f637-439f-821e-879a77f555be",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8f519553-c25e-4369-9b7b-7a9020e2be0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691f3534-706b-4443-9532-52cf12d7b8d8",
        "cursor": {
          "ref": "49e1fb9e-6673-4a8a-965d-86d0cd68e1d3",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0a8638e3-1892-4c67-b187-37a79c4babf2"
        },
        "item": {
          "id": "691f3534-706b-4443-9532-52cf12d7b8d8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6a756ab3-88de-47f2-8a58-77c974856601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a147e74-c0da-4d36-b69b-a003989b49aa",
        "cursor": {
          "ref": "fc9a583a-a489-4fc8-afc1-63e07a47c1cd",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "786d6749-4372-4dd2-a113-1e5ef7eff427"
        },
        "item": {
          "id": "1a147e74-c0da-4d36-b69b-a003989b49aa",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "462e1408-39a2-4bb4-bdfd-526b408e8b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0edeb4c-2b6f-488c-b271-39dc72ec930a",
        "cursor": {
          "ref": "daab796c-1afd-493c-b56e-cdddced02247",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1f00cf16-f28a-4e09-aa3a-a2b3f439623f"
        },
        "item": {
          "id": "e0edeb4c-2b6f-488c-b271-39dc72ec930a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f263183b-1a92-43c8-b220-9dfeedccf845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363e5b74-5f8d-4a44-abad-d5b2b99c4ec9",
        "cursor": {
          "ref": "bf474fbe-6156-44dd-935c-d662e386198d",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7057082b-7238-47e2-ad52-bb2afdca402e"
        },
        "item": {
          "id": "363e5b74-5f8d-4a44-abad-d5b2b99c4ec9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "30fd55e1-7051-4ad3-b912-309945d81364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25666397-f514-432b-9dd4-2de80db22232",
        "cursor": {
          "ref": "86daa5a5-9438-4ce1-ba60-af78a5f23a1a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "df7f7ceb-b5d5-4214-8f7f-5f77f007769d"
        },
        "item": {
          "id": "25666397-f514-432b-9dd4-2de80db22232",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "dcc45376-dadb-41de-9034-d58deebb8cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c950c3f6-d7b3-44ae-ac08-04ddc9e1ba08",
        "cursor": {
          "ref": "5bba80e3-92de-4768-a033-dc343d2dfdee",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1b3e37be-6424-4134-84fd-56c31dd6a624"
        },
        "item": {
          "id": "c950c3f6-d7b3-44ae-ac08-04ddc9e1ba08",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2d57bb53-d255-4ce5-8b54-14275dd92f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75c1f26-fb0c-4fd2-bf7b-6fd72cd0a1a7",
        "cursor": {
          "ref": "ff0234a2-3859-43f3-9d10-8248bb89fbb9",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e9d14469-bb48-4e41-b384-5b0c2e4c9f7e"
        },
        "item": {
          "id": "a75c1f26-fb0c-4fd2-bf7b-6fd72cd0a1a7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "818875fb-6a91-4fa2-a385-2a9cb1a7c9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125518d3-1d53-4b9e-9702-f78178bc4cdc",
        "cursor": {
          "ref": "3166dd79-e3c8-4e34-bc37-28eda1db135d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "475c417b-faaf-4488-b0a0-89360ac48262"
        },
        "item": {
          "id": "125518d3-1d53-4b9e-9702-f78178bc4cdc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "47141ebe-32b1-401c-9f68-92a3f56d9ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7baa1e4-27a9-4ad6-9a11-c6aa962dbc6e",
        "cursor": {
          "ref": "c578fcd4-29bd-4d37-9ff6-14c42276aeed",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2ae5d86c-e205-4f8e-9c3a-a66f859fb769"
        },
        "item": {
          "id": "b7baa1e4-27a9-4ad6-9a11-c6aa962dbc6e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3454859f-58c4-442f-98f6-4283167de033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b534f0e-89fc-4108-bcc6-6893cba01671",
        "cursor": {
          "ref": "07c174df-1cdd-4ea8-ad21-2425a627a557",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "14142d08-e1aa-405b-9065-1b230aee2354"
        },
        "item": {
          "id": "3b534f0e-89fc-4108-bcc6-6893cba01671",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ba475ddf-0fad-4562-b50b-a0c499cc5f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2afd5b9-34d8-4522-bb47-1c66490185dd",
        "cursor": {
          "ref": "9aa64895-a7f6-4088-b2f3-4462484f74e8",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d00f2d2c-0985-426e-927e-c9c831934024"
        },
        "item": {
          "id": "d2afd5b9-34d8-4522-bb47-1c66490185dd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "205d8030-00c4-4ca5-9c5c-7c7dad3dabb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f139899e-9ab9-4ab1-8481-6b628c92ee5a",
        "cursor": {
          "ref": "3bef2484-c0c8-4a73-863a-6956d5e1c85e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5ad53a79-3e7a-409e-b80c-1c06da360f87"
        },
        "item": {
          "id": "f139899e-9ab9-4ab1-8481-6b628c92ee5a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "af93c988-e3bd-4878-8cd9-5d428358809d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0029d7c0-588b-4119-be0f-0b8342415ecc",
        "cursor": {
          "ref": "d4029a00-870a-478e-9d09-f6b17e886555",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3e279a13-1a13-4767-b704-44a9fa3c56a5"
        },
        "item": {
          "id": "0029d7c0-588b-4119-be0f-0b8342415ecc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "357f944c-6093-47b4-be6a-27dad053404d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d97749-dd71-4428-87a4-1ba39f120c2d",
        "cursor": {
          "ref": "04b527c1-b9fe-412d-90b4-d5b01bc9f5d2",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8f4a2472-1f31-412b-9be7-c8fbda12496a"
        },
        "item": {
          "id": "e9d97749-dd71-4428-87a4-1ba39f120c2d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "740a80c8-d3ca-4383-8cd6-9d3a38c19862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0546c786-82cf-408f-8df7-5dbf5c1cd127",
        "cursor": {
          "ref": "e300f3d7-663b-4a30-aed5-08c0d73be255",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9815dc17-7ee6-429b-9512-6f40cded77bf"
        },
        "item": {
          "id": "0546c786-82cf-408f-8df7-5dbf5c1cd127",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "26ca42ad-9ea1-481e-8509-f5ce99c89851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ab705c-2a13-4548-bb04-9389d0fefbda",
        "cursor": {
          "ref": "5b04e4f2-6797-4b44-874e-6b3e4781d44c",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2ed78e37-b403-4907-8de1-e5e0e69ba352"
        },
        "item": {
          "id": "e6ab705c-2a13-4548-bb04-9389d0fefbda",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d2c67ab7-9ce8-44c2-9e02-bf888b1d1ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c60b740-0688-4ea6-9fbe-ee83eed047a6",
        "cursor": {
          "ref": "5cfb7dd4-17ba-40eb-bfb9-f98ed0aaa958",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "708dd84d-1d38-4e61-8ed7-91bf90187ab7"
        },
        "item": {
          "id": "1c60b740-0688-4ea6-9fbe-ee83eed047a6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2c19a696-48fe-4406-b58f-260dd3ec0ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5fb997-3b10-4b23-9270-24be50eaf435",
        "cursor": {
          "ref": "2b58c89e-6cd3-4172-a8c5-3e2ef04b5178",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "87fa4b9c-d2b1-4594-94d1-b4c412191bc6"
        },
        "item": {
          "id": "0b5fb997-3b10-4b23-9270-24be50eaf435",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "61d8ea43-54a0-4fea-8d81-f8a172325048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555c5de1-f71c-4242-83ff-1b44a670c066",
        "cursor": {
          "ref": "2e06182b-b418-49b5-a202-02c3eb640589",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "252bc8f6-6eb8-46aa-bef5-3581ab1205ed"
        },
        "item": {
          "id": "555c5de1-f71c-4242-83ff-1b44a670c066",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "aca3435a-fc80-4833-9ee7-9c90c8a912ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9965c0-23d9-462c-aace-bfedc3155d0f",
        "cursor": {
          "ref": "7471c847-3b0c-4240-8d07-5bce88bf32fc",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6a299a8a-1fd0-4d34-a2f9-c7101150249d"
        },
        "item": {
          "id": "5f9965c0-23d9-462c-aace-bfedc3155d0f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "57881714-e57d-4a20-95c0-9fb69196ea52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0520e301-c145-4a0d-b697-29d5a42069f6",
        "cursor": {
          "ref": "f73365b9-8478-42e3-a128-5cf8d1431821",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1beb890e-be6a-4e0b-acec-bb43ede404eb"
        },
        "item": {
          "id": "0520e301-c145-4a0d-b697-29d5a42069f6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ae1c4c3c-45ec-49d0-9065-bcb457f48c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34994e9f-e596-43f5-ba14-ba6c88aba738",
        "cursor": {
          "ref": "a5881453-93b4-4ed3-a78b-26c866548ce1",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8cd996fc-3863-4716-a7b4-5684ffd905d3"
        },
        "item": {
          "id": "34994e9f-e596-43f5-ba14-ba6c88aba738",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "06ba267b-5723-45bb-b880-91ec13b85826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e8f65c-e170-4101-81db-ebbdc420f65e",
        "cursor": {
          "ref": "e3d29f90-8db6-4fe4-85c3-8fb0c85eac7e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "52e0a5c1-ddd6-4f22-b981-8d03f987610f"
        },
        "item": {
          "id": "c1e8f65c-e170-4101-81db-ebbdc420f65e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e75e590c-3c78-44eb-a6ae-38244c53e0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c22a6d-c12c-4ccd-8945-e4adf08edf23",
        "cursor": {
          "ref": "a7e6c7af-4b22-4677-95d6-64f915421489",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5c23778f-703c-4691-85ba-a252517180c6"
        },
        "item": {
          "id": "68c22a6d-c12c-4ccd-8945-e4adf08edf23",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7483e36d-2093-40a2-8d52-0e29874a65e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4f0665-81c8-4bd8-952e-5476f581d5ee",
        "cursor": {
          "ref": "0fe8bea4-0bee-427e-8fbc-7572655c2c2a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0ea9b8f9-6f22-458b-afe0-a085ab586b4d"
        },
        "item": {
          "id": "aa4f0665-81c8-4bd8-952e-5476f581d5ee",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "82b2e7e8-e499-4114-8d03-5e03291f2038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54552c5c-5831-41a8-b53a-686cb6b271ce",
        "cursor": {
          "ref": "605eb45c-7851-4448-a0c3-3e17a11134ce",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1aa53949-5fd6-40ed-8ca0-e63ec15cc871"
        },
        "item": {
          "id": "54552c5c-5831-41a8-b53a-686cb6b271ce",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a9f92714-1b17-47d7-834e-98677b168c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d9d2ff-9017-4cc7-abb2-e7f8deba2a99",
        "cursor": {
          "ref": "887c2e28-990f-4ac3-b302-5976ec078480",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0ab9c965-53f4-4487-b454-cb4754cfa3fd"
        },
        "item": {
          "id": "85d9d2ff-9017-4cc7-abb2-e7f8deba2a99",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b450e9af-6524-4d48-8bad-5beb07c14ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efa641e-d744-4e9f-9db7-59d0b2eb6333",
        "cursor": {
          "ref": "d40fd735-5a8c-45f2-956c-af23f90c10e7",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a7c826ba-1bf1-4849-9c0b-2ca49bc94b92"
        },
        "item": {
          "id": "4efa641e-d744-4e9f-9db7-59d0b2eb6333",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8b2edbb4-25ba-48e6-8ec7-cf21b7a87e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9e43f7-a4df-4303-b7a8-9d2c2f6ae07b",
        "cursor": {
          "ref": "e453cf1c-91ff-40bf-be7f-e0e4349f2cfc",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fb960a77-cc6a-4e8f-8c22-dc2e8f90e4e8"
        },
        "item": {
          "id": "bc9e43f7-a4df-4303-b7a8-9d2c2f6ae07b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fffaa0ee-22d6-4985-8457-d31b925808b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba902d76-4c74-4c12-99ba-3cfa93303311",
        "cursor": {
          "ref": "b3ef9e10-4db6-4c93-9cfd-5d366a0fd7ae",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "728f2bf7-c06d-464f-b0d8-ea844b8bc5fe"
        },
        "item": {
          "id": "ba902d76-4c74-4c12-99ba-3cfa93303311",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e26f5172-8e93-4391-a0a9-7127fb5d58a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f598a6-5076-4ef0-b4ab-9600e6a9d9ae",
        "cursor": {
          "ref": "8e21bf30-d0bf-4833-9319-e99dea469b07",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "30de2036-3e9d-48a6-899b-de91fb717415"
        },
        "item": {
          "id": "20f598a6-5076-4ef0-b4ab-9600e6a9d9ae",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0baed66b-4ed6-48a0-b414-eabd4b1b2f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33375e4d-48ba-4a63-b04d-d709780ccf5b",
        "cursor": {
          "ref": "2412943b-9a93-46d9-8cbc-15740beeb76b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b7059524-7d9a-4127-b953-c7c49ebd7498"
        },
        "item": {
          "id": "33375e4d-48ba-4a63-b04d-d709780ccf5b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a849bce9-af55-4a75-b3b6-559ad6e939ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef1dafc-18c9-45aa-b29e-cbab09e75b5e",
        "cursor": {
          "ref": "af8b6097-275b-4baa-bb34-bc429d86e0f0",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7c2a9b4e-9926-40b8-9750-96db0fbbcbf6"
        },
        "item": {
          "id": "9ef1dafc-18c9-45aa-b29e-cbab09e75b5e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "aba14bcf-a7f1-4ea5-ad38-36aaf4971c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bce4538-bb60-41f4-a068-ce1e1e4c43d9",
        "cursor": {
          "ref": "7392f406-6a75-41f8-aa65-35a9d257e1ff",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "49cff461-0475-469d-a166-10276da78eed"
        },
        "item": {
          "id": "7bce4538-bb60-41f4-a068-ce1e1e4c43d9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6fb977c7-6687-4a8d-8caf-d82309dc3075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa635115-206b-435b-bf40-493930e74d97",
        "cursor": {
          "ref": "817c2a25-2b39-4395-832d-d9ad08ed3135",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b73fe8df-f000-4c24-8b7c-9c308d848563"
        },
        "item": {
          "id": "aa635115-206b-435b-bf40-493930e74d97",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e8f1811d-4e8d-4a80-aa48-b038de51af64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2869d14e-2631-488a-9c9f-596d413d9ad0",
        "cursor": {
          "ref": "cc3dd366-3ab0-4e05-9b8f-e7d82b9b5be3",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7be26ec3-45a6-49f3-b41f-0652080f1afc"
        },
        "item": {
          "id": "2869d14e-2631-488a-9c9f-596d413d9ad0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "561d0f09-4afe-4f73-9980-da27ac225f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b4e5ef-0131-42be-93a1-382526292aeb",
        "cursor": {
          "ref": "0684e151-6009-458b-9d62-68fb471b276e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b3156a31-8b77-4dfc-93e9-99a437844ee2"
        },
        "item": {
          "id": "d5b4e5ef-0131-42be-93a1-382526292aeb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9566c8de-ee7d-4709-8139-99da8ae29acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58886cb-e9d1-4be1-8b2c-9c5b5a3c6856",
        "cursor": {
          "ref": "77a3b49b-1e86-47f3-9aff-c5a740e8aff8",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "146a36b3-29af-43a3-975b-a2af41982b67"
        },
        "item": {
          "id": "f58886cb-e9d1-4be1-8b2c-9c5b5a3c6856",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f1b90193-780d-4c02-89b5-9d9761208db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010ef7d3-c789-4862-94ce-3156fc522ab3",
        "cursor": {
          "ref": "750fcd48-796b-45f8-a3e6-a7f17908d7f5",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9bfb851b-1a85-4790-bef0-c89b70866b5d"
        },
        "item": {
          "id": "010ef7d3-c789-4862-94ce-3156fc522ab3",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "30aaa0c8-c25f-4c4e-a7c6-4940bb630e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd90591-9b2c-4bf2-b82f-38fab44087b1",
        "cursor": {
          "ref": "495ea496-de08-4f29-b77b-7200de02984c",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8088a29d-a95d-43aa-b28f-634d6b6bac80"
        },
        "item": {
          "id": "cbd90591-9b2c-4bf2-b82f-38fab44087b1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2448f053-fdc6-4c2d-8c7d-397c5deed664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e108e2-cb2b-40d4-b268-35b6f1261677",
        "cursor": {
          "ref": "cf58347f-2846-41ee-9d2f-ca356c14a476",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "73cf2801-cacb-4417-aa9c-2588d535249e"
        },
        "item": {
          "id": "e1e108e2-cb2b-40d4-b268-35b6f1261677",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d01bab6e-e22d-4dc8-9c1b-0ee29e7801e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbb6630-7c6f-4d9c-bd42-bd9e2998885f",
        "cursor": {
          "ref": "28fe1b4f-366b-4b64-8b83-a2ed5182f6cf",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ab7599c6-6f66-4ae9-8f59-15c44953ffb0"
        },
        "item": {
          "id": "6bbb6630-7c6f-4d9c-bd42-bd9e2998885f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d4f6fd87-7096-4069-b342-332c119aff56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fab3c51-740f-4747-b316-049e4e12bc05",
        "cursor": {
          "ref": "0f0f2ef7-66f3-41b5-b761-f8f290d8d45c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3813be32-d913-4da3-93dd-5ee5d67d2798"
        },
        "item": {
          "id": "6fab3c51-740f-4747-b316-049e4e12bc05",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "44d9635b-b80d-4bed-9354-d823ede4f4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33b4128-78b1-4111-a41f-050e2409c1a8",
        "cursor": {
          "ref": "6156e1c2-232a-4851-93bf-4377f55ef7c0",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "93096c24-9333-40db-9420-3f59f4649066"
        },
        "item": {
          "id": "d33b4128-78b1-4111-a41f-050e2409c1a8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "10ed20bc-94e7-433b-891e-b3aa184797d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5290571-2310-4e8d-bd2a-f5159219ee16",
        "cursor": {
          "ref": "ad63447c-cba7-4066-b261-481b588d0f06",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c01902c2-ac6d-4492-ae80-0e235c16d24c"
        },
        "item": {
          "id": "e5290571-2310-4e8d-bd2a-f5159219ee16",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "93e96ac3-2007-47d4-a0f9-0950a77db78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3637ba-ddce-4fcb-8fe9-100e392cb0ef",
        "cursor": {
          "ref": "23fc5aaa-90cb-4f38-95a3-a1010102392d",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7b777903-7364-4f43-a330-832605eda772"
        },
        "item": {
          "id": "1b3637ba-ddce-4fcb-8fe9-100e392cb0ef",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "468a3f87-f65c-41f0-9a85-3586576b1df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf872ff-b92c-4858-9f3f-8c2a108e91b1",
        "cursor": {
          "ref": "f09c417f-7ee5-4f02-9e01-09d32e6ead0e",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d7e33729-f68b-4ea1-882d-a9b26f495414"
        },
        "item": {
          "id": "caf872ff-b92c-4858-9f3f-8c2a108e91b1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "417327eb-85ca-4fc5-a191-b8d1b3ece415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4be48fb-2737-4d4e-8922-7c17d87b3430",
        "cursor": {
          "ref": "054b900c-215d-40aa-bca1-9b40018815f8",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7f19b4f5-15ec-472a-8b7a-5b6d42e4b11c"
        },
        "item": {
          "id": "e4be48fb-2737-4d4e-8922-7c17d87b3430",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8a65eaf0-9f6b-424a-8f6b-ce9bd0c787ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0749efa1-a3b0-4d86-9b19-296cabee432b",
        "cursor": {
          "ref": "0c261bd2-ebe9-418e-88cb-3aeaf4d0e7d7",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8479decb-6af5-405b-a770-1f57203124e5"
        },
        "item": {
          "id": "0749efa1-a3b0-4d86-9b19-296cabee432b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9344ea20-7ab0-41ec-b09d-c803aa0ec0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05097d31-10f3-48fe-a9e5-e49fde6c05d2",
        "cursor": {
          "ref": "2cd3c04a-52bd-4d2e-88f9-ef150f729585",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c1e0a407-5dc1-4157-8932-0b45c9bacaec"
        },
        "item": {
          "id": "05097d31-10f3-48fe-a9e5-e49fde6c05d2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9f699a1c-62cc-4322-b5fb-a0d4771c42a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a44eee5-d03d-4080-9c3d-6407413ab87b",
        "cursor": {
          "ref": "f77988de-128a-443e-8a14-ae4ec3bbc8cf",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e770fd52-94e2-4627-afa4-84d89174ad3f"
        },
        "item": {
          "id": "2a44eee5-d03d-4080-9c3d-6407413ab87b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "eb3519bf-205e-4b0b-b5ec-6f7a8a034f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f452296-cd14-4741-9327-4a0377b01934",
        "cursor": {
          "ref": "4d45064c-b60f-49b4-8546-839c8f004087",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e6266731-6dd7-4bd1-97f0-1db79dbb228e"
        },
        "item": {
          "id": "6f452296-cd14-4741-9327-4a0377b01934",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "afc6d975-7276-400f-ad4f-9ff0614301de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f654e3d-0c3e-491f-9639-a85257226485",
        "cursor": {
          "ref": "207a564f-c5a6-4b11-a071-8969d365466d",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6808e97e-8aa0-43a4-8374-efd6b59dee9f"
        },
        "item": {
          "id": "5f654e3d-0c3e-491f-9639-a85257226485",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "97ad9d38-46a4-4c79-affb-c52218f5243c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5748c0b2-d6dc-4b19-96de-fb3eb0962eb9",
        "cursor": {
          "ref": "98835d11-474e-4cdb-add5-f5e7c194931e",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6a22ef14-9dcb-4aac-9eb3-0fd58f9b17be"
        },
        "item": {
          "id": "5748c0b2-d6dc-4b19-96de-fb3eb0962eb9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2efc897c-9cba-4fca-8a82-02b0117e6999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761bdafa-196d-4572-b934-6c812399750a",
        "cursor": {
          "ref": "00d15e52-5482-4c5e-aba3-7a679a90f39a",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4900badb-322e-4284-9f63-641da09d7fab"
        },
        "item": {
          "id": "761bdafa-196d-4572-b934-6c812399750a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ce3ecbeb-37ba-4c2c-84cd-1e47495986cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a182f9ed-0ece-4724-aef9-ddbb46d73062",
        "cursor": {
          "ref": "a4bd2c79-72a2-4b65-aa98-dd01f83ecdc9",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d52c34a2-be48-42fc-bec4-625024dce65c"
        },
        "item": {
          "id": "a182f9ed-0ece-4724-aef9-ddbb46d73062",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "631e4d46-facb-45b7-9a6e-3ba3e4d2bde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7c4419-4d63-44df-8cdc-3576491b38a4",
        "cursor": {
          "ref": "42d8800f-df43-4389-b3c6-b4d55d1b29a6",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7edb6f7d-1627-4dee-be62-4f2548ae9e1f"
        },
        "item": {
          "id": "3a7c4419-4d63-44df-8cdc-3576491b38a4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4279d62b-295a-4534-a937-24bb3518dc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7329d6e8-4909-4e10-838d-aadca35e059a",
        "cursor": {
          "ref": "8b4a1fc7-0cd9-4f2c-a69a-279b0f90f6d7",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8ba42fad-9789-453d-8f5e-6999a1016bed"
        },
        "item": {
          "id": "7329d6e8-4909-4e10-838d-aadca35e059a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "40776981-eab0-48ed-a4d4-01c1de119807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3100e0e5-cf91-4b79-b1b0-2abaf2ee947f",
        "cursor": {
          "ref": "dd5e7db0-ff3d-41ed-822e-7cecfc1d24b2",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5881c850-29b2-4e28-bb21-91712d24f7aa"
        },
        "item": {
          "id": "3100e0e5-cf91-4b79-b1b0-2abaf2ee947f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "732d8791-8c46-4536-a531-1cad13be33f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744cc271-0181-42ab-a586-99bd3ed2dc75",
        "cursor": {
          "ref": "33081b99-13f8-4d5a-b749-08324ad54659",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7703ae71-75a8-4358-a3c1-c87236bdcb27"
        },
        "item": {
          "id": "744cc271-0181-42ab-a586-99bd3ed2dc75",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "faf59cac-e2d5-4582-9e58-83aed92f5b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b111a319-7b1b-4c71-8fd5-98367dd3471a",
        "cursor": {
          "ref": "9e73a48c-6c30-4c49-8f7c-62f1e34c0b8e",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "140fc79c-98fe-4108-abe2-7050c34fb246"
        },
        "item": {
          "id": "b111a319-7b1b-4c71-8fd5-98367dd3471a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d443b577-32a1-4671-9d0e-f7fb9f3ad97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f13eb37-fb20-4ada-8d98-d92d7de334d3",
        "cursor": {
          "ref": "081cec17-8046-4104-9010-e2455e1aee19",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d44fc31c-9597-4953-bedd-30c52b74a2b1"
        },
        "item": {
          "id": "6f13eb37-fb20-4ada-8d98-d92d7de334d3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5c26f7fc-1ed6-42d0-b194-f2b9a752f1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3ef93c-aa04-441c-962f-4bdee43965d6",
        "cursor": {
          "ref": "844d2ff8-aeb8-4948-ad71-5d58e5c030be",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d3232461-df48-4748-8766-b1ef745d1876"
        },
        "item": {
          "id": "ca3ef93c-aa04-441c-962f-4bdee43965d6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9f1f3b17-9833-4da5-9719-2efe55f4d481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29888a8b-0652-4474-8a7a-5c589334c06e",
        "cursor": {
          "ref": "23bb1abd-e2d4-4031-a51b-b061224fa96d",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3bebe5c5-c10d-4a65-b9e0-584634c56d41"
        },
        "item": {
          "id": "29888a8b-0652-4474-8a7a-5c589334c06e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3fe342e4-d1a5-48ed-9c54-328a5c1353e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdef2eac-2ea6-4ab6-96b8-71f9bc79fdd6",
        "cursor": {
          "ref": "7f612fd2-e201-435a-bfd7-b87077aecb89",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e05bf563-0be9-4dd3-906d-a22cfbea47d9"
        },
        "item": {
          "id": "fdef2eac-2ea6-4ab6-96b8-71f9bc79fdd6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6f31aa1e-0bec-4b48-8db8-25640af5f6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c792df89-b5fa-4fa2-bf83-2766b7e30414",
        "cursor": {
          "ref": "0dbcfd7d-85c3-42ce-976e-f2a9fab2b86c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d097d063-0c28-4ad2-89a5-96e0cf1943b8"
        },
        "item": {
          "id": "c792df89-b5fa-4fa2-bf83-2766b7e30414",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "62995d18-f4ea-45ee-be26-d903d9370681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe1649e-8147-4cb0-a63f-63a66e975415",
        "cursor": {
          "ref": "79fb32d9-0101-46ef-b9c4-14b1364d2cb2",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6010c5ed-d4cf-4268-8064-6e071490243a"
        },
        "item": {
          "id": "2fe1649e-8147-4cb0-a63f-63a66e975415",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2350b148-5406-45f9-8d9a-f6029b1d1a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc613471-d6c0-4237-979b-d64540a386d3",
        "cursor": {
          "ref": "c7126678-a4cf-4efb-985d-54c704999c27",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1edfe2b8-e9ad-48e6-9d18-ac8a2b136e40"
        },
        "item": {
          "id": "cc613471-d6c0-4237-979b-d64540a386d3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0d49e09e-dc07-4487-8576-edf3fcc0fe5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6f78c7-3e26-4bf6-8f7f-bc6ef1b595f8",
        "cursor": {
          "ref": "d54fa9dc-ef3b-43a8-bbf4-7e16a50ca0d8",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "069b037e-d7f2-495f-9f52-9a56d661aef1"
        },
        "item": {
          "id": "3d6f78c7-3e26-4bf6-8f7f-bc6ef1b595f8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b8e93c9c-e5ea-4e8f-84c8-5e3d00d3a6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc3f4cb-0c1b-4ac1-b154-1523669a516c",
        "cursor": {
          "ref": "5b27f0de-c16d-4465-81b9-00f44a0cf1af",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9929d00a-f89f-4a35-83df-91c6e6a06098"
        },
        "item": {
          "id": "7cc3f4cb-0c1b-4ac1-b154-1523669a516c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3f793e72-86ac-46cd-b4d4-b9dd6b99f89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba156255-0b18-4bfe-9204-f13ca7f42537",
        "cursor": {
          "ref": "45e37fbc-8d37-4914-8702-a062ea816637",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3db87c46-c51e-4786-a45c-011c6471394c"
        },
        "item": {
          "id": "ba156255-0b18-4bfe-9204-f13ca7f42537",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6a01286c-d1d1-46b1-86e7-36f59462e7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5de642-27c3-454e-8157-06c9d3c7c607",
        "cursor": {
          "ref": "358fda1d-70b1-4606-95e1-07eea0e22361",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d0299a8e-bd34-4879-aa99-da863c2872ea"
        },
        "item": {
          "id": "ae5de642-27c3-454e-8157-06c9d3c7c607",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "57f79674-12d2-4832-aa1d-afafd1ce09f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d582f708-44d8-4995-985f-7eaafbb46552",
        "cursor": {
          "ref": "26f8f800-6803-473b-ac60-bb08891379b1",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9ce7502e-58a6-44cc-838e-cc325b01d2e1"
        },
        "item": {
          "id": "d582f708-44d8-4995-985f-7eaafbb46552",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d4ef7af9-9dd8-4974-9bee-1e09c811e094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b00d6e-457c-4c08-9dcb-751c388b764d",
        "cursor": {
          "ref": "a646e949-a1d5-4043-94b4-a337f38e4665",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "031bdd1f-8ee5-4cd5-8c02-922235ae3c9b"
        },
        "item": {
          "id": "04b00d6e-457c-4c08-9dcb-751c388b764d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "15bb0919-7199-4faf-946d-b22178407a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b371434-af74-4084-b3d8-0bf081fb5f0e",
        "cursor": {
          "ref": "cf5eddd8-6598-4087-b1f3-9d87a13e2b88",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f2c983cc-2f04-4418-bee6-c7273a48b85c"
        },
        "item": {
          "id": "6b371434-af74-4084-b3d8-0bf081fb5f0e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "49abe021-65e8-489e-aa14-535b265a4ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9eb3817-cebe-4b46-b8a6-a607ed4b3960",
        "cursor": {
          "ref": "0d3bb8c9-a701-495e-83d9-543849f7b721",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0fbdac18-c456-4882-a5e2-3f4bd8903496"
        },
        "item": {
          "id": "a9eb3817-cebe-4b46-b8a6-a607ed4b3960",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5bc3ab88-d002-4c93-98f6-693366ccc8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10c5e78-2ff1-467b-a6ff-86678d9f2012",
        "cursor": {
          "ref": "64a76d68-49c8-439d-aad3-c2906e81eaab",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cf08d3f0-49a6-4e80-98cd-a89ceba12e90"
        },
        "item": {
          "id": "d10c5e78-2ff1-467b-a6ff-86678d9f2012",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "aee0edf5-1516-4488-b3bc-db2ba65b8f00",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969a979f-61d4-43f4-923a-4d05bc729289",
        "cursor": {
          "ref": "10003f99-38ed-41b8-aae5-78ec9dfd92aa",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9473b7c1-4f83-4b75-8743-92a7c6b21225"
        },
        "item": {
          "id": "969a979f-61d4-43f4-923a-4d05bc729289",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3ef49349-fc5f-40fb-859b-4d583fa764ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "14546bf2-b088-402b-84f0-87fbbd2f9fc3",
        "cursor": {
          "ref": "2331d20e-39f3-4193-982e-002196650a43",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9846d021-ebf0-421d-8422-1c88201909d3"
        },
        "item": {
          "id": "14546bf2-b088-402b-84f0-87fbbd2f9fc3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a5cacc98-b2d8-4448-86e4-5def137e2ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c3c62732-f7c3-4576-bb46-57b47bf8660c",
        "cursor": {
          "ref": "75e0ad44-2ce1-4bfe-8b1d-2758ad79b4c7",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a1da34d1-8378-4774-8214-10144ca3ca1e"
        },
        "item": {
          "id": "c3c62732-f7c3-4576-bb46-57b47bf8660c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d39d8871-deab-4c4b-8296-cc3484c09e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b586aa05-f61d-4fcd-858b-ff7f77bb72fa",
        "cursor": {
          "ref": "4f7c3868-90f0-41cf-a9cf-14b408511cc9",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ebfdddbf-2d3d-4bec-8b0e-e10134c69cb5"
        },
        "item": {
          "id": "b586aa05-f61d-4fcd-858b-ff7f77bb72fa",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "963e34f9-5f35-401a-8af5-af86be729ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "958839b8-3c34-4574-9761-fa9d5345f8d7",
        "cursor": {
          "ref": "1855e4eb-00a4-4635-b009-f59f9260f66b",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d726676e-ad09-40a1-8d62-7d8602138805"
        },
        "item": {
          "id": "958839b8-3c34-4574-9761-fa9d5345f8d7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4f69f45f-c98f-404c-877d-f186086a6488",
          "status": "Created",
          "code": 201,
          "responseTime": 9886,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2156c9-f47e-43f8-9f22-b522bc3e4acc",
        "cursor": {
          "ref": "6d51b2e2-0869-45ae-a4b1-a75e66d0c727",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "699b205a-0b39-40ea-ac94-1887c2db1f70"
        },
        "item": {
          "id": "ec2156c9-f47e-43f8-9f22-b522bc3e4acc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1062a567-529c-4ad4-b0bc-d43cb6564515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "5947985f-fcf9-475b-a866-1b27d95e98ad",
        "cursor": {
          "ref": "3ec14240-a440-47ba-a857-7270347e062d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5a139023-5b88-44e0-97ea-1413fcdd2fea"
        },
        "item": {
          "id": "5947985f-fcf9-475b-a866-1b27d95e98ad",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "39ddbfda-51a1-4049-8951-2fdcc0c970b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9c969d35-1398-44cc-8599-855730ee7dac",
        "cursor": {
          "ref": "2aa1a697-db8f-4ff4-bb65-f81bb8f2a89f",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "df859b08-41b0-49e6-a363-a9fb23a7d296"
        },
        "item": {
          "id": "9c969d35-1398-44cc-8599-855730ee7dac",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fac25be5-c0d9-483d-8758-829a500f6e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e89c4e-71f4-410d-8dbc-fb8a18d57649",
        "cursor": {
          "ref": "98205b6e-1765-4df3-bce5-019719229175",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "92ac6265-1d99-4097-9483-b11625d87af8"
        },
        "item": {
          "id": "61e89c4e-71f4-410d-8dbc-fb8a18d57649",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "15ea5ff6-886e-4716-addc-ab10f72c03f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429b64e6-f98f-4db2-9ec3-1c6e0a3b9ac3",
        "cursor": {
          "ref": "25987b6a-1748-4869-bd7f-7a947aa645a3",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "44ac7774-b9c8-415d-bf9a-0e003cd6d8e0"
        },
        "item": {
          "id": "429b64e6-f98f-4db2-9ec3-1c6e0a3b9ac3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "be61aa8b-4d4a-47fc-a057-a6c393bae562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a152f34-d936-4d0a-a00c-c41f79623ba1",
        "cursor": {
          "ref": "ece5fcd2-886f-41dc-82bc-2ea682b049cd",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "acc8174c-8d94-4732-956f-ad9542544fae"
        },
        "item": {
          "id": "7a152f34-d936-4d0a-a00c-c41f79623ba1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b15d8009-c4ac-4c5e-8a98-b01180114d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c9b427-3c2d-406a-9d2c-80ea5f4674b7",
        "cursor": {
          "ref": "af06bc87-d8b6-40d8-b9f9-46f2c8a96f5d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "03a2611b-378f-4577-b8ae-83de97692743"
        },
        "item": {
          "id": "f4c9b427-3c2d-406a-9d2c-80ea5f4674b7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "34aeeb6b-2423-4055-87df-5c7b12d93200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3207677e-c2f0-469e-acf2-b35c0152c917",
        "cursor": {
          "ref": "128615c6-cf58-471b-99ff-698f59693d41",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9435216e-9940-4748-a6b9-a435cd958553"
        },
        "item": {
          "id": "3207677e-c2f0-469e-acf2-b35c0152c917",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "33d072aa-65d3-4f82-a9c9-a9c3bcefd892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6b3379-d909-4f17-b0aa-a9dffa3b3d49",
        "cursor": {
          "ref": "53e4d9de-7213-4c52-a757-5463f7aca45a",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "73968712-6ae3-4213-96fb-be925919b2ec"
        },
        "item": {
          "id": "bf6b3379-d909-4f17-b0aa-a9dffa3b3d49",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ef904590-500e-4cf6-9791-a1f9ceb27a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e72f989-89ce-412d-9b1c-e9894309c378",
        "cursor": {
          "ref": "5b0bae36-7b81-4dda-b66d-c72bf9bc2519",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b847d0b7-aecf-4ae8-8e90-cc8339c62b53"
        },
        "item": {
          "id": "0e72f989-89ce-412d-9b1c-e9894309c378",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "963a48a3-271f-4e80-be34-1f96276ae288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bba377-4b3a-4de3-9d01-ad11c8df147a",
        "cursor": {
          "ref": "e2321b12-b252-4ac8-af24-dd106426fd57",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bef044c7-0da0-412d-8ff3-6281e2d9cbf4"
        },
        "item": {
          "id": "14bba377-4b3a-4de3-9d01-ad11c8df147a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e1531296-56c1-4884-be66-071cc0f4ebcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae738cb-c5ce-44ef-a1ec-37c7c35db44d",
        "cursor": {
          "ref": "a15c54ec-203e-4b9a-876a-879e35f81339",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2d2e4a8d-c1a1-4895-b211-3af716e86b62"
        },
        "item": {
          "id": "aae738cb-c5ce-44ef-a1ec-37c7c35db44d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e99a94c0-b0b0-4597-9f45-2bcb1ab9d703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbef0d42-6a75-4da8-bbe2-d21cde1f608a",
        "cursor": {
          "ref": "42874773-cde1-42d5-867b-94bb41fff727",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9695effd-ec04-45b5-906a-9dfa3c5220bc"
        },
        "item": {
          "id": "bbef0d42-6a75-4da8-bbe2-d21cde1f608a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8bdfd262-db97-4b7a-a277-5bba7b716c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f07fe6-47ce-460f-8332-bd1e669264f5",
        "cursor": {
          "ref": "f344c957-8187-437c-9085-e77892b66f7a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "342db523-f85e-4349-96fd-2e80fa4bbe11"
        },
        "item": {
          "id": "b1f07fe6-47ce-460f-8332-bd1e669264f5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4cb5d075-4443-418f-97a1-9429545cc9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0675f5fa-83c8-45e2-aec6-73156165e452",
        "cursor": {
          "ref": "c5f1387d-9fa7-4ef6-86f7-e5c630abf738",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "76ddc4c7-ca5f-43da-9506-82e86d8c2ed7"
        },
        "item": {
          "id": "0675f5fa-83c8-45e2-aec6-73156165e452",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2faf73cb-5a0c-4a83-9fd5-7d0bc02559b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e562bca-b41b-4934-bcf2-f6ddac47e42f",
        "cursor": {
          "ref": "564d6aa7-ad0a-457e-9d80-15724e971802",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c6d9cb0d-3588-4ff6-88bc-9272ecb99d1f"
        },
        "item": {
          "id": "6e562bca-b41b-4934-bcf2-f6ddac47e42f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "670e5781-44e3-4ab9-a1ca-7f61fa33d0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2303cab7-8a0a-40d3-b6dd-d9b4b952ffba",
        "cursor": {
          "ref": "8381dcec-cb53-4508-a57a-c37c4a36cd64",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2077a584-f47e-462f-9732-87524c572b0b"
        },
        "item": {
          "id": "2303cab7-8a0a-40d3-b6dd-d9b4b952ffba",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fcd55c97-82c0-4bd1-99d1-dfedc63d66ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fca811-fd51-4e8a-9d5b-d7aed47cdcee",
        "cursor": {
          "ref": "9e07a273-261c-4857-987d-72a74d6c4217",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "71db9dfd-e512-4fbf-b31d-06d3a780995e"
        },
        "item": {
          "id": "e9fca811-fd51-4e8a-9d5b-d7aed47cdcee",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "975c567b-3319-4b84-ba7e-1a9e49ea97f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bdff61-f314-4758-8d34-78ef44b5f242",
        "cursor": {
          "ref": "05356a45-ef48-4555-94bd-e54e636df8f6",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9182d170-42df-4f12-89ce-4c2d72b69c94"
        },
        "item": {
          "id": "a5bdff61-f314-4758-8d34-78ef44b5f242",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7aa4423f-b273-4837-8b6f-977351edf27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a59b2cb-14fc-4e59-93ac-fad720ce9dfd",
        "cursor": {
          "ref": "fcc85f6d-991b-4533-9ced-028f70bc5b7f",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0fc303c9-2758-4134-9958-1c463c1d78be"
        },
        "item": {
          "id": "9a59b2cb-14fc-4e59-93ac-fad720ce9dfd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0fa9b507-deaf-4137-bb0f-3f9adea5f3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc7bd1b-805a-49b5-a720-f3e0ee754b2d",
        "cursor": {
          "ref": "6402e2fa-c172-443d-9560-59320563202a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6380e1fe-0cd8-4900-914a-f1ca3cf5ac9d"
        },
        "item": {
          "id": "3dc7bd1b-805a-49b5-a720-f3e0ee754b2d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a7b9375e-a900-46c9-9557-ec172a7aa582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82db4444-a6d1-4502-a160-9a7cfff29c30",
        "cursor": {
          "ref": "8d22200b-07f6-4743-a66c-a82c4e41fb82",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "aee1acbe-9d70-4777-b5bf-44e61079996d"
        },
        "item": {
          "id": "82db4444-a6d1-4502-a160-9a7cfff29c30",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4f0a08a8-a9eb-4a32-ac07-c1718e4610d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0754a5-68a5-4f3b-8431-5b9ce9b86d16",
        "cursor": {
          "ref": "d14f7a51-d583-4347-be3f-1ef9ea0e70f2",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bc4e3c92-58da-483e-b903-b69cc60dec5d"
        },
        "item": {
          "id": "0d0754a5-68a5-4f3b-8431-5b9ce9b86d16",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b5718296-188b-4d47-ae36-8bac3d0ddcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0404239-fd92-433a-b655-d6f8c13d3a19",
        "cursor": {
          "ref": "eccc3d08-c869-4034-9370-cd4ae7c5c768",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e6058c1d-dffd-4fb7-8372-c2de51f7b423"
        },
        "item": {
          "id": "c0404239-fd92-433a-b655-d6f8c13d3a19",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "85c049df-ef22-409c-a029-02e02c8de871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85d5522-3c55-4c05-934a-83172dd2a707",
        "cursor": {
          "ref": "34072202-b7ee-4487-a807-f16751bf047a",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0d913f7f-3891-4590-abed-5d2f8d5bd21f"
        },
        "item": {
          "id": "a85d5522-3c55-4c05-934a-83172dd2a707",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9c59dcdb-061d-4800-bda1-c45f6cf1bd6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec0b412-0660-4df7-8c68-6e0438a48338",
        "cursor": {
          "ref": "82eb3523-0eb4-4130-aea1-39f2abe37d24",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f105e432-e877-444d-b5a5-35f544e34364"
        },
        "item": {
          "id": "fec0b412-0660-4df7-8c68-6e0438a48338",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9dd562d2-273f-4e8c-8ab2-f3dd611da880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41713a43-fe2b-470a-861c-375af60f6853",
        "cursor": {
          "ref": "cc258252-575a-4cdd-8c23-d515a2149191",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b950796f-41a3-41d5-b889-c98b412a043d"
        },
        "item": {
          "id": "41713a43-fe2b-470a-861c-375af60f6853",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c7fa5c9c-ec4e-40aa-be48-626280a3d3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f5ccd6-5010-4ec0-b973-398b2d6d322c",
        "cursor": {
          "ref": "b27db360-15bb-4139-838d-62e12360760e",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fce6b67d-430d-4f0d-b9be-1e78eda6ecc7"
        },
        "item": {
          "id": "17f5ccd6-5010-4ec0-b973-398b2d6d322c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9e9758bf-7000-4b7f-b53c-61d97024840f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130e446a-4cd6-4e11-a51f-68abba306e4d",
        "cursor": {
          "ref": "93210887-6132-4ae7-a3e1-ffed3013cc8c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a697a81e-5565-4111-8c97-fab1459d4a0f"
        },
        "item": {
          "id": "130e446a-4cd6-4e11-a51f-68abba306e4d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3654e7a9-2a28-4b39-bed9-dbf3b097f8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ba9c87-a6ca-4a9b-9607-fab41c2b7777",
        "cursor": {
          "ref": "c1a6da56-2572-4571-9799-13ff3f697ecf",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "44b19dbd-9d3f-4834-ac80-99614a0540cf"
        },
        "item": {
          "id": "e7ba9c87-a6ca-4a9b-9607-fab41c2b7777",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9ca11d8f-5c8d-43c2-9197-50078c999756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20202b59-560a-4dbf-85d6-aec9743a87f7",
        "cursor": {
          "ref": "0085d83b-585b-45d6-a5f8-f9a207b8ac18",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4c2e1418-5ef3-4f4f-a44f-417c73b771e4"
        },
        "item": {
          "id": "20202b59-560a-4dbf-85d6-aec9743a87f7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "73c86d28-bb7c-4a92-a924-5fbce1a3d460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d890c5d3-ffd1-4340-b19e-6a000fb0083c",
        "cursor": {
          "ref": "449dad36-250a-4374-b6ce-708141fb6741",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6a28601a-0259-473f-9064-0dc6e7464905"
        },
        "item": {
          "id": "d890c5d3-ffd1-4340-b19e-6a000fb0083c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4fa33423-35ca-4866-b0a0-ffab37559b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333bda73-8785-49c2-b8d6-2a2da1066a80",
        "cursor": {
          "ref": "a2ae701c-054d-4760-8f90-1fc591703c42",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "18be259b-8d79-4a61-ade8-a1d30053024c"
        },
        "item": {
          "id": "333bda73-8785-49c2-b8d6-2a2da1066a80",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fe980fac-2c6c-4788-8201-31f1073f911d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356f84f8-146d-4baf-bd24-3a3c4b2078d2",
        "cursor": {
          "ref": "38ded028-a3e9-4836-a3d6-4f728fa214d7",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7d2943bb-c203-4516-a3a9-862da1586b87"
        },
        "item": {
          "id": "356f84f8-146d-4baf-bd24-3a3c4b2078d2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bec79506-b390-4b7c-99a5-f87e3604bcbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196043b7-d8f5-4553-ab5b-cec304254b39",
        "cursor": {
          "ref": "ef3dca35-c13d-47dc-b1fc-6ad54d25424b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6d5588ff-8a1b-4c3f-bddd-398a54070e52"
        },
        "item": {
          "id": "196043b7-d8f5-4553-ab5b-cec304254b39",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dcd25032-2c58-4d4c-837f-9a08be3c30ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a22678-de16-480f-bc9f-a2c28296cd15",
        "cursor": {
          "ref": "a131e071-6317-416b-986b-59ccad537a4b",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0e7d5047-89ce-4f0e-9c57-e173a5497cbc"
        },
        "item": {
          "id": "24a22678-de16-480f-bc9f-a2c28296cd15",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1e695eef-ae3a-47a1-ab62-26d5aceac874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe29c766-e0b7-45a0-ba1e-adddc5bd58f4",
        "cursor": {
          "ref": "c80fe914-b38e-4de2-9792-3c6a5671fbf2",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f3028832-9b18-4860-8170-5df5cf0fbfba"
        },
        "item": {
          "id": "fe29c766-e0b7-45a0-ba1e-adddc5bd58f4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ccc3926e-9a99-4e2d-8db8-009a18ea9bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aaf2f9e-980f-416e-9415-9b5d57fa27e3",
        "cursor": {
          "ref": "758076d5-d5af-4323-b3ca-ac3c29e4acdb",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "db1b19c2-dc8c-4e66-af03-7b70daab9e9c"
        },
        "item": {
          "id": "0aaf2f9e-980f-416e-9415-9b5d57fa27e3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5e31ecf2-e00f-4d72-8887-491e39edae0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b0ada6-aefd-4cea-93f5-59db8d9c32f8",
        "cursor": {
          "ref": "3108d39e-c71d-4409-a8df-12e1f5c99744",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a02bd744-2aab-4006-abc9-736adaf66485"
        },
        "item": {
          "id": "f5b0ada6-aefd-4cea-93f5-59db8d9c32f8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "53000540-0d68-4be3-921e-8d9db8f02e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66c4c90-f561-4a71-b07d-d71c235da4c1",
        "cursor": {
          "ref": "286a2a63-b826-41d8-a78e-b6ed9106584b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "80317916-0f67-4efc-9c49-027b6db26082"
        },
        "item": {
          "id": "b66c4c90-f561-4a71-b07d-d71c235da4c1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d4041315-5a57-46cc-860c-1b2d4dfc36f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1bdc48-4d16-49d4-ab70-e20218cc1118",
        "cursor": {
          "ref": "739aa6d1-d11f-4c10-a10d-362c710b265b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f9f9c870-b989-4da3-a1ec-8a7eda53bc0f"
        },
        "item": {
          "id": "4b1bdc48-4d16-49d4-ab70-e20218cc1118",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "05cce25b-1d8a-4fe0-bb89-deac9524d655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0241660-e315-417d-8b74-11692a0e5ab2",
        "cursor": {
          "ref": "fc813fe0-42f0-4992-99e6-a5c82a995459",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "14f5f646-d06a-4342-84a2-356a6970e8a5"
        },
        "item": {
          "id": "f0241660-e315-417d-8b74-11692a0e5ab2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c1dc6621-cc8c-49fb-ac09-c4783d2ea9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57f58c9-2f62-479a-9cb9-a35986535d9a",
        "cursor": {
          "ref": "15ccd1db-04f3-418d-9358-b85ca36b95d5",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1c9c06dd-3f11-490b-892d-db33ec19abd8"
        },
        "item": {
          "id": "a57f58c9-2f62-479a-9cb9-a35986535d9a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b9558b0c-4ba1-4ab2-8451-98c17bc587d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93c0e66-c2dd-44f4-8d3d-25e129ba19c7",
        "cursor": {
          "ref": "f3a2deae-193c-4aaf-9d2f-fb51e748461f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8735995c-9b48-4a5a-8c0b-dc07ea219ba0"
        },
        "item": {
          "id": "d93c0e66-c2dd-44f4-8d3d-25e129ba19c7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a2efbb99-37ed-454d-847a-58f9d51215b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129d45e3-a99b-4eb6-a54f-66cd04ec3262",
        "cursor": {
          "ref": "c0cd6901-d969-47a5-9c23-7fe19a8bd03e",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e3826d3e-2c12-4eb3-b797-9e5b99663b81"
        },
        "item": {
          "id": "129d45e3-a99b-4eb6-a54f-66cd04ec3262",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9f5cb7de-8cd5-4919-b040-0e74377c3c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821425d0-28b8-417d-8cd0-6d8e815b5146",
        "cursor": {
          "ref": "c9365b05-94aa-40c4-b6f6-31f4519e9c2a",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3d094cc3-54a2-4bc5-b940-9e84ad1e1801"
        },
        "item": {
          "id": "821425d0-28b8-417d-8cd0-6d8e815b5146",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "faf225e7-c522-403d-bb8f-4ae14e60c41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c84486-ac28-4bd9-966b-799eb9209a13",
        "cursor": {
          "ref": "73c6ba86-131d-4c7e-98da-2ec96eb8693d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "539d33f0-f223-49f5-b031-3090ecb21c71"
        },
        "item": {
          "id": "23c84486-ac28-4bd9-966b-799eb9209a13",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0b817ab4-f8c6-4001-bb38-a9b411c4cc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c7f2f8-dfba-48d5-9029-4ddbf50fca24",
        "cursor": {
          "ref": "5c20eadc-341b-44a0-9e21-0bf60a3f24dc",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "651a53b2-4f95-4196-8182-0149ac14f66e"
        },
        "item": {
          "id": "28c7f2f8-dfba-48d5-9029-4ddbf50fca24",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ff034c6c-2d6c-4d33-b599-3eaf1e56b6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f7c93e-616b-4b96-9903-bde79f168208",
        "cursor": {
          "ref": "12ef6221-06ec-41b9-b857-bdc8cf3c0c78",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c6f76e80-506b-4f27-911d-810d71ce15e7"
        },
        "item": {
          "id": "88f7c93e-616b-4b96-9903-bde79f168208",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d073898a-70f4-4be5-8ab2-296b43d359c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55aa6d2-d7d7-4568-bc68-01d93cb762b8",
        "cursor": {
          "ref": "130637fd-e0d5-450e-8a1f-0190bd9968f9",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "93eaac9b-ad7c-46cb-be1b-fde19d029cb0"
        },
        "item": {
          "id": "e55aa6d2-d7d7-4568-bc68-01d93cb762b8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fb19a36a-5923-46f8-8d19-1bbc14edfe3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bee22a-b5f2-49ed-a5d1-b0ac35a621c2",
        "cursor": {
          "ref": "51031218-86ce-4676-94a3-89190b093909",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8a458210-4037-4240-ba31-37647d35a291"
        },
        "item": {
          "id": "07bee22a-b5f2-49ed-a5d1-b0ac35a621c2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1baeff37-f0db-41a3-beb6-f926c5379c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad4f836-ea14-46f7-8153-2965a7bde4f6",
        "cursor": {
          "ref": "6da26adf-2550-4308-9b18-a9190188a9e1",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ac251c72-72f4-4af8-95ad-828db898efb7"
        },
        "item": {
          "id": "cad4f836-ea14-46f7-8153-2965a7bde4f6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bcde2a98-deeb-4369-8c2c-aa5d71a87eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a676174e-2d21-4e3e-94ab-8150ecc647d7",
        "cursor": {
          "ref": "b9fbf393-6807-4a55-91f0-6043f9d190ed",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "26b2f0e0-5baf-4a1d-ac08-6184c1717e42"
        },
        "item": {
          "id": "a676174e-2d21-4e3e-94ab-8150ecc647d7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dab13a1f-5a5d-4a5f-a474-bf1bb5230643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a549e1-1e06-40f5-916a-7783425ebaaa",
        "cursor": {
          "ref": "c775f6c9-0a42-42fd-b39e-2a9ffcfea393",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "666ec546-3111-473b-808c-685598dcd971"
        },
        "item": {
          "id": "59a549e1-1e06-40f5-916a-7783425ebaaa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0627e2a6-423f-44e2-b305-613bd3eb3ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50aebfc-cdf2-4ab2-8cfc-71d7d3e77576",
        "cursor": {
          "ref": "517819bc-e24b-4a54-bc3c-2f2958885a47",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7f27b0af-bc13-4df9-a34e-6b0930b7f1e2"
        },
        "item": {
          "id": "d50aebfc-cdf2-4ab2-8cfc-71d7d3e77576",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d247709a-6061-4046-a697-13fd2244c9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0976b626-bdaa-4af0-939b-e73813e3e809",
        "cursor": {
          "ref": "1a91d0e7-83b5-4217-bb6b-9bba0cbb3b1d",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f3d63bb4-51fe-4b69-95d7-163e3797e0a6"
        },
        "item": {
          "id": "0976b626-bdaa-4af0-939b-e73813e3e809",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "38f73442-4cf8-4df6-aa5b-6d16f8add416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58c982a-67a2-471b-b7c7-1e1d0f37eba6",
        "cursor": {
          "ref": "f199e81d-9502-4c84-bb2a-ac5c1e2f98a6",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6ad9605d-e3b3-4e47-9972-a0de1d47553a"
        },
        "item": {
          "id": "a58c982a-67a2-471b-b7c7-1e1d0f37eba6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d10c5aa8-9b11-4ba6-875b-124a20234fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f557a6-c701-4635-a2e2-d6b66265887a",
        "cursor": {
          "ref": "42518b00-892b-4348-ae51-4a73ffe3b89d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "46400318-fe1b-4fa7-81a5-5d7a6d431255"
        },
        "item": {
          "id": "d1f557a6-c701-4635-a2e2-d6b66265887a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5685fd86-096d-43bb-8720-6f5cd339c69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31db9ae-02e9-4a85-9e7f-66a467b0dba4",
        "cursor": {
          "ref": "cb5fded4-7af0-47b8-bfc6-038c47ab7b42",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "305a9d04-b5df-43f7-a598-8936fe0450da"
        },
        "item": {
          "id": "e31db9ae-02e9-4a85-9e7f-66a467b0dba4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "459e50e5-4907-4e23-b308-5fb9db0a0830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f762a02f-e91a-44bf-ae6d-6dd613500046",
        "cursor": {
          "ref": "a15dbc0a-9434-404f-82e3-ff60809387e9",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9183232d-3464-4736-b963-ad224ee10d6f"
        },
        "item": {
          "id": "f762a02f-e91a-44bf-ae6d-6dd613500046",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e8b302d6-c04a-4f63-970f-b84571dca632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2f910f-29bf-441e-acf6-14ba94900106",
        "cursor": {
          "ref": "28ec5283-a3d7-47b4-9397-8b51ede98008",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "276bd87c-769b-4ab2-93d3-ae9ac5ef1cf7"
        },
        "item": {
          "id": "8c2f910f-29bf-441e-acf6-14ba94900106",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cdd0b411-455f-4c47-b689-a4b78bb0cfce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8ae17c-bbc4-4ca1-a15b-ee7bc3c4c9af",
        "cursor": {
          "ref": "ae7308cb-de0b-4f5b-92fc-0c69838375e7",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "261eed53-1f6f-40c0-a810-b12a075b7f84"
        },
        "item": {
          "id": "0a8ae17c-bbc4-4ca1-a15b-ee7bc3c4c9af",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c461ff20-99cd-42fb-bff8-f7d5a641e0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a31f38-11c1-4fd4-b4de-b0ada96dfdcf",
        "cursor": {
          "ref": "d814f8a1-997a-42f8-98c8-8ed080fb6c06",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0f1f1ea3-d1b0-4d72-9123-ebd35a5193ea"
        },
        "item": {
          "id": "53a31f38-11c1-4fd4-b4de-b0ada96dfdcf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9176ee2d-d4ea-4fbc-8b41-bfa6f64ed7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07046818-03e2-4415-aa37-cbb456549406",
        "cursor": {
          "ref": "13879293-4546-40a0-b649-29191dfd0ebf",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "25c50356-efe8-4d6c-9855-e4be24d72ee4"
        },
        "item": {
          "id": "07046818-03e2-4415-aa37-cbb456549406",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "99111018-9353-44a9-9133-993604dd66ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9a9762-a9f2-4867-ac9a-0ab3e78502bd",
        "cursor": {
          "ref": "7f862e33-49da-47e0-8240-b7c1be350fe5",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5772e681-fb20-4003-bb10-aed95c042e6c"
        },
        "item": {
          "id": "4d9a9762-a9f2-4867-ac9a-0ab3e78502bd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0a88031b-230d-4743-8e4f-dd1c50495dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5ab642-21dc-4f68-ae11-74d0f2ae36c3",
        "cursor": {
          "ref": "263403f7-c91e-4646-9a18-cf64fdef81ca",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b819f4ca-57a9-471e-a2e9-a7b7eae2cfd3"
        },
        "item": {
          "id": "4b5ab642-21dc-4f68-ae11-74d0f2ae36c3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "475e4d12-ae33-4e99-9f43-3266a26ec10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7ad797-9d5a-4c85-9a92-6144599a6116",
        "cursor": {
          "ref": "45a8cbab-67dc-4be7-bc52-5d6ecfea3d2b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9a7935c4-8fc4-41ad-ad6c-2d0e06566470"
        },
        "item": {
          "id": "5a7ad797-9d5a-4c85-9a92-6144599a6116",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "29b1db20-9c8b-43e3-b115-8925becd1418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471a7d59-f39d-4dce-b5c1-57a02fd8b114",
        "cursor": {
          "ref": "3babbe2e-df8c-4e73-b6a0-4aaeae5e156d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9f50a65a-b452-4f99-929e-f1081bd79927"
        },
        "item": {
          "id": "471a7d59-f39d-4dce-b5c1-57a02fd8b114",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4b656cfb-007e-4f2c-b73c-880b59f9fa9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d378499-4496-47f8-a356-8afb1e9958fc",
        "cursor": {
          "ref": "13c57111-f2ea-4bca-987d-022b51d88e61",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "179768ef-9c4d-444a-adc9-3f1d415752d1"
        },
        "item": {
          "id": "9d378499-4496-47f8-a356-8afb1e9958fc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a87ea147-78ca-4c26-9245-89b89a8a4758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677ca892-9d2b-49c4-b4b9-9308317844c6",
        "cursor": {
          "ref": "95fed929-c830-4a86-a037-48bbbad17ccb",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "01edcf90-d9ef-4476-b681-23ad05136287"
        },
        "item": {
          "id": "677ca892-9d2b-49c4-b4b9-9308317844c6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d0ad320f-fb29-4d82-9b66-095076b2fd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf18f3f-524c-45bf-87b2-664f6dd4d30d",
        "cursor": {
          "ref": "36a17c2b-6dc2-42f2-9dab-0d79dfeb1e84",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "20dabd07-bd31-4368-b875-4b95ed342a60"
        },
        "item": {
          "id": "7cf18f3f-524c-45bf-87b2-664f6dd4d30d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5570761e-dd30-4052-a3c4-5b36d2e4cfe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ba5f9f-7144-410a-ae9e-fead098ac575",
        "cursor": {
          "ref": "b638628c-e7b3-46a1-97a0-f1872f84faae",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "23489015-ece8-40ab-91f6-8ac62c1c320c"
        },
        "item": {
          "id": "41ba5f9f-7144-410a-ae9e-fead098ac575",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6d981d87-d893-408d-a61b-dae391df5455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9673c60c-0987-4165-96d1-65e38cb0d77f",
        "cursor": {
          "ref": "4670c586-b9d5-4670-88dd-9e9e1d63123e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d1d73dd0-6879-416d-b516-c3b85893dae0"
        },
        "item": {
          "id": "9673c60c-0987-4165-96d1-65e38cb0d77f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1dca4eb1-4cfb-41bb-95ed-576217eaa509",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b69b37-68ee-4c77-b193-41b0cf054a8d",
        "cursor": {
          "ref": "0c905777-7e7f-4549-946a-29aaaf3c1af8",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c50ece59-1a46-402c-9c59-310ac82e50bc"
        },
        "item": {
          "id": "e5b69b37-68ee-4c77-b193-41b0cf054a8d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9612c06c-2b41-4573-bb94-1c763022d9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd926cf-896e-4021-aa59-1bbe1a3407b3",
        "cursor": {
          "ref": "4ffdeb40-9fe8-4b93-894b-7000207c1369",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2a788f69-cfae-4849-a2fb-2dea4c4cdb86"
        },
        "item": {
          "id": "0fd926cf-896e-4021-aa59-1bbe1a3407b3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "643cba89-832e-46dd-a349-4416e4d70434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9305e493-09ad-4b33-a835-f179bbdaa74e",
        "cursor": {
          "ref": "901260dd-d492-4d37-9dc3-f92b6bedc63f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8f31d89b-02d5-439a-80f2-7a8442420fd2"
        },
        "item": {
          "id": "9305e493-09ad-4b33-a835-f179bbdaa74e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3a569d01-836f-4e6e-af65-ccb669d4ac9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579dc8dc-b4a9-4b4e-80d5-3cec783ff2ad",
        "cursor": {
          "ref": "0a17a6aa-cccb-4678-aafb-af954b37927e",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "de819dd3-78cd-4a3a-b776-db71d7fbbcfe"
        },
        "item": {
          "id": "579dc8dc-b4a9-4b4e-80d5-3cec783ff2ad",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e7663c69-5083-42cd-8ef7-2a2f7511b9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab2b8ee-83d7-4ed0-9521-84f3b9b6b1a0",
        "cursor": {
          "ref": "41685d1b-bb03-411e-a239-9fe813512bf7",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f2c6e5d3-a1e5-4a95-90ed-b096b1602db5"
        },
        "item": {
          "id": "7ab2b8ee-83d7-4ed0-9521-84f3b9b6b1a0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "64d65c7b-b7a0-46c5-a426-ddfa54b4eb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02ec91d-d9c2-4b51-a32d-80be5e109123",
        "cursor": {
          "ref": "106266cd-4cd7-4e14-b73b-b50cabdbe109",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b2abdcfb-f08a-4835-a90d-47f1c165438d"
        },
        "item": {
          "id": "a02ec91d-d9c2-4b51-a32d-80be5e109123",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6ba1fe5b-26fd-475f-b68e-8cf03885f4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e973fc9f-025a-459f-9ed2-a8bf681d5da5",
        "cursor": {
          "ref": "35f74984-4d8e-4216-b0a1-ab57af2497d6",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d2730f5c-9d10-4b8b-ab6b-db127a2f356c"
        },
        "item": {
          "id": "e973fc9f-025a-459f-9ed2-a8bf681d5da5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b9bc06e7-a700-4c34-8d36-4e1708624c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091467e0-72af-4957-ac4b-6114b8e7ca99",
        "cursor": {
          "ref": "2f2c0b78-580f-4cf2-97f2-5990341bd791",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "280536fb-75a6-4597-99f8-e2f22bde12eb"
        },
        "item": {
          "id": "091467e0-72af-4957-ac4b-6114b8e7ca99",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ebf9d745-3781-4324-9cb6-8af23a834497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f93f028-cca1-4e3a-8a8e-a293dfe905e8",
        "cursor": {
          "ref": "b352acdd-dd30-4183-be7e-913326cc1488",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d1725657-5cc4-464d-8941-626bb92301f6"
        },
        "item": {
          "id": "9f93f028-cca1-4e3a-8a8e-a293dfe905e8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "00f4b7d7-27b4-4c9e-bf97-ca0203b53ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e6799f-9890-47c4-8af3-3deb060472cc",
        "cursor": {
          "ref": "fc49173f-0d3d-422c-bb07-876eaacd4543",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bb73dc7e-2cf9-4f31-87b0-bdd2d73ee98a"
        },
        "item": {
          "id": "b3e6799f-9890-47c4-8af3-3deb060472cc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ade0a287-5452-4112-a1d7-9530675eb991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5ea148-08d0-4d65-9901-c5f0a4c8a877",
        "cursor": {
          "ref": "45410bfb-ed36-4f64-b4e8-757a4bd7d9be",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cd27952a-69fd-41f0-b9e8-0c53de1ad796"
        },
        "item": {
          "id": "ef5ea148-08d0-4d65-9901-c5f0a4c8a877",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6b49bc8d-4419-4512-bad6-41834b1d5d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374a9a02-fab1-4b06-aae2-d9519427e9b7",
        "cursor": {
          "ref": "492a93e8-a025-4683-865d-058897f89630",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a187dd1f-9efa-4eff-964c-8d1371c90ade"
        },
        "item": {
          "id": "374a9a02-fab1-4b06-aae2-d9519427e9b7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "32a24be0-3e3d-498e-aaf0-d167561bb036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbed1cb9-19df-429b-8208-6aefee5a1d5a",
        "cursor": {
          "ref": "19475f99-9a57-49c0-b3ba-5d912c780116",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a5517095-d265-4e78-a524-b90ff3affee4"
        },
        "item": {
          "id": "cbed1cb9-19df-429b-8208-6aefee5a1d5a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4749378b-3805-4fa8-b60a-dd7fed635a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c89e96a-3832-4fbb-bee0-b3bc1f380a1f",
        "cursor": {
          "ref": "afe5bada-c53e-4328-8935-1becd7c6667f",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "81d88420-34fe-4c2b-b215-e652522f74a5"
        },
        "item": {
          "id": "7c89e96a-3832-4fbb-bee0-b3bc1f380a1f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "31381a37-6014-429c-888f-1cba389bcbd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb11afd-1e05-4be0-9929-d4f08748fa48",
        "cursor": {
          "ref": "e9e09585-7fa0-4656-8261-b7e84987ad9a",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "559dbe37-86c0-4d72-b6c3-ccc01e7391ee"
        },
        "item": {
          "id": "8eb11afd-1e05-4be0-9929-d4f08748fa48",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c69ae963-9607-4dac-be72-4b855c37c1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21fe0f3e-ba80-4d06-853c-804b97373cc2",
        "cursor": {
          "ref": "d89fea82-60c2-42bc-8310-ebe6c3853b5d",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f9bc0e7c-00a0-469e-b7ce-d03127a685f8"
        },
        "item": {
          "id": "21fe0f3e-ba80-4d06-853c-804b97373cc2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "774a9af3-275f-4aa8-8bb8-81e3ff365a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f79f1e-a543-4a29-98a5-746ad7eeb1de",
        "cursor": {
          "ref": "03f3e141-1d5d-433b-908f-733ff64b9274",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5251a10d-0810-4ed4-bc6c-59d1a937eb27"
        },
        "item": {
          "id": "04f79f1e-a543-4a29-98a5-746ad7eeb1de",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fc10900c-57b3-40ff-aefa-539e68070e8f",
          "status": "OK",
          "code": 200,
          "responseTime": 206,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "bbe74da4-837d-4bda-ad97-a4e4bf941196",
        "cursor": {
          "ref": "e723b30a-9cb3-4790-b2be-ae38658a9ccf",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f2866639-84b1-4c9c-84b1-9fb9a3224cc7"
        },
        "item": {
          "id": "bbe74da4-837d-4bda-ad97-a4e4bf941196",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1a97c944-1e97-476e-a796-384120f62b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0b0694-ecb4-4927-9b5b-f6efa23f6e67",
        "cursor": {
          "ref": "84e5e8d6-5e66-4a2d-aac1-352e242f923c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6973666d-134d-476c-903b-a4cbad843768"
        },
        "item": {
          "id": "0b0b0694-ecb4-4927-9b5b-f6efa23f6e67",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cf9cf1ba-af96-4ed8-a590-b40956a27fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af48500-6443-42df-8c9e-0c75d52741dc",
        "cursor": {
          "ref": "93942026-0254-4057-907d-c5dedeac88e7",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1873c6af-0206-4084-ac52-91caaa33698c"
        },
        "item": {
          "id": "1af48500-6443-42df-8c9e-0c75d52741dc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6d8431c7-f7d5-4ed8-bc92-d0809d56d9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba8cdc5-17e4-48ef-9ce3-e4cd7ad8210b",
        "cursor": {
          "ref": "af64f000-ada1-4bce-bc9d-f0c3644c30cf",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ef242286-c019-46b9-b4a7-6891569bcd63"
        },
        "item": {
          "id": "7ba8cdc5-17e4-48ef-9ce3-e4cd7ad8210b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0080c324-b9ee-496d-9331-88b8198935d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc744e54-1ba2-4ac5-88f2-7e739a84a40b",
        "cursor": {
          "ref": "e71ecc53-e93a-4964-8828-a8059cc599ba",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d9b15a70-dafc-415c-bc1a-1305d02aa8dc"
        },
        "item": {
          "id": "dc744e54-1ba2-4ac5-88f2-7e739a84a40b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f0f1d00d-72ec-4ba3-8d97-3b0d04dad1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20718bfd-2fe4-4864-9f6e-b2525c7eafdf",
        "cursor": {
          "ref": "146bc06d-8ae0-4026-9a34-8256c260c8cb",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "12f0aae3-aca0-4c12-b4d7-b380109053da"
        },
        "item": {
          "id": "20718bfd-2fe4-4864-9f6e-b2525c7eafdf",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1295efbd-7350-46ad-bf9e-f80ff141ad0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d9dfb1-6e4d-49ae-910b-433e2b50a7f7",
        "cursor": {
          "ref": "5cabf9f7-afef-4006-980d-367511cb356b",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a278c7b7-3ee6-4c3b-887b-6f727597091b"
        },
        "item": {
          "id": "66d9dfb1-6e4d-49ae-910b-433e2b50a7f7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4b05645e-9e16-440b-800e-bf29cf92801f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed1c20c-d40b-466a-a7a4-ee1f1ccc9557",
        "cursor": {
          "ref": "04251837-d6f0-4064-9770-23171a3f5d20",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c77a5e11-c778-4cbc-a9a9-4bcf799b930a"
        },
        "item": {
          "id": "6ed1c20c-d40b-466a-a7a4-ee1f1ccc9557",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ef730ac4-6718-4b31-84be-7fb3751fb547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142cacdb-1d07-434c-a022-f3ead3c3395a",
        "cursor": {
          "ref": "8f84a8b8-d30c-46ea-8715-d954235058a1",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1ab28f47-8f48-4fc3-a8b8-0f735a610689"
        },
        "item": {
          "id": "142cacdb-1d07-434c-a022-f3ead3c3395a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e76227cb-ffa3-4581-bdff-2fc5b76168af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271b9e42-1b81-46cc-bf71-d4255ecc28a5",
        "cursor": {
          "ref": "32bb13ca-74f6-47bd-9f64-0e897ea4fa7f",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9e91a8a1-5ee9-46e7-bf28-390fa0d79007"
        },
        "item": {
          "id": "271b9e42-1b81-46cc-bf71-d4255ecc28a5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "75fc276f-272f-4081-b8f2-7f6a43f0c57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa931a2-fa82-472d-89d7-1191de860ef6",
        "cursor": {
          "ref": "f622138b-689d-4c71-b655-78bd0823c22c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b5adc35d-dc18-49fd-a872-c6354e9b39fe"
        },
        "item": {
          "id": "afa931a2-fa82-472d-89d7-1191de860ef6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "64782bb4-fc56-48fa-aba7-7acef7cfdcd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21696e01-b35d-42e0-8fd3-108f0eb66efc",
        "cursor": {
          "ref": "a48f712d-85a1-4e49-896f-a6b4bc490650",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d2031ec2-fc4e-449f-8c76-3453d7a301ba"
        },
        "item": {
          "id": "21696e01-b35d-42e0-8fd3-108f0eb66efc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f0e3001e-17da-4cda-a7dd-2fc99b4d2a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9a33a2-0f29-4ced-9482-6b47f3fa234a",
        "cursor": {
          "ref": "8fe4d897-657c-4ffd-8857-36c6a6886f94",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ccc2c3c1-17ad-417e-bfb1-008a255b31bf"
        },
        "item": {
          "id": "7f9a33a2-0f29-4ced-9482-6b47f3fa234a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8a4388ec-c33f-4429-b197-a288d6c3482b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0a9f84-ac8a-4e9f-a8e8-723cd9be9d42",
        "cursor": {
          "ref": "9bac1db9-de7c-41a9-9df9-31ee929ce1b3",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dc1ee65c-5676-4cca-a31d-ad0ce9147e42"
        },
        "item": {
          "id": "2f0a9f84-ac8a-4e9f-a8e8-723cd9be9d42",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a2a68e9e-44d5-450f-a75f-7b2b32470afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a3c4e5-8ae7-4bca-9d2b-9745222f2335",
        "cursor": {
          "ref": "2d77abdf-ef92-4ef2-a767-d09f5f173b72",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "702da62b-d515-4fdc-b953-56fcf59373c3"
        },
        "item": {
          "id": "a8a3c4e5-8ae7-4bca-9d2b-9745222f2335",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e2d26c67-2d8d-4d8c-9fcd-f464a3d0fd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcedd63-b5d5-476e-a42f-84d344e05ad7",
        "cursor": {
          "ref": "98e73daf-e5d9-49ee-b7e9-9255ad790e80",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "52750976-ee6d-40e9-8d39-a49282cebff6"
        },
        "item": {
          "id": "fdcedd63-b5d5-476e-a42f-84d344e05ad7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7575ea69-c2b9-4e2f-a433-ed1f32fe1ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f044260c-f725-42ae-9450-84daa1841427",
        "cursor": {
          "ref": "deea96bc-37c2-4f18-975f-009bc44f37d5",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e4677e3d-5034-45d0-bd55-c42517cb843d"
        },
        "item": {
          "id": "f044260c-f725-42ae-9450-84daa1841427",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7dbbf3e5-d5af-4892-bfcc-752135c37513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e923f42b-13ec-4a67-bc71-c8b064bb0cc8",
        "cursor": {
          "ref": "0f3073fb-5c3a-4989-af79-3fe81fa04f7b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "855fc16d-cde1-4c61-a863-ba599ac2938b"
        },
        "item": {
          "id": "e923f42b-13ec-4a67-bc71-c8b064bb0cc8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "64316827-1722-453f-a2b8-315cf6cf404e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4995b9-ba8c-4748-a902-ac2e4b00d409",
        "cursor": {
          "ref": "8d3e64eb-ed4d-41f8-aa60-9ef43f92f59c",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1fe23c02-a83e-4307-a7a7-53d74d7de745"
        },
        "item": {
          "id": "4d4995b9-ba8c-4748-a902-ac2e4b00d409",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "aff2fe01-9d06-444f-9dba-bcdf556ad0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1396c7-e0ec-43a9-8835-bbe47191f738",
        "cursor": {
          "ref": "cd54f5a9-ae6d-4343-987e-3c0bf136e518",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0e4f9b8a-9860-492b-bdc3-bd3d0272945c"
        },
        "item": {
          "id": "aa1396c7-e0ec-43a9-8835-bbe47191f738",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6d19c48d-07aa-4364-aed5-11af200cf2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44274432-05b1-4a97-aa76-133a92d2ccc9",
        "cursor": {
          "ref": "3e95a609-406c-4297-96d2-1d6356471149",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bd742584-43a5-450a-866f-24c3e2417310"
        },
        "item": {
          "id": "44274432-05b1-4a97-aa76-133a92d2ccc9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "96454214-c139-4f10-87ec-1cf89ceb8eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf74260-428f-40bd-ab03-603568e4d5f9",
        "cursor": {
          "ref": "3c698b8a-43b3-4f13-a213-5e54b8b57e65",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5fae710f-4b1c-47dc-997a-795b03ce35cf"
        },
        "item": {
          "id": "5cf74260-428f-40bd-ab03-603568e4d5f9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e341d8c0-291c-47d7-832d-c0578b0e45d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f2b34b-865f-4b50-869c-3ea0e2ada54a",
        "cursor": {
          "ref": "6e5f1013-9671-4c3f-878d-994f08b2aff1",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "95d7a7e6-83a9-4a53-8949-f23ffbfb18dd"
        },
        "item": {
          "id": "75f2b34b-865f-4b50-869c-3ea0e2ada54a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9ecaa842-a952-4f0e-9b6d-31840089edce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231dd731-d52c-4572-978d-62b1f9934503",
        "cursor": {
          "ref": "9b3ca693-eba9-4ace-8096-fd0e51439232",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2b2e5666-c9a7-4678-99fd-9e63c89df076"
        },
        "item": {
          "id": "231dd731-d52c-4572-978d-62b1f9934503",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c10696fb-6262-480a-9118-da240cc118af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf79abc5-b264-4780-b7cc-5a0522217b97",
        "cursor": {
          "ref": "1e1e82dc-0a49-4372-b501-7a3c89d95ae2",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "09ef4206-3357-4c84-8cf4-3f8a29bb8d0f"
        },
        "item": {
          "id": "cf79abc5-b264-4780-b7cc-5a0522217b97",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2e3e4c46-8856-4512-9cb5-bef5f5a738f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c854b9e-bbbf-4cb0-a9da-01f05db8b0b4",
        "cursor": {
          "ref": "a1693095-af12-4d57-848c-3d8808e3e148",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "be7e8de4-17c7-48d5-9f54-8cecd75271fa"
        },
        "item": {
          "id": "3c854b9e-bbbf-4cb0-a9da-01f05db8b0b4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a8b2cb20-6c39-4c20-8b76-b9da65a9fc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a433a971-c2a7-482f-a8ff-a3f677f614b0",
        "cursor": {
          "ref": "bd6e75b3-8c59-4062-a4f9-d83e9f41318a",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "09023db6-71f8-4605-95b1-313b65215309"
        },
        "item": {
          "id": "a433a971-c2a7-482f-a8ff-a3f677f614b0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1ad3705a-f807-4b1d-8017-aa5af00ef375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99e433d-d7ff-4817-9dcd-62612e9a4a49",
        "cursor": {
          "ref": "e7e3d6fc-532a-4f61-865b-d84c0eee7813",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e30a8d9a-c1e8-4c29-814f-2433355683eb"
        },
        "item": {
          "id": "f99e433d-d7ff-4817-9dcd-62612e9a4a49",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d723a885-d089-44f1-96a4-865b5bf04bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7529184d-2008-4629-8c7a-a2aace26244b",
        "cursor": {
          "ref": "91a30b46-6a99-4321-8b7f-0857c1591857",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fba1547b-c4ec-4c40-9e2b-2d9531b2fe00"
        },
        "item": {
          "id": "7529184d-2008-4629-8c7a-a2aace26244b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7b0db9aa-3440-49e4-85c6-48209a628e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46930469-2df8-4ecf-9194-2a59202b4f15",
        "cursor": {
          "ref": "51dac0f5-a633-46c7-9813-390980878a77",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "66ba7470-9e2d-444a-a104-7f7feab77c7b"
        },
        "item": {
          "id": "46930469-2df8-4ecf-9194-2a59202b4f15",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e5b72065-d2ef-4c80-bb73-aeb8cbabe648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdc38a0-35a2-4882-a488-f91bc1fb1e4b",
        "cursor": {
          "ref": "d17b6996-4380-4a5c-bdfa-69b5adae0e20",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "11a622ba-bcc3-4d79-b151-3ad84ddfad8f"
        },
        "item": {
          "id": "dfdc38a0-35a2-4882-a488-f91bc1fb1e4b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c4b4b07a-c3f7-4fff-bfd2-debb2bec8ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa49bec-af83-463d-b237-6e5189c35e5c",
        "cursor": {
          "ref": "6e198fcc-18cc-42be-9a78-526bccc9b5fc",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e6267068-41e1-4f37-95c9-8444db66d834"
        },
        "item": {
          "id": "ffa49bec-af83-463d-b237-6e5189c35e5c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b3529a67-d645-46d0-a529-6ccf0fb85d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e88b74b-8549-42da-8813-737b7d19393f",
        "cursor": {
          "ref": "6bd5ab8a-b535-4086-96d3-329322e023ac",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "32cdd73f-e907-4a78-9a18-7e8957300096"
        },
        "item": {
          "id": "5e88b74b-8549-42da-8813-737b7d19393f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6e4b379b-0faf-48fc-98df-348d6756417b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a00201b-5855-4201-b667-b9cbb0bea628",
        "cursor": {
          "ref": "c87ff958-4362-400c-9290-f3cd868e4ab7",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a2b3265a-2778-437c-ba75-32c67303eb06"
        },
        "item": {
          "id": "6a00201b-5855-4201-b667-b9cbb0bea628",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dd72f990-6695-4896-9efc-bfc55e47e6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2978a56b-3d5e-44fa-be13-c4b857e0a7f5",
        "cursor": {
          "ref": "54018b53-6dd0-4a39-8880-aec245af0d28",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "95508a7b-5e23-46a2-9fe4-05757408c55c"
        },
        "item": {
          "id": "2978a56b-3d5e-44fa-be13-c4b857e0a7f5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "298ccde3-ebb4-460b-9017-596f8439216c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fea2918-330c-438d-9e76-3ccc92c0b561",
        "cursor": {
          "ref": "648408f0-f91f-46d6-93f5-de09f35f5a07",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "96dfa2ee-3082-40a4-9ecc-31c8ec1a8ea5"
        },
        "item": {
          "id": "4fea2918-330c-438d-9e76-3ccc92c0b561",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1571c987-a330-42ba-b4d8-b31e68091350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fb2cd5-d1c8-4969-a626-77a776f9f44f",
        "cursor": {
          "ref": "f59b753c-cb3e-4d1d-84da-264f104ae0e1",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "84e50b2e-0edc-4688-a292-1bbba3c60ddc"
        },
        "item": {
          "id": "b8fb2cd5-d1c8-4969-a626-77a776f9f44f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cf67f812-176f-495e-bd4d-57a79f46600f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f77451f-392d-47b2-886b-f8d9aac1f84c",
        "cursor": {
          "ref": "5d8f27b4-8553-4866-82fe-3e0802c8df54",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "422824f2-0be6-4957-b416-a4b3a1d903c8"
        },
        "item": {
          "id": "5f77451f-392d-47b2-886b-f8d9aac1f84c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b1550676-c8bd-410d-8840-0f547de25747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d3cd2b-1f17-45ef-b249-580b75267b29",
        "cursor": {
          "ref": "c8221832-a3dc-4b3e-b211-01bd20148a0d",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "55cd4d99-caf7-4d24-9d14-02149536525f"
        },
        "item": {
          "id": "65d3cd2b-1f17-45ef-b249-580b75267b29",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4304a7f6-75e8-4c3c-85f4-21cb9b6b8911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b47728f-fd5d-4892-8ac7-61ef40de6afa",
        "cursor": {
          "ref": "55556391-8ed8-4762-a360-8b5a9b781798",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b3cc0718-356a-4513-b6a7-64825b3eb6e6"
        },
        "item": {
          "id": "8b47728f-fd5d-4892-8ac7-61ef40de6afa",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "28f3eec8-2382-4665-b35e-9f549112e30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae94b6ef-2566-40bd-ad32-69af327cc41f",
        "cursor": {
          "ref": "a21585ab-d064-499d-b573-2137873bda28",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "71de1986-04db-42e2-a713-fc3fdab6377a"
        },
        "item": {
          "id": "ae94b6ef-2566-40bd-ad32-69af327cc41f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c0c7216a-7580-442f-992f-5a05f9abcc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf700f1-8f5b-45be-95a8-385b572375be",
        "cursor": {
          "ref": "34a08984-1559-4b2d-8cfb-d126cdcf2be3",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d4ca4fb9-317a-4002-91d3-806b4340e881"
        },
        "item": {
          "id": "0bf700f1-8f5b-45be-95a8-385b572375be",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2ad18c57-105b-4564-9fcd-4ab5890251d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d7b5e4-2083-47f8-b740-5cd6dd26d910",
        "cursor": {
          "ref": "36c7f506-7198-4f55-9f56-77dcc429917e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "713027da-7439-429b-9269-1bc759420208"
        },
        "item": {
          "id": "35d7b5e4-2083-47f8-b740-5cd6dd26d910",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ac615b3d-2f0a-4349-9611-175af89b368f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370d7bcf-3bf4-46f5-a910-003313f48b12",
        "cursor": {
          "ref": "5487e066-323a-4129-91ff-97515dd21b62",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "925215d2-361d-4c7f-9a32-a3794905abd9"
        },
        "item": {
          "id": "370d7bcf-3bf4-46f5-a910-003313f48b12",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9eb3eaeb-55d0-4b42-88ad-5aa005d74819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62d61ad-ebf9-4293-9b47-ce5e351069a0",
        "cursor": {
          "ref": "59c6f2b2-a2b4-43bf-99b6-1ad5f51aa971",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0970cba8-d06e-44cf-b3cc-537714a3c76f"
        },
        "item": {
          "id": "a62d61ad-ebf9-4293-9b47-ce5e351069a0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7cfb5b91-0e58-4639-a9a1-bd59a408f16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb45196d-3c00-4ff3-8f77-6a793f136b4b",
        "cursor": {
          "ref": "3fbcdd2e-1be3-4676-9117-8d05d880ae68",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "307af06d-55ee-4280-b45e-1cd2c91d9421"
        },
        "item": {
          "id": "eb45196d-3c00-4ff3-8f77-6a793f136b4b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "047149a0-9b21-4566-b772-ab140e3eb77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308553ba-7b27-4516-8693-a4f4f7fc5b68",
        "cursor": {
          "ref": "a0a4afec-bfd0-42be-9c75-5bceac778e27",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1b7b960e-d684-46d7-92fb-90865a37d4cf"
        },
        "item": {
          "id": "308553ba-7b27-4516-8693-a4f4f7fc5b68",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6e93da60-93f7-4a04-8935-b1056a5b9599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a378237-2e16-483d-a522-b8366d400822",
        "cursor": {
          "ref": "c81e84eb-7abe-427f-8a60-a3500725ce13",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e493808a-ac6b-4ca9-bf2f-56aa103a2b16"
        },
        "item": {
          "id": "9a378237-2e16-483d-a522-b8366d400822",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c2ab6012-b1bd-46e3-8480-fd5c95c4eff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ff6419-f535-434d-8b2c-bedeb225f6f2",
        "cursor": {
          "ref": "6d8b501b-e0ec-47a0-8fce-77bb3c4aa836",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5dbc740e-363b-4340-8f71-776aa48153c7"
        },
        "item": {
          "id": "d7ff6419-f535-434d-8b2c-bedeb225f6f2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ad9eb323-4e76-494a-b0ab-2c58364e3601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae8479e-31aa-4f18-b354-c8b221693ffa",
        "cursor": {
          "ref": "33901271-f5ab-43a9-be4c-3e1438a8d1ba",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b2812de6-ea9d-41c9-9c10-c82dc6425479"
        },
        "item": {
          "id": "9ae8479e-31aa-4f18-b354-c8b221693ffa",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "073e2f1a-cc3b-4710-8267-03d169cbff2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb4bd43-f9b7-406e-838f-d56ef97f872e",
        "cursor": {
          "ref": "10488fad-0a82-49e1-b606-1b41ee0e7f09",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e56960a6-e01d-4360-8411-3b6ff3a3ec6c"
        },
        "item": {
          "id": "0fb4bd43-f9b7-406e-838f-d56ef97f872e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "698d6655-d7d1-42a6-836e-c53e6a310c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34fb3ab-7519-4497-9638-a0e49b1c7c79",
        "cursor": {
          "ref": "a34dff8b-5bc3-4986-a4c7-d718b381215e",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2eec994d-2965-4790-b7ce-65e5424de987"
        },
        "item": {
          "id": "c34fb3ab-7519-4497-9638-a0e49b1c7c79",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5a6f93a5-6959-4456-8507-9359fc80c842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3045587e-5e15-4838-b88d-8d16f5ea89db",
        "cursor": {
          "ref": "d1d75664-26b6-4e2f-9a88-0be6cb624ff9",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2871ae46-ce91-4251-842f-9adbfc66f6a2"
        },
        "item": {
          "id": "3045587e-5e15-4838-b88d-8d16f5ea89db",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "86a04a6c-5f71-48ee-aca9-dd1796014374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cd4604-0307-4d8f-90a9-9632597275d8",
        "cursor": {
          "ref": "e029e777-8b15-4fb6-b28f-a6571e372d2d",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4a935807-f53b-48b0-82fc-875bbfa91efb"
        },
        "item": {
          "id": "11cd4604-0307-4d8f-90a9-9632597275d8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0079b6e8-32fe-492c-9eaf-d79384152316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c616be8-fd76-404e-aa80-d237f4166249",
        "cursor": {
          "ref": "a05fe312-219a-45d7-a02e-a4dd6ce49dc5",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0750ad2c-b916-4f9a-8e18-68d322e9bf18"
        },
        "item": {
          "id": "4c616be8-fd76-404e-aa80-d237f4166249",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "414c88a0-1a51-4bc8-8d84-9bb0488b393e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336384d6-2b35-4f15-b710-bf197d040067",
        "cursor": {
          "ref": "cbc509a6-6ade-4bd3-897b-ea571e029e07",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7c5dde11-de97-4ec4-b778-9a203e251358"
        },
        "item": {
          "id": "336384d6-2b35-4f15-b710-bf197d040067",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6ff3ae6c-1b61-4952-82c4-eece465aa727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53df4a6-e1f3-4697-a652-67ca24f0e372",
        "cursor": {
          "ref": "781dc3b9-7be4-4c49-b13d-3f6a709908ad",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "60d82dd7-c128-466d-87d9-77acd10da9ea"
        },
        "item": {
          "id": "c53df4a6-e1f3-4697-a652-67ca24f0e372",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "570fe1a7-6708-4ab9-91f1-93dd84ed1bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d03934-83b7-4a45-9b82-5d57004ee8cb",
        "cursor": {
          "ref": "5cf59d87-6464-4f1a-aee5-61bb0ecdcc47",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0c06539b-dba2-4cd0-90e4-34e616810f98"
        },
        "item": {
          "id": "b0d03934-83b7-4a45-9b82-5d57004ee8cb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1707d4c0-b720-4283-8458-655edc71380c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77734766-1511-43d6-a3e4-73ccf54268ea",
        "cursor": {
          "ref": "bf8f49e6-46a2-4fd5-ae4d-694370470ccd",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4a69566f-d199-4818-9dbe-c42461b69e03"
        },
        "item": {
          "id": "77734766-1511-43d6-a3e4-73ccf54268ea",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "825f5320-db1b-4aff-bb63-e84c675a9416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f56f17c-6b6c-4d96-b916-e2ae46a37435",
        "cursor": {
          "ref": "8205d563-426e-4bd4-89c3-9859d8a26e6c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d3604b73-b39b-41f9-bc3e-2331860d960f"
        },
        "item": {
          "id": "0f56f17c-6b6c-4d96-b916-e2ae46a37435",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "32c1a90d-456f-4b53-8d76-dfd61500a23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea3ffb0-6b90-4af9-930d-ae1a29e6ffe5",
        "cursor": {
          "ref": "221cba9d-afe2-447a-94f0-78e62b9713d0",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f2e40bfe-0342-4a33-b229-8def4185b6d9"
        },
        "item": {
          "id": "bea3ffb0-6b90-4af9-930d-ae1a29e6ffe5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "15d93b25-ecc2-4689-bd50-d138cca944d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6c5b07-c7be-4847-b6e4-97ccd96dc35a",
        "cursor": {
          "ref": "5a2287ce-53df-4147-8f61-57866d2931c8",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d7382f00-ed19-4c7e-842a-c90c1091644f"
        },
        "item": {
          "id": "bf6c5b07-c7be-4847-b6e4-97ccd96dc35a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0cc8883d-d798-4634-a83d-21b0da5f644d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2d46cc-48ec-4403-801d-6763148f6094",
        "cursor": {
          "ref": "cae69b91-3156-44e5-8034-ae1530faf2c9",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "63774da9-3454-4ed7-a82e-72a55d36b2f6"
        },
        "item": {
          "id": "ce2d46cc-48ec-4403-801d-6763148f6094",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "75d784c6-6263-4cb8-9b51-29c152f9cae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3addbc7b-c6b0-4a23-90b4-e1825fe353fc",
        "cursor": {
          "ref": "2da5cbdc-032f-413a-a5f5-22fc12748926",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b0561954-3c46-4295-b43d-dfadd7150d72"
        },
        "item": {
          "id": "3addbc7b-c6b0-4a23-90b4-e1825fe353fc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "21c303c1-daa6-4d73-905c-76bd37799b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe193c6c-7ed2-40d3-86bf-614ec10873a6",
        "cursor": {
          "ref": "3d053e09-995a-458b-ab44-62ba822c9213",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3bd094bd-5420-47e2-81e6-aa04ec9f849f"
        },
        "item": {
          "id": "fe193c6c-7ed2-40d3-86bf-614ec10873a6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d5cebf78-1d37-49cb-961f-dafd9e09cc22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f1e765-9573-4225-a44d-be4557e62a72",
        "cursor": {
          "ref": "ea66f5d5-c67e-4f78-9329-1a002144bab4",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "700d315a-9a42-4fc0-a823-e3b1d0de8104"
        },
        "item": {
          "id": "67f1e765-9573-4225-a44d-be4557e62a72",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "693cf029-88d4-4b40-95b6-acaf698a8e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc24317-df95-44c6-85d9-8ea73fdc0ddd",
        "cursor": {
          "ref": "c522441e-4f63-4a98-99c5-fc66a9ee32d0",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e1e15921-4845-4d0f-be05-eac1697486bf"
        },
        "item": {
          "id": "bbc24317-df95-44c6-85d9-8ea73fdc0ddd",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "40babdd9-25b9-4185-8c1c-6da3b2adbf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4d6a1f-cb7c-493e-bfb0-6a5ade0d0f8c",
        "cursor": {
          "ref": "85b1cbcb-4238-478a-8795-9bcdb4ed26c9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6499916c-bd36-4c98-9a33-9bb6abda30a7"
        },
        "item": {
          "id": "5a4d6a1f-cb7c-493e-bfb0-6a5ade0d0f8c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "214f3336-b75f-4c5e-b881-770f68099599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59b15ca-88c1-438e-8c04-8e8a4f3df90f",
        "cursor": {
          "ref": "aae0cee8-c571-4d47-9c8a-6c0fce5a1a47",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2b25aecc-06d2-4231-8126-5a1c6c277761"
        },
        "item": {
          "id": "b59b15ca-88c1-438e-8c04-8e8a4f3df90f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d79af3f3-5aab-45b1-b8a7-8553429615a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576453c5-5608-4ee2-b6d4-fb5174e1610d",
        "cursor": {
          "ref": "71c73403-d9b7-4d7d-8287-bc4074a05cc7",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6fea105c-eda6-498b-b981-e2865a49cfed"
        },
        "item": {
          "id": "576453c5-5608-4ee2-b6d4-fb5174e1610d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "dc25c8f4-b8f8-4a33-beda-231ba18de414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c583510e-1f1e-4652-aea7-0d8826bc4a4f",
        "cursor": {
          "ref": "96a723e3-5c12-4d13-9f6f-160cb6049944",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5db1a784-5fe1-4db7-8a49-c26749839ded"
        },
        "item": {
          "id": "c583510e-1f1e-4652-aea7-0d8826bc4a4f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "00b9a4a4-9ba6-4916-a39b-e0bdb4012c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3ff335-012a-4b06-a6dc-ab6c3b6fa04b",
        "cursor": {
          "ref": "a54de5ce-4770-4476-8edf-099fac2949f4",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "cf228073-1255-4a88-8d24-0d760d8dba38"
        },
        "item": {
          "id": "0a3ff335-012a-4b06-a6dc-ab6c3b6fa04b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b34f6590-b82b-4d2e-b6c9-346e77623dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de8dfed-df6b-4343-b74c-5e2826213761",
        "cursor": {
          "ref": "46c969b3-867e-43e3-9674-c8badd5c5c69",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c4434e40-bbbc-4a40-8dd6-d0ef237a28ef"
        },
        "item": {
          "id": "4de8dfed-df6b-4343-b74c-5e2826213761",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "87e9cb25-04b8-49bb-8cb7-a9d5d4955730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ae03f5-752a-4b32-8625-067aaaf6bfd6",
        "cursor": {
          "ref": "738c72b3-daf7-4f64-a0d5-67a8f44674d6",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "309241f1-7c09-438a-9436-6dbc511ca6b7"
        },
        "item": {
          "id": "92ae03f5-752a-4b32-8625-067aaaf6bfd6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "da092deb-a2a0-412f-8eee-8456a4acfa04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdc8ca1-6387-420d-9b81-6ad5642d320d",
        "cursor": {
          "ref": "47dd0cef-d606-45cf-b640-d84126024f11",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a30190ef-28fe-4728-b589-056e5d0babe7"
        },
        "item": {
          "id": "fbdc8ca1-6387-420d-9b81-6ad5642d320d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bc8b52c4-fbbe-41ba-a93c-439c4826d951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d85cc56-c562-4eaa-8c88-440853360521",
        "cursor": {
          "ref": "e1402bc8-ca06-44a8-ab4d-bd56dc4d6453",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "07c288f7-082f-4596-b2c2-8f0189024d75"
        },
        "item": {
          "id": "8d85cc56-c562-4eaa-8c88-440853360521",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "38f5eb26-d17a-47ad-97f4-57eac7262b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d359ca0c-b47e-4fe5-bccc-c3abd2c3812b",
        "cursor": {
          "ref": "b1fd5094-a510-4e62-abd0-dbb831616f8a",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "31373deb-91cd-4091-8c0e-6475257ea297"
        },
        "item": {
          "id": "d359ca0c-b47e-4fe5-bccc-c3abd2c3812b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2138f47d-0593-481a-8b31-87e5b42cebdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7b808a-411d-4d67-a3bd-e9039f7fda59",
        "cursor": {
          "ref": "49be5e81-17db-4774-92e1-b826186ac5a7",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5200ba0b-b49f-4033-bea0-bcc2e0fc18fb"
        },
        "item": {
          "id": "3d7b808a-411d-4d67-a3bd-e9039f7fda59",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6a69b089-92d7-476e-8eed-2f67302be78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c29adb-3d71-4434-b377-eb916154b1a4",
        "cursor": {
          "ref": "991232ba-0d49-4c3c-b95f-364302bcef8b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f6fc3f0a-8655-433c-95d0-5f84c8370d51"
        },
        "item": {
          "id": "64c29adb-3d71-4434-b377-eb916154b1a4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "87d7a09c-901b-425c-9ae1-ce99a9774d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65846e7d-ec8a-41dd-910d-31c920cd03fd",
        "cursor": {
          "ref": "25eef7a1-fdb4-458b-91d3-94a928b0bf57",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "86788244-570f-47cb-a1c9-3dc2a1d939a3"
        },
        "item": {
          "id": "65846e7d-ec8a-41dd-910d-31c920cd03fd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8814cd50-be7f-4c21-8a45-1fa83c9bca54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d66f3a-ee96-4d13-a1ea-9d3682b96f4d",
        "cursor": {
          "ref": "d74a47b8-1f0b-42ef-bc26-c9897b72a3fb",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "39de0f9b-5487-4e65-ba87-b02eaeacfdac"
        },
        "item": {
          "id": "78d66f3a-ee96-4d13-a1ea-9d3682b96f4d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6a020165-7cb2-43cc-884c-f9484a90f8ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068de12b-dad6-4dc1-9082-70aaf52d498e",
        "cursor": {
          "ref": "017ce69e-4d4a-4679-999c-66f34fdf764e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8e8d9cc8-2185-4196-aca3-df0416c9271d"
        },
        "item": {
          "id": "068de12b-dad6-4dc1-9082-70aaf52d498e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4474276f-14a5-46d4-a7b0-43988a7cfc38",
          "status": "OK",
          "code": 200,
          "responseTime": 216,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ec3a40-9488-48ef-b485-ceac2afc87a1",
        "cursor": {
          "ref": "dc199657-e471-4019-ba29-88973047ff01",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "666a6f5a-67e1-41af-b11f-feb3ef993f21"
        },
        "item": {
          "id": "78ec3a40-9488-48ef-b485-ceac2afc87a1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ddc32443-f2d2-4ebc-8232-549ecf456977",
          "status": "OK",
          "code": 200,
          "responseTime": 3919,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd9e20b-3c66-429d-bc47-f14b13bba9be",
        "cursor": {
          "ref": "92efb322-e810-4c65-b916-90edd890d933",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "455cd01e-f86c-44ca-a47a-2b900a57c650"
        },
        "item": {
          "id": "2fd9e20b-3c66-429d-bc47-f14b13bba9be",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dd80dde6-d05d-449a-a1d6-8b8b73148155",
          "status": "OK",
          "code": 200,
          "responseTime": 3222,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b06a7c0-9f15-4cbb-a11a-c66d099a72dd",
        "cursor": {
          "ref": "82fe7120-92a4-485e-a2d1-ad68420b8c3b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "58897ef4-936a-4f9d-8eea-caeaa492ff20"
        },
        "item": {
          "id": "7b06a7c0-9f15-4cbb-a11a-c66d099a72dd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f14222e7-2047-47ea-91a3-3b4078f6763e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b06a7c0-9f15-4cbb-a11a-c66d099a72dd",
        "cursor": {
          "ref": "82fe7120-92a4-485e-a2d1-ad68420b8c3b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "58897ef4-936a-4f9d-8eea-caeaa492ff20"
        },
        "item": {
          "id": "7b06a7c0-9f15-4cbb-a11a-c66d099a72dd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f14222e7-2047-47ea-91a3-3b4078f6763e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3885d798-0f81-411f-8df9-543713ca793f",
        "cursor": {
          "ref": "89df7593-4a9f-4699-a761-29d11aded57a",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "327c5b20-44a7-4864-9820-0fd238d0acd6"
        },
        "item": {
          "id": "3885d798-0f81-411f-8df9-543713ca793f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "09a64010-6eb8-48c5-a65b-c339a1ccddd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a659b0b2-392e-4e52-b662-cab170296168",
        "cursor": {
          "ref": "9843454d-e87f-4b3d-aa33-6053b0a36a70",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e7b58467-c419-4368-ad9f-6026f9355152"
        },
        "item": {
          "id": "a659b0b2-392e-4e52-b662-cab170296168",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "da49231c-b296-4edd-aa80-f223d844a56f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}