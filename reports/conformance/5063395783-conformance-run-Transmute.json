{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f2117aa5-fbbf-4a99-8333-f3224932eef5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fd0c4926-811b-4a1f-aa2c-d793040a79ef",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "54b3241f-652d-4989-85bf-bcf788f9119e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "580bae0a-85fa-443e-8aaa-5a3f59e559ad"
                }
              }
            ]
          },
          {
            "id": "7bd6ba5e-f8bd-4ae1-a9c1-5eeeee14bc26",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1430a6d7-61c0-409a-80c3-6af619f757e7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "33acbcbc-90e0-43c3-b9d6-c549e7b16ce6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "38f17290-61c8-45a9-997f-7454aac15587",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "39a457a4-3012-4f63-a9c8-8fa1a184d64b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "304beea3-5350-4d27-9227-7c7b7e0ef1c7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e957d00-75e1-414d-a5b0-e89cb5609a73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cfd7423b-7f18-49f0-8f8e-0c94d3a3727d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5251445a-caa5-4ace-b6bc-4dbcc7219346",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bf56bab9-7242-4432-9075-c8ea5a6b164a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bb140487-29b1-4c3c-bd2b-7b380d9d6795",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "efa515f7-ab1b-4295-8fc0-5432acce0d53"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68332b08-8971-4da8-9412-156ac6abda6f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "08753399-cca2-41c4-a79e-3bea735d8ad5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cd4bc6d-69cb-452b-89b9-f5f1efc19dac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b80fda84-7ce7-4e4a-9055-da3128f1373f"
            }
          }
        ]
      },
      {
        "id": "7ce5b7ca-ba59-4cac-aead-5369bfffd182",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "231cdd79-c9d9-4ffb-a248-1a0d5611669e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a53b5ae-ff22-426a-a9c9-e199c4a797d5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4b3db68d-c720-4647-894b-1bf3c46baca9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd97349c-7816-43e8-9fb8-142b38a4a795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a0bd850-ed88-4257-ab02-592632093776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb47ad6-ca8c-454e-9abc-c756666c1a92",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2bffb3-8a98-4bd4-86c6-3c9acbd91633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ba1c035-cae8-4ab5-8a7c-813532937efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50eb7731-265f-4bff-9a7e-c7c4ac63ed76",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0929cf55-7a12-4c27-9ceb-dadc4092346f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c59733fd-b74a-48b2-b339-5eaced604099"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1e85dc8a-4112-43d6-92b8-4ba21a97ef72",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f60b0a9c-4ece-422d-b7ee-a69381b05fcd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6e57f9-a7be-49cc-8403-23ac4827800e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f06262b-72cf-44cd-906b-4575be454bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c1401d-c300-44f4-b5a2-b9a803fcc046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f69b3e13-8e44-423d-8a38-d4d919cc7f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072e14fa-197a-46c3-ad54-124b7ab59ff6",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63038a10-fd80-4aed-9106-abe628b782ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3374ca67-7532-4a29-b4c1-5e4081daa828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ea9009-7431-4260-b534-2d540cfeec05",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "4fac10b5-2a0a-4163-8921-02bb519a1b75"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "73038b80-4b42-4acb-8dbe-5b3a726eca4e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7a7a775a-a95d-4af3-b0de-d8ba045ec685",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55d3fa09-bcad-40ab-92f5-0951a91b2c23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b357a2f9-e4fd-4dca-b30a-aeb78545c367"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f420041-bb91-4a25-b1f4-25d021505376",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "329857ec-3542-4348-9cf1-4317882cae3a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09e8b793-7b52-4277-9b48-5f60f81d9d1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7cb45809-f851-49a6-ba17-abf6a48bb651"
            }
          }
        ]
      },
      {
        "id": "98718bc0-0ab0-4b38-8954-27c68e382482",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "067d9784-6d21-427f-b443-623e9e604277",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03aec4ed-63c2-4fdc-8942-6c9f7170dc63",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "aee20077-3b14-409b-b0a0-b9194196c894",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f581ddc7-1e9c-4105-a3e4-5ebb66ff6201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ffe0b7-f46c-4873-b52e-a0a848d00278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af030e1-6eaa-4169-9289-ae81737dd317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed3272c2-b701-4921-9d10-f3db2e4c388b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2e9494-75cc-4e8f-92cb-140106770303",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b954f2d-ede2-481b-9ddc-08dc486c35be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aab3f93-7bcc-46ce-a140-cd64e2b98e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955e1f34-08f9-4619-9245-98beadfb5c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6aca6d0-464c-405d-acbd-26330f27fca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21561dd0-548e-4707-98ef-690f0272d4cf",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24092d0c-7928-44a8-800b-13e8e22fdf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cfcdef-5326-4864-8d80-7266ad834f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58f4b44-e63e-4977-9449-693651ad4c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab957675-f2e7-4543-b7be-f9c377796953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ecc508-af0e-4cf5-b88e-178f80dd16ad",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1479a86d-66f1-44c7-bf01-3c5d4849f839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8cbefa2-686f-42d0-8528-4a952d39ac8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abd3b9e-edce-4be4-b68c-d32a524cf1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b613f5a-d07d-4f1f-995c-13d3d7bf419c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb2655d-5a4b-4452-b8d2-08b0fca1d99d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0163a85e-a996-41b6-9a34-5e6b0b0fd344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f0be40-a980-4674-9d19-93bfca9c814a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addeab23-98a3-4cec-80f8-9fc121923b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61517784-8519-4c05-b377-8723f382cb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a27acd-0c9f-4a90-a9b9-3d84f63f2943",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42829d1f-648d-4248-b686-8854bb98e2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f355b3a7-e500-472c-9d6b-fcd118beac00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5870add4-7595-4b5f-af8c-59795cb1cd31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce8144b4-a3bd-413e-8fe3-8a970fd26436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a5dc27-2f7b-4198-89ca-ef23d1ed5cbb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de14896-3047-4b4f-9750-9698b4e29a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa4b50f-e9d8-4eb8-81dd-7044b0876f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2a0788-03dc-453e-bd33-c7b7228c0a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57d015ee-0676-4625-90de-beacd69fdae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afde38f6-8a14-498c-88f3-83061cc2710d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d54413-e175-4b8b-8167-f6b0b3219052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7272269e-c2f6-49a6-9d2e-a57366eb88c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986707cf-d4e7-49e1-ba19-d2634ce69d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c04c9803-fcb9-4e35-a7b5-eb0aa27ff40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03475cb-0825-4814-a89a-cd28d61a5797",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565c49ed-2eec-45c0-9843-7db61c092880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13858735-b840-45cb-8918-08e0fc756958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e2ad19-447c-48dd-bc02-69f4db0b57d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ec80e1e-347f-48ae-abff-5fe13766965a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fa60ee-70a5-4d7d-8cfd-52c913779e5a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca28871-8ff4-42ec-a607-bcfe335eead7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41026717-be18-4ad4-9c65-3e76b4496e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd262af-b021-41e7-a574-a31646543c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c268029a-5468-45a1-a990-9cd396b5cabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9504d21b-fae3-4caa-ac82-42afeb3fbc44",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e671d0-b3f1-4311-af37-175eb45d9137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95386b47-f7d7-40f7-b97c-9d4e9977a7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cef6e1-33ec-4fee-9642-9cee23a06ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f290c61-3064-4132-956f-4ce5abd0a66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3a6fbf-3efb-420c-b05a-8562a30604ba",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfcab46-4c08-46d4-a782-2866ece16d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a994fb37-4ebe-4d4c-9b2e-bc48bf5f0e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188055b3-4c76-4a99-8e0e-fbfbd308fc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ace6b7c0-3028-4be6-8950-9148a470d292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3391172a-526d-4994-a17e-86b3b5fd0e26",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002cab8d-092c-49ab-a259-e86625934e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06095e68-d621-4073-9216-5d9759be75fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c759cd34-6945-4cfb-ab35-6a638aa64dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae12625c-81d4-401b-9a7a-0b2bdcaa9d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abaae2d-2cb4-4cc1-8e04-9f072481eb8b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d31835-8791-4cb5-84a1-62eb684ee835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9febe287-dee5-4487-8702-efa4b723eb09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebcfabf-c7ff-49e0-a76f-7859172da847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a28594f1-0b91-4cda-b49a-51e8c1910ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776af50d-9f15-42bb-820b-cb17a713309e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091d8144-3045-4d57-8db2-35231af1e9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63c3a00-81b3-482e-a589-a8df3b6c3e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62874002-a61e-40ed-a62c-28afed405c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe54dbc1-5e70-4222-b7b5-4e1ab0e6538d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adfe321-97a5-47ef-a86c-4907b3aff8e6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40f6eb1-a8c6-4e1e-8c55-9b6ed658bbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d785d5a-2869-449c-86c8-5be1b1d32e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee3feb5-3467-428e-8d45-82100c43f9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5f54a5b-d336-44a5-89cc-5ba189fdbabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d660516-98d3-4809-b491-2afda091226f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa064c1-a5fc-4c3d-bb24-a25a83b4e112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0153bbc-85a2-4564-ad1c-a21c0680f541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3aa90ed-2969-414c-8949-7d1de2db6ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51c76993-0ec1-44c8-8c8e-a1087d0decc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c05faf-5d74-4e56-9934-80c25db96988",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6f12e2-1023-404e-80e2-5c73dec47d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc296a01-0c23-42e6-a456-6c9b78c06db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6552f562-149d-4d41-b49c-99f4384d365e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f9a1fd-21a1-4ff7-a2fa-4d866ec53fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100a512d-7655-4e8b-8024-f3fa9f06afd1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe5f1ad-a7bd-4498-9d0b-2994f5dda5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8ec1ed-a86b-4a9d-bbfb-0874f1293dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841d55c1-7e71-46bc-a44f-750756f09b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26ffb63e-278a-4491-a9ae-38b9aba63b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681420c7-2880-43e1-b1bc-dbf0074ead28",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f305ea25-371b-4151-8643-09cf061e8e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff890c3-8a2b-496d-8d1a-cf639494d798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff67d912-b677-499c-96e0-1e1765e8d208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5330c30e-3b43-43b7-ba92-8d851d2e7469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c760ff5-cc1e-4e3e-9087-b6aee03e7db9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ecbbca-b6bc-4fd4-aa9a-2552619dbf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56192ed8-893a-4223-80b9-a7f505f9066e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbcdf63-0cc4-4ec3-9b89-19ca661c8006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5467531-2a7b-4a9f-b860-2e64286d9cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df035feb-f786-4af5-b634-494e1bfe1e81",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76b2f64-648d-4253-8f15-3e7155dd61b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e956e4-92e8-41af-91dd-0385aacd1a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd9d2c8-44e3-4263-ae4c-18c85d369b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb0a441-1cfa-4879-bcac-64d7cfa99ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518ccf64-34a5-4073-8d0b-4905e8903a54",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e7affd-7fc4-4e09-ac04-80d632747c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54a5744-719d-4cf4-9c73-95362bbf42d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43663501-0a71-4661-8a88-6f4c9341f52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2cafbd51-2644-405a-b1cb-a1432dc0f7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9121c0e-7507-494c-857e-a958738b2b9c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7754417f-5dff-4719-8fd2-4ae3805ff469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd526b50-f191-4a17-ba75-8eb1d189b7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93651297-dfb7-4ea2-b62d-aa78fef20a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc684719-d087-4efe-beb9-352489241f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33678ab3-19a3-4bf4-8950-b4aaa03f21d2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d218f1d8-dbd5-4ed3-805e-3c0ce5e3db75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b25965-4902-460d-899e-2779ba4c9fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5a8942-6af6-4ed9-a01e-1984983a763f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b2d8e3-d06c-46c5-becd-bf188e1b990f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0499a5-b068-4272-9aae-a85d22d9aa5c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ee86b8-d483-4747-b4f5-02357d4025d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d13894-2b41-4b72-a359-f4cf9c83232a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bfecbd-f2de-4186-ba51-4da2d06efffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a8d3bb-f97e-45cf-b302-cec80d7cb377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c7eab5-ea53-4259-8cca-665d8f55e91b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4f5e8c-7693-47ac-961a-352f0f9165ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682ea995-c204-47c5-91ca-439e03b47b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd62bb2-2e88-4645-bc50-5d988e8940ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b318062-d5a9-43ec-bbd4-e81e6b4c376a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd6d443-e2d8-4d4e-9d5d-2239f6d63398",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44ed426-eabf-4e92-a877-ec13935a5f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a5b02e-6c54-401e-bb19-e4a4ba13f990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd2ba3e-11ec-47cb-bc00-5aa45f7576af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e74bc3e6-4c75-4852-87bf-dd353cb56e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b076062c-cb13-4732-af5a-1d09c061e495",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17af0d8f-a3c0-41c5-85bc-81337c961d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908cc6a4-90be-4e42-949e-ed1cd098dc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8384dc-0578-4842-b2ca-197c1d12140b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b185d337-fa3a-4707-997d-ee6c02de3c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b67deaf-f21b-4b49-b02d-bf5f9fcfd892",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3c4fda-421e-4b0e-8ef6-e5a4fec212ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b841491a-2a1b-495f-b402-c28caf7ba251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6433979c-23e9-424f-98dc-0decade55d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e063973a-641a-47ce-8510-7a72cd9b8baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed2d208-aa5e-4381-9a1c-d506625c8683",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6070e5db-58d1-4545-bc0a-c83b9829b439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4e6418-545a-4a48-8fe2-9d3b2ad8063f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a602680-87e8-49eb-a0b7-0fe0c04d3810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8384f72-3524-46dd-852d-5509c83ba8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca37fbc-c027-4359-a23f-f134f6950cf2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b710eb84-7687-4a4a-b68b-af329e24655b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4a744e-d2aa-4fa8-be52-1fe51ea6ad92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271c992b-b945-43b6-913a-a87819f0dbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83726c39-1e5c-48d2-8221-3d92f4983c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377c8646-0fbb-48ca-8840-e1642a6fab6c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003d975b-c0eb-4237-adbf-ec954041bf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df8a75c-6018-4592-b6e2-efc2f5a7a8dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1adcd2-1cab-4f30-812f-c6ece2be3792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84a511bb-dedc-4b0d-85a1-dd6d69b4e278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e990d1a-4d99-4b4d-999f-49772641ff98",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481f503b-a612-4536-8cdb-ac6a31e797e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339a3913-8c8e-40cb-b1f8-f489bde593cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84263ad0-46ca-49df-9b04-66461af08d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f985634-4260-494b-8d0f-3cd0fc7a7e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cd99c8-85c0-40f3-a5e5-ac2c620a98c8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6f1ff7-c3e6-464a-81c2-41ce61a6a472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b10409-63c3-4515-b889-c3d50c4d723f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f78ede5-fb6f-412c-ab85-df4d035cb0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7a93fb-a11d-4b54-91c4-2915a704b2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca74060-afb3-44fb-83be-8403246d42bc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa3bc13-1d71-493d-92b6-d08bbc08a26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0359a3c4-bbb1-49d9-9205-49f9df2ccb9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8784db39-a3f6-4a17-b7a6-2c43a321bb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "745c75ad-df93-4b5e-9e05-806e80b96bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5adc39f-d0bc-4413-a83d-04f9ad4c8cdb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09edecbd-5216-44d2-90c4-21bb609b6ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3f0324-9d50-4ecb-b20d-6c88d08b7dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf73305-adc8-4b39-8423-46d7ce0bbdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bff84c4-4c64-4951-aed3-053886f0cb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5ba161-f61a-4274-987a-8ad65dc21926",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af18483-0001-41c1-87fe-8393023754a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b87e0e1-8cfd-4ab9-a4ad-ccc44e9633b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed411465-c801-4271-a942-1ca79c338cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0565ab6-9789-4bb3-867e-674ff129083a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba83422-ceae-4fea-89ae-93aabccb9be5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5583b202-2bdf-400e-b7f2-ce72229164f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85621fc3-cbdc-4638-98ed-93ebad760109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26acd1cf-8b1b-4906-bcc9-d17938779098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3064c5-92a3-4927-bf75-01159be4ad85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bd896d-084e-4368-bd2d-97d356d04e3d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf4eecd-5a04-4a02-b920-2bf6fb481dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6500bd26-7346-40d7-a4d5-1401e7d74fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50fac06-a54b-4f0a-9af1-22e280c49908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdbabe79-39a3-49f0-9148-531bb806137f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20734088-a7d8-48ef-b447-a201519835f8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e53f5bd-fa43-4624-9b7d-295d8c8ed9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c980e4-0333-4c18-9f0e-9ebc72ac321c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9732e80-0787-47a4-8d21-bec29f0f911b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbbb9698-b08f-4cf0-a024-ebc9e7136740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4764e3bd-41d6-4718-85bb-24046c2ffe84",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a29100-04fc-4ec3-89cb-272c15707049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afdf9a3-b198-4334-be88-ce64ee512304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27db92e4-6a6f-40be-9234-977e35390ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "15ead616-a89e-4d64-9d62-99644ed5ba1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea25774-f969-4d26-8d79-9684c7948572",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e74cf3-4151-4053-9bf5-442743370c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f45658a-1245-4a4b-a0e0-d2fec3401bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d7b914-9cfc-4cf2-ba3f-b13ba715ccfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd13838-0194-46c6-ae50-206347fe439c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6403047-5aa9-4030-8bc7-5b8e3242c5c3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05cdaf7-bb4f-4353-84a1-0addf0a20b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75dfacd8-7121-462f-8d36-4b2a55fde159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05179407-60f3-421f-910c-03e972b16309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae26b2fd-c661-4008-b673-a4be36e7804a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c132c2-6d66-42a4-a951-3d8521e806f7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b123426d-2029-4856-8a53-e9159cae9396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f599871-a6b5-47e6-a2ff-352d6a12ed6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1177c0-3509-4fee-8c92-d56a1bd78aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "147f84c1-7d8c-46c7-afbd-8a20c6d35f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a232fe-f180-4e20-9118-d7dcede1dae0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7a0c2d-7349-4f95-a7a9-ec3e23ff9539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6b2d44-6290-45cb-9063-18f96531e902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ab5bf7-3b1f-4af7-98a1-40cff48e2704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e26e519b-3569-42c1-ae2b-f835f992846b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26de0f5-b0b1-4014-8003-d25264b70eec",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8386c6cd-b8e6-4e7c-9505-a4b6071394ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bda91d3-fe00-4e61-a29a-e0a20e976b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205c48b7-dd1c-48d4-84a2-4f8c73507eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a123593d-47ab-4f86-8c2d-371d6ad293b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660887c3-b128-4d16-9841-1a73e2b5bb61",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd30244b-6884-4b53-8973-dc21c10cf6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c35609-267a-41fc-a469-8a1c58d7471c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e00700-e583-4e4e-8ed8-15830549cf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c19af60-18d2-408b-85f9-34015bd28ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea46777-6404-405f-b415-02fb696be222",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbb08dc-8334-406f-b084-b02697a6073b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38e74a6-2f50-4e1b-b07a-a54bb16e8da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b8f140-eafb-46d7-acaf-38d34aef0b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "728c3aa1-9737-4b36-bc2f-6cdfdc825835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30234be-1550-4944-92ff-a2e13787f065",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2eb45a-f383-4028-ae67-72cf2ce023c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d13f76d-1285-44c2-942d-b142fb878e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10e98e0-fcb5-4c37-bd1e-208fe8171e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cb26b0-2578-441f-9389-41063db0118b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d75aae-83aa-490b-b800-e1d01bc37932",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e5d729-a1f0-4be1-a092-36dccd3bf155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cd82c0-1182-4e12-862f-c61a8f03afa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914f747a-eec4-4d7e-9922-aad3e1b739d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "39758cfa-4e76-4a5b-832a-448049469e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59cdc80d-edc3-4d6d-9466-907289707768",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02702e4-bfb0-488b-a67b-098b83886a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4cf2b6-9965-4f45-b02e-b81ed71cb0f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9ee834-75e9-4cd2-8c82-6cffe7767b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "291a9dc8-28a4-4e19-81ac-cb40857fea83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa33205-da86-4b6d-b467-869f911d8388",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c044996-a1dd-4b19-8412-f90a5f98ee55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e951de-86ff-496a-87f1-ad781ce7614b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92107719-770a-4110-9afb-ce621a9d398f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a93ae7-7584-4aba-b197-15b5edaaee35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f2477a-b170-4bb8-b60d-f7046c005722",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6fa867-296d-4ca5-8c4c-daf58815024e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c7c28f-46f3-4d9d-bd2b-ff7681997d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85302e9-ee52-4150-9d6c-4dd192965c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4703307e-3520-46ed-95e2-2f8fa6d4a2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e79f74-005e-4851-8203-a55ba3972e63",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4d6eaa-90cf-4368-9557-3cd77999a210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd72d03-f89f-4404-8d33-bf3bd6807ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a24355f-54d6-423b-8bbc-9bc60a10b8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df06ee82-c3fd-4740-b6ed-772fe6d5b978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2138deca-f36c-4cb7-8d81-beebfbf31238",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c289bf9d-6d60-45fb-8283-bebd0170a516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237d9833-7d54-4a06-b98f-f317d97ce77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c70504-e676-48ba-9e01-e4cc30e54409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bd28a61c-44c9-4ee7-8fde-ed365e9f6f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fac01c-2802-4d84-a036-5a9390c68cb9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a294af9-793f-434e-8d7f-ab719a85f7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0c8c90-4ac7-4b57-bf46-d4e14aeba8d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69e6352-1ffc-49b7-9346-9080794d0042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a3b594-1587-430b-afe3-160bf99c6acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badcc4df-aa6c-49e9-b97a-4717f48ef7a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd7d612-4848-40fe-8493-89c632bb7ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653d0710-b921-4465-b614-5191f892a7f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a849c4-6862-4343-80cb-8432b527a364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e473981-871e-464b-ae3b-05fe0893619a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d218fa-fb2e-44f9-91c8-5bc6dafecce6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a433fee0-c6fc-49b0-984c-4880a22e6024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96ed7e1-bc34-4d8e-aa5c-bb3c664d6acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b61740-fa08-47ac-9dc1-b89a7d18bd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "df474789-2331-4be2-962e-a058694012c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89039575-4760-4c73-8959-a6b530a66db3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2c887a-1ba3-4ca2-a191-a4465fe0e05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6dc1414-47b0-4ac6-939e-4db639e9b902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d5ba3a-7993-4f43-be44-6fa7967668b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf8aeac-71e4-457b-8f05-2d7872b71ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683f824a-c6f5-4f94-b48c-3ba392f93cb2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2725e0f1-def6-4036-ba49-2d778b0a4c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01bdc1d-7a93-4ec4-a0c1-58b157400830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a10eafe-5893-4365-9789-6d309c6198a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "60613374-daa7-44c7-823c-6e2c81b4c1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95da8f15-d053-4b20-83dd-32d898257b53",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccefa6a-9b2a-4b4a-9755-0231f38c2c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e44b83b-ac7e-47ea-b89a-f6ffd9e0badf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7506ec-b04a-460d-96af-7aaf565f47a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b088383-07da-4c13-bcef-5a2d25d90824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fdc742-6f50-45c8-ae98-d18c5f08d405",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c334cc38-d657-46b1-8264-cd6896d2f4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1e452d-fbf5-4759-abe7-0a545c72e1ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96058864-7aac-447e-920b-379160484919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "19567160-80d7-40f1-895d-43457111fb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e1eac7-401d-4957-ab13-ec8d5d6cb934",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe753af2-c69b-45b4-a055-1fcf4325d37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf07728f-ceb7-4d60-9005-4f6a11ed6522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea11f77c-c83b-426c-bf0c-c24537d755c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e27d42b-adc6-4b4b-aec4-424e01d3064c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b612f4-2da4-4229-bab9-6105d08b98bb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c7e5bc-01f2-48ea-8b8b-2b9e0b670100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c06cf7-497f-4823-8bac-d720b1791cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020638ea-dd44-4cb5-9d36-a1ce1ca4c877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e69b7f-2072-48c7-a453-dfd4c7778251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15580f6d-10de-440b-849b-e036a47a9f5f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717a337d-951e-4d83-84e8-c1a311b95602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64e7534-bfd8-4837-a9c1-83e53ab63f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7f6674-7d33-4e9f-ad73-0896eda02882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86256412-23c2-44a9-9426-45a7079db09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9f09ef-3c85-414f-8632-9c1115368496",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd17f28-3448-4c21-b1b4-97299836581b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8019120-df1f-4010-ba81-3f64eb10ba23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3121d327-b889-4976-9d48-e0cc8dcd8c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "654f3d24-da8a-4efe-af45-94a7b6f6ca7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873e95a0-cf42-4213-8d1d-bfb799294f08",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c487da3b-cff7-46af-aa31-561121183fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55810dae-6509-4414-bcf9-31294ed60af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4461c036-a209-4c82-8cc1-672a07ba50ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "41378874-60aa-4f38-a25a-15e23773d471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f617c06-742e-4ebf-8061-f29ce7cb90a3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d419703-00a2-4dfc-bc0d-6d07821c9266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5dbf51-151a-47d3-a954-32b25e835bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44530ab-cca6-46e4-9112-5baf9d33e499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "21c779e4-b294-4df9-96ae-f0e48e9227f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a4a23d-ad9f-4512-9ff0-4741e0968e53",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d451330d-a077-4709-a132-a06654908306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd3c5a6-840b-4c6b-b493-1aadebf752f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c800883-c90e-40fa-b7bf-ef9925ff5208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "727b9672-af21-4c7b-9f00-b22acaccab1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda7151e-b1ae-429e-9816-375f7eecc6fb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fea01d-f675-4829-b3fc-b69ece3abf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d461ba36-d69f-4e80-a085-6f86d73c4495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dca5cb2-2659-4649-b6c1-3f58171faf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e58e29-4342-4d05-85c1-571b007b95d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a523e1c2-c9f6-4582-994c-38c09a8b265b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b562f587-05a3-488e-98ea-51cebe62294e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25f3f5b-d128-4441-90b5-a7804891ec07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe94d2a9-a2ab-4862-83fd-d8120aa3101b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aba202d1-1f73-4190-bca9-14e2f87b9c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d670cce-d933-4d70-b75d-581b013ff799",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff218c4f-e3bb-4b84-ade6-4e29329f2687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b9d773-cb5d-44cf-b77b-834fdc8fea37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3cd48a-041e-4d24-810b-632d46ce1636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd539b4f-1d66-4c91-99a1-cc47d22bbef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc29ad2-86dd-410e-952f-ad4644aa7702",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58131baf-2489-4b71-b479-046dbfcd1b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65acab4-7e28-4250-ad3a-2778a6885db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e46760-b7ab-4f58-8b3e-18fcffd62611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7fbd28-2c4b-4603-b19c-337ab30e2f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a49d03-f44f-432a-b99f-eaf4de871bf3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687c20e1-7a01-4dd0-8472-439a3722acd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd3f4dd-00e5-4176-801e-5e8531ba5c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54120a2-02a5-49a9-9630-6c8034bff304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "23c24511-06b6-4d25-886d-94517819af80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe6ecaf-714d-4c6f-9e0d-feb300a9774c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "affbb059-7796-4b70-9de4-0031f54ae48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc6535d-6a8f-421d-9bfb-6fb449c13f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80650fd-28c1-4140-b1f1-bcfd8af02c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "919b0c13-174e-4a86-9446-072d83acaeeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebfbd26-e881-4024-990f-f537bcb8e6ce",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6628b417-3c4d-44b4-9024-4773b163873f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3a101a-077c-4329-8dbe-5b298dedf6bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47da59f6-99ac-4c43-a1b6-abbc207e235d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2130cd04-1cac-416c-8991-b37f90284316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebffcab9-a744-479c-a60a-c45c6c99d6f3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b03e4fd-d6e2-4750-b8cb-f9362566223b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103a92ba-0638-4116-b4ef-69fd4f542523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d769a8f0-eaf5-4cde-9dfe-487400a07dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9cfbc72-eb13-4504-8b57-47e4f41de220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cd50dd-d9fd-43e3-897c-ec164e64a059",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e711870-f61a-4f7a-9357-d815588bd275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2f017c-0b00-4800-af34-0bd8ab1c9fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7efac1f-0246-4ebc-9106-cb0c1cf0733f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51a5d7a4-baa7-477f-8b0f-8a2a2cc7ca2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af09132d-c47c-4d64-a188-ed63fd9a4e7f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc6cf02-6a57-498d-b944-be6b9f8be695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2150742-8c89-4e57-b537-321bff3e9ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b78dce-73a0-4a95-9c80-154d20be3e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9018e42c-8031-4209-86d1-6d0a746c6351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38dff06-580b-4917-97f0-8eebf31ab242",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0d7865-c76d-40b4-a3d1-3fcbfc74b5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80e2107-3678-4f96-b818-8bb1bdc8a698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65d6b45-9dc0-4bf3-9ef8-5fe355231a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb2c5a0-ceef-4353-a758-78fbf0a8776b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15e465d-b431-41a3-8f61-93f3f6e9232d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be4edbf-1fcd-44b4-80c2-633044571de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2131e99d-f62c-4e70-902d-b85d6cd8c3cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa9065d-5f85-43eb-9100-e8e1fb2bf992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e678116-cfe3-446b-9f94-85fc0a200a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df181043-19b2-4da5-aa46-5140446a29e6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c874cdc-f2f4-4205-8ce8-d8eba030d2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f09d23e-20e7-44c5-a73c-7027a55c3238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50718f2d-2b74-4e97-b391-25319873f5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a67632ca-d280-462e-8d09-ef400837393b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2905a3aa-e9bc-480a-9b2f-1ab9a04ed68a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9123a58-dbc3-4b2c-bddb-111bc80934bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b373e3-fb6a-4cf9-aea6-d11188a262d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebb1af1-91b1-4b10-ba40-235237a720ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43315bbe-6b2f-4d6f-bacc-e63cb5d9de98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2a7716-8160-4301-a541-2a0f8bef1b2d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3343f906-df70-40b5-8385-22774c7b2647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4aa406-cfc3-4084-9c53-259331b4e2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a0ff30-0aab-47bf-aee6-5438b4d015a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8894c764-88f8-46ba-be7d-79f591f81bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b31bf7-a23d-4d4b-9d28-8ed6576118e5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb26866-b5a3-4f55-83ee-a09d3cfc98bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12dceb0c-6279-424f-9270-f7185cbc2b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b01c70c-fb9e-43dc-8132-aff0dfdf6396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1820f0fa-0370-4112-b16b-b76a2d5e25c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ca709d-1299-4bac-814a-fd3d0540a227",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8581b748-4c34-441a-b7b7-f35f2a8ea10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dff14d1-c9d7-4b59-8bfc-8690f8821b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65d98ae-a637-492c-8956-cf18401dfc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "04ee47c6-623c-4df8-b167-18a9a1b4e859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a922400-5162-4107-a995-6647b93336b5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3447892c-1b2b-4bec-9e23-fba5cc895544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c740f2c8-f7d1-4dd0-85e0-2b2a01243f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4299727-50fb-4aac-8063-e9c3070a9de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c365cfc-8d87-45b5-ab85-263a560fcf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef203eb-6d00-4c9f-af4b-d9ca925f289f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6639809b-826d-462f-b107-bf06119a00b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00595f53-d671-4de1-9f77-fd67e6f0098f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe820415-db30-4a34-9e4a-3043fb8bc321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a259b521-be93-430c-af58-d0c8cb0a8eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca53f65-1a54-4d61-966f-a751d5c9bded",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9916892-00f7-41fa-972b-71c7ca937b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047aea10-0667-469c-8dff-fc26c8ff5aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be64345a-f61f-4478-86f0-4f286a528c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9db818e1-ecf0-4374-8625-eac5c047330c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0aae0e-ae2f-4aee-a116-668a2a36212f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb189a06-001a-4f06-a9a2-1514ca4342ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2806887-5547-4c99-b552-d3b431abad46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bace6f-ce88-48f8-9562-4ea025466959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2836abf4-464b-45f0-89a7-b705c956739e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a279ff8-d876-4db3-874e-ea073639b059",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac5fc66-867a-4a94-9258-bc639500a215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "75a07bcd-4501-4f1e-a615-5ea3b111239e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c592b1-7627-448e-974e-8c0b6905effd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c56545-0d7a-40c6-b2e6-bb2725a1b0f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "832ded77-30d6-45aa-ac4f-afb07d0f6d44",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ab124e4-cbe6-456e-abec-04dedabe5466",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a00dfe-3980-40c8-a9cd-28c58ea6ec01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e63df9a1-f221-43dc-9ea1-4e04a4c31d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33960c45-9a65-4547-8388-dd1767b417d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c87f71b2-ea12-45ef-9abe-2da7b589d9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2ea5c7-861d-429c-89ac-bfd2dd52b059",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1fb4ca-e6c0-467f-a45f-fc2667000924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cf2c6f3-ed9a-4108-85e7-2739b5780b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0350e2-5547-4d2f-90f7-22e91b601ad7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51f4f7f6-3d54-4ffb-b01a-77d2b719f2b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc8ed8eb-18d4-4fd8-8c95-095de19a1bfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb96e5ec-b348-41f1-b309-625664d72e41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15fd8eab-7a69-46e2-b5a9-a357db427b55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8708dc16-c41b-4fe8-8d43-86a5d75d38a0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d25a2b5-aa23-485d-b6fd-c41b846b2583",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c3b0def-b17c-4d6c-8a36-773c75960d1d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e8317315-78db-49e1-be9b-0326aacd9e39",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a968d9b2-985a-4a1c-bbfa-3131802f38dd"
                }
              }
            ]
          },
          {
            "id": "6919e0e5-8a68-4c58-b582-a6d7223c906a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0b96d9c6-997b-46ce-b949-653b3296f407",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96ea1345-2c4b-4fe9-8867-fcf1b433b752",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "512284ff-3c7b-483a-9267-cc33e39f9b82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ae9b9b3-855b-4aec-897f-ca685b134ac0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fbbec456-cf37-45f4-a342-1868399f915d"
                    }
                  }
                ]
              },
              {
                "id": "66b0f0c3-6b37-4f5b-a824-f6cb91c60c13",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e97361d-7457-499c-9849-d11d86ed30e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "136380b3-234a-4b38-acfb-3bb4910e97cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18723839-4587-4ba3-a8d7-0383038d3d54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "150d054b-4835-4ccb-9255-f3eb4748d91d"
                    }
                  }
                ]
              },
              {
                "id": "6610b3f4-1ef0-4e32-976b-daffd51f3709",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9582ce4-a636-4c33-8fb8-534612d2f8ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19914bfb-b5b4-410f-8fb8-5c73ace0a53b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3bb5f2f-c5bb-47a6-a299-910ec7e685d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0a5abaed-4d32-4b2a-8e19-39cd58b46871"
                    }
                  }
                ]
              },
              {
                "id": "0494eb56-a761-48fa-b6c6-a748ff32b6d8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78c0b9dc-d836-4da1-9719-505b03891057",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "831e85c6-63ab-4bae-9506-2d9918f33928"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74e59d32-ba7e-407b-bcbc-f427b479e29f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "dbe5c8db-d3ce-49f7-967d-e3db17d4868a"
                    }
                  }
                ]
              },
              {
                "id": "55cfd00e-34b4-4f73-b1a7-c351e2a14e82",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb3e709b-474f-4bba-8331-f0413dbf2e97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be20e478-7dec-4533-8a42-2b4448eb9173"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "287404e9-88c7-4f10-a912-7aecf8aa0163",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a51f3a14-db1f-4dee-9fe6-3033c3718d3a"
                    }
                  }
                ]
              },
              {
                "id": "495575cf-e9b4-471c-a918-7d6a556e9d1a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2545875b-dea1-4f8c-aac1-ffe937cd9f4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79cc569c-1f6b-4750-8b13-5347ff072c59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09b7bcea-a494-40e0-ad19-bcaa12e8d747",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "82cc9d61-bf88-4524-8818-7c8d6d9d4516"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dfdfccb0-9e0a-401a-bf6d-8fb0c14778cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8504af19-14fd-4b06-bde7-cfe749a98094"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a82b28ba-b9f6-4b3c-b440-b036f2a99614",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "30ca58ba-f11c-4596-a5d7-b1be5938f091"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29ae10b9-d38f-4929-a211-942a81f1719f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "16eb446c-9775-42f8-a8ef-0bedd8b1e105"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33821b8d-dab6-4f9a-8510-ca1be18ca004",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d523184-cd16-4b11-b2d8-b86e003dd268"
            }
          }
        ]
      },
      {
        "id": "40185d6b-9d09-4fd4-a191-9518b60f482e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ee2f60c9-2e91-42cd-982f-559c43516de3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b92e1b08-e33b-422b-80cb-89b26db9845e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3a6ab2e0-4ee6-4fdc-8382-45faa94ee35b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc03936-d2be-45a0-95f5-12546feffa7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a446ff-0eca-4fd8-80d7-68975e814b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818e0be5-ca01-47e2-8a45-32778bed8ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9070d65-2f06-4f61-9027-a3f7f66be1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ebaa73-cf27-4682-bddf-51e668491e7b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b773e7-9fe7-4392-877b-124c0e0a8304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a970c69e-9aee-4708-bcce-331ab9f15890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b33c48-2981-4d41-91ef-7fc442b278e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f3b564-6344-40b5-b069-ef016495d753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341b8041-36f5-41ba-9b1a-ce3ec108b902",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216e7957-d9fb-44f1-b8ba-1c9ba8277e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c9100a-7b99-4b93-ab34-81f1e1e5f353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641ac9a1-3817-4485-b293-75534972401a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e75c0020-049c-4985-a51e-b22f603965b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb14f52-8ac0-4a7a-aaab-86da455042fb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af5ac2b-c672-432f-8fa5-635d953bd4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c557443-e0ec-4e35-93aa-f553df8e3b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf02b969-cb60-4f1a-bc5e-b3d43e881305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9aa8ab-0605-496d-8785-fd6584e061dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5fe0d9-67b1-4846-a83a-7532630ddc4b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fa925b-76b1-4a45-afd5-1746495a4045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd647a8-7cf7-4c37-8a53-e52d18f1b841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1be5cec-3def-438a-8b65-8ed5cfa0d51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13d286e0-5f44-4186-b1b3-64947f425557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30e090d-6cf2-4c44-bb6f-498bca85ec32",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e845eefc-e585-4415-b5ff-8c3a2b334784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9adac6b-3b8d-4118-9ffe-3672560047f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9177141-7f9b-4648-af37-ab6136a6795d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67d018d7-59ad-4673-894d-70489426268b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebca38e-01c7-44ec-a053-9131666e3d1e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cb572f-69b3-4848-9bb7-b0266a1cbd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294d5527-e4a9-4df9-8366-b1e49ca892e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859c5240-982f-4687-966e-847cb7803e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ee5c35-70a6-41d9-9b36-b4bb139d57c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2cf7a6-5813-46ec-b2b7-780e6921171a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ea1a2f-3f16-4c34-af31-e35cdec661ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b59aa6-ae5a-48a7-a2b7-b2c7652f77a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bb64d6-97ae-4f6f-a633-dab9357de1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "453a33e9-e262-44f3-82a1-f91277702d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d45556-efbf-484f-b943-5b3c1d88e0ca",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0600b2-5144-4652-baf3-fcd09a97a9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a74115-5a4b-44c7-b7b8-e8f6286fa031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e916d59-44a6-4b50-a7ba-133287205e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eeb8c06-daf9-4f35-8de2-cf05cc90c28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4153ac7f-2440-4270-8aca-a7b321d0b755",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13fda82-5458-4a3d-9980-1256991d44c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f657c57-9d05-40cb-a47e-62390e28c821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9c7fd8-45f0-4ab1-9875-2c91a8bc4075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba57d56-2ab4-47e2-b78d-7505eb7026c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab1ba03-dcd2-4fa9-ada3-dc9c76bc524e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bae380-e157-40ad-a884-587d90503bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f6b3d0-f894-40a9-813d-fde1964ce4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7762f619-d7d2-4d69-91a8-3c0b0c8d4b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "53f1a859-c535-4bdb-b804-b727b14d07f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f3f124-2101-4667-a181-32d944ba3ef4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd233e6e-40be-491f-9d2a-fd848e4c06d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34aefa41-7a43-4748-afda-3b78163bf02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe622d1-5fd3-45ab-b10a-6d8e9d65f42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63219ef8-4b2b-4343-ad43-83ab835ac539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f084e7-4df9-4f38-93a7-ad253b831074",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e39e837-a541-4190-9861-b06c97a1703d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0699d758-9c5a-4b99-9087-0309889f6d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f27cae1-e316-4249-85a6-1ca777af3bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc88ffc-a398-45f5-95e6-a3f20442bbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8b03dc-2c2e-4c0c-a7cc-5fa32223e684",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415a45c8-d007-4368-a3e0-1d35e09a0f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d827d223-505a-4d77-8c25-4cf700a47604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4c4112-db92-4d93-aaf5-270346b05d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a76265f-d014-4836-a067-96b07ee272ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5804297-4e99-49b6-8e5e-a196b7595c9f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecec860-0266-4611-885e-ae8b04bae6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d819e70c-0e52-4aba-98cb-c0e01b270973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3446eba-4fcb-47b5-8e4a-151cda5398b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "96739d58-3b90-49bb-864b-3d4df03ff772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e10f57a-4fd8-4733-a50a-be9276422ca8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07aa117-6a7f-4a91-9eac-b5b2cf14894c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bf0b19-2fdc-4bf1-85aa-a5f5770b3dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1909102-dfb5-48b3-b561-804c627d6a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "07d6baa8-b6c6-4bbc-a681-defe2507a5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739fb43c-f8a7-4144-b445-b5cd97fcad1b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0316c130-b703-402f-b42b-5d06229a5cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1016038d-8c99-4b58-8c88-4561b62ed5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3da681f-9632-4b0f-b0f6-08c386db394b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a37858d-9241-4e90-a44a-9647d8be27f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a37e64-260c-47a0-9f1d-260c798612c3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fed3858-cb28-40df-9050-698bd6271f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84769e02-a17f-4803-bebb-f29f64c01b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cb9031-6285-4183-b5e1-57abe3970b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "26e6ca30-e8c6-402e-9800-ebf8bed42977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4492d330-4057-4c8a-a5ec-4e0db90c4f8b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8215931-c04c-4916-a387-8eff8f88a6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252cc9cf-a0ee-4936-bdca-d989c2198c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859870f6-5a2d-4674-846f-2977f6bc7fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14fc45e5-51ac-4d1e-807e-9f06cee3fd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a330c70-bfc9-461a-9b0a-0b0aa2ba4daa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f396ec7-a0c4-487d-9575-f9b045754429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f09cc15-42b8-4320-949b-a5efd3ef10ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb3dce9-55b9-4a3e-849a-a76c8ee8f698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66679436-c2fd-4c3b-8555-4b9f08f1f23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea03d2f8-094c-47c2-9f65-22f19d02f19b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d99e69-f5b8-48aa-96bd-9ec849f81826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31657ce-476d-4015-b3bb-c268ad8587b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1137f9d5-71c2-4cae-8821-d74fae454e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8952a2b4-8271-4d24-a390-3c6c79acec6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8241bfc6-5eb9-41ee-8346-cd8bce3591fe",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48c901d-20c9-437e-a1a3-a7fa0e9e184e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a976d2de-6522-4034-bcc2-ec5f9451bc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e2b3a4-b129-4b62-8d4a-88278f4e8f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "881948b2-84ba-4833-a72c-92c38cef4a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bb831d-801a-4cd0-82a8-ad7c61c8944c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63cbff0-df48-4f63-b8bb-daa861f821c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcad3e4-d0dd-4eba-8a9e-c45fdf4176fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c27ed9e-04fb-45fb-815f-5b70f067994d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35acd2e9-0b92-461c-80f7-35f66fc65961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51a0f51-93c5-45bd-bb6e-84632afa76e0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64020074-3098-4374-b0d3-1b972d413a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea707034-1293-46b8-8a61-beb3869b8ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859cf776-7b8b-49e9-832f-b350fe6708fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff36617-9de5-450e-b50f-d4ae78a591c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec177e0-4c3a-4e53-916e-620ce1efdc77",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ee4ffa-e12b-4acd-a234-abf86543adef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c485254d-67cc-44e3-9880-dae398977b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f34e18-56c7-49f1-b9fd-8cf87fa5b2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecebb906-4a8e-415c-84b4-1c18f626278d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da314930-41c5-4905-bee0-1125ffa215d1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddedbe6-62f4-4b91-98f5-1d64013ab198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794b36dd-4247-4cd7-bc55-d0908e53fbbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1c36cb-e421-49da-8341-6bbcdd90bd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2df31db1-a302-49c8-8984-68df415232d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521b1bd7-d9c6-4466-971f-9c3cd03bfac2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e8489b-4f04-41a8-84cd-44f204e893e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ddad2f5-d8c3-42e8-abe9-e2baa0237db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d838a45-c068-4c86-b47a-899ae1be3141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4084d540-8b8f-40ab-91ab-f6b5dd14f723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bf6f52-7a2f-4d81-a6c6-e8a8c820a48e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cc1e26-f638-46a2-8f81-5856d88ef877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0731385d-7463-4a98-9b57-0efddec6d1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca92031a-1348-49dc-9690-57f9bab95360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3efc9670-36d6-4645-b6aa-8c122457b649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e46b5f2-ea00-43b3-929e-2d3d384968d8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666df2d0-d56f-4dd7-9801-c2da2f61744c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074d3545-007c-4f45-abfd-c875aa3015ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb23c75a-f750-4ec5-b130-eb16dfae40b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a702c8a9-25a2-49a4-b61b-0d672e42ee2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1163e92-9d99-4b6b-9de0-a835ff1b5c4f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731453b3-ae4b-4bce-947e-e38baf4fc47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c779b83d-1665-4c8d-b48d-ce7a43c2dae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d53793-28ef-49db-8d3d-cb3d4bbda5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4a5e75-b447-4db5-98d2-a78ec1b60cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f13ab1-3f26-4913-983a-e35a92be0ab4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0667b8bf-cc92-452d-a4c5-087d6678d149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ecf7d6-05ad-4be1-adbe-a7ba11f61b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb25553-23db-411b-88f2-a628c1af0985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "653c4c3c-a3eb-4254-8186-8dbb747e2587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b655b55c-d2ce-4119-8225-be1b0bb64a0a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768f1164-09e0-4aef-bdc7-74bc2f9b81b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465a80bf-a2f8-462a-8faf-b1563096b3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f90b57e-5a6a-4dff-a5a4-1ea326d4abd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61d2376c-aaf8-4cf9-9dda-c0cc420ce380"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed50d084-9a10-4cd6-bbc3-a02877c5d6a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "443086ed-aedc-49a3-9fec-8fe9c715f2ef",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0979f8c4-aada-4d57-84ca-8f70ee5702c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0a86a867-5a0a-4cb0-968b-d6cdb50f84ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9dd163-8749-45fb-b883-2b295841d75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b9d7d01-15c8-4339-beb7-1de9e08cb339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810a7e8d-aa23-4ae5-8c71-8ef0b66132d6",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0887168c-1327-497a-b555-50f275f0fe33",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "70dc2e75-1415-40ed-91bf-a48fabfecaf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3460db-5e8e-4999-be5b-468e5ae0ab63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9a20e9c-94cf-4310-80b7-efcee182b1c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a90fcaaf-c922-44fd-8414-cf52b1ccf773",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "653fbec1-e56a-4ae2-9f80-88fec91d871f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d49e8ecc-db52-425d-9f49-47ef4ad05554",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f68ac3e2-e777-48a6-b7ab-3784aa3e853e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5451eab2-7657-4f6a-8aca-41bf61777432",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "940a09f5-dbdc-41a4-b04c-5708cf8ebc66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45b1d009-78f2-4477-8487-fd07485d8cc1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a8ff7cd-ffe0-4185-b3d1-16bfab34f839"
            }
          }
        ]
      },
      {
        "id": "0f0e4902-de73-42a0-8333-987f3e72fc39",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c6ed9ca3-daeb-4b53-890b-62d26b57ae62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7d99f1d-99bc-4a38-8576-93103798368f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bd3e2c30-b825-459e-be0a-28035c0bfef3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fe994f-6476-4d30-98bf-86dc1a5f5389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184708c2-a3ea-4195-b175-abd771bf3f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cdb47e-8cfb-485e-8bd2-e0a761e3af7f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a50bc9-d606-4500-b563-7101fb619fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec2c6a4-b480-4f65-a19d-c601d13ddc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67069bc8-4c30-4551-a2bc-545a59722811",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49375b7-7837-412e-a8ff-e05c831880ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b63677-3da0-4d67-b956-cab5985b5544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25cfa9a-b417-4aa2-9cc1-81e760dd9b27",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff5b87b-1f6c-4bf1-8a4b-3f5ac18402d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5666a598-8fc3-4db3-a8f0-4eebed8d126e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7415175a-d142-40ac-b046-27c757b6cad9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c9928e-77ca-43d3-bdae-8f326bac96a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285fa4f2-d2f2-487c-b6b9-4e848699f618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa087d1f-2d2c-4a30-a6be-d4beb9d84f07",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81480d6f-6e33-46ca-9f29-8d7bbf743e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4f4dc8-cd41-478e-92ae-dece17106a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa14ada0-2f67-4ee4-b4e2-b0376379f692",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41dfa47-d25a-4e52-9310-7ee32d5f0bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02fbbff-9dd7-4674-a2ae-e67fb5718ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "920ca215-af80-4dbe-9982-7fe46fc78b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f02c59e-df22-4c97-b77c-1b901de5a7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5920c1-ce6a-44cc-bcb5-023ce53cb9d9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc45d11-6a47-41ab-8770-386b80b54d21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "295e556d-6306-4aae-ae7e-2411042c0c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6984f7-418f-4a26-a08c-53380d857953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33da53b9-e9c4-43eb-b7e0-87f9363d379e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0035c7f-3e65-4872-9bea-760fef5c89cd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23414aed-80a1-4285-b706-e30fbaee987d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad0bd2cf-dd7e-414d-b16d-b15d95ce03e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65836594-bb1d-4771-a10c-c0b8c748f1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7acbf9f-17c4-4e81-b0ef-a89a6aa1de8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70711b5f-22b3-4f97-be2c-5038fb406250",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe228682-6d76-40d2-87f8-d28e63f58722",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b558e8ad-9e5e-490c-82af-498f8cdba0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e996e845-5f3b-4580-8d37-71822e1ec221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0908b3-facd-4472-9993-924dbf757db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7855c65-a8a5-4692-8643-28d2b2652c34",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2095b04d-0bf7-4d76-ba47-f46d1c318bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a6a2b7-10f1-4cd1-922f-2ef350897d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98303114-2f36-45a6-bea4-3a153055a6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f513044-ad86-434a-9785-f09ab8aa6d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90015d4-73a6-488c-ba0a-615b6d0b25dd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a3c2dd-dd6e-4d41-b125-9190c61865bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501b6d62-41c7-4eb2-b4a5-4e2221f0f454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f203adcb-4e4a-4e58-87f0-353f89635b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a7ca9e9-c073-4d55-a916-61eafb33a88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e1ac28-eb95-484b-8a81-fce6e3459c54",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df87dc9-1089-4abf-b892-b9162cbc58e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51165567-a1d2-4f20-b60f-9f886ae83491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29da1331-611a-49d3-97c7-c2805c2bfe4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f20b82e-ad89-4a02-9198-0723126a8874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd896be-a3da-4b68-89eb-461b57bf6fe8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c85016-785b-48d8-a23f-c8107dc468e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecca616b-5990-4930-883b-846fc648fbcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95dd751-dfae-45a2-962c-f3914ca3987e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d692a0a8-11a5-4797-95ef-1862f2222910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542519fa-617a-4cdf-b727-f4b5aeba441d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a245831b-ca60-451c-abce-d4209f11fa07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cfd331f-7920-46d1-91fa-bf10ec3429e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebff1840-fe1a-4d89-9558-7845f69b7b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e155fba-1829-4775-90c7-24e9b2fc1608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899589d9-9c62-48c5-8ddc-3b5ab2cdbdcf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21fd5f5-146c-49af-aeb7-19a5cee2b91c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c542ed64-f04d-4dc4-93e5-6e59718a239b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c643d4-bc49-42fd-b8d8-5a9a377f1a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbb4422-2bfc-45a1-96c6-4d5865ea9293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606bf8b8-8040-48d5-bb09-975ba6260db9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ac9461-6cd6-4bac-b70d-2ddcfeed81b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc42c323-c996-47e2-82e1-bde64e6fef3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbc92f4-ab76-4479-a775-946531873d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08dcc7ef-a8c8-496a-ab98-ef667af97d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1b8a90-6cb9-49a9-89b8-beabdafbf97f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2337ea-165f-41e7-a0b8-132476e2f529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff20aa1-7fc7-4105-b5e3-66e6eeda041c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d693f6b-c219-4cfc-9690-89bfb5a26be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c070a3a-b7b6-4b96-9fea-8ab609a35f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0683410-791a-407e-9a37-ad381e28b2bd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bf9dc1-7b2f-46b8-b526-a31d4f968b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaea139d-3954-47b2-ba22-5b133dafe06b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125ee9c0-9ea0-4ed1-bf55-6145b5c6d80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5c9501-4617-4793-9d75-478aa2719895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be05bc44-4acb-47f1-ab27-5e3089c19375",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae59a944-ba56-4cd5-be14-a0c45385c750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4e5339-4a49-4ed2-b065-3f074753445e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "560ce824-9e50-48e3-ae48-1049299bc6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4b6a49-1f3c-4b67-8517-10bf54648f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5aeac6-fefc-4a2a-89a8-3d7b3d1eaac9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df87239c-825d-4f1c-9271-8040876d31b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37bc648c-2aba-4472-b733-8f9fbda5b1bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a6b908-decd-4553-8986-a9ee19c4bff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20f2bb8-c626-4cd1-ab77-15d8d9a03d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe0262b-fc2e-4134-8c60-0da4861fcb29",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0d4409-3bfc-417d-af40-a1744e157c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5eebda3-236f-43aa-b46a-46bbfb6939cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed0e9c8-2f50-4ea5-ba3c-d25cd4fd255a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6600e165-2300-4313-9a81-42514287712e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b1b580-e502-42ad-8226-ab50e0533cad",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25b805c-e1a4-408a-b8e4-5b7c5c5e44d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfa3b07-869f-4347-a73b-ee78cc51fb12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6ea178-fca5-490e-b1e0-74fb62019d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7228bf3-6c36-42e0-907a-aa60fb44afe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb6138d-31da-4354-8df6-16a22cd18931",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30c3407-38bb-40c1-a3e6-56f23f10ce9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca8cbb1e-f6d0-4d5a-b09f-5b9f60cf3e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60ef486-d90f-4b14-b07a-7a670b5e9c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3ea88e-a7ab-4d35-ac27-04513de75a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723bb1c3-6cdd-42a8-837e-c00cafe4e35e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c43e88-b8b9-45bf-8cbf-378c7fddce49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c0cb7a0-286e-4589-82b0-2fdc69559047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba40e1f-f0dd-4ef1-866c-3e97e33405dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25805251-2ca2-4d8f-a0e9-9a2377842ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5219962b-1837-40ce-a85c-c6044e9ed436",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8cefeb-79bd-42b7-83ed-68223c4a47d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a54358c2-b42a-4910-a614-63680727121f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f844dff7-c1cb-45bf-b5ba-c908a4850cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acde5f88-0ff9-4f18-93b5-697129286f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df78655-894e-4cc6-a544-7c6852e0d984",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfb9dbe-f46c-42a0-97d5-b88d0edc588f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "481d2ed2-e10b-45ea-8e9a-aebc939c4f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f65111-89e7-40b0-b8c7-0aea4fa82ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae47c898-338d-4c53-88ec-350d23cb8205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f79b6e6-6a9a-4ace-a094-6771e2eccd3e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec0a9bb-b05d-4e76-a882-5a4f50b49f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c86893-bfa0-4499-896e-fe269247990d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b46403-02b4-47eb-aef3-64348498f706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85131d81-c419-45a6-9977-b977032d2086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5babf5-9a8c-422c-947e-3bbc1a03cb69",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381edff3-4e37-4893-a873-152acb3f2ae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6c94df5-c31d-4aab-93ef-d2f0f4c4bae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b30765a-fe1b-4875-a6a0-043aa1db783b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b10dead-156f-4ffe-ba27-bc31844b51e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03128ff3-47ac-4d58-b384-f7bc2edb9868",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8039463b-246b-4cc7-945d-d5d5c67fd99c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "936c57bb-c41d-45b4-8f77-30fb5584e113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380eaab6-7403-4162-9ee4-983b60f6a883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4215da7-2fec-44c4-9c7f-00b1b0887c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f607c11-8f47-4fb1-b2b6-41674eafaf4a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bee5a66-8ed4-41b8-9f7c-e88358ce8de0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19c9d965-f05a-44da-b737-a65123674cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da587906-9581-4612-8dda-38c3fb0815b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1770b848-0248-4874-822e-95c90a87fa65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c11db27-ecc1-4948-a313-b8d701607d0a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70abd3d6-1334-4818-8a68-7e65c93e72e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ee91bbf-98c1-4ef5-92ef-5b7774c502bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199a9afb-d5db-4446-93a4-633de67d1ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2357eee8-0373-4e71-975e-4e5a8c4a29f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d742aa11-9667-49c7-a17a-035a1b36e8e6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911ac0a5-bed1-4ad5-9a7d-5ecb86d406bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "021e5266-9768-46d7-80c1-ea5ec25d3650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69d6629-ce89-45f9-a2a9-0081a2284016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0c9c96-6f81-4ba5-ba59-68b0118c5ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738ea707-feb6-40cc-acb1-864f3bd5a5e7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55401f95-bb1b-478d-8e52-bff2f40c70f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dc1f430-5e67-48e3-a8b1-370f33d7655e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbff34c9-0d1d-4e79-8513-14316e906ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7488a789-4be6-465f-a3ba-3168f51f9241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ae6651-dc3c-4529-ac56-64347b43b6b6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c298eb77-d8b7-43d3-b33f-1d22b9b6e34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff84805-cd13-4e15-b747-eb81dfbf91c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b231963e-3537-40a4-86d0-16957bc97bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e66cb6f-b29a-42b1-8176-ffba6036e3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f76688-ee47-4278-953c-4887e147076e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a82784-dff9-4c83-b70f-7134a15f08a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667358c4-0048-40bd-8575-bc84aca11c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f938f7a5-6da3-4da8-80d9-92d8bc360283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eacf97fa-f7a3-483c-b132-52cbf0a2a684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e50b0d-853c-4f4b-995c-43633d3395f4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63bacb9-f147-4b1c-aade-1d165d4a53b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6910f4-1e8e-42c5-a5d0-ee16079d31fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3029e914-cecc-4f6d-896a-9e3bb5a7709c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6409b274-cef8-48fc-9e4a-416c0b2b3cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d55405-89d3-453f-9a04-3790ea4df211",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7271f0-d311-4a09-bf70-70449933fd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec018e7-fdc7-450e-ac49-5f778d1512b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0758e0f2-f967-4d28-a782-a28b482580e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90709b3d-448f-4675-8a17-c89d5d9201bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89588da9-5596-4943-8704-fa398f4c9554",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3228ebcf-0d2a-48a2-85c8-7b22c5fb5cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b5f649-7346-47ab-8af1-c00919075a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bc4f2e-a9ed-4353-bfb7-5055ab679a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6faf06-d148-42c6-b2f2-41ad603fdfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8105dba1-dc2d-4ca0-95c2-7bc5b0323e89",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47ad8ab-2917-4cdb-8bd1-6e94bb68a0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce61cd8c-35b6-49ad-8484-f4ba97ed0864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad32b239-ac9f-4c30-80e5-8a198f05dd5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8a735a-ab00-4129-bed1-0a095dcc0079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d29f8e9-303c-4c26-9cb5-1b12f6e06c10",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9410dd70-ea70-4e15-869c-58e8bc746f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390b672b-fe23-42c8-bcfd-284d1be56fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1cdcca-6d53-4f95-9118-deeb7bdc72e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2592ff3c-d47e-406b-9e7d-5f8baaac6455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c008314c-a057-4671-9197-167002caee03",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744ad943-4f18-438d-b0f5-41f3853705be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b513436-6f3c-47f0-8c0a-56757fdcb658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5b6aa7-b5a9-454f-ba26-83d4afad9336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2cd0c2-667c-44dd-b578-dfcc9fc566cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2869999d-5fba-4ae5-989a-e4b273b2342a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88758520-6669-413c-8444-e24c7aec3357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe802b7b-ce41-443a-af84-4a02cd1896fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aaa0b41-ae08-41e7-a1ed-7a1f84401711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8490a9d2-3c06-4788-98ca-5a70d41e64e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59bff65-71ec-4b1c-b409-55b1df1333fa",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51fd356-de14-44b1-a583-208a4e3a996e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e38def3-dbb0-4906-b4a7-2fda1dcf7a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a7a0bb-4329-4dcf-b72c-8792012527f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871288dd-264e-4b84-b109-13cc957b8349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb2055b-ab75-475b-b878-5a0e43c74786",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdecadb6-e8bb-4e4f-8056-72108f866f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a39447c-2de3-4c1b-86cd-a96b325389d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b236d80-9785-4f22-a42c-007c0de541c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b487be2-7692-4b3b-9b4e-56f14bc717a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e31c209-f97e-4b16-b0ba-ee79cc7218ab",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a493807-2db1-470b-9d10-86737f7c251f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddce8105-733b-4ede-8fdc-6ab21e0afb24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e563f2b-a97c-4cd5-8aac-1766fc8aff4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58310b1-4b9f-4a20-9609-cdbcb0d878c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162d0557-fb63-4dbb-8334-9e29da766cb4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db12ff6-9d3c-4422-ade3-b0a6415a2af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d46a20-df27-4ad2-a418-09e74b50bea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a148f8-cb8b-4f0c-bcb7-b3983a0c0a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6a1d45-c70b-4db3-a828-6fec4900eb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01d1c71-52bf-4b09-b2df-2fa574ce787c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06fa4e1-7cd2-4e6f-baa0-86ce67ba1d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b3d401-ce21-49d6-87ad-7e9edd406517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb16f935-eb9f-4602-b2cc-d389ab7488ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88690cd4-56b0-4b2e-82bd-9b927bb2832a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb63849-b544-4f91-9d04-39d64cfaed24",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70d287e-b36b-4266-b62d-ddcd6f700da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24cb812-b688-4c32-8963-74d811c97fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa511a7-b056-4938-af4a-8128bacae424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a92b1d4-4ac8-4324-9e4e-34a16627bdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe7bc37-ce91-4d37-9f55-d2bd9e8bff04",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4eaeb3-a0e4-4fb8-ac34-705b2da7cee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8748b8ec-4f4e-48e1-8d3c-011aa14090f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f43144-3de4-4dbb-9b09-cddd138c9f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922386b6-a882-48a4-8f7d-408173946042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8b9543-a6a7-4bed-8796-fda69e326378",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694f95f4-3d41-4a23-8588-06c4b2a41f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e86589d-dd4d-4e75-8c2c-87e63ea7bc5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc44b23-022a-45cb-ab22-378cb0f6d815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2897b287-638f-43a6-b433-7d86a2d7ef35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d47edb5-6de4-45bb-8661-2729add6007a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10dd4d8-fb00-4be7-b1ab-ec14cc004853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f5813a-6a90-4d32-9a30-04d974ab2a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "347f84c6-52a7-4e5a-b274-64d4037da389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c2c43b-a21a-4ce6-9532-75a10202894f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff2cbd3-84c6-4255-b7d9-d27290daea6c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeadb582-bdab-4133-8d5f-25b3627e28d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6ec6a9-6f8f-40ca-9129-2b4b5a081110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd230626-58e9-4ca5-be1e-6567582548c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2559ae-adc4-43a1-b41b-f1a2c36328af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69eee656-b6b6-400f-b741-421a4b2315ba",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9469f691-4cdf-42de-9b7e-27b5cf37ab10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98dcfe75-2537-4b2c-b4d1-be448d36963f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf039c7f-ace8-465d-810f-8c546f4f58f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14164ef8-1e93-4205-ac81-3f78df9fb86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f469fef-579c-4b51-acf8-32067e1d8c23",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45af4f15-4d9b-4c21-b352-f4da8660c5f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd094647-b08a-4ca5-abfa-d71a7ce46e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4e2373-efeb-411c-8c7d-08c765efed20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06cbf9d9-93d8-496e-aab0-c171d6a2cce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c91511-8534-4774-a288-1360cdb330ba",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217b15d0-e94c-467c-82ce-a05f3a5f2d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16c8655-296f-4655-8689-a58fb1167b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ea8810-e34d-4de9-b09a-fac6f6041170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9f5071-5ff4-4bde-a94c-247196469045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada892eb-6c12-4391-b18e-300b10e88b53",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fb219f-63a1-4795-890a-ac7223aa84da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fce7531-cb8f-40c8-9f04-075d52ea3267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1b905f-6d44-4121-a253-1955513791ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f809e2ef-0414-4775-b0da-44faeafd8b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22472e86-4ec4-4a04-9874-b5a899193ab5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c35952-e0b1-47da-ab05-77d5245530a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a216730-717f-47d2-931c-f5fa8bd65cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b50c0c-97b9-443b-8fab-d20ee966eaca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6c4ff0-fd8c-414c-9d79-34bb060b68f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab7d66f-f374-4ce2-9829-d7c316990e9b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cb9e3a-18bb-4b5c-ad2b-3f08dee4bca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449632b7-f344-461d-a418-38010cb9ccf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8943acc3-6412-49eb-963a-59f5e703e609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c11374e-46e5-41a9-b4b4-d3b474e04d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1867e19f-bfbf-43d3-a355-0b02ba958caf",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf085287-a90f-4379-8da5-9447ed6447f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920606c0-9393-4a86-b050-e1e2c8647451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf28b651-00e7-413d-bcd5-ed711e6fda3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e717a2-3f8d-49d9-b201-0528dce9d773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ab5b74-ebac-49b6-835a-03d52c800de1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5cfafa-8e66-4faf-9852-9cffccd8e56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de65beb-dc9a-4264-8486-aa64e7529af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29200e1-b68b-4a24-b2ad-c0438f0a6952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c182b75d-5807-44d5-8c59-e6fdc8c868c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525f7459-ffe2-489d-b5e0-fdf1cd96a941",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdba572-d0e0-4ef4-83e2-1769e0d32f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9711c16d-16c5-46d2-ab2d-4560b94c50c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f876d8-12d4-4df1-bb6f-7a9e989d0969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e0723c-ea6d-4abb-9b53-cceb2e1a1235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81bd712-504b-4d75-8baa-38d30f6ec3a0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cf98e3-b5a8-4fa4-b896-fc5a2f0cf4c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54fe7fa7-5e4b-4318-aea9-55056c41dff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0050c597-5d98-4d2c-b6bb-317b69fa5de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73a1820-45e4-474e-a868-c56ec20d84e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d1d796-9fd6-4f61-8429-f9cf33571136",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e334b4c0-57d9-4bd4-8bd0-e2eb151fb96a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11449416-8ee6-4196-888e-5194ffe3d0ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b3db59-f316-45b6-b6d1-9092bf261f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e2eeb3-e000-4d1e-9f95-807dcf780e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5eeeb4-7217-4b8d-9156-8e88c6ed464f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c68a38-cc14-467b-85ce-a75400d6eb65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ede7e95-3c93-4f8b-a88c-25aea8739a56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdc2170-d964-433d-a77d-e89a9095f9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe42d14c-3435-4e87-bbb0-7c2617fbc65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc08fcf1-22d8-4c43-96b7-49b4d0616ed2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34892c87-7af3-4eac-829a-5abfa4846b6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df944152-cd0e-475e-ae39-57d3b2d35178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "666d519b-4835-4902-91ce-d45cc324b0ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c3e977-b5ca-45d9-9a04-9f87e40f613c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29c64f8-d887-4db8-bac4-e552b54f38d6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1b0f44-9270-45c5-a0e8-2b8430fb479f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bfea963-0070-42c0-85da-1ce3994309b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3936643e-0b71-4e3d-a268-292a7a277090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4fe834-eb06-49a7-afb9-1a8ba50a9616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd72c396-b0ca-4c65-ba89-54994a92d42c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26e42f5-affd-4a01-b4e7-7809e152e4ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61a9c3a9-f957-41ba-ad9b-941ccf205233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfea3a7-ac4c-4ca8-a1a0-f9d07bc971c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1223b8-c0e4-4a74-a2e0-910efa058e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96657c5b-9974-4e67-b62d-932120d2defb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f1f9bf-c072-4c25-9e71-e57df7005b50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f114933-de29-492b-91b5-5b6521eae610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11a49d1-254c-4795-a2ee-92098740fbab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b13fedc-06d9-4929-938f-e05f9387bae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63569f5-6b04-4743-8df8-3fc2dbdd9ca9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d192ca9a-8e26-4301-931d-e67340203ba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a36859b4-8704-41d1-bdc8-7b8f63ec8718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed77580f-8938-4cdf-ad4a-26f84a472586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49fa6055-8d56-4c73-a0d3-1db7f8974aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48b1a02-7349-4f27-ac40-8cc58f77a2a0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b16d30-d109-41ff-b307-6a5bad3be33c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6925b71-fe8f-4485-b26e-7e9f0c24a591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e40f01-da8f-4769-8fe2-ae3ea301e4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc57cea-778b-437a-8b75-58cf6e57dccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f112c597-ef6d-4330-bf8c-9d05fa2a6bff",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2321d0-d082-450a-8fb7-903d92c91a11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1832ac2a-8fec-40ef-b9d7-dba7a70f71cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43920672-8845-4e0c-87ea-141272ba5ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94232b6a-543a-45af-b4fc-2c52c6d67473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3751c8cd-67b2-472c-a808-6313e93189bd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f09369-975f-4945-a791-394bc7a14095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba8def2f-08d2-48f1-8947-2a8ba9deed18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b847df-1543-4f5e-8867-d18234683ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0046ee-b7a5-4636-8e3f-189dbb81a595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dc1519-46ff-4ffa-8d88-1e1164de5d18",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2699e672-ea39-42dc-b199-bfb1c0f1a102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75983c14-7707-487b-92ae-81b24689a8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c701a1-c94e-460d-b823-e790e4f2dddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5173ccc0-27c8-4f9c-8085-91472165a41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02051c0-c355-470f-b76d-1e74e3d2b992",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7a1eff-e0b4-4c58-a18f-f99f888607c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba817850-9933-476b-b499-6ca4844b0e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b707dae-afd2-4572-8f83-af1a46f9850c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49f23f6-2c26-4729-8d39-83d91ecd3e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f692d0-16c2-467e-9862-6276abb9b4d2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f2929b-bbd6-4442-915c-24527d8c74c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b4de2a0-3e03-4098-a615-8779b9dfc5b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0eeb6d-afa3-4eda-bbe1-054795ded048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74a0f93-aea4-4c73-9378-785300452914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8d5661-08f2-4d42-b09a-674a72089b9b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b79227d-1ca6-4cb9-a1cd-cff2329e7e17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b34b821e-c9c9-4309-90b8-77c2ed151aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cea805-8a37-4e67-8dae-e4eca57c4bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de377195-b148-4e0e-aa21-d01d9f94d6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c602800-e08a-4031-a0d3-7b1fbef53e61",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e994e8-c281-4d6d-9399-b816ab6a943c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2da9af7a-26a4-459a-b453-939183bb3d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42e5d07-dc9b-4afe-8fb5-b04c2aa4912e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781ebc97-3c4c-420b-a79c-b3fb6c187793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a32204-77bf-411d-b6b2-9292d86d4c08",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f445aa22-94a6-46ea-b491-1ad30702abd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b90f10cb-151b-4020-aa5f-205697e15677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61f1a9b-59ae-494e-938f-c7adaf792d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cb62a7-38a6-4e45-abd2-34690b227f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811a4dc6-1805-43e5-ae91-2812fe8e8b07",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea527802-e53f-44d4-898b-f7b69b61cdf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b816a7b-038a-4c8e-98f9-cddf9aebb8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f71165c-d272-4df4-9331-d934796b6bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6647f1-3f0a-4d8c-bb3f-133684b7ce95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee47fd1-39cd-4ea6-930d-3b58fd1676bd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ff2db8-8074-4321-b20a-d380977a2586",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54f60d1a-f5c3-48a7-bbce-6ccbc2353266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7eb7e24-d79d-4f1c-802a-996311c2e222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6fc0e7-8fc5-4d25-9a30-70ecd1da3f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47b0728-75d0-44a5-bb1e-241a98c6dab8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f3447c-73f8-4fe4-a698-9d78da8608e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d02d12c-9154-425d-bd35-8402e1f0b244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a44764-8b67-4a7a-b0d0-da113b7334f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26604c0c-d01c-4c42-b657-1d85e264c007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3558781-10ac-4d21-a4d0-2e21deebf2e7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67702ef6-1f60-490a-80d9-745bbbc6ae25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70bba88e-9957-4e30-9924-a774c7c7ab61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251c4bc9-6294-419b-9960-afbb4ba8042a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df73c009-66c7-4b2f-9854-be87baf7da4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8952ffa8-1a3d-4a6d-8307-6c9b5b808276",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e67ca0-d877-46d9-816c-0f1e6f42b554",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbb641d3-4d39-4314-ad32-9165b281ad4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fcc9d2-d76e-4713-917c-77ca19d513b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244a799f-854a-45b8-99c0-3c2e42dd1560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a13e79-b880-4a9c-a69c-b819578bc101",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb68e3c9-6822-4ca1-9fb6-3076c50335e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "229c75fd-e64e-44a0-97fa-cd32af305e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d6c730-231b-418d-b6d4-b09d1e650a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506320fd-7e21-4319-93c6-44efaf15acef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a872f853-0ea0-4bff-a73b-0cac9e7739be",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfc2b0f-27b0-47e8-9d09-d099385a000f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c3918f4-6bd0-4e2a-91f0-458e63a1b4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b002dd1d-6d3a-4c49-b022-a8253d8fc33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b65e86a-6578-4adc-92c3-819d78266d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ce8acd-01a1-49f0-956d-f9d1e45cac9f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead4f61c-3110-4f6a-92f8-7964efb50d4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae03d9d7-c24e-4d8c-a8e0-343828c8aa0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eab7a26-6ef2-4a8d-b583-493687441271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70058b8-9e40-494b-916a-0d09dd811f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6c55c5-af11-430b-b0a8-74bbbeb69d21",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b35603-5574-408f-af45-2ee5a9f20c2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e8ba4c2-abc6-45e2-a642-7622ee3aaa47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614a4612-1136-4f97-b38b-8d57ef82d419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c8394e-4c8a-4382-a039-e50e30363b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9818675d-fc62-4fe1-83b7-4f180d90af9a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170c3b1d-d630-439a-a00e-1eca4a5b8652",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d0a2a8b-ac04-40c3-88ab-09d502645cce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40f0598-daf3-499e-8105-b7c4e1ae33bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e01707-9b06-4afc-828d-b0ec50ed5b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa698bfc-d2b7-4b6a-9c9d-a77ed3b6d41c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b141f5b2-412d-4edc-96df-c6bbd665d849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "240dca33-4967-4393-9d54-ae3c45c98ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f150da22-858b-4cc9-8fe2-89f2da5110b8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194efe9e-a657-4fed-975b-598553c40a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8412fc4-453b-4503-a16b-b804393d6d3e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30abf302-1c0b-477a-8beb-39272e1581c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7593d5c5-e943-40c3-b98c-003df09069b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb1c4ed-e065-415d-b50c-fd1672eca891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70d0079-29f6-41ce-8d7e-fe7c6c5b59cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967e75da-de69-43c0-ae64-c948e585a927",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9905ad73-6ab5-4229-9995-7e8dc7262fd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81d0e424-3205-4f13-a8d9-6290a1b6f107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd524249-6879-42a4-bf18-eb02975beee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9309eb62-e5a0-495c-92f2-a6262ee3456e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69820a00-0378-4bc4-b052-405fd7235aa5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cf6957-6009-4901-a60f-25ec33df0651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03b53965-2f47-4bed-ab83-c0028f0ee24b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "122525df-654e-4e23-980c-1e5550ae7b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f188c59-772a-4931-9088-4e70c155da97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a21af65-b57f-4b91-abe0-f7c788cd027a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcb1ad4-d28b-4620-964e-3cfc7d0afed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2da4713-8b61-45a8-802c-c1c5940f0b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39378d76-6fea-4b33-8a1d-2b1711142b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c119a8dc-8704-4cb7-97d2-a84c72b98f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6643f19c-cfc6-49ff-bec0-93b772fa0d2d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90bb16f-0536-4d83-a55c-ac40a7b00e75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13905fcd-7d99-4423-b072-1facfc5c3002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5331ca6b-8d66-45db-804d-769c305cc155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa7a914-75a4-4da6-9bca-44538a6fcbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1080978-4dcf-44bd-b284-c124312c91c4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178bf1c3-b646-4820-8409-9f3d63b4c522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "438f21dd-8560-44aa-bc49-edce10948ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d91e997-a853-4416-ae65-8695e1193f37",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab1ddc4-556a-462d-81c3-cdec639d8fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abd3021-382d-4326-9ebe-84574497ae43",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4490fed9-b3b8-40ea-a106-a070acd996d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1d20353-c5da-4833-afe1-1aaf25d613fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df558ed-2d46-4f6a-a834-8f350811468a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c32afe1-ca54-4312-b53c-6e857766136a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54304ae3-08ff-4a02-8335-b4b6eefba954",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9750a5b3-20f0-44f0-9594-1ca54eceabcc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1ab8109-417b-4264-accd-683cd7b97260",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52a595f0-ff20-4a98-b0b6-b188d6f50164"
                    }
                  }
                ]
              },
              {
                "id": "e6a5eb77-e34f-4d0d-ad4c-0c9edc251706",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75e4d0bc-5fa4-435a-a4f3-b1b8498e41a1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc15ad5-a0a0-4633-8cbb-0f2971e9366a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0fae117c-3161-41ed-90b6-eb44e4983a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc58f8b4-622a-46ad-a8b8-608b2accc3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65bd0118-e58d-4eca-a0ba-8d619824f13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cf82c3-669e-49b9-957c-c0fa331c0aa4",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27ce93f-e8c7-48f2-82da-a571de7a257a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ddb6a7c8-878b-4f5d-870c-96af852049f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fed6f3b-d04c-4a9f-b768-d58b709ce5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6904ef8-439c-4930-8e19-c8fdc336f432"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50042781-fad0-482d-a5d9-a7f46f563600",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b298f049-79ed-4afd-b459-36a8cc5fcb1f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "898fdbcd-8ee9-4d59-a288-8848fe02d09f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90eb711a-edd2-4975-a92e-95bdc64e9cce"
                    }
                  }
                ]
              },
              {
                "id": "2500209e-707e-4505-af4c-523fa9937e27",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a4b35731-a583-4d6a-aac0-963f109ab5f9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74cf8f4-988a-40ca-98fa-6f945e8fd891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6f6b7265-1d36-4e26-9486-cbcecb540bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4852a5-7aa2-4401-872e-2ab8033db242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3679bc-cac4-4d9e-b35e-92c2b0991a5e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "74e42abf-5e85-4e2d-8965-d69958096a58",
            "name": "Positive Testing",
            "item": [
              {
                "id": "45710d65-ac9a-4eb4-b0c4-ec4439801112",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a9be9d1-2569-4888-aefa-bfaff2b5a6ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cdc83a87-75af-4e01-9f7b-7dae208fc028"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dacbebba-b6f8-4c51-a019-6b50b099fdc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5127940e-5520-46f8-b789-c2b411fa4af0"
                    }
                  }
                ]
              },
              {
                "id": "2b25f3ab-4837-4456-96f8-aa39d7143a02",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dd00d9b-c3e9-4f4a-9e56-03e621e32c98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d7a6a25f-0a3d-4f7b-b903-f6b6c3b72f5f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a793632d-ad0a-4c54-ad8a-d49a333a4f79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c03dec76-be65-4552-a0ef-fa16392c39eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ef167d0-6233-414b-8c4d-b257e1acee3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1a9ed42e-67fe-43f0-b0fc-edfd5ae0147f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57a15f5c-96ed-4158-8f29-522b2d8996bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "edd71ce2-f879-431c-90c3-250777c4697b"
            }
          }
        ]
      },
      {
        "id": "d0124b53-e8d0-4dde-a9f5-c3e5089b7acd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3e8454b7-1e09-491f-946f-836192e92975",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4792b65-3a3c-4f03-b33a-905c3abe59fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a77ed4c-5b9e-48e9-9de6-f1402201eff9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4609eec2-78ab-4a47-bafb-f3469962867d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f9e6eca3-bccd-4c5d-a94b-3635afe56c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60580e91-953d-4eae-ba91-5fa6fb0b6d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5282a336-6a42-4f2a-981c-9ae5356bfecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e108438-3d57-48f9-9663-5e8d420b374a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fe5f4f-e53d-47d3-ab2b-71481d93186c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "06d247a8-89fe-4712-b711-52dc64c22258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89c56fd-aaa4-4df5-8080-d813c66f6ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e0c0532-6822-4223-aba5-cbb6ed1d12ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfb64de9-8c8c-4d95-b7e5-4fe1cdc8491b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4bbeb51-77ce-44fa-b7fb-5206f3d7be63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a352f157-5480-4a68-b801-b02f7cb19953",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4914736b-3e3d-44a7-99ae-6b494fd1211a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e327419c-74d2-40c7-a2ad-7a8ebce04c0e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "db22a3cc-5e85-4c29-bb9f-ca21a099db40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62955809-0a6d-468b-bf8d-0d84d818f4cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61e81727-11de-40c5-a72c-ace29367fbe4"
            }
          }
        ]
      },
      {
        "id": "0359659a-8e23-4dc2-b167-9d10a41161bb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "74040ac7-22e6-4da1-9eab-fba31d9ff759",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2142134a-80da-416e-bfa4-beb9f187cf25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce4e54ed-eee8-48f3-9514-cc9c4370ecc3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9566340-776c-4977-b676-6746a99f05f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1a617fb-b2d3-49cb-b862-eb300e755053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da91f08-0ac0-4c74-a771-abae0f2d1882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20ab7ca0-11e6-4346-9930-a57bbdd270e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2278b939-3192-4312-aae6-d2c83e19f02e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7238e4a-6290-41d7-b021-a1b8f0ed097a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a2fa23e1-4c71-4e6c-b903-b0dc5b393c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6b0716-fe4a-47ab-b9e1-2e4486333b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8a74a48-709f-4511-87df-ac4484e52f6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4dfbe68e-9c4c-45c9-9d59-9176286d6d02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a79ed302-c3b9-4679-bed5-2cefd9bd7ff7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18b05df2-7a29-4803-a55d-bf916a73a72c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "606f4c0c-55e7-453d-bf6a-41f458189b83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "017fb5ea-bdea-4bab-b242-456952505fd3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b9b6f035-6c8c-4fea-85c1-a7d6101b2d9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "032af24f-fe4c-44b6-bc6e-563700b88ea1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c47b6965-80c8-4604-b0c2-4e8c24148c24"
            }
          }
        ]
      },
      {
        "id": "e445ba74-e599-4a90-b15a-15311d911cf4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f9a5a54d-2189-49de-8776-5999c4b477ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02ce46ff-ecfa-4c79-a15d-e8cbde8f22cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c25ee9b4-2987-43df-b24a-16256e5f0e8e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64186ff3-c5c4-44ac-a04a-fd442d3edf81",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fabfaa8b-2207-4dac-8180-de95b6038167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336e0613-0fb9-481c-8c72-64355fe0bbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bef4f5f-6a97-486e-815f-8fee6e1cd746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5c5694-30c8-4ff9-bedb-53af6146dd3e",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a69c62-0e08-473f-9919-92958126bac9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4db329ed-1a0f-4265-8d33-c8c1f58ad8fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d08c65c-8a5b-4c9d-aa63-75006e008673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0802e282-108e-4fb2-a66e-fb964d865c0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82ff7f20-df5c-46fe-b3fc-37252ff6cb5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f53b934c-c1a0-46b1-a639-84ee010b58c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b567126-056c-46d7-9ff1-016a82abc3c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cce7642-1b17-47e3-9c2d-a09b6e5d007e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62dc20e2-7c16-4d5a-918e-172dd9195457",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d8f166fc-7b68-420b-a92a-73a68860d0b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "597ad6df-69ce-46d7-92d5-7df21c41df96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1966767-ac33-4921-9ec1-2914c9e84542"
            }
          }
        ]
      },
      {
        "id": "19c301c0-c346-4767-880b-ba796d94e306",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "378afb46-2086-4647-b497-8e6cf8af715e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba338572-1b0f-43c3-914c-1c922b49834b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "24f0fd60-9ff9-4a4c-bd96-700297d71762",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddfeba20-4de3-47d8-882f-3f8a58bceeef",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4619d4f2-b511-4d36-b535-56ecc58529f8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 845.1307692307693,
      "responseMin": 19,
      "responseMax": 8048,
      "responseSd": 981.2966962016799,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684888663979,
      "completed": 1684888894158
    },
    "executions": [
      {
        "id": "fd0c4926-811b-4a1f-aa2c-d793040a79ef",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bc98b41c-c7ef-480b-9312-1ec62ac6a6f1",
          "httpRequestId": "5bc80032-a67f-45d6-a326-48a1eb65f7dd"
        },
        "item": {
          "id": "fd0c4926-811b-4a1f-aa2c-d793040a79ef",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "124ead2f-8e56-4934-9336-80c2ba06441a",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 0
        }
      },
      {
        "id": "7bd6ba5e-f8bd-4ae1-a9c1-5eeeee14bc26",
        "cursor": {
          "ref": "0fe36faf-b8a0-40ff-a12c-ecc21c6b1495",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9241063f-076a-40ce-9d02-21f5e6376567"
        },
        "item": {
          "id": "7bd6ba5e-f8bd-4ae1-a9c1-5eeeee14bc26",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "949b6525-7019-4761-951a-34fc3ca2b8ab",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "304beea3-5350-4d27-9227-7c7b7e0ef1c7",
        "cursor": {
          "ref": "61b25591-e5dc-4ff5-aeed-0f9bcb290c74",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4e2c3bd1-2ee7-47b0-b901-4313e0e9c10f"
        },
        "item": {
          "id": "304beea3-5350-4d27-9227-7c7b7e0ef1c7",
          "name": "did_json"
        },
        "response": {
          "id": "260fa692-cd83-4aaa-a9e4-882dd873c509",
          "status": "OK",
          "code": 200,
          "responseTime": 1533,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3db68d-c720-4647-894b-1bf3c46baca9",
        "cursor": {
          "ref": "18211505-533e-4c9d-ae9f-9712a15e4467",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6e9d42ec-2e32-40cb-a6ca-3c83a581a8aa"
        },
        "item": {
          "id": "4b3db68d-c720-4647-894b-1bf3c46baca9",
          "name": "did:invalid"
        },
        "response": {
          "id": "122bd250-e795-4c53-ade6-ce2530d1a3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3db68d-c720-4647-894b-1bf3c46baca9",
        "cursor": {
          "ref": "18211505-533e-4c9d-ae9f-9712a15e4467",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6e9d42ec-2e32-40cb-a6ca-3c83a581a8aa"
        },
        "item": {
          "id": "4b3db68d-c720-4647-894b-1bf3c46baca9",
          "name": "did:invalid"
        },
        "response": {
          "id": "122bd250-e795-4c53-ade6-ce2530d1a3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb47ad6-ca8c-454e-9abc-c756666c1a92",
        "cursor": {
          "ref": "c42f6052-009a-4d1a-b045-6cec1a8bb205",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ea582691-abd3-4a0a-b384-133a2edaf9e7"
        },
        "item": {
          "id": "ccb47ad6-ca8c-454e-9abc-c756666c1a92",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d8287b82-a81e-46c9-9953-7f832992a78a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 768,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50eb7731-265f-4bff-9a7e-c7c4ac63ed76",
        "cursor": {
          "ref": "6f6e1f0d-15a4-4784-8bbd-73feed7cf2d0",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c707c752-f701-42ab-883f-2b489f9edcef"
        },
        "item": {
          "id": "50eb7731-265f-4bff-9a7e-c7c4ac63ed76",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bb49ba37-4f80-46f2-9a6b-5c0fef9bcf34",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1407,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60b0a9c-4ece-422d-b7ee-a69381b05fcd",
        "cursor": {
          "ref": "ed405800-4c4a-469a-8b3c-fccd24fae5d4",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8850ca11-fcaf-45b0-931c-6f5799d7b504"
        },
        "item": {
          "id": "f60b0a9c-4ece-422d-b7ee-a69381b05fcd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "228332cb-c3dc-4063-b81d-9950736fd600",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072e14fa-197a-46c3-ad54-124b7ab59ff6",
        "cursor": {
          "ref": "23238ca3-1b94-44e7-8657-c93694bca1f6",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1ed74749-2d18-4593-af35-db12005ae7c2"
        },
        "item": {
          "id": "072e14fa-197a-46c3-ad54-124b7ab59ff6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f4c1313b-25d9-4ab9-8262-ef60af12b37d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1267,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072e14fa-197a-46c3-ad54-124b7ab59ff6",
        "cursor": {
          "ref": "23238ca3-1b94-44e7-8657-c93694bca1f6",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1ed74749-2d18-4593-af35-db12005ae7c2"
        },
        "item": {
          "id": "072e14fa-197a-46c3-ad54-124b7ab59ff6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f4c1313b-25d9-4ab9-8262-ef60af12b37d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1267,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7a775a-a95d-4af3-b0de-d8ba045ec685",
        "cursor": {
          "ref": "c6341444-4225-41aa-9b0c-d6b1cde5cfca",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0f5ec89c-0c6e-4f77-856b-685a873e52e0"
        },
        "item": {
          "id": "7a7a775a-a95d-4af3-b0de-d8ba045ec685",
          "name": "identifiers"
        },
        "response": {
          "id": "e71f1f88-d90c-438c-9b48-cfee76c50209",
          "status": "OK",
          "code": 200,
          "responseTime": 2179,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee20077-3b14-409b-b0a0-b9194196c894",
        "cursor": {
          "ref": "be71f062-e423-4ac4-a138-ded60689abdc",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0cdebdfe-8fc2-4ff7-a4e6-9e1ec55cfe3e"
        },
        "item": {
          "id": "aee20077-3b14-409b-b0a0-b9194196c894",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "50035030-73bd-4b22-97e4-ed6657efea1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1370,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee20077-3b14-409b-b0a0-b9194196c894",
        "cursor": {
          "ref": "be71f062-e423-4ac4-a138-ded60689abdc",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0cdebdfe-8fc2-4ff7-a4e6-9e1ec55cfe3e"
        },
        "item": {
          "id": "aee20077-3b14-409b-b0a0-b9194196c894",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "50035030-73bd-4b22-97e4-ed6657efea1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1370,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2e9494-75cc-4e8f-92cb-140106770303",
        "cursor": {
          "ref": "14101577-0fe5-4d07-a7ab-b537a3ed47aa",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "751a3b9b-a951-4c8c-a4e2-4aecb1ffef22"
        },
        "item": {
          "id": "4d2e9494-75cc-4e8f-92cb-140106770303",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "85c52da3-6cc3-4b48-8f65-c73a90c96da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1287,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21561dd0-548e-4707-98ef-690f0272d4cf",
        "cursor": {
          "ref": "f00db42b-8fcb-4367-bbb1-a54469f41f3c",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "028b2d60-6a76-44a4-8e8b-7e583b085643"
        },
        "item": {
          "id": "21561dd0-548e-4707-98ef-690f0272d4cf",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "88355bdc-0ac0-46fe-b9bb-3c1cd012f911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1016,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ecc508-af0e-4cf5-b88e-178f80dd16ad",
        "cursor": {
          "ref": "fd61d0b2-c396-4eb2-9960-b50f53a45f57",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2cb5aa14-ab58-4b1f-8ca8-fcb71cd3fa04"
        },
        "item": {
          "id": "c5ecc508-af0e-4cf5-b88e-178f80dd16ad",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7c796e37-dc64-4936-a36f-649f4faf5d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1295,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb2655d-5a4b-4452-b8d2-08b0fca1d99d",
        "cursor": {
          "ref": "769dd9c4-8870-41bf-8428-b3369375d6e3",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3b9c3ebc-d3fa-47c3-bcc4-52706c4ccddd"
        },
        "item": {
          "id": "3fb2655d-5a4b-4452-b8d2-08b0fca1d99d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "39f0f980-cc5c-4dff-93bb-5a311a016675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1319,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a27acd-0c9f-4a90-a9b9-3d84f63f2943",
        "cursor": {
          "ref": "392c08d0-32bb-444d-a12e-b22e7e32b5ac",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ad4fa649-f7d5-4466-9809-7beab86d0a69"
        },
        "item": {
          "id": "b5a27acd-0c9f-4a90-a9b9-3d84f63f2943",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c3fdcb0e-dc83-4f75-9641-0bb5f6edb810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1165,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a5dc27-2f7b-4198-89ca-ef23d1ed5cbb",
        "cursor": {
          "ref": "60dab5de-ba68-4ce1-b3b9-a29a5775ec2f",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "eee67da8-fdad-48a9-8140-2905e17f712c"
        },
        "item": {
          "id": "c0a5dc27-2f7b-4198-89ca-ef23d1ed5cbb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1ae2a808-0b3e-48cd-8a1e-9eae12011b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1181,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afde38f6-8a14-498c-88f3-83061cc2710d",
        "cursor": {
          "ref": "1ad235a9-a485-4623-a5ac-ba954f683be7",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c5e3919b-16df-4417-867e-db7f28c0615b"
        },
        "item": {
          "id": "afde38f6-8a14-498c-88f3-83061cc2710d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "da87fb1e-8603-4b5a-ad00-d4d7bc637cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1256,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03475cb-0825-4814-a89a-cd28d61a5797",
        "cursor": {
          "ref": "73092174-5c3e-4f78-af59-7d7526003ff6",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bbc7960d-91a4-43ca-874c-ad00d32a33f9"
        },
        "item": {
          "id": "f03475cb-0825-4814-a89a-cd28d61a5797",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "675e9e89-e278-4f01-9d03-c3cd70577e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1292,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fa60ee-70a5-4d7d-8cfd-52c913779e5a",
        "cursor": {
          "ref": "b7fc0db9-91ba-42fb-9216-f5ff55354c3a",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dbd17975-eefa-4c6a-81e5-01937ff9e367"
        },
        "item": {
          "id": "14fa60ee-70a5-4d7d-8cfd-52c913779e5a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6829364a-14f3-4551-82c4-fd7175a98b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1546,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9504d21b-fae3-4caa-ac82-42afeb3fbc44",
        "cursor": {
          "ref": "afc3afc4-cf8b-4819-a5b1-333645802b21",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9027d8ba-12fb-44f3-a81e-651a1459fe31"
        },
        "item": {
          "id": "9504d21b-fae3-4caa-ac82-42afeb3fbc44",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a1528410-0847-4565-9ebb-46a51efaac9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1271,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3a6fbf-3efb-420c-b05a-8562a30604ba",
        "cursor": {
          "ref": "e9919fd4-50fb-4418-98f5-f9d0fbd2ff95",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ee394ab2-00d1-4f4a-a427-c7cdb147faf7"
        },
        "item": {
          "id": "3a3a6fbf-3efb-420c-b05a-8562a30604ba",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8255fc88-a963-470e-a60d-75eb55fd20c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1226,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3391172a-526d-4994-a17e-86b3b5fd0e26",
        "cursor": {
          "ref": "0b2dc422-d6e4-463a-9e82-7144e76443fe",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "353006d4-2a0a-41b5-a26d-549d84aec3be"
        },
        "item": {
          "id": "3391172a-526d-4994-a17e-86b3b5fd0e26",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e246a5b9-2514-474e-9708-b5b55de4a309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1273,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abaae2d-2cb4-4cc1-8e04-9f072481eb8b",
        "cursor": {
          "ref": "dc942cd4-9273-4648-80b8-47c63286e648",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4c342b41-1b87-4589-87f9-a5e43439b474"
        },
        "item": {
          "id": "4abaae2d-2cb4-4cc1-8e04-9f072481eb8b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "67cacef1-de53-4416-b3d7-8eff197ac325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1182,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776af50d-9f15-42bb-820b-cb17a713309e",
        "cursor": {
          "ref": "2f20be37-533e-442d-8a79-e15598accae2",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "abcee186-6552-461d-b29f-5b8fe8a7233e"
        },
        "item": {
          "id": "776af50d-9f15-42bb-820b-cb17a713309e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c53039bf-940c-40d1-a764-7a525bf122c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1139,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adfe321-97a5-47ef-a86c-4907b3aff8e6",
        "cursor": {
          "ref": "f8e40864-e25d-4a9a-b769-abcb9519255b",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "84ae0c09-d763-4601-be57-d86227b738ed"
        },
        "item": {
          "id": "2adfe321-97a5-47ef-a86c-4907b3aff8e6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9b551531-c6fd-40e4-ac45-fb6e6d6953d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1208,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d660516-98d3-4809-b491-2afda091226f",
        "cursor": {
          "ref": "fa63603a-150f-4249-a6c2-f86e1d44f50b",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "25ce8bf2-1883-4f0e-a20f-5d8b833c3109"
        },
        "item": {
          "id": "4d660516-98d3-4809-b491-2afda091226f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d5860344-8e58-45ff-ab84-69123b8ca3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1179,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c05faf-5d74-4e56-9934-80c25db96988",
        "cursor": {
          "ref": "f52e4d6f-744f-4342-8726-dedb8678766d",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9efa4477-3788-48cd-a74a-91774dfe6b23"
        },
        "item": {
          "id": "71c05faf-5d74-4e56-9934-80c25db96988",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0e601b8e-0750-435a-b05a-459aa31d09dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1331,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100a512d-7655-4e8b-8024-f3fa9f06afd1",
        "cursor": {
          "ref": "d2b0072d-fbbd-4030-8bff-9ac1910399e4",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "92b5ce7b-a965-4013-ada4-3a50afd08886"
        },
        "item": {
          "id": "100a512d-7655-4e8b-8024-f3fa9f06afd1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "08e9cef8-021a-42e2-9062-f409be55ddf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1293,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681420c7-2880-43e1-b1bc-dbf0074ead28",
        "cursor": {
          "ref": "01cf974a-3d83-48c1-bdb3-41bfb430ab08",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fbd4bb33-4ab5-44db-9c9f-6efd581c214d"
        },
        "item": {
          "id": "681420c7-2880-43e1-b1bc-dbf0074ead28",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a9961d1c-6719-42cc-87a2-ea2fc2f2aec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1304,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c760ff5-cc1e-4e3e-9087-b6aee03e7db9",
        "cursor": {
          "ref": "8c164857-7b63-4330-a03c-9bd739b9655e",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4a246165-c696-4c1b-b34b-54cc360d91a3"
        },
        "item": {
          "id": "6c760ff5-cc1e-4e3e-9087-b6aee03e7db9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8592f47f-4e19-4274-a712-f2072ce416e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 866,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df035feb-f786-4af5-b634-494e1bfe1e81",
        "cursor": {
          "ref": "bbd5dc87-290f-492e-abdf-11b45b569d19",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d03f8be2-1667-4ade-b1e1-8e62faf58404"
        },
        "item": {
          "id": "df035feb-f786-4af5-b634-494e1bfe1e81",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4f973457-3d8d-4f10-879a-53eb4726f194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518ccf64-34a5-4073-8d0b-4905e8903a54",
        "cursor": {
          "ref": "5d051fa1-631f-4f9a-96db-9250317308d2",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a8159282-4608-435f-8ec2-10f49e771dee"
        },
        "item": {
          "id": "518ccf64-34a5-4073-8d0b-4905e8903a54",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1a06e365-50ee-4713-b44c-822fdc645d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9121c0e-7507-494c-857e-a958738b2b9c",
        "cursor": {
          "ref": "9548ce13-8ad9-4081-b1f5-e91cab2263a6",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "30c786c3-f884-49e1-b52f-c94a2bec9910"
        },
        "item": {
          "id": "a9121c0e-7507-494c-857e-a958738b2b9c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ed2502f7-dcf9-4aab-a214-0abd7f8b44ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33678ab3-19a3-4bf4-8950-b4aaa03f21d2",
        "cursor": {
          "ref": "c38e3cb7-d429-48fa-a554-ff2fb16b65fb",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c7e56163-de96-4b54-98ce-0963226d4f6e"
        },
        "item": {
          "id": "33678ab3-19a3-4bf4-8950-b4aaa03f21d2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8cb1fa0a-d8c3-4aff-a54e-ef6a33857484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0499a5-b068-4272-9aae-a85d22d9aa5c",
        "cursor": {
          "ref": "3d34e01d-e551-45dc-83f5-7254e6476cf1",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "56e56419-2dc6-4e7d-8c3b-0dcc99d5e2bd"
        },
        "item": {
          "id": "4a0499a5-b068-4272-9aae-a85d22d9aa5c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ac35a709-e138-4621-a4f9-116ca146e9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c7eab5-ea53-4259-8cca-665d8f55e91b",
        "cursor": {
          "ref": "0f060d00-5c54-4810-885e-479fda4e7cd5",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "164f8af5-510c-48ac-b1be-4b400d86d229"
        },
        "item": {
          "id": "a2c7eab5-ea53-4259-8cca-665d8f55e91b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "25911d1c-0742-4a98-a64c-19112cf6ac31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd6d443-e2d8-4d4e-9d5d-2239f6d63398",
        "cursor": {
          "ref": "88abaed4-e5ff-4dda-beb3-c2b859f4633e",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c4bec959-c1e8-43e4-9e43-4da08c00ec9c"
        },
        "item": {
          "id": "8bd6d443-e2d8-4d4e-9d5d-2239f6d63398",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4705a153-dbb5-487a-aed2-a1a748ef4ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b076062c-cb13-4732-af5a-1d09c061e495",
        "cursor": {
          "ref": "f3981640-eb66-4e23-ab2d-a7b0c6964162",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c886e734-0977-4a70-b964-3e064ae255bd"
        },
        "item": {
          "id": "b076062c-cb13-4732-af5a-1d09c061e495",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "90d69eee-a5a4-472e-9d14-7756ded1c2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b67deaf-f21b-4b49-b02d-bf5f9fcfd892",
        "cursor": {
          "ref": "bcccc4a2-90f2-4086-b611-535fa6d8112b",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f2efce09-ac48-43e7-a4d3-cb22495c44df"
        },
        "item": {
          "id": "9b67deaf-f21b-4b49-b02d-bf5f9fcfd892",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0c613cef-5e6b-4d82-83e4-ac845d8d90f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed2d208-aa5e-4381-9a1c-d506625c8683",
        "cursor": {
          "ref": "98c4c9a9-febd-4205-a1e5-d7f522f48c39",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1db253e6-5a17-4e99-a827-2175d6a3ba16"
        },
        "item": {
          "id": "aed2d208-aa5e-4381-9a1c-d506625c8683",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "37edbcff-9039-4084-b58d-635e88caba29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca37fbc-c027-4359-a23f-f134f6950cf2",
        "cursor": {
          "ref": "25914e05-b0c8-4a7c-8b32-8314ab6bc8af",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "775af8a9-05bd-499d-8fb5-0b897e9716ef"
        },
        "item": {
          "id": "8ca37fbc-c027-4359-a23f-f134f6950cf2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bc53dbee-d530-4efe-bdb9-8535c68424f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377c8646-0fbb-48ca-8840-e1642a6fab6c",
        "cursor": {
          "ref": "103dc890-a3c8-4550-82c4-b8a4365f1e00",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d765f762-c2d6-4c43-a03d-a64c0c6e4534"
        },
        "item": {
          "id": "377c8646-0fbb-48ca-8840-e1642a6fab6c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "63928017-2a23-459d-ac78-4a2a59601c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e990d1a-4d99-4b4d-999f-49772641ff98",
        "cursor": {
          "ref": "a07387f5-1788-4385-afaf-cb5b5322855a",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "201bf638-476a-4bcf-839e-0ec1baf66f44"
        },
        "item": {
          "id": "2e990d1a-4d99-4b4d-999f-49772641ff98",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "66027de0-2b7e-413f-9f59-7b0a23c5bd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cd99c8-85c0-40f3-a5e5-ac2c620a98c8",
        "cursor": {
          "ref": "c0135c79-902a-416b-9291-60e5f7922463",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cf2e0623-a36d-4c8a-ae4d-28999f266e7f"
        },
        "item": {
          "id": "b3cd99c8-85c0-40f3-a5e5-ac2c620a98c8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2204ac76-c551-4900-a430-0b23a0d136bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca74060-afb3-44fb-83be-8403246d42bc",
        "cursor": {
          "ref": "a72cce7c-fe65-48c1-8ccc-cfec39e0ce22",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "89af75dc-89ae-46c0-a20b-7e73594ea049"
        },
        "item": {
          "id": "aca74060-afb3-44fb-83be-8403246d42bc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1ca6e8b7-f323-4182-b854-02450ece0638",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 919,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5adc39f-d0bc-4413-a83d-04f9ad4c8cdb",
        "cursor": {
          "ref": "498e0fdf-0b1c-4af8-9924-2060a3b15116",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "25ef4b57-469b-450e-91e4-92d08489774e"
        },
        "item": {
          "id": "d5adc39f-d0bc-4413-a83d-04f9ad4c8cdb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "30815e0b-dc13-4aa3-8a1a-552f0b5bd757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5ba161-f61a-4274-987a-8ad65dc21926",
        "cursor": {
          "ref": "fe8937f4-f5f3-402b-af6d-81e7d2ef4516",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2a70708e-7964-40b2-a3d8-55cbf5e44620"
        },
        "item": {
          "id": "2e5ba161-f61a-4274-987a-8ad65dc21926",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a731598b-1118-40de-b659-45eca620274b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1283,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba83422-ceae-4fea-89ae-93aabccb9be5",
        "cursor": {
          "ref": "d3e1a1af-1d4c-46f6-a7bf-ac6734cfee24",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "01d8c7c1-8d85-4cf5-bbe9-b23de0143f23"
        },
        "item": {
          "id": "6ba83422-ceae-4fea-89ae-93aabccb9be5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ad1fa94e-cec5-4bb7-8d8f-29255258cf48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1052,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bd896d-084e-4368-bd2d-97d356d04e3d",
        "cursor": {
          "ref": "d9730bc6-adde-4edb-b546-8fa1575bf0d0",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "08473c05-e891-43d1-b49f-bad831b05159"
        },
        "item": {
          "id": "c2bd896d-084e-4368-bd2d-97d356d04e3d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "60eda259-597d-46f3-a378-d371617e6213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20734088-a7d8-48ef-b447-a201519835f8",
        "cursor": {
          "ref": "db5aebc5-b040-45a2-92b8-4280cbc8d153",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "eef57355-6311-4cc8-a11a-dcc514010e72"
        },
        "item": {
          "id": "20734088-a7d8-48ef-b447-a201519835f8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "daa477b6-9995-433f-abec-96227a2927a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4764e3bd-41d6-4718-85bb-24046c2ffe84",
        "cursor": {
          "ref": "5bbc0a77-1404-4f34-9c12-1fdb44a81df4",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d33ad6c5-cd68-48b2-8213-b80e16e723e5"
        },
        "item": {
          "id": "4764e3bd-41d6-4718-85bb-24046c2ffe84",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0f8cad65-3856-404c-8f34-85ccebbf5dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea25774-f969-4d26-8d79-9684c7948572",
        "cursor": {
          "ref": "1f39a329-3d89-4292-a3f2-378ddc098643",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5ac32fd2-f21e-43eb-9a2a-27e883dae06d"
        },
        "item": {
          "id": "6ea25774-f969-4d26-8d79-9684c7948572",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "377adef2-d2e2-4bfe-9997-1621dc007384",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 912,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6403047-5aa9-4030-8bc7-5b8e3242c5c3",
        "cursor": {
          "ref": "5fdbe0ed-14d0-455b-95c2-1258bf5ec939",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "587a8959-1fd4-48c5-a7eb-5b6348b3e7ec"
        },
        "item": {
          "id": "b6403047-5aa9-4030-8bc7-5b8e3242c5c3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2359aee9-709b-4baa-b3eb-29dadd00bb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c132c2-6d66-42a4-a951-3d8521e806f7",
        "cursor": {
          "ref": "0fa1d137-bd7a-4bcd-bd2f-81fccc6f5698",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4f4a8db7-64a1-46dc-a123-2989b0c1add1"
        },
        "item": {
          "id": "67c132c2-6d66-42a4-a951-3d8521e806f7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "359db3c6-3e45-4ca4-bb25-ae750b2db977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a232fe-f180-4e20-9118-d7dcede1dae0",
        "cursor": {
          "ref": "d859c790-a3ac-47d8-97c0-6be4f30ff0d6",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "033c7ace-bdb9-4c29-b13f-702416f026e1"
        },
        "item": {
          "id": "65a232fe-f180-4e20-9118-d7dcede1dae0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "47de8551-fcb0-4897-b475-722f8acbf957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26de0f5-b0b1-4014-8003-d25264b70eec",
        "cursor": {
          "ref": "3fcbe92b-7e67-440d-9b50-b6eb29367cc2",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6c25d135-51b3-4e1c-beb7-5f49c25dbc80"
        },
        "item": {
          "id": "f26de0f5-b0b1-4014-8003-d25264b70eec",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fa40dc90-5c45-4e68-9951-8d7c8288bd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660887c3-b128-4d16-9841-1a73e2b5bb61",
        "cursor": {
          "ref": "e29a997d-b1a6-4f3b-a889-999c4e0b2830",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "986a29b2-f90e-491c-b778-6b803537746d"
        },
        "item": {
          "id": "660887c3-b128-4d16-9841-1a73e2b5bb61",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e263b840-89b5-4f06-887c-0629f3f4f169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea46777-6404-405f-b415-02fb696be222",
        "cursor": {
          "ref": "314a1172-ea7f-432a-9077-a227a21b5242",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8f955614-b6ec-45b8-9b6a-bec3ba6b5296"
        },
        "item": {
          "id": "7ea46777-6404-405f-b415-02fb696be222",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "577fa4de-da96-4d8b-b82a-c71cba68dbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30234be-1550-4944-92ff-a2e13787f065",
        "cursor": {
          "ref": "43ad30d1-08a6-4346-bf89-f6cf91adfeb2",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b9a8083a-a4a4-45a8-8a7e-3c3b859a8422"
        },
        "item": {
          "id": "b30234be-1550-4944-92ff-a2e13787f065",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0ab55495-c144-4520-b0b6-7969f53aee47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d75aae-83aa-490b-b800-e1d01bc37932",
        "cursor": {
          "ref": "d20179c2-ed19-4fb8-8bfa-892ec78dc4cd",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8bf055eb-5736-4065-8908-3d266ab1accf"
        },
        "item": {
          "id": "c6d75aae-83aa-490b-b800-e1d01bc37932",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b9be53c9-839d-4e99-9c6c-2b20dcf9634f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59cdc80d-edc3-4d6d-9466-907289707768",
        "cursor": {
          "ref": "fe4061f5-f62c-4052-b26f-c0a3c05f2c02",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f4948533-3c6c-4f9c-baf9-ad316741e907"
        },
        "item": {
          "id": "59cdc80d-edc3-4d6d-9466-907289707768",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "66c4850d-121a-4a9f-a3be-2681a7fdec6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa33205-da86-4b6d-b467-869f911d8388",
        "cursor": {
          "ref": "ed998b49-94b0-4e95-a23e-596a59a700a5",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6a58b071-1e0a-4e65-bfbc-df4b483f1b03"
        },
        "item": {
          "id": "9aa33205-da86-4b6d-b467-869f911d8388",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "65f6bb2e-9d8a-4911-a74e-c955e3ca4415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f2477a-b170-4bb8-b60d-f7046c005722",
        "cursor": {
          "ref": "ccfbe7eb-3997-4515-9ffb-b283eb1634b7",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d408b4a4-1fd3-47e3-97f6-2654f62d18e7"
        },
        "item": {
          "id": "96f2477a-b170-4bb8-b60d-f7046c005722",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2b21960b-983d-4059-bb67-f4303bcfc228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e79f74-005e-4851-8203-a55ba3972e63",
        "cursor": {
          "ref": "4178cb8c-7a71-49af-8e17-31741eab9c46",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c207afcd-b471-4eb5-9f1d-c546475bd1cc"
        },
        "item": {
          "id": "57e79f74-005e-4851-8203-a55ba3972e63",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "64538237-4178-4548-bc29-62388ba6044e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2138deca-f36c-4cb7-8d81-beebfbf31238",
        "cursor": {
          "ref": "56ff5217-9943-4be2-85c0-a787d5792f97",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "119b24f5-6da5-47f8-8b56-fbe22523d7ca"
        },
        "item": {
          "id": "2138deca-f36c-4cb7-8d81-beebfbf31238",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5c7e2388-623e-4115-8528-693dfe5785d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fac01c-2802-4d84-a036-5a9390c68cb9",
        "cursor": {
          "ref": "ee0d7274-f811-4f76-966b-7a4ac77f07cf",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ad786114-1a81-4647-82b9-36db47ea3b0b"
        },
        "item": {
          "id": "94fac01c-2802-4d84-a036-5a9390c68cb9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e7ae745b-d475-45bd-8215-5fd6b0b858ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badcc4df-aa6c-49e9-b97a-4717f48ef7a6",
        "cursor": {
          "ref": "c1ad5660-9464-4a2a-a314-c78e4f4815d9",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9ab580f2-a777-42cf-af7e-9ef6b1941389"
        },
        "item": {
          "id": "badcc4df-aa6c-49e9-b97a-4717f48ef7a6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "55a77641-2217-44bd-a3fb-a37d4ede8e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d218fa-fb2e-44f9-91c8-5bc6dafecce6",
        "cursor": {
          "ref": "8bff79e0-a707-45e9-8192-1bab8e61e58e",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "dbd04813-d06b-4a8f-9b95-ecb10b6bb7ef"
        },
        "item": {
          "id": "44d218fa-fb2e-44f9-91c8-5bc6dafecce6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8b2dd34d-3977-40cf-a75b-478ab68476a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89039575-4760-4c73-8959-a6b530a66db3",
        "cursor": {
          "ref": "f1cb19d2-81a6-4ed4-9d55-9e25f1031dc0",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "58e4b8f6-b312-4c5b-8b88-258b27a62711"
        },
        "item": {
          "id": "89039575-4760-4c73-8959-a6b530a66db3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "330d6b58-dce1-40a4-b870-6a1143eea1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683f824a-c6f5-4f94-b48c-3ba392f93cb2",
        "cursor": {
          "ref": "cf641082-a143-413e-a7a5-b0d306708014",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cdf3171c-8c67-47a4-b681-f6292f3d6f62"
        },
        "item": {
          "id": "683f824a-c6f5-4f94-b48c-3ba392f93cb2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7eb8f1a7-8cd4-4703-ae19-fe3f9698997c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95da8f15-d053-4b20-83dd-32d898257b53",
        "cursor": {
          "ref": "f195d4ff-6835-47fd-81fd-b9ead218ede1",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0e452f06-9e37-4a0f-9997-4fa431132911"
        },
        "item": {
          "id": "95da8f15-d053-4b20-83dd-32d898257b53",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e7ad96e7-dbd3-485d-ab35-c11d4fc99265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1002,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fdc742-6f50-45c8-ae98-d18c5f08d405",
        "cursor": {
          "ref": "cbae6b47-169d-4e85-b3d3-bbfbe6c36f6c",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "90474532-0c97-4c3b-8c6f-50eabba0b955"
        },
        "item": {
          "id": "57fdc742-6f50-45c8-ae98-d18c5f08d405",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a52bce2a-5a6f-47c7-bbb6-10a19e10abf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e1eac7-401d-4957-ab13-ec8d5d6cb934",
        "cursor": {
          "ref": "adc2ff0a-a45d-46cb-a7b9-c346fc68e338",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ade75ff1-9738-4202-801c-b9a7fe68019b"
        },
        "item": {
          "id": "94e1eac7-401d-4957-ab13-ec8d5d6cb934",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "452b2c83-44c8-481a-bea8-899efbc7349f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b612f4-2da4-4229-bab9-6105d08b98bb",
        "cursor": {
          "ref": "4c6882e7-0ef0-41c4-b4f2-a4c243f35a89",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "23484171-e131-4aa0-94b3-94988b3608eb"
        },
        "item": {
          "id": "89b612f4-2da4-4229-bab9-6105d08b98bb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a542e6a4-da34-4acd-9b5f-5ae051e604e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15580f6d-10de-440b-849b-e036a47a9f5f",
        "cursor": {
          "ref": "fa203d0e-ee11-4690-9249-5b03d7a43bff",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2e00867c-e27b-4009-b48f-206c50868152"
        },
        "item": {
          "id": "15580f6d-10de-440b-849b-e036a47a9f5f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c0be9c29-084b-4995-b37a-92c3427bad41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9f09ef-3c85-414f-8632-9c1115368496",
        "cursor": {
          "ref": "44a731c1-d1ef-4695-a58b-bffbd06d4da7",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4b0c1b63-b5a6-473b-84d2-72298be046d2"
        },
        "item": {
          "id": "5e9f09ef-3c85-414f-8632-9c1115368496",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f9df94c3-ec94-4121-98a0-1f8c5af4dbfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873e95a0-cf42-4213-8d1d-bfb799294f08",
        "cursor": {
          "ref": "2977cc3d-1712-41b7-a1f0-c83c5d6c3101",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6ec9b700-2f5f-4511-b06b-2f00ad66dc63"
        },
        "item": {
          "id": "873e95a0-cf42-4213-8d1d-bfb799294f08",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8fd8858a-c144-4ddf-abb5-9026460790ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f617c06-742e-4ebf-8061-f29ce7cb90a3",
        "cursor": {
          "ref": "952004fa-58b3-418c-9612-f4b5ceb77558",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fff1cb32-0ba2-483d-9dda-ec9ea5d759e8"
        },
        "item": {
          "id": "8f617c06-742e-4ebf-8061-f29ce7cb90a3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "387412b7-85cf-45e8-aae4-db506e9585b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a4a23d-ad9f-4512-9ff0-4741e0968e53",
        "cursor": {
          "ref": "9802509c-4157-4f9a-b38b-04e11929b31f",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "46bc1156-5e41-48c0-9dda-1bdf4ce11da4"
        },
        "item": {
          "id": "e8a4a23d-ad9f-4512-9ff0-4741e0968e53",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2a07166a-2c2d-4b4c-a97b-003ffc6c7124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda7151e-b1ae-429e-9816-375f7eecc6fb",
        "cursor": {
          "ref": "d28fe189-7fab-48b9-939a-5579b42b4580",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3ad4179b-643d-4610-be86-c7a29632963a"
        },
        "item": {
          "id": "bda7151e-b1ae-429e-9816-375f7eecc6fb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9b552cc5-aa93-4663-b83b-3f7255a1f9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a523e1c2-c9f6-4582-994c-38c09a8b265b",
        "cursor": {
          "ref": "0b76a686-b032-4750-a0b9-4975d08f8022",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7c14962e-4da6-4ddc-a0c2-87c669cbec2f"
        },
        "item": {
          "id": "a523e1c2-c9f6-4582-994c-38c09a8b265b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "55c727ba-b35b-48d6-8e01-6da226c97b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d670cce-d933-4d70-b75d-581b013ff799",
        "cursor": {
          "ref": "7509b37d-8168-4620-b005-1921ff2c1b2c",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b3cbbc69-f373-4fb2-9c94-032fbffa725f"
        },
        "item": {
          "id": "5d670cce-d933-4d70-b75d-581b013ff799",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e298f6a2-4050-43af-9854-e87fd35db2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc29ad2-86dd-410e-952f-ad4644aa7702",
        "cursor": {
          "ref": "2b6d0735-bc92-4d00-a219-e6ac946ffd3e",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "66745c6d-9c52-408d-9dcf-d065e819fa05"
        },
        "item": {
          "id": "4cc29ad2-86dd-410e-952f-ad4644aa7702",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e221b2c3-0371-41eb-886c-5ac1a3884897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a49d03-f44f-432a-b99f-eaf4de871bf3",
        "cursor": {
          "ref": "fa1af113-8839-485d-8f38-447e746f51c5",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bf5be511-54b7-4c4c-b649-2d926fbdc579"
        },
        "item": {
          "id": "d2a49d03-f44f-432a-b99f-eaf4de871bf3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6397e0cb-bf6a-4b82-8dd6-885662f78f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe6ecaf-714d-4c6f-9e0d-feb300a9774c",
        "cursor": {
          "ref": "3b27b74f-105c-4518-a440-fdd527139d39",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "19d3e4e2-61c9-4488-9094-9afd355ebe0e"
        },
        "item": {
          "id": "fbe6ecaf-714d-4c6f-9e0d-feb300a9774c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "32b1f216-f5ae-4122-a2f4-d2e448084a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebfbd26-e881-4024-990f-f537bcb8e6ce",
        "cursor": {
          "ref": "65c1243d-83f8-47cf-b340-dd9f9493af1f",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "01c1c552-fe90-4808-8455-1ecae1fef060"
        },
        "item": {
          "id": "4ebfbd26-e881-4024-990f-f537bcb8e6ce",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f49d0ef4-59ae-4c9b-8a65-cee514d83815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebffcab9-a744-479c-a60a-c45c6c99d6f3",
        "cursor": {
          "ref": "bd872022-f455-4760-a5f8-667386aab8f3",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f918de8e-1eff-43ea-b5a3-615b9556db56"
        },
        "item": {
          "id": "ebffcab9-a744-479c-a60a-c45c6c99d6f3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9182ff95-4840-40e8-af6d-f0d6f43773bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cd50dd-d9fd-43e3-897c-ec164e64a059",
        "cursor": {
          "ref": "91aafb6d-8077-4f16-8585-c09f5f235bb5",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4e24437a-bcb5-4419-bc06-4787a6f94236"
        },
        "item": {
          "id": "45cd50dd-d9fd-43e3-897c-ec164e64a059",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "946722c4-f8dd-416c-9742-7ea081ddb023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af09132d-c47c-4d64-a188-ed63fd9a4e7f",
        "cursor": {
          "ref": "24c714d7-c3da-41ac-8a09-66f503c110ed",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a7a926e7-ed69-4646-834c-cc7c4b0ab630"
        },
        "item": {
          "id": "af09132d-c47c-4d64-a188-ed63fd9a4e7f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "595ced93-49b9-4de5-9438-957ed074efb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38dff06-580b-4917-97f0-8eebf31ab242",
        "cursor": {
          "ref": "fcacdf8a-e2d0-4fd5-8ceb-c48088598796",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1eb07ddd-2997-47db-8309-67e75b086868"
        },
        "item": {
          "id": "a38dff06-580b-4917-97f0-8eebf31ab242",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c38da7a0-16c8-4aeb-b4de-521010841c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15e465d-b431-41a3-8f61-93f3f6e9232d",
        "cursor": {
          "ref": "aed6c1de-fdf1-420b-8541-e6ba081aad4e",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "282f7854-8ed6-424c-9d0b-cc91e77c55ee"
        },
        "item": {
          "id": "c15e465d-b431-41a3-8f61-93f3f6e9232d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "36037c27-8567-4948-bc06-df71394ffe4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df181043-19b2-4da5-aa46-5140446a29e6",
        "cursor": {
          "ref": "b2e0dc29-e57c-4aae-a943-e56514490713",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "66201f46-85d5-4e6f-907a-b69f14441c18"
        },
        "item": {
          "id": "df181043-19b2-4da5-aa46-5140446a29e6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4ecf7dde-2e79-4cc4-8fb2-8728f491a7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2905a3aa-e9bc-480a-9b2f-1ab9a04ed68a",
        "cursor": {
          "ref": "31c4db87-6216-41e1-9454-a972cb775928",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c220e899-206d-47d3-9783-ed44bc1510ae"
        },
        "item": {
          "id": "2905a3aa-e9bc-480a-9b2f-1ab9a04ed68a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "afd4b605-fb28-42b1-b475-852baf04769f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2a7716-8160-4301-a541-2a0f8bef1b2d",
        "cursor": {
          "ref": "db2040ae-8afd-472a-a35a-98f0b8398c2f",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3b9f7e3c-53e6-47a0-9ed8-ea662c7a31f5"
        },
        "item": {
          "id": "9a2a7716-8160-4301-a541-2a0f8bef1b2d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0a418f44-7cff-4a15-8054-87ab0b9c5586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b31bf7-a23d-4d4b-9d28-8ed6576118e5",
        "cursor": {
          "ref": "b88a4b2f-804c-4cd5-8c45-ba3c25096aeb",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "56f1b315-0802-4c5d-a785-f3695a78f4ef"
        },
        "item": {
          "id": "27b31bf7-a23d-4d4b-9d28-8ed6576118e5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e83a98bc-39ca-4b45-b68f-9b18223f2ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ca709d-1299-4bac-814a-fd3d0540a227",
        "cursor": {
          "ref": "397b5004-42b5-4e7d-8ab0-86255bf8fd33",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "706f39ca-f35d-44aa-bf2b-6145302be8d2"
        },
        "item": {
          "id": "91ca709d-1299-4bac-814a-fd3d0540a227",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3e01b990-57dd-4ee4-af6a-d79a951130ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a922400-5162-4107-a995-6647b93336b5",
        "cursor": {
          "ref": "dea002cc-fbfe-4550-a204-f76ec54e7a5a",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "51921b6b-7e51-4612-b83c-d76ae566ad48"
        },
        "item": {
          "id": "1a922400-5162-4107-a995-6647b93336b5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "145887ec-3545-46cf-9da6-27165a8b404b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef203eb-6d00-4c9f-af4b-d9ca925f289f",
        "cursor": {
          "ref": "e9d5a6f4-efe7-48f7-ad3b-7987d9606ca2",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "18e0d426-6653-4b09-9f92-14702fd64e64"
        },
        "item": {
          "id": "9ef203eb-6d00-4c9f-af4b-d9ca925f289f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8027ae1d-d7b7-410e-9ec1-792e31369fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca53f65-1a54-4d61-966f-a751d5c9bded",
        "cursor": {
          "ref": "55084eb4-4ee2-4cb4-b0fc-ea4308ba95b3",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "191a8407-0dd3-466f-bb06-2c49be516744"
        },
        "item": {
          "id": "6ca53f65-1a54-4d61-966f-a751d5c9bded",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b04c37ca-7d9f-4e5a-9931-35d095e3ee52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0aae0e-ae2f-4aee-a116-668a2a36212f",
        "cursor": {
          "ref": "6996f6f0-8466-49d2-978d-e4b13f2a1183",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "12bf0aa1-6387-469e-9ab5-3fa6a9b8cafe"
        },
        "item": {
          "id": "0a0aae0e-ae2f-4aee-a116-668a2a36212f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "35317254-b394-4e11-9b5b-4cd1b723c158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a279ff8-d876-4db3-874e-ea073639b059",
        "cursor": {
          "ref": "c6cc05e5-c4a4-4953-9d3e-b3161cebc44d",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3c620afc-85b3-4ac4-a2bc-42e7434f835d"
        },
        "item": {
          "id": "9a279ff8-d876-4db3-874e-ea073639b059",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8289af96-8eaf-43cf-b312-4497b9c75288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab124e4-cbe6-456e-abec-04dedabe5466",
        "cursor": {
          "ref": "acf7d6c3-ef84-478a-8c35-f02de6f9d404",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e640fa88-53fe-4350-9ff2-76b7accfc870"
        },
        "item": {
          "id": "4ab124e4-cbe6-456e-abec-04dedabe5466",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b56b62ec-99ca-4e4e-bdab-9d74f1a622de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2ea5c7-861d-429c-89ac-bfd2dd52b059",
        "cursor": {
          "ref": "a2c92bc7-9643-465f-bf35-7cbdc3870799",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "99282cea-ec1e-47f2-b3db-393fcf7fb764"
        },
        "item": {
          "id": "1d2ea5c7-861d-429c-89ac-bfd2dd52b059",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "14087e31-ef73-4b4f-8085-471ab3e52833",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 731,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b96d9c6-997b-46ce-b949-653b3296f407",
        "cursor": {
          "ref": "26f4e9a8-81d2-4a77-84a4-015616309b38",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "301dd8e8-0bc3-4557-95e6-ccf19db77836"
        },
        "item": {
          "id": "0b96d9c6-997b-46ce-b949-653b3296f407",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fe25caec-4953-44ba-ae3d-b35ed0e7c29f",
          "status": "Created",
          "code": 201,
          "responseTime": 7274,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b0f0c3-6b37-4f5b-a824-f6cb91c60c13",
        "cursor": {
          "ref": "a5677926-d2c4-406b-b147-c560e1fd2070",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "257872f0-89d9-4f56-b116-0cb8aba04a96"
        },
        "item": {
          "id": "66b0f0c3-6b37-4f5b-a824-f6cb91c60c13",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c75346f7-7af0-437b-9017-34c3e70956e2",
          "status": "Created",
          "code": 201,
          "responseTime": 6275,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6610b3f4-1ef0-4e32-976b-daffd51f3709",
        "cursor": {
          "ref": "85fd2010-8e2c-47ea-bc63-eba4285e31ed",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "22ca7520-8161-4554-8a0a-f119b3502135"
        },
        "item": {
          "id": "6610b3f4-1ef0-4e32-976b-daffd51f3709",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "65bb7a91-8012-493a-a5f7-74c4dc12d6e6",
          "status": "Created",
          "code": 201,
          "responseTime": 6982,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0494eb56-a761-48fa-b6c6-a748ff32b6d8",
        "cursor": {
          "ref": "11f028e6-37aa-4387-9bc9-74745a464731",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9f963a23-13b7-4265-8741-f4a3c9e60abf"
        },
        "item": {
          "id": "0494eb56-a761-48fa-b6c6-a748ff32b6d8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "64d471c8-d3b6-4d1e-9862-e9cbcf691797",
          "status": "Created",
          "code": 201,
          "responseTime": 6591,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cfd00e-34b4-4f73-b1a7-c351e2a14e82",
        "cursor": {
          "ref": "e8f49456-5a2b-4252-b2a4-2e04d610cd01",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f0eb6a53-5381-445a-a1ce-c0d6fcd12ffe"
        },
        "item": {
          "id": "55cfd00e-34b4-4f73-b1a7-c351e2a14e82",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "99a23e1d-0f11-4a71-a222-1a9e3520056f",
          "status": "Created",
          "code": 201,
          "responseTime": 6440,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "495575cf-e9b4-471c-a918-7d6a556e9d1a",
        "cursor": {
          "ref": "cf4135a0-017f-45bc-98a2-8e1842f8fb90",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a346c9eb-3cb9-4333-a15c-be9f6e747985"
        },
        "item": {
          "id": "495575cf-e9b4-471c-a918-7d6a556e9d1a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bce082e1-9fd8-453d-a425-f84a4db79965",
          "status": "Created",
          "code": 201,
          "responseTime": 8048,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6ab2e0-4ee6-4fdc-8382-45faa94ee35b",
        "cursor": {
          "ref": "5660b22a-e845-46a2-9013-dc4f6206801c",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4f372b8f-e6b4-4833-927b-95249cdb7ea9"
        },
        "item": {
          "id": "3a6ab2e0-4ee6-4fdc-8382-45faa94ee35b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b1ade5b3-f5ec-4cd0-a43e-562389f3a114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6ab2e0-4ee6-4fdc-8382-45faa94ee35b",
        "cursor": {
          "ref": "5660b22a-e845-46a2-9013-dc4f6206801c",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4f372b8f-e6b4-4833-927b-95249cdb7ea9"
        },
        "item": {
          "id": "3a6ab2e0-4ee6-4fdc-8382-45faa94ee35b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b1ade5b3-f5ec-4cd0-a43e-562389f3a114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ebaa73-cf27-4682-bddf-51e668491e7b",
        "cursor": {
          "ref": "1b3b4591-e1ec-4461-83d7-016644821dc4",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0ac00ec3-a346-45d7-9d57-761aab4aa523"
        },
        "item": {
          "id": "10ebaa73-cf27-4682-bddf-51e668491e7b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "33d9c690-7c32-4428-98ca-aef5024a64be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341b8041-36f5-41ba-9b1a-ce3ec108b902",
        "cursor": {
          "ref": "1323167a-10fc-48de-a309-fe4ecb67941e",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ee9c4501-c2f8-4f2b-8b42-16e11d8e9802"
        },
        "item": {
          "id": "341b8041-36f5-41ba-9b1a-ce3ec108b902",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6acbae05-d921-4dc3-9da8-e97b0bf405a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb14f52-8ac0-4a7a-aaab-86da455042fb",
        "cursor": {
          "ref": "af0197d7-4c20-416b-ac01-3df55ace9865",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "aff25a8b-3343-4023-becb-fd9399f1d7fb"
        },
        "item": {
          "id": "9fb14f52-8ac0-4a7a-aaab-86da455042fb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d21a0656-5b67-421c-a191-8ca3581c4070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5fe0d9-67b1-4846-a83a-7532630ddc4b",
        "cursor": {
          "ref": "f9467cfe-a7ef-4ad6-8a41-a2af7245896e",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7a15b47c-f6de-4199-9a03-1c983ae78fe0"
        },
        "item": {
          "id": "ec5fe0d9-67b1-4846-a83a-7532630ddc4b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "802f4c3a-c548-4502-bb0f-f21d904a6c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30e090d-6cf2-4c44-bb6f-498bca85ec32",
        "cursor": {
          "ref": "26ca0330-7b3a-4988-9bf9-045ef64f9fb7",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5bf83cd6-66f4-4049-8645-e256499ac39b"
        },
        "item": {
          "id": "b30e090d-6cf2-4c44-bb6f-498bca85ec32",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8b831c1a-9c01-45fd-a7e5-d5676fcb640c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebca38e-01c7-44ec-a053-9131666e3d1e",
        "cursor": {
          "ref": "ead16bd8-9bea-4275-98bc-ab9dec6560e2",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "94f4d91f-1db6-4201-ba38-f175d9980c57"
        },
        "item": {
          "id": "bebca38e-01c7-44ec-a053-9131666e3d1e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "992fca77-3b51-4df9-a54d-0d48edd23716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2cf7a6-5813-46ec-b2b7-780e6921171a",
        "cursor": {
          "ref": "03c56f04-f7cc-4fc7-b13e-691305288a64",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b5c49360-baa5-4dd9-a086-24f5be1f6e3f"
        },
        "item": {
          "id": "ad2cf7a6-5813-46ec-b2b7-780e6921171a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "edd52477-f728-4526-9aad-58d8501f1c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d45556-efbf-484f-b943-5b3c1d88e0ca",
        "cursor": {
          "ref": "151ec664-f317-4d30-b7b8-df08b4ab63d1",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4a3dc85e-9843-46e8-9220-17ff5ddae67f"
        },
        "item": {
          "id": "94d45556-efbf-484f-b943-5b3c1d88e0ca",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c092dfdb-9105-4ada-b37e-b85dadcd4afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4153ac7f-2440-4270-8aca-a7b321d0b755",
        "cursor": {
          "ref": "af777309-ccc0-412b-adf1-d50cb9165b55",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "91123beb-7b5f-454e-ba54-78129ccd9fae"
        },
        "item": {
          "id": "4153ac7f-2440-4270-8aca-a7b321d0b755",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "64eaad9b-fd1f-4f72-a146-d81ea73f6813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab1ba03-dcd2-4fa9-ada3-dc9c76bc524e",
        "cursor": {
          "ref": "6a4c6cee-712c-48d3-a015-9ab05498101d",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3ec38539-1b41-4d48-9fbc-a6ad8c7246cc"
        },
        "item": {
          "id": "4ab1ba03-dcd2-4fa9-ada3-dc9c76bc524e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "824ef1b7-9755-468d-848c-e5e965d530cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f3f124-2101-4667-a181-32d944ba3ef4",
        "cursor": {
          "ref": "f8752c44-9aaa-4096-af79-1c6dca4db384",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "35dad69a-0d6f-4c06-bf82-0831e77f3d71"
        },
        "item": {
          "id": "d5f3f124-2101-4667-a181-32d944ba3ef4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "18fb245d-6bc2-4ed8-880c-50428a5511d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f084e7-4df9-4f38-93a7-ad253b831074",
        "cursor": {
          "ref": "f8ce04fa-7668-4bb3-972f-b938273cee72",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cd430d40-b224-43ba-934f-fa434cd1affe"
        },
        "item": {
          "id": "b0f084e7-4df9-4f38-93a7-ad253b831074",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d306f649-d4a5-4ccf-9ce1-ad62eb34193c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8b03dc-2c2e-4c0c-a7cc-5fa32223e684",
        "cursor": {
          "ref": "73ffbf22-2a27-40dc-8097-4cc7d9385831",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d31976c5-6700-4f83-adc3-5fc5473c9026"
        },
        "item": {
          "id": "fc8b03dc-2c2e-4c0c-a7cc-5fa32223e684",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b5fa7fbd-2e3e-4b92-96fe-691975d1c6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5804297-4e99-49b6-8e5e-a196b7595c9f",
        "cursor": {
          "ref": "07524310-eed1-43c6-8a89-8eb51f67e1ea",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "03278098-15cb-41ef-a564-db955b247302"
        },
        "item": {
          "id": "f5804297-4e99-49b6-8e5e-a196b7595c9f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4caf329f-3dfb-4d59-a843-6d0b7157c43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e10f57a-4fd8-4733-a50a-be9276422ca8",
        "cursor": {
          "ref": "3c6132d1-6ad7-4813-a7b5-5da9483ae76e",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5d8ca897-ec9f-4e05-96a3-fb4c84e67a65"
        },
        "item": {
          "id": "6e10f57a-4fd8-4733-a50a-be9276422ca8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ddef569d-69d1-4510-ad75-4c23e5a0e78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739fb43c-f8a7-4144-b445-b5cd97fcad1b",
        "cursor": {
          "ref": "e4669179-a8c5-4b78-88a4-66bbe88b3519",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "94b5fb25-a567-4895-a893-3bc2f71177ca"
        },
        "item": {
          "id": "739fb43c-f8a7-4144-b445-b5cd97fcad1b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fed91a25-36d2-4e6b-9896-3fb25df72ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a37e64-260c-47a0-9f1d-260c798612c3",
        "cursor": {
          "ref": "1c9b5d23-05e1-418f-8e75-ff06eee45d32",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "60abe2ca-8c6b-4340-979d-451490a45d1a"
        },
        "item": {
          "id": "16a37e64-260c-47a0-9f1d-260c798612c3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "335e0531-ddef-48da-adb2-1eb95252fe3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4492d330-4057-4c8a-a5ec-4e0db90c4f8b",
        "cursor": {
          "ref": "f603bf91-f499-480a-8c7b-be82b91fb014",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e06cc27e-7dc8-44f9-916d-d61d28b9d2be"
        },
        "item": {
          "id": "4492d330-4057-4c8a-a5ec-4e0db90c4f8b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0b9cc3d8-dd6a-421a-8eed-fda2379ea14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a330c70-bfc9-461a-9b0a-0b0aa2ba4daa",
        "cursor": {
          "ref": "f5f5cfda-148e-44bd-96cb-4a49a0610044",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5728fb46-d275-4f16-9bea-0bb8ece01a73"
        },
        "item": {
          "id": "5a330c70-bfc9-461a-9b0a-0b0aa2ba4daa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1ec5f43e-ce85-49e5-b84d-a5b543657d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea03d2f8-094c-47c2-9f65-22f19d02f19b",
        "cursor": {
          "ref": "0a65084f-85bd-49e1-bb47-1961f7e876ff",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "812464c3-7092-4f54-8835-43fbd7266cf4"
        },
        "item": {
          "id": "ea03d2f8-094c-47c2-9f65-22f19d02f19b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "23989b6e-a18a-468c-9e1c-aaced867be13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8241bfc6-5eb9-41ee-8346-cd8bce3591fe",
        "cursor": {
          "ref": "c7eb6017-71b5-472a-9017-ca7c8b0ebf97",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "936453bd-254e-46fb-a39f-5d4fb5edc577"
        },
        "item": {
          "id": "8241bfc6-5eb9-41ee-8346-cd8bce3591fe",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "15798690-d75a-4785-b569-be2a3178b259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bb831d-801a-4cd0-82a8-ad7c61c8944c",
        "cursor": {
          "ref": "39c80cf5-03a7-4c41-b303-95595718ccd5",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "080705e1-e75e-4ff3-9b10-21b6c281e20f"
        },
        "item": {
          "id": "b9bb831d-801a-4cd0-82a8-ad7c61c8944c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "94253d1e-94e7-47fb-8eff-579cc2042d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51a0f51-93c5-45bd-bb6e-84632afa76e0",
        "cursor": {
          "ref": "b5c6f981-2d2f-4dcc-966c-0827e6424436",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6dee71e0-5672-4750-9650-48112ce84a94"
        },
        "item": {
          "id": "c51a0f51-93c5-45bd-bb6e-84632afa76e0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "22302dba-a974-4829-8ab2-28b5a39cbc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec177e0-4c3a-4e53-916e-620ce1efdc77",
        "cursor": {
          "ref": "9448a024-1397-4caa-a340-c1ff38f6969b",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "23d53a39-8592-4d1b-96bb-a326570f8c37"
        },
        "item": {
          "id": "0ec177e0-4c3a-4e53-916e-620ce1efdc77",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0183a60e-ac64-4214-818f-19b61d765059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da314930-41c5-4905-bee0-1125ffa215d1",
        "cursor": {
          "ref": "0702079e-606e-41eb-86b9-819c689602eb",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7294c121-5acf-4583-b891-5f8f91e5b5cd"
        },
        "item": {
          "id": "da314930-41c5-4905-bee0-1125ffa215d1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "898432dd-678f-4ece-a6df-288b7d49e88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521b1bd7-d9c6-4466-971f-9c3cd03bfac2",
        "cursor": {
          "ref": "2b7f1e77-ae23-4861-8ded-2928adbffaa0",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8c065f63-8dfd-4538-8462-cc31a4d14e04"
        },
        "item": {
          "id": "521b1bd7-d9c6-4466-971f-9c3cd03bfac2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "df168e92-3408-411b-bbd4-260615b7816c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bf6f52-7a2f-4d81-a6c6-e8a8c820a48e",
        "cursor": {
          "ref": "498c87ba-77d9-4497-8489-b33df01ddd5e",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0d6c92eb-83b6-422a-9832-187d2afc6c38"
        },
        "item": {
          "id": "e1bf6f52-7a2f-4d81-a6c6-e8a8c820a48e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "577beb7e-1e7d-4907-8abc-5da85aa59e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e46b5f2-ea00-43b3-929e-2d3d384968d8",
        "cursor": {
          "ref": "957eb1e0-d1dc-4bd9-8689-6544ed6b5e83",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5f19394c-a167-4e30-9cdb-6b24643edd60"
        },
        "item": {
          "id": "0e46b5f2-ea00-43b3-929e-2d3d384968d8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "75a107f3-5ead-49ec-b33a-68892cbc1f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1163e92-9d99-4b6b-9de0-a835ff1b5c4f",
        "cursor": {
          "ref": "27ebfb90-5016-426a-acc4-61f1c97b9702",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ac113655-d958-48bb-b9d5-42c88d63d224"
        },
        "item": {
          "id": "a1163e92-9d99-4b6b-9de0-a835ff1b5c4f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a6b93700-3952-4482-b6cc-aebb21dbbf2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f13ab1-3f26-4913-983a-e35a92be0ab4",
        "cursor": {
          "ref": "3deda178-8466-43f5-9e74-1d110b574187",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "80748b6a-4f45-4c1c-86bd-3496d11c43b5"
        },
        "item": {
          "id": "f3f13ab1-3f26-4913-983a-e35a92be0ab4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bdbe3c9c-ab37-4b86-958b-accb56c35713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b655b55c-d2ce-4119-8225-be1b0bb64a0a",
        "cursor": {
          "ref": "a2f272ab-5ec7-487c-ba62-b45f97056477",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0a29ef48-2d49-4e7d-9a8c-f8c91d22196c"
        },
        "item": {
          "id": "b655b55c-d2ce-4119-8225-be1b0bb64a0a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "656d75fc-3988-43a0-95d5-dd708065e850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443086ed-aedc-49a3-9fec-8fe9c715f2ef",
        "cursor": {
          "ref": "9a91a72e-dd7a-4772-b745-252fa6d542f2",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8ea7719a-10e2-49be-b6eb-3eaaa7841197"
        },
        "item": {
          "id": "443086ed-aedc-49a3-9fec-8fe9c715f2ef",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "80725442-658b-4513-8a64-657f34ee9583",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810a7e8d-aa23-4ae5-8c71-8ef0b66132d6",
        "cursor": {
          "ref": "8d11e5ce-3b6f-4631-8771-2b817463d859",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c6d474cc-feff-42aa-b0b8-8d0b58ec6691"
        },
        "item": {
          "id": "810a7e8d-aa23-4ae5-8c71-8ef0b66132d6",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "4a9600ab-043d-4422-8fa8-34e8608948e0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 772,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3e2c30-b825-459e-be0a-28035c0bfef3",
        "cursor": {
          "ref": "dce03661-b28b-4984-a613-e613a962c704",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5bc76e8d-e094-4ea3-b27b-46a78fcf8cfc"
        },
        "item": {
          "id": "bd3e2c30-b825-459e-be0a-28035c0bfef3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "12b6b437-3d78-4e7b-917d-afb3d9528f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3e2c30-b825-459e-be0a-28035c0bfef3",
        "cursor": {
          "ref": "dce03661-b28b-4984-a613-e613a962c704",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5bc76e8d-e094-4ea3-b27b-46a78fcf8cfc"
        },
        "item": {
          "id": "bd3e2c30-b825-459e-be0a-28035c0bfef3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "12b6b437-3d78-4e7b-917d-afb3d9528f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cdb47e-8cfb-485e-8bd2-e0a761e3af7f",
        "cursor": {
          "ref": "5ba996d4-9419-4fdf-b5b7-0aa94263e7a3",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6d839767-fe43-4f32-94f7-78b803971a34"
        },
        "item": {
          "id": "f2cdb47e-8cfb-485e-8bd2-e0a761e3af7f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a4402ce7-824c-4e07-9b5c-4bfd0b750bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67069bc8-4c30-4551-a2bc-545a59722811",
        "cursor": {
          "ref": "7fdad85e-8175-49ce-8605-9f9575e08b08",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "14b2a496-c620-488f-bad6-ccc739d70bdb"
        },
        "item": {
          "id": "67069bc8-4c30-4551-a2bc-545a59722811",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1324f493-7ddb-46a3-a20a-fbc492d50a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25cfa9a-b417-4aa2-9cc1-81e760dd9b27",
        "cursor": {
          "ref": "c5b22048-14f2-48c3-a483-cde1651fabdf",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a5bcbcbf-314e-465e-b499-8177a4417134"
        },
        "item": {
          "id": "b25cfa9a-b417-4aa2-9cc1-81e760dd9b27",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2b65c307-8ac4-4292-89cf-e32c0ce08232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7415175a-d142-40ac-b046-27c757b6cad9",
        "cursor": {
          "ref": "a041b9f7-6880-441d-a14b-3e24c85b76ce",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "da18ed0d-7ef1-494f-996d-f1d517156e70"
        },
        "item": {
          "id": "7415175a-d142-40ac-b046-27c757b6cad9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "575e5fce-294b-4ab3-8901-fa1d4212e221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa087d1f-2d2c-4a30-a6be-d4beb9d84f07",
        "cursor": {
          "ref": "44aec6dc-1428-4ebc-a0d4-e0c0a97f14c6",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6e88c15f-43f3-43ce-b42d-9ca8d0066d90"
        },
        "item": {
          "id": "fa087d1f-2d2c-4a30-a6be-d4beb9d84f07",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5ea69f8b-69ea-47ea-a7cb-0301571bf011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa14ada0-2f67-4ee4-b4e2-b0376379f692",
        "cursor": {
          "ref": "b2088a20-f187-466e-a8e1-f3b9a6f3c28f",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b17cd363-ee6c-4bd3-bf2c-4ca399b98c7b"
        },
        "item": {
          "id": "fa14ada0-2f67-4ee4-b4e2-b0376379f692",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "801abf2c-55e4-42fd-8300-ac456a9c4c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5920c1-ce6a-44cc-bcb5-023ce53cb9d9",
        "cursor": {
          "ref": "3986c1ac-0de0-4e74-8e37-a97b6809be86",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c77d7d87-d8ed-4780-9fc3-e0eedc057ff5"
        },
        "item": {
          "id": "ab5920c1-ce6a-44cc-bcb5-023ce53cb9d9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "648aa56c-c649-489f-b97c-65df996af35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0035c7f-3e65-4872-9bea-760fef5c89cd",
        "cursor": {
          "ref": "5296b6dd-873c-4c3a-9b17-929370e1947f",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c3bf5939-f1de-4182-a5a2-614ec4617c35"
        },
        "item": {
          "id": "f0035c7f-3e65-4872-9bea-760fef5c89cd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4420a042-c9c4-4271-bb3e-08546a754a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70711b5f-22b3-4f97-be2c-5038fb406250",
        "cursor": {
          "ref": "8ffa8c07-7472-43b6-93cd-7204a30f8430",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "eb10ac10-7271-4f63-a6d0-5ab786b51aef"
        },
        "item": {
          "id": "70711b5f-22b3-4f97-be2c-5038fb406250",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e5e953c6-1e43-4041-b209-c31a2217724c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7855c65-a8a5-4692-8643-28d2b2652c34",
        "cursor": {
          "ref": "0f3bec54-43f9-4424-bb3f-e543728b6e0d",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3c3e68d2-d0a6-446b-9877-ae359b5ea860"
        },
        "item": {
          "id": "d7855c65-a8a5-4692-8643-28d2b2652c34",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0bbb35b4-6bf6-4a72-903f-46c9879ce167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90015d4-73a6-488c-ba0a-615b6d0b25dd",
        "cursor": {
          "ref": "0252c311-e599-48b6-8861-b7cdc51c8eed",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b60b8c54-87e6-4e06-9e92-e63e16db6311"
        },
        "item": {
          "id": "d90015d4-73a6-488c-ba0a-615b6d0b25dd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e3198f96-3040-4b11-ac10-201378a53df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e1ac28-eb95-484b-8a81-fce6e3459c54",
        "cursor": {
          "ref": "ad1c6310-ab8f-4f84-9c68-66ab824e0bf9",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b7e9cd20-bf71-4560-b499-950f70cbd840"
        },
        "item": {
          "id": "70e1ac28-eb95-484b-8a81-fce6e3459c54",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ff984439-ec9b-4fc7-bed3-df02e212c612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd896be-a3da-4b68-89eb-461b57bf6fe8",
        "cursor": {
          "ref": "effecd5e-c927-4989-ac69-61cd705a2d60",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1421d647-c591-4080-8cb1-4b32b9d5c3dd"
        },
        "item": {
          "id": "bbd896be-a3da-4b68-89eb-461b57bf6fe8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1547fd02-3e78-4aa3-b226-1a1c603b60ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542519fa-617a-4cdf-b727-f4b5aeba441d",
        "cursor": {
          "ref": "f1d9f29f-5abd-438c-8341-33ddb9ed664d",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f54236f8-78ac-4649-884d-6491f3dba52b"
        },
        "item": {
          "id": "542519fa-617a-4cdf-b727-f4b5aeba441d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "13c4d0a3-7239-4b5e-bc43-c51f3d812562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899589d9-9c62-48c5-8ddc-3b5ab2cdbdcf",
        "cursor": {
          "ref": "eb20d78b-3e67-4b2e-b58b-7e0706174dc8",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "45564244-6b5d-4de7-8bab-3c4a60071383"
        },
        "item": {
          "id": "899589d9-9c62-48c5-8ddc-3b5ab2cdbdcf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8389b44a-be30-42df-820f-8bc77899a13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606bf8b8-8040-48d5-bb09-975ba6260db9",
        "cursor": {
          "ref": "788863fa-ed7b-41b6-a172-6d7908b0ee0f",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8d718bf3-0c28-42e2-8637-f80c6db130d7"
        },
        "item": {
          "id": "606bf8b8-8040-48d5-bb09-975ba6260db9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4ea52196-9382-4d08-ae91-9ab7dc808d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1b8a90-6cb9-49a9-89b8-beabdafbf97f",
        "cursor": {
          "ref": "1677fdb6-cafc-4936-b75d-93fb6bde4907",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6a375843-2dca-4608-8280-c6976bc50dbd"
        },
        "item": {
          "id": "9a1b8a90-6cb9-49a9-89b8-beabdafbf97f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "faac0f67-b204-4c0b-9ee1-a2806e431732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0683410-791a-407e-9a37-ad381e28b2bd",
        "cursor": {
          "ref": "2f6023b6-b21a-40f9-9f54-f57d8f7408e2",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1d90555f-d276-43f5-8c9c-42de0fa6914c"
        },
        "item": {
          "id": "e0683410-791a-407e-9a37-ad381e28b2bd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "85563d19-9fed-42fd-b059-9664782108ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be05bc44-4acb-47f1-ab27-5e3089c19375",
        "cursor": {
          "ref": "930deb64-5e38-4847-aa2f-e0598958a0dc",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "95cd591e-bfa1-4f74-8f38-f253fe2c1d82"
        },
        "item": {
          "id": "be05bc44-4acb-47f1-ab27-5e3089c19375",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2af1167e-a168-44b8-b39f-55d075f10d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5aeac6-fefc-4a2a-89a8-3d7b3d1eaac9",
        "cursor": {
          "ref": "8c7549eb-e30c-405a-a8e5-e02586911dc0",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9467a4f0-ecbe-4b82-8238-ce616237fa6e"
        },
        "item": {
          "id": "3f5aeac6-fefc-4a2a-89a8-3d7b3d1eaac9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5fc038b8-d0ad-4834-b2be-a01872394256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe0262b-fc2e-4134-8c60-0da4861fcb29",
        "cursor": {
          "ref": "528ed0b4-565e-4fad-a007-83aece668075",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "466fa558-c205-4232-ac3d-2712bc7fb6f1"
        },
        "item": {
          "id": "9fe0262b-fc2e-4134-8c60-0da4861fcb29",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d1ce4b06-1a1b-49fd-b97e-d4ba6cfbd55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b1b580-e502-42ad-8226-ab50e0533cad",
        "cursor": {
          "ref": "a924dda3-11df-4f6b-90cd-b57da4d75cf2",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fe71f355-1187-445e-954f-5da971ad4934"
        },
        "item": {
          "id": "b6b1b580-e502-42ad-8226-ab50e0533cad",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8b328eed-9dc0-4f8e-bbe0-e37aed568e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb6138d-31da-4354-8df6-16a22cd18931",
        "cursor": {
          "ref": "567fb53c-c524-495f-9c98-4ffc084284a8",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "99d30e49-4778-459e-a7d3-9ceb97f0f9c7"
        },
        "item": {
          "id": "deb6138d-31da-4354-8df6-16a22cd18931",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ba6a9e9f-ca04-4799-9942-7a57dcc70a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723bb1c3-6cdd-42a8-837e-c00cafe4e35e",
        "cursor": {
          "ref": "9396d318-d11e-4843-b5d3-526e1f6dcb07",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2b7798a2-d03a-4e11-9c17-715eacb5e5a7"
        },
        "item": {
          "id": "723bb1c3-6cdd-42a8-837e-c00cafe4e35e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "83161a26-b0a7-4316-ae03-a6d5b61dd716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5219962b-1837-40ce-a85c-c6044e9ed436",
        "cursor": {
          "ref": "512d5bd9-11f9-487f-8fee-fdbc65652c9d",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "75c8e1c5-b1bb-4f7b-805f-7b513ed5eb15"
        },
        "item": {
          "id": "5219962b-1837-40ce-a85c-c6044e9ed436",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4d29810a-a8da-481b-9ee9-d27797972755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df78655-894e-4cc6-a544-7c6852e0d984",
        "cursor": {
          "ref": "60ae6daa-fe71-4844-bce6-8bd496cfddb5",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e38a2ec8-46ac-473c-9f39-ef71ea9093e1"
        },
        "item": {
          "id": "0df78655-894e-4cc6-a544-7c6852e0d984",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c55be55b-576b-4ff2-8f90-9f8a9275c9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f79b6e6-6a9a-4ace-a094-6771e2eccd3e",
        "cursor": {
          "ref": "0d03f17d-1049-4fce-a434-38b4314727bf",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ff15b894-b5f3-4d2d-91a0-7c5071324d8c"
        },
        "item": {
          "id": "4f79b6e6-6a9a-4ace-a094-6771e2eccd3e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8e9feef0-3a2b-4ca8-977f-b6e581204cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5babf5-9a8c-422c-947e-3bbc1a03cb69",
        "cursor": {
          "ref": "d6b73a4a-2cc9-49e4-b658-7771c87c0a17",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f7a74b0c-3866-4433-ab05-7a726055b8fe"
        },
        "item": {
          "id": "2d5babf5-9a8c-422c-947e-3bbc1a03cb69",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ff9502c4-c466-44b0-9b4a-0bfa44152948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03128ff3-47ac-4d58-b384-f7bc2edb9868",
        "cursor": {
          "ref": "6db0f223-3dc6-4a3b-9602-dcbf1697fe20",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8736a532-2cdd-4c1b-bf55-e103f1c444e3"
        },
        "item": {
          "id": "03128ff3-47ac-4d58-b384-f7bc2edb9868",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d980881a-7a86-4790-9a56-bcb66aa1f8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f607c11-8f47-4fb1-b2b6-41674eafaf4a",
        "cursor": {
          "ref": "e5c8af07-88f5-4476-896f-c175040bda68",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cf1e3bf0-e122-4370-9f55-343d4498d5f0"
        },
        "item": {
          "id": "1f607c11-8f47-4fb1-b2b6-41674eafaf4a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cd978003-e879-4d49-8dab-909f3b1c3797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c11db27-ecc1-4948-a313-b8d701607d0a",
        "cursor": {
          "ref": "7b835497-e9ed-4854-94af-949ec83a7980",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a32807cb-b86a-4f43-9b47-1b19601afe1a"
        },
        "item": {
          "id": "9c11db27-ecc1-4948-a313-b8d701607d0a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4d9d4486-51d3-44cd-80f6-e47064d75a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d742aa11-9667-49c7-a17a-035a1b36e8e6",
        "cursor": {
          "ref": "ba37795a-d304-4648-a712-1f7879d5d86a",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d6b6d080-1b2e-4f55-823e-7657bf2ab08a"
        },
        "item": {
          "id": "d742aa11-9667-49c7-a17a-035a1b36e8e6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "83e2af05-0566-4b22-a3af-42c5ff027c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738ea707-feb6-40cc-acb1-864f3bd5a5e7",
        "cursor": {
          "ref": "3631e4bf-2e84-4395-bb5b-ccb0c6526f96",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "49d42a60-80f2-4e14-8391-bcc6114de828"
        },
        "item": {
          "id": "738ea707-feb6-40cc-acb1-864f3bd5a5e7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f8404372-7892-4aef-ba77-a93c24dac65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ae6651-dc3c-4529-ac56-64347b43b6b6",
        "cursor": {
          "ref": "6b99d8c7-f03f-48cc-8fb6-d7f49871ee77",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b6db43d2-a203-49dd-9da0-aa34eea34274"
        },
        "item": {
          "id": "55ae6651-dc3c-4529-ac56-64347b43b6b6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "779eaacc-1de1-401b-bfeb-8f855e47ea99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f76688-ee47-4278-953c-4887e147076e",
        "cursor": {
          "ref": "5c89a2b6-679a-47e4-b8a3-77d8c8064998",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7567c0f4-db31-4b9c-b133-5d0532494b44"
        },
        "item": {
          "id": "62f76688-ee47-4278-953c-4887e147076e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4b61864d-ceb6-4868-bc46-c9fe35054f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e50b0d-853c-4f4b-995c-43633d3395f4",
        "cursor": {
          "ref": "88ec969f-a291-4d25-8121-26567cffe5f0",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2eab362e-3059-4d4e-8a27-4687f833a977"
        },
        "item": {
          "id": "f7e50b0d-853c-4f4b-995c-43633d3395f4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d1bf036a-221c-45d4-9d35-49f768147816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d55405-89d3-453f-9a04-3790ea4df211",
        "cursor": {
          "ref": "3268906f-8f55-4eba-9944-a54187a899a8",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d4ce297e-c04a-442d-949d-cf4ceeba23d5"
        },
        "item": {
          "id": "f6d55405-89d3-453f-9a04-3790ea4df211",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c5b84a51-7f6f-4ed5-8f40-4d8dac36982b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89588da9-5596-4943-8704-fa398f4c9554",
        "cursor": {
          "ref": "591ccf49-d625-40ef-ba48-23a8f7e5dc89",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9505aaa2-02bc-47e2-9fe2-77666b90f6f0"
        },
        "item": {
          "id": "89588da9-5596-4943-8704-fa398f4c9554",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4773ad30-e0bb-468f-8072-b4acd41d8c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8105dba1-dc2d-4ca0-95c2-7bc5b0323e89",
        "cursor": {
          "ref": "bad7a327-c024-416f-bddd-5696e0614e91",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a3326ade-c6eb-4555-9afa-f08cc6e67772"
        },
        "item": {
          "id": "8105dba1-dc2d-4ca0-95c2-7bc5b0323e89",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "62a047a9-3f04-4294-9d42-c3d8b43b249b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d29f8e9-303c-4c26-9cb5-1b12f6e06c10",
        "cursor": {
          "ref": "f8220679-d5d4-43a9-9b7e-add1472451df",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5ecf0a6c-3e5d-422e-93b6-7d726aecb7cd"
        },
        "item": {
          "id": "8d29f8e9-303c-4c26-9cb5-1b12f6e06c10",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "eb37f07f-06df-439d-8df5-edec8c66667f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c008314c-a057-4671-9197-167002caee03",
        "cursor": {
          "ref": "5367c63a-33e1-4e27-8765-58a938175095",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b4d49fd1-adae-4412-8940-cf6660617d10"
        },
        "item": {
          "id": "c008314c-a057-4671-9197-167002caee03",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c21abc10-6053-453e-9121-492acc3a9222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2869999d-5fba-4ae5-989a-e4b273b2342a",
        "cursor": {
          "ref": "ba6cfe40-9e27-40dc-ad01-1b1db5cd8e38",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b603b1e8-e31d-43c5-b4e8-1efb04c8e59f"
        },
        "item": {
          "id": "2869999d-5fba-4ae5-989a-e4b273b2342a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3bd6052b-6b36-4844-a9f6-a4be307f2081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59bff65-71ec-4b1c-b409-55b1df1333fa",
        "cursor": {
          "ref": "959c04ad-3a57-43aa-8a1a-4cd0bec7de98",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "413101af-6c8b-4f2a-ba37-19fda3a2cf08"
        },
        "item": {
          "id": "a59bff65-71ec-4b1c-b409-55b1df1333fa",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "57b629d1-13d1-443b-a839-43f54aaeb18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb2055b-ab75-475b-b878-5a0e43c74786",
        "cursor": {
          "ref": "3bcd158b-b00e-4952-9595-fbb7a5a04d1c",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6e1373fe-ba22-464c-91c5-290331f6b171"
        },
        "item": {
          "id": "7cb2055b-ab75-475b-b878-5a0e43c74786",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "349bae05-3b6b-4c7d-8fce-36cf54f9c324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e31c209-f97e-4b16-b0ba-ee79cc7218ab",
        "cursor": {
          "ref": "61c94d91-3d6e-493f-8f4d-7d647a1e1eb0",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8ae4e244-25bd-49e9-aad2-fc9bb837660a"
        },
        "item": {
          "id": "1e31c209-f97e-4b16-b0ba-ee79cc7218ab",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2dfcc6ef-10fd-4aa2-adc9-bf4ad9dfafc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162d0557-fb63-4dbb-8334-9e29da766cb4",
        "cursor": {
          "ref": "101d7e24-cafe-4540-a9d1-1dc7bb9cef24",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "07f2266a-71bd-4de6-bbc9-7daaf05d27a1"
        },
        "item": {
          "id": "162d0557-fb63-4dbb-8334-9e29da766cb4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2882f1d7-ac71-4b19-972d-d2c7fa50ea62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01d1c71-52bf-4b09-b2df-2fa574ce787c",
        "cursor": {
          "ref": "2e77314d-0a91-469f-8046-8fee662709bc",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4c3b93a8-1ea7-4b66-94ab-854fe1576dee"
        },
        "item": {
          "id": "d01d1c71-52bf-4b09-b2df-2fa574ce787c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2ff4acd4-f957-4b29-9cc6-c40c89fe645f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb63849-b544-4f91-9d04-39d64cfaed24",
        "cursor": {
          "ref": "76993b4f-9dc9-4959-88b1-d4017d6d39ff",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "dba0c6ac-338d-4eed-8d89-47ce8dc43f15"
        },
        "item": {
          "id": "2bb63849-b544-4f91-9d04-39d64cfaed24",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fe169a64-e3f4-46cb-8e65-de5198999096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe7bc37-ce91-4d37-9f55-d2bd9e8bff04",
        "cursor": {
          "ref": "4b92c1e4-d365-4013-a4f0-a94b99a3e540",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d70d206d-39f7-4c68-aba3-13445a65563a"
        },
        "item": {
          "id": "dfe7bc37-ce91-4d37-9f55-d2bd9e8bff04",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ff485090-c997-4f79-9b0c-526fb7799cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8b9543-a6a7-4bed-8796-fda69e326378",
        "cursor": {
          "ref": "acdb19c6-d8be-4e3d-bb98-939d372e52a3",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2d3fe547-c0bb-4c8f-a486-06030971c9e0"
        },
        "item": {
          "id": "2c8b9543-a6a7-4bed-8796-fda69e326378",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d70596d7-aaa4-4c81-ae8f-0365e670a9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d47edb5-6de4-45bb-8661-2729add6007a",
        "cursor": {
          "ref": "423fcd78-de9b-40bc-8355-cb231fd49a7f",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1cb82cc8-5381-49ec-af2d-93ca945c8a56"
        },
        "item": {
          "id": "8d47edb5-6de4-45bb-8661-2729add6007a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "78663803-f99d-4dcb-bc98-b3ca11691c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff2cbd3-84c6-4255-b7d9-d27290daea6c",
        "cursor": {
          "ref": "4e5f89da-d49a-4b43-9f5f-8ef9a7eada20",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6c6015df-d94e-4854-a4ec-600266f5e83b"
        },
        "item": {
          "id": "fff2cbd3-84c6-4255-b7d9-d27290daea6c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bd9b4f67-41ed-4ae3-9f67-3939c70d8e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69eee656-b6b6-400f-b741-421a4b2315ba",
        "cursor": {
          "ref": "33b55641-7226-4971-9081-e759d3164380",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ffa33ace-d713-4a37-b2bc-795f53e7c50c"
        },
        "item": {
          "id": "69eee656-b6b6-400f-b741-421a4b2315ba",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "06a58641-ad8f-4f8e-b73f-08d263c28af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f469fef-579c-4b51-acf8-32067e1d8c23",
        "cursor": {
          "ref": "41fa1c2c-128f-4d01-bbef-cc45bedb467b",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2a8625c8-fbb0-4312-af17-178078b90af4"
        },
        "item": {
          "id": "4f469fef-579c-4b51-acf8-32067e1d8c23",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "32d3bf9c-dfeb-447c-a321-97adc268b0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c91511-8534-4774-a288-1360cdb330ba",
        "cursor": {
          "ref": "486de56d-2049-4e32-8dd1-1d7174c98422",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fc82b73e-3ecc-499e-9bf6-e34fd7408a73"
        },
        "item": {
          "id": "95c91511-8534-4774-a288-1360cdb330ba",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9a0c2be2-6fba-4e41-9786-16e70c2e4971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada892eb-6c12-4391-b18e-300b10e88b53",
        "cursor": {
          "ref": "17eb3c94-9a9e-4672-a265-7a16011d5f44",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2b8436ca-3413-450c-a922-0e6adb318cba"
        },
        "item": {
          "id": "ada892eb-6c12-4391-b18e-300b10e88b53",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8f18dd76-2e2d-4591-b31c-b44a1fa26125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22472e86-4ec4-4a04-9874-b5a899193ab5",
        "cursor": {
          "ref": "d12368b6-8a8b-458c-b124-27b86f2e323b",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "174fa117-5a84-4960-af59-05f32c5cfef7"
        },
        "item": {
          "id": "22472e86-4ec4-4a04-9874-b5a899193ab5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "55aaaac1-034c-4d24-a225-d30faf9d1c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab7d66f-f374-4ce2-9829-d7c316990e9b",
        "cursor": {
          "ref": "3ee45426-680f-4b40-8cc4-26d6252a5720",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2b83b752-3b99-4f84-93e9-29d5008665b7"
        },
        "item": {
          "id": "6ab7d66f-f374-4ce2-9829-d7c316990e9b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bc02dff7-3752-4d72-8976-0e9e92a9eec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1867e19f-bfbf-43d3-a355-0b02ba958caf",
        "cursor": {
          "ref": "6d211446-3f00-4a65-9bcf-3017ce44ff51",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0a82f4b9-b279-4294-8f8b-662d00eac445"
        },
        "item": {
          "id": "1867e19f-bfbf-43d3-a355-0b02ba958caf",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f122949c-a747-4eae-9f5c-9c7ede5e529d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ab5b74-ebac-49b6-835a-03d52c800de1",
        "cursor": {
          "ref": "104b4764-bf23-4b64-9228-8cd8d0a91062",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0e7ae74e-c623-4161-a01c-23057936e210"
        },
        "item": {
          "id": "05ab5b74-ebac-49b6-835a-03d52c800de1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f6f6bdb9-4409-4aaa-b2d2-b00a79fa164f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525f7459-ffe2-489d-b5e0-fdf1cd96a941",
        "cursor": {
          "ref": "31e41fd3-0904-455d-a727-503ebe5f1052",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6f5fab57-8733-4d43-ab0c-803468fcca11"
        },
        "item": {
          "id": "525f7459-ffe2-489d-b5e0-fdf1cd96a941",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "05fe9e65-2b87-4fa0-aa3e-16b2d0021ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81bd712-504b-4d75-8baa-38d30f6ec3a0",
        "cursor": {
          "ref": "b1d22a55-5ce7-4bea-9a64-c289287c34e8",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "781b23f9-e846-4256-be87-d7fddb657787"
        },
        "item": {
          "id": "a81bd712-504b-4d75-8baa-38d30f6ec3a0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e27769cb-8f17-4101-af02-c7d19e071ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d1d796-9fd6-4f61-8429-f9cf33571136",
        "cursor": {
          "ref": "ace13d5f-6382-4cfb-b557-42f27dda16bb",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7034249f-db97-4f39-8c03-ba44d5904b70"
        },
        "item": {
          "id": "f9d1d796-9fd6-4f61-8429-f9cf33571136",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4fa00511-b8dc-47fa-86c2-2a7f39b6cbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5eeeb4-7217-4b8d-9156-8e88c6ed464f",
        "cursor": {
          "ref": "9431340d-d96b-4a0c-a467-637e21992d90",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b341ebbe-a1b9-4768-9951-5e9eab167438"
        },
        "item": {
          "id": "2c5eeeb4-7217-4b8d-9156-8e88c6ed464f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "50d43e7c-883a-42b6-80b9-02946ff9edaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc08fcf1-22d8-4c43-96b7-49b4d0616ed2",
        "cursor": {
          "ref": "d8d29ca1-de6a-419a-80f0-2e5e29f7b96e",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0871bc88-2692-42c7-aedb-b0aded7cc96d"
        },
        "item": {
          "id": "fc08fcf1-22d8-4c43-96b7-49b4d0616ed2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "181cf508-2eb7-4c61-9c28-fc81647cc006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29c64f8-d887-4db8-bac4-e552b54f38d6",
        "cursor": {
          "ref": "23a05027-35c5-4d2b-bf97-0ab337c81e37",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e1b84df5-c940-415a-b3bb-8db2e6c60b6a"
        },
        "item": {
          "id": "a29c64f8-d887-4db8-bac4-e552b54f38d6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0787e954-63f9-41b2-aecb-61718a500941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd72c396-b0ca-4c65-ba89-54994a92d42c",
        "cursor": {
          "ref": "e6087d1a-8789-468d-b325-d8b79db941dd",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1169be78-5075-4c47-8e06-2ff6838b6866"
        },
        "item": {
          "id": "fd72c396-b0ca-4c65-ba89-54994a92d42c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "93fc44ee-401a-4ca5-91dc-1e48197d81b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96657c5b-9974-4e67-b62d-932120d2defb",
        "cursor": {
          "ref": "1f0456be-43e4-497d-aa9b-fb3b3727d931",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7f1254ec-6b18-4cd4-8c78-a2c66f2e1979"
        },
        "item": {
          "id": "96657c5b-9974-4e67-b62d-932120d2defb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "21ea7d35-54d7-449b-be3a-6ceece765434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63569f5-6b04-4743-8df8-3fc2dbdd9ca9",
        "cursor": {
          "ref": "8a6f1336-65b4-4a04-87df-057ba7aa5f49",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a165810e-aef4-43ab-a970-36660e8f0652"
        },
        "item": {
          "id": "a63569f5-6b04-4743-8df8-3fc2dbdd9ca9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2580c4ca-b60a-4d4a-82bc-e603d8237c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48b1a02-7349-4f27-ac40-8cc58f77a2a0",
        "cursor": {
          "ref": "b585264d-ad38-4db7-ab9c-17faa00897db",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "96ce6318-bf0d-419a-a287-6425653878bd"
        },
        "item": {
          "id": "d48b1a02-7349-4f27-ac40-8cc58f77a2a0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b419ef18-ff7f-4baf-9b7a-cc8f3c6796ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f112c597-ef6d-4330-bf8c-9d05fa2a6bff",
        "cursor": {
          "ref": "080e3fb8-5c43-4200-ba04-9e36627be084",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6111d33f-baf1-42c3-a04d-3971be69794f"
        },
        "item": {
          "id": "f112c597-ef6d-4330-bf8c-9d05fa2a6bff",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6f696be9-d1d5-45aa-af2d-ae27ef04e1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3751c8cd-67b2-472c-a808-6313e93189bd",
        "cursor": {
          "ref": "5973a9f6-8622-4508-8606-ee847ba6e9ed",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f979aedb-27e1-440e-b777-977030c68e9a"
        },
        "item": {
          "id": "3751c8cd-67b2-472c-a808-6313e93189bd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5e2a1c13-0abb-47ba-9e19-dc9cb4b6436b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dc1519-46ff-4ffa-8d88-1e1164de5d18",
        "cursor": {
          "ref": "ba0aeda3-9286-4025-9626-480432de48b4",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "60fa2699-012b-46b9-ad3b-17310a881813"
        },
        "item": {
          "id": "53dc1519-46ff-4ffa-8d88-1e1164de5d18",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a597b35e-fdbf-411d-abf9-868540606324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02051c0-c355-470f-b76d-1e74e3d2b992",
        "cursor": {
          "ref": "78e43d48-506b-4507-88c8-2c37c17c91e1",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2831936d-0fff-4ddd-81c3-49f5b0fd785a"
        },
        "item": {
          "id": "a02051c0-c355-470f-b76d-1e74e3d2b992",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "17c3ffc0-052b-41a6-9a4b-62bde51107d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f692d0-16c2-467e-9862-6276abb9b4d2",
        "cursor": {
          "ref": "e4214195-c891-4474-99a4-df4118410507",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f7ac5a3f-a6cb-41ef-8616-bd059b047e2c"
        },
        "item": {
          "id": "d7f692d0-16c2-467e-9862-6276abb9b4d2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "45f03484-b1dc-4e35-a762-0776cc4d7355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8d5661-08f2-4d42-b09a-674a72089b9b",
        "cursor": {
          "ref": "df0bcb16-c921-4f77-bc28-fe33ad4b8a54",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ba41cf97-bfdc-4216-ad45-7229c39ddcd4"
        },
        "item": {
          "id": "ab8d5661-08f2-4d42-b09a-674a72089b9b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4298f295-a425-44ed-b8d2-56e3ddce3494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c602800-e08a-4031-a0d3-7b1fbef53e61",
        "cursor": {
          "ref": "5da9f2eb-2c75-4e8d-a3a5-da82a703c71f",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5b5edc72-873a-475c-9d0b-76245040ab97"
        },
        "item": {
          "id": "5c602800-e08a-4031-a0d3-7b1fbef53e61",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7282895d-064b-40e3-b276-055df9d2f436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a32204-77bf-411d-b6b2-9292d86d4c08",
        "cursor": {
          "ref": "2c47b4ee-f4d5-4a34-ae00-721d0b88e6f2",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ca914a7f-f468-4682-ae5a-2c16b3341be7"
        },
        "item": {
          "id": "38a32204-77bf-411d-b6b2-9292d86d4c08",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "354d9d5d-b93f-47f1-8f01-4b671b202e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811a4dc6-1805-43e5-ae91-2812fe8e8b07",
        "cursor": {
          "ref": "c1cbbdef-1808-48be-bac3-0453525aaee7",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b5e3dbe3-f4d7-46f4-a195-529d91bb0a3d"
        },
        "item": {
          "id": "811a4dc6-1805-43e5-ae91-2812fe8e8b07",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c4fe4c8b-5cae-4f0e-9ba2-59b90c8f7f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee47fd1-39cd-4ea6-930d-3b58fd1676bd",
        "cursor": {
          "ref": "b0aaf760-545c-4945-9b72-10e161261c8d",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fa77d65c-db22-45cc-a179-f23354ad9bcc"
        },
        "item": {
          "id": "0ee47fd1-39cd-4ea6-930d-3b58fd1676bd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "15c71ec9-809c-469e-8a7c-d230abbe901b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47b0728-75d0-44a5-bb1e-241a98c6dab8",
        "cursor": {
          "ref": "fc9fa475-2ce9-4f2e-9f0c-49f8568ae60c",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9f866e7b-1436-4ca3-8bae-8af274fb92c9"
        },
        "item": {
          "id": "c47b0728-75d0-44a5-bb1e-241a98c6dab8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "adac0082-82c3-4e64-90b0-38bb4f4e94e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3558781-10ac-4d21-a4d0-2e21deebf2e7",
        "cursor": {
          "ref": "ee2a04a0-adf7-4852-ab97-439babedaa12",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "539bd16e-e35d-4f8d-8c0a-0f32ecdc69a1"
        },
        "item": {
          "id": "e3558781-10ac-4d21-a4d0-2e21deebf2e7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cee35b18-f5c7-476e-bdad-e218ba7102d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8952ffa8-1a3d-4a6d-8307-6c9b5b808276",
        "cursor": {
          "ref": "5d0e940f-b42f-4ba1-8224-07edd9b876d0",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bf1f7200-58a7-429c-a838-e61b5d8783fa"
        },
        "item": {
          "id": "8952ffa8-1a3d-4a6d-8307-6c9b5b808276",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c9cb79e6-ce2a-47fa-9bef-ecc7900f0293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a13e79-b880-4a9c-a69c-b819578bc101",
        "cursor": {
          "ref": "4439c59b-da91-42b2-b6da-bfaaebae3090",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "99848110-f14a-49aa-af7c-1e8bfed160bd"
        },
        "item": {
          "id": "d8a13e79-b880-4a9c-a69c-b819578bc101",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8dc040dd-a208-4987-96db-a5469222e2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a872f853-0ea0-4bff-a73b-0cac9e7739be",
        "cursor": {
          "ref": "91274119-dd24-43b5-a3f0-5817e151a9df",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "00a510a6-36fa-4ccc-a6f1-751321849be5"
        },
        "item": {
          "id": "a872f853-0ea0-4bff-a73b-0cac9e7739be",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2b1efa0f-da02-46f6-96c1-bc97e07b86c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ce8acd-01a1-49f0-956d-f9d1e45cac9f",
        "cursor": {
          "ref": "cc8566a9-bd2e-49bc-a774-81997b24e672",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cee60dd8-bd1b-4fdc-9917-f1124120c860"
        },
        "item": {
          "id": "31ce8acd-01a1-49f0-956d-f9d1e45cac9f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "03cf25c7-960c-457e-a6ed-9d23e2264a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6c55c5-af11-430b-b0a8-74bbbeb69d21",
        "cursor": {
          "ref": "7e6330f4-7482-4a0c-8c68-5137f575d7af",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d82ee417-0d11-48d0-a3b4-4004a09f4b83"
        },
        "item": {
          "id": "9c6c55c5-af11-430b-b0a8-74bbbeb69d21",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e7ed36c1-b427-430a-bd8b-9df54e92e35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9818675d-fc62-4fe1-83b7-4f180d90af9a",
        "cursor": {
          "ref": "2c69fa70-6f36-4f20-9cc5-c5e7597a2097",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0c8b3c21-df98-4b27-871a-6d8acd9af9cb"
        },
        "item": {
          "id": "9818675d-fc62-4fe1-83b7-4f180d90af9a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d4896685-f3b8-44b4-8da9-de30b5598ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa698bfc-d2b7-4b6a-9c9d-a77ed3b6d41c",
        "cursor": {
          "ref": "b8ec0181-0494-4af7-a9a9-b13c68a02924",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "801ec067-53ee-4471-9711-e62d2b4e0ba3"
        },
        "item": {
          "id": "aa698bfc-d2b7-4b6a-9c9d-a77ed3b6d41c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "75499889-826a-46c3-8b37-aa057ecaaeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8412fc4-453b-4503-a16b-b804393d6d3e",
        "cursor": {
          "ref": "cb941111-8b28-4cd8-92e9-9fb53878c6f1",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ddaf41b5-3b91-4be7-8fbe-4b831c8c92e7"
        },
        "item": {
          "id": "a8412fc4-453b-4503-a16b-b804393d6d3e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a56db842-ae5b-4f65-91c4-6b4d038c98f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967e75da-de69-43c0-ae64-c948e585a927",
        "cursor": {
          "ref": "ef816c9c-fbe9-4891-b8fc-a8e470cbbe04",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a8554d12-a005-4a27-9625-332b5ebb80d2"
        },
        "item": {
          "id": "967e75da-de69-43c0-ae64-c948e585a927",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2ee42328-e90e-40ca-a6fb-b2951f1f0a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69820a00-0378-4bc4-b052-405fd7235aa5",
        "cursor": {
          "ref": "b356b915-4580-4692-99f2-7e9321938ca5",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4a1aeb65-9410-452a-ade9-635774bebc27"
        },
        "item": {
          "id": "69820a00-0378-4bc4-b052-405fd7235aa5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "047aebdb-810e-4ec0-a1c2-4083f51d4f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a21af65-b57f-4b91-abe0-f7c788cd027a",
        "cursor": {
          "ref": "a8d0f3eb-2e6c-47db-a88d-2b44341f2c1f",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6a043400-f1fe-4c2d-bfd7-2438565bf622"
        },
        "item": {
          "id": "0a21af65-b57f-4b91-abe0-f7c788cd027a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "46d25042-103f-4c08-be43-d69ebe62ab79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6643f19c-cfc6-49ff-bec0-93b772fa0d2d",
        "cursor": {
          "ref": "040893ad-b347-4e83-80a0-c48adee911a7",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "416e3982-93c9-4343-adc4-5ac48e9e330a"
        },
        "item": {
          "id": "6643f19c-cfc6-49ff-bec0-93b772fa0d2d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b1531f7e-b042-4191-9568-631157d59c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1080978-4dcf-44bd-b284-c124312c91c4",
        "cursor": {
          "ref": "d7b5276a-02e7-44db-9f72-66e52f188e5a",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2b7771e7-a108-46d2-bb0d-3b8696fef7c7"
        },
        "item": {
          "id": "c1080978-4dcf-44bd-b284-c124312c91c4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cf78d28e-f07f-45d8-9034-9306d346fd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abd3021-382d-4326-9ebe-84574497ae43",
        "cursor": {
          "ref": "f88f313f-8483-43b3-ba34-56f12a957b15",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "08e2980d-45d0-4008-8974-5b9a5e2d661a"
        },
        "item": {
          "id": "3abd3021-382d-4326-9ebe-84574497ae43",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f1f94931-2c5a-474f-bf5b-602137345d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e4d0bc-5fa4-435a-a4f3-b1b8498e41a1",
        "cursor": {
          "ref": "c258e41f-8b90-4637-a2e3-df3ce250194f",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "cf145307-b379-42cb-a432-14cbe6a7de05"
        },
        "item": {
          "id": "75e4d0bc-5fa4-435a-a4f3-b1b8498e41a1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "69a92504-7553-4523-9337-d2164421815b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cf82c3-669e-49b9-957c-c0fa331c0aa4",
        "cursor": {
          "ref": "d3c56ca3-54f6-44b0-8371-a6c98d75e215",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "774d7796-6460-4f82-91b3-7687ab0ba72a"
        },
        "item": {
          "id": "f9cf82c3-669e-49b9-957c-c0fa331c0aa4",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "a0c0b032-7418-4b1a-b994-ba442b9f9e48",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 528,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b35731-a583-4d6a-aac0-963f109ab5f9",
        "cursor": {
          "ref": "e9fa5d82-cd16-4007-8478-0ee636ef884e",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "96072716-b120-4cc4-9983-d9997895bd37"
        },
        "item": {
          "id": "a4b35731-a583-4d6a-aac0-963f109ab5f9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "36676302-6112-44db-8ccf-6d3686234484",
          "status": "OK",
          "code": 200,
          "responseTime": 589,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "45710d65-ac9a-4eb4-b0c4-ec4439801112",
        "cursor": {
          "ref": "f29f1610-8f3b-4be8-bf1b-1a315f4153bc",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ec9478a2-387e-46ce-9a73-c6f9f5ddb97f"
        },
        "item": {
          "id": "45710d65-ac9a-4eb4-b0c4-ec4439801112",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8be80b56-21ca-4b6e-9180-3add38e5e8e3",
          "status": "OK",
          "code": 200,
          "responseTime": 1920,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b25f3ab-4837-4456-96f8-aa39d7143a02",
        "cursor": {
          "ref": "88496554-1258-4b72-80e8-51c804b7e87f",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f68ce5e4-413a-4831-b0c8-88fb4e431e6e"
        },
        "item": {
          "id": "2b25f3ab-4837-4456-96f8-aa39d7143a02",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "20eb28fd-378f-48e5-962e-7e0791461547",
          "status": "OK",
          "code": 200,
          "responseTime": 1598,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a77ed4c-5b9e-48e9-9de6-f1402201eff9",
        "cursor": {
          "ref": "140575ff-6d47-4b23-ac22-e858aa2371c9",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f76f5f67-59e0-4c54-8586-77f8952a2596"
        },
        "item": {
          "id": "6a77ed4c-5b9e-48e9-9de6-f1402201eff9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e102c8d0-2f4d-433e-a124-ab8dfbb75388",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a77ed4c-5b9e-48e9-9de6-f1402201eff9",
        "cursor": {
          "ref": "140575ff-6d47-4b23-ac22-e858aa2371c9",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f76f5f67-59e0-4c54-8586-77f8952a2596"
        },
        "item": {
          "id": "6a77ed4c-5b9e-48e9-9de6-f1402201eff9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e102c8d0-2f4d-433e-a124-ab8dfbb75388",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a77ed4c-5b9e-48e9-9de6-f1402201eff9",
        "cursor": {
          "ref": "140575ff-6d47-4b23-ac22-e858aa2371c9",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f76f5f67-59e0-4c54-8586-77f8952a2596"
        },
        "item": {
          "id": "6a77ed4c-5b9e-48e9-9de6-f1402201eff9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e102c8d0-2f4d-433e-a124-ab8dfbb75388",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e108438-3d57-48f9-9663-5e8d420b374a",
        "cursor": {
          "ref": "0c5bbce5-a408-4089-b4a0-5a12d9c26bdf",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5fd5220e-2bce-4618-8917-48520675f924"
        },
        "item": {
          "id": "7e108438-3d57-48f9-9663-5e8d420b374a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "08a07cb0-8f7d-40e5-bc4b-cff57b47ba0f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 519,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4e54ed-eee8-48f3-9514-cc9c4370ecc3",
        "cursor": {
          "ref": "020a2cc2-670f-4214-83ac-d27292674b4d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b62bf39e-4527-4493-bdf4-d3eac1763403"
        },
        "item": {
          "id": "ce4e54ed-eee8-48f3-9514-cc9c4370ecc3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7cb65bb8-d680-4ebc-ae73-99f6dbecbdb2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4e54ed-eee8-48f3-9514-cc9c4370ecc3",
        "cursor": {
          "ref": "020a2cc2-670f-4214-83ac-d27292674b4d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b62bf39e-4527-4493-bdf4-d3eac1763403"
        },
        "item": {
          "id": "ce4e54ed-eee8-48f3-9514-cc9c4370ecc3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7cb65bb8-d680-4ebc-ae73-99f6dbecbdb2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2278b939-3192-4312-aae6-d2c83e19f02e",
        "cursor": {
          "ref": "89b016b3-fb3e-43bf-b54a-f9edf8725afd",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "56768ccd-674e-4ce5-b1e2-275d9f68405d"
        },
        "item": {
          "id": "2278b939-3192-4312-aae6-d2c83e19f02e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "fdfdebae-7cc6-437b-9f0d-c50042d7dce3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 777,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25ee9b4-2987-43df-b24a-16256e5f0e8e",
        "cursor": {
          "ref": "217f9b08-3a8d-4413-b8b1-905f87a35d29",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8f60ec53-2cfb-4e6c-bbbe-96512f5340d8"
        },
        "item": {
          "id": "c25ee9b4-2987-43df-b24a-16256e5f0e8e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "84335019-056f-40a3-8a41-cfe678e7e6e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25ee9b4-2987-43df-b24a-16256e5f0e8e",
        "cursor": {
          "ref": "217f9b08-3a8d-4413-b8b1-905f87a35d29",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8f60ec53-2cfb-4e6c-bbbe-96512f5340d8"
        },
        "item": {
          "id": "c25ee9b4-2987-43df-b24a-16256e5f0e8e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "84335019-056f-40a3-8a41-cfe678e7e6e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5c5694-30c8-4ff9-bedb-53af6146dd3e",
        "cursor": {
          "ref": "6c3f5ddd-960b-4151-84a4-2df9ade0f51c",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "91ee8cda-3e79-4e27-8b67-19070d8e2e7e"
        },
        "item": {
          "id": "0a5c5694-30c8-4ff9-bedb-53af6146dd3e",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "f0bd7145-b94c-45f8-82c1-f3c90ac4114c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 756,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}