{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9b717a57-8dd4-47af-b7d2-c45119915fe5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "27490125-388d-49fa-862b-0647aecb5ce9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3c7b1083-9e78-4384-8633-547ef6c63c3f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "201e2f8b-66b2-419c-9cba-684445a20c10"
                }
              }
            ]
          },
          {
            "id": "f127370c-6cca-4174-981f-baaaa0b68d46",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "916d8487-65de-47a1-9fb2-b90b4df4f90d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0394d136-4dd3-441d-85e7-2410bd47b409"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c03b4a73-ded6-4dd0-87c8-7a4a5f30b8cd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a6c354fd-3d42-40c2-8294-a369384f2573",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22cb7510-4dda-415b-a92f-014fd89221df",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af98cb43-1dd7-4a0d-b677-d00e06e098f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d6549da-6011-41e0-986f-dcf9c0347674"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0c3a7919-ad0d-4783-a301-2552a9cd118f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "96549f54-6228-4ddd-93f6-77083469def1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7b87c0fb-9443-4e5c-b656-abb2ca4cd5a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d09792e9-0543-461a-9ff6-203be94cf999"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0298dd1-429b-4c36-8fba-447a5d5b25fd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0695544a-c8e4-4e47-ba04-3904d896d83c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ab061a2-d5db-45e3-8b29-933eb7640839",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb4f8834-0f3a-45f2-9fd9-77ec52228cfb"
            }
          }
        ]
      },
      {
        "id": "d15249a0-f28e-48d7-96fe-f4b005e53250",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1910dbf7-1c7d-42be-9979-fe2de220a134",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67430f95-806e-448e-82fc-5d57f240e3db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0ab8d46-9319-4754-8a63-59d6a23dde9b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8bdb3e-ed69-44b3-a32c-8e5bff3192d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfc8e26f-8935-4b94-b560-810adf0d3cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7f4cbe-d8c7-4180-9518-5a226fd60d96",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86d18c4-eb78-4c2e-8848-f4849ae1b619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3cddcc5-14bd-46f6-a0b5-26b5c4e0b530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8b1dab-59d3-49a2-8dbe-43ff70c6cfc8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ee8b8c-87e4-4867-af57-942b30a3248a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c736fc4-951e-409c-8fd0-2316e52bdaff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a556cc9-cd60-4600-80bf-f9142839a66e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb69ef2c-8222-4538-be54-7a9f7fd92892",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83173eda-b6f2-4329-9f3a-4e463bc53e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "300a7ae3-cfbb-4be0-bf14-4ea73e472126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a4ab20-f17b-4c50-a8dc-576f826253f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c7e0fc-3bf1-4347-8846-4d2ab0289a00"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2d9dd91c-fa32-45d4-82bb-7cdd0ab1b6fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0f273d0b-50d1-4c37-99cf-a1c986f6e02d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c0566ea-195a-4dc6-8dae-b1ed8c2b8ea7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6719f99a-a630-4819-857a-26606c5b6b86"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f418366-6d70-4fec-993b-89771921704f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cbab1775-a2ee-42e8-b65e-b9e7c064a919"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5b4b9e4-cb7e-4fa6-bbe4-732d54833c61",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38ef349f-fb6f-45c7-be4c-83fc11552331"
            }
          }
        ]
      },
      {
        "id": "95a1e88b-f9c6-4e94-90db-0897d6995842",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d8e8057b-31f3-4dae-852e-1bf97998e0f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7834b264-e537-4d8f-9ae1-022c6bf9d412",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "781285b7-52d7-4080-b9af-a9fdbbbfe450",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbd9664-3b7f-4b63-aa2c-9964c94ab90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4daccc3-7a2e-4010-b7fb-58c4b5dc06bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e536d11c-9389-41fd-bf06-c6fbc2be5224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2498bcd3-112a-430b-9c93-eccebefdf0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa554af-bd19-4038-9472-e000893a8d25",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861f52d2-897d-46eb-ada2-044e9aa422f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e2b266-6b9f-4d6f-a533-961ab838bc35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c29729f-f77b-47b9-ac07-76455130839e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2304039f-ae02-4516-a605-ffd60524c12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50436cc-901a-4380-b2df-e8b8d68804aa",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdca9de7-42cd-42b4-8592-dbda768c7ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef2deb2-783c-4369-8159-c0479eab2d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e94182-684e-480c-8b52-86224436a540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "279383eb-aa55-4459-b721-bab2dde1782f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4246866f-fe8b-4659-b419-21de5a840a31",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c666a816-475b-49d0-86c5-fced37041fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6821f3a-6b39-46ae-873d-7a3b79b71c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f2ad8b-2e38-42b4-8729-46260b90dd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1e12ad9-7a8a-4773-89f9-d243ef5a9f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4051d5-ce6a-4b92-8730-f598a3e7cb33",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64efe88e-fe6d-4131-ac22-c6b06c50155a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38591de2-ce14-47aa-be83-9a027ba83fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99601bc5-2c60-41c6-bc33-13b50bc1feef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a87ad028-b154-4056-a970-81440d5a3ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed07529d-3e76-4e85-a981-04cf6fd79246",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc03b53-7384-4113-a574-88317234e142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87747fa1-ab34-4435-a570-0b8fdb739717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e203c68-a673-4026-899b-83e31d9b7e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7953b8fa-bddc-414d-afe9-e73a94e2af99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897d1032-e58c-4b8f-b889-dc8cf4bebab6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc12ff65-c4fa-40f5-b462-04ffd379c834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f560c8be-910a-445c-96b5-47a1db00ad91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f356e303-524b-4dd1-9e03-aae6a7961eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fada3461-0906-485d-92d5-fed037d1bb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90820e39-ab3a-4405-9e34-65b1c2ff9a36",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c898f5-d49c-495d-94ff-b745f99b9ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f2319f-419c-4177-95b2-b7abab0c5ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19090054-9ea1-4c56-bacf-862f9aa17a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bfbfaf5-1a3e-41df-8f51-b1f990177b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7f067e-aba3-4447-b7d5-802585f827b5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c831fe-0304-4c8c-b2fd-867c7445000e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6fb2124-1146-4090-a487-80249d23c6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b34b05-3416-4795-97fd-82193bf3cfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a01e0ee4-68b2-4274-93e8-85cbbeede152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb48e675-df27-40ed-b505-0f75ce839f18",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6589a96-407c-4acc-babd-8b036e2ded4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8d2612-9cec-4b84-9c40-c90360e7c79e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3ef59f-e9b7-43d9-b3bf-fbe2dc83adee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b02eafc8-caaa-443c-8c31-4f9dcd8608b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6c40b9-8f0f-4a3d-9348-d047261eef52",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0056af-f23a-47a8-aac7-2359502edc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24cd7ba1-badd-4b23-9802-3d285e09a902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4fe79c-d508-4e93-8009-bcd2f5f7f302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "341ca373-b8b5-436f-95ae-6dfb613ee646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a0716e-c88e-44db-a89d-df812135a7cc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb633dd-3b80-4159-802b-b63feed2b9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c61f68-5cb3-41f9-b893-3c1e562f7681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa6bbe7-8b9a-4d17-83cc-93529a328e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b110a85-e67c-4511-b919-398aa6cbfc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8503e94-b865-4eab-9f68-eff6c2908520",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c808522c-12a1-47b9-a82b-1887eb7e8d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de04d8e4-b4ed-4347-aa08-2dccb0cc24ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e556edd-e61b-4a3c-aa18-e269c84bc7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e97872fd-6a62-4c4b-891a-605c69019b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4489833-94b6-44d6-a2e9-39bdbf2297e9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca976242-cf87-4c18-8c97-4a417ab6c2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1e6ef8-06e6-4004-8691-f34813b6a975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cc9345-b87f-4440-be15-fddf0dc30872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b879b53-2554-4026-8f49-465815f6613f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a22dbcc-73cc-4891-bcf7-40f437d4a5a4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb2d471-c5db-47dd-ba11-6fdddfd83fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103b0c97-449c-4bf4-b79e-aaf3cbe497d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d0d41a-1f4b-4ead-81f3-bec16f380152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a685085-f587-4f80-ba0b-961d668b5b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d87357-7a4e-426a-aa02-589a33948b24",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ced8992-ad22-4285-b3b5-10b4ee51ba27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc16ae9-6d09-4baa-af64-00e5d606f095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0efdde7-b50b-4118-a6cd-23f2c75fd520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cbf83fe-7494-4da3-9c7c-6de505b351f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7408202d-1fb2-4b2f-a2cb-8d244df1005d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf86319-0714-4c13-bd7d-ba596e63b84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fadc457-a12a-41b0-8fbb-b69b1d908794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba329a6-41c4-4adf-a935-384f6c99b55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f0d8f69-ab48-44a7-bed8-ed07cce83901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0eeecd-1a17-4613-8e42-d1ddfdf82cca",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ff2767-306a-44da-a047-0401f95e01f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426e24ed-06dc-4bee-bda1-69b42f911687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1e4468-97d0-4e78-b3d7-24df00dbecb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d02b536-b6e6-4440-ab57-ac8d7d4979e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b033efaf-a55d-4dfa-8fbc-518002c86c8a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b986f757-1705-436a-a08f-7e8a281f483f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c87c887-4be3-4ed1-b0aa-7e624632006d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8078f159-37ce-4404-bf3d-189076ce77aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc4e19e-b591-4588-b815-d4fe88af527c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e9214b-62ba-4654-ab5d-16318bfa1a3f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776ec757-be7d-4705-b2f2-5543c89dcc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19afd6f4-8fef-4c55-a72c-809300e7a327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4439e8-6a0b-4b60-8b41-508103c117bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "892d4463-6a6b-414c-a48d-1801f96684d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72949360-6618-4f6d-ae59-66a2469c6ae8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53204f67-7338-4058-8e20-4e16147e3f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a428ff-1809-41c8-9527-d176242f0cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2b5111-5aeb-4cdd-a3f1-6a7745c859c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a4a551-8e0a-4020-b747-424eb80adfbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4857e670-0b6c-439b-b41c-94493dfbc231",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756e4a4e-aa42-41ad-9b7e-d3c2f6977fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781e7f07-0045-4ff0-b856-d1103d71c338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abfedb2-ae6e-426f-b21f-e7d627d7111e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2b3be0-baed-421f-b37d-17dc3dc1624a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a675417-e9f7-4bca-9a04-d2e7f651664b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79ae10e-e51d-4446-8ffd-7dd85dc69368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be1ac6f-0a59-43ae-ad99-97cb16c80c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10574461-f18b-4701-905d-4b5ecd4feed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "101dad17-caab-413e-8d78-07aabbd56619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d2fdc3-07e2-4fb1-b52a-f17e6e24d36a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc2c66c-327e-4e38-83bf-44d378b23c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e55070-825d-444b-a389-703bb8cac821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5dd01ed-44ae-471e-9736-49f5a902ad0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "96e9b3fe-c03d-4485-a35b-dc6a73db3e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f31eb4-7ecb-40a3-81af-fa509a6d0cfc",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c61321-784c-4a4d-a943-9f2d6fdeadb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71f8d75-bf64-433b-8cc7-b34ac2366cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a70af04-857b-43ba-b3c0-a38fd61ad33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebedc1c-12fd-420c-8b59-a8f398c6bdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1c2085-70b3-4626-8c99-67eaaed8a678",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54af7f34-4710-44d9-b839-a688a98eb30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b4b85c-f90e-4f89-a3c2-5bfe15f5295d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303f41e3-8975-475c-b6ff-c230f82058cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14c27252-8941-4bdf-a707-5543e74b5d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd59de0-c203-47e4-932f-3373f67d7b16",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058459ad-0df3-4ecb-b0eb-8d91885305f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5c48b9-7b33-409b-9693-6e713c14dbf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91fa55b-d306-4251-9fa6-9062d5ed35af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25ce9b36-66b6-4ffb-a86b-0f1eb1dfa8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c3f318-d661-405e-828e-b0d924a41d8f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97d0785-8e0e-44af-8d5d-55ab110c6f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd8d515-4a62-458f-8428-e5cb59716f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcf0a80-8ec2-4dad-9d4e-959ac612d2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48025260-078d-4f6c-b558-44a4d26d2200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8c809f-487c-4ba5-97ab-208daa077b36",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4639244-4e52-4bb5-a8dc-8666bb2fe0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708cd4a5-57a9-4b5c-b4a9-810a0aa4c829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989aa83c-b879-4f0f-ab93-6c84367877c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14a94745-c0f8-4d52-ae31-f3c0faddebc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49136364-4ead-4ba1-85cb-8392120f78fd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b1315d-fc59-43c4-9149-bddf131cca18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de7fd21-9ce3-4a5f-9a6d-9a6a34448172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d2e199-9c1d-453c-a738-1687445b2b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "69348177-a82a-47c5-b191-a752f1b08928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc18132f-01e4-4c30-9a10-80a9c4e9e7ea",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a3b277-6a28-4fb0-b680-1273505c2551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85245293-14da-4d7b-982b-1660649c9626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68af8f53-a6a6-409f-bf69-3d5603e7fabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1746de21-ced6-4eb9-80db-c99c3ed6a0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0b9f90-439f-4852-92bf-a84a0adcf958",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d32bc8f-20d2-4a47-b500-6fa512a0b180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7ff939-3735-413f-8a66-13987c84cc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec01ed7d-08d8-4a5e-a8f7-865f94ece152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6385359-35ca-4446-aaa0-bd4179bb1968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17470d5d-a3bd-4f7c-a33a-20a5743f3e66",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd75267c-5469-4256-b109-3bb9a003aaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01a4d20-1567-428d-a143-8c22549b032d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40be1d4f-f574-4335-99ea-351c84faf37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd6b986-64c0-4b21-98c8-b3bf8c0c68df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ef6722-d2ed-433e-ab75-448db07d797c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8c06c3-9c54-41c3-9553-e1275d65cc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c6a7a2-d978-4f44-8ab0-4c9a1392cdbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086e155e-5500-4ff5-adb3-18b18a7f34ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4363b3d-0c53-488b-8b62-b87864135cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4fe836-d0ee-4099-8ab3-9e1f6e2a31a4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a561d38-1f27-4d33-ab87-0d14c0d722aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501af9fd-8990-4167-a982-a0ec42532c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a6d339-b6cd-4d52-854a-006ffd37e2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "06883951-f85e-427c-ba3c-3e30d506b35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1132b0e0-7e63-4d67-b295-69fccda2662d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d1a721-00a2-42a9-b22d-e5c468af0c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a0b583c-51fa-4d39-be4a-13fe3b556325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c937b82-b256-4009-8f99-a71f1342fb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "caed87ec-d178-424f-be70-144a99387999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ecadea-0a3d-4cdc-99c0-af74abba38bb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f63cc46-67bb-4d46-be12-ab444b50f200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fe3ffd-3aac-4f82-9695-d1f8da7cf981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ff5cb3-ea1b-43f5-83e8-ae5a46666043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1e67e5-9649-4199-849d-217d658f9b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45beaa36-fbf0-4a69-98da-1f5921d66c8a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843032c8-0ff1-4310-b0b6-8e3feaf4e0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e7d007-6625-4e1b-ae64-3f068c536541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65575868-4832-4985-a36f-172af90a1535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2f1cca-84da-42b1-9c22-4be34fbf4d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef16c6b0-7f49-4712-9c86-89a10dd42cd8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e74ae33-75a2-464b-9c63-5e7081b30d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551cae66-2d21-4c7e-b825-fc35f9729c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e373bcf7-7eae-49d6-b39b-b07b4729974d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "31181b08-48e4-440e-94ab-7b0f7d889967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e01e974-e454-471b-a000-8815d5996b79",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7877d8c4-4368-4a21-8f0c-aaa35bd34664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079ba163-6843-46c0-92eb-779a3c0cdae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b0687b-6c27-4f6c-85b7-ec21e603f40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8687b88-7809-46bb-bbde-d0a4475be62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3c37d8-416c-4822-be65-23c89cf250d7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efb0a26-ff1a-43d8-9ada-b05a0702ba6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0d87b5-958c-4708-9ad4-5ca5a4567c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedabba3-d4fd-45d0-bf31-52b90d63f1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a43e5f7b-6e77-4ce5-ab25-5970c4b051ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39f12f4-3cd6-4898-90a7-41f88365ff2f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a80e206-e5a1-4f87-a25a-d7f5ff9bad84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f7186e-9885-467f-97a2-14c58535a29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1246e0a1-ccc0-4c57-b6aa-a1c45e1caded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "122b03c4-6472-4b70-a224-18d17942b6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d4eff5-430b-4b1d-8cbb-3bc86d14b4a5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93a4506-ab86-480f-aa3e-5d3b0abf9b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8e49ad-ca7b-4ad0-a749-003186347792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a15bc28-f450-4081-84fb-9fecabbb05c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ab949a-7612-446e-bbe3-a703de596941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3eacfb-8837-4a45-88b9-c2d6760ea6ca",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983058f6-abe6-4ade-bad0-01e09dd85e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161b07b4-3dc4-4bed-98ef-26154e407af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a98387-a23c-487f-8991-d0bcca0a9282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f9892c-3820-4c1a-9b39-73d3ad05867e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f55c25-f7c2-49b5-ac16-208d65a9f88b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c1ecb4-4e7f-4fe3-9c01-42ab3c07a58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c95fa4f-e903-4c58-b4ae-bdc4a7cd5a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365781cf-5d03-4dba-9eba-763f41d2ab39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e63419-169a-4ddf-894e-1019e9cb1b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c90bcf-dec4-4857-982f-918608b88261",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da45f76-4c42-44e4-bc36-4f27f629b6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257c5057-d26b-4580-84b5-a5da19ef5f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a2774c-e8e7-40dd-a3e8-e171252edee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b601ffc-89d9-49d2-b5e4-fe817b1cd02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71b7920-29a0-4959-b3b7-bb1a6f8097c3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96003b38-589a-4fe3-9a81-923ef1758952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad2c366-6585-4772-98ac-94b78cc9b363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2002fad2-7e1e-49cc-86ed-219aab84ae10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c17bde62-99e3-45bd-a03f-c0d903c70c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbfee99-fc57-473c-b12a-886d3b85f563",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bb4adb-bc71-4445-bf13-8da01d7f5a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2b9fd2-9dc3-4a86-bd6a-7f11d8413ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c1609f-a023-417a-91e9-2cda04a4101a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "103b3bf7-6e18-41b0-a7d2-df52a3b1bab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4524541-a2ee-4473-8898-01f20cfb37f7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337bcee4-06fa-4fdb-a04b-bf63d9627c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6b76f0-9eb2-4e39-bae4-f9b11cce6874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db96e5a-cafe-4da2-8324-6043e106a2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1727ea-2c01-4f11-9513-12a15ef451ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1dd798-7f14-4466-a8ab-fc28e430f4e4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8476e6bd-586a-4e39-96b1-af6a56d7e715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e111a7a-603f-4d8d-87f7-bb39f1e1ef30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d11cf4-d894-45ac-8279-6de51d8c9014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22133ac2-5212-4950-88aa-cccf3bd73226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c4e014-8198-4348-8ea8-2ef3816dacbc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730c2cae-6908-4332-ab4a-e7bb5da2f29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97976d14-53a8-4bbd-ac66-f693d508eb08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151f8769-8b0b-44e4-90a0-fceba9d6b272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c3e23a-6b0c-4cfb-a8c1-70c375249e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c85a7e1-c398-4ab8-9a00-7e2b2ab879f7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97196e3a-35f8-4994-a95f-58c6fd6f8519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6695c664-1728-47b1-adb3-88bf987429c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b216a3-ced9-42bb-abf5-1f5e8127c6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "29ad837e-6495-49d1-a6a4-116001b666b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb642f8-111a-4076-9fba-34e0d4bf9966",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7174af03-0565-46a5-b7ef-9acbb525d8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba80ed8-c2b5-46d5-bdcf-908822102522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e547ad78-a121-4049-9089-96521ff99e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e15c89f2-6216-4d48-9242-43f2823b0318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c44c11c-f963-4760-a906-f410ba4e4ccf",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c391e2-7759-42a0-9108-7b83465a27fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d4fcde-eb3b-4180-9fe5-7aa333c36e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b516be1-0a27-4a48-99c1-0416475206d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3649e0c-1026-4567-a82d-050d25d6baef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b20571-3578-4bd9-8a1d-0e7090b5f0cd",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff82aaa-c0b3-4457-ab9c-cfa099815cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c0110b-d411-4370-952e-1dca8813d4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2a6a89-a78c-4b3a-80b6-05b64d5073a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1751c635-5db8-4053-9b55-e527e7b59874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a93642-313a-43b6-99ae-3b86c17b5f42",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d27d88-49a8-40c2-933f-9e792484fd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c002c3b5-4356-478a-bab4-d3cbec94dee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0ee018-0ab4-4746-a020-bed0ee576cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "38ab9b8c-5b54-4734-9306-afa42b673797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc81936-19bf-4c93-ad40-17ef805e93fc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecb8dbe-a348-469c-b59e-85139f07c9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e216c6-3c22-4f57-bd99-9e6e5f352153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc88d6b-d5e2-4a15-8941-5d424c67efe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5841c820-fcce-4a97-bf21-b46d5ed9e064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa1bd6f-6a42-4ec5-bc65-ca0e042377db",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2d5d5c-eb3d-4c81-9e76-0804db17e0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8f4160-00b1-4873-b106-421bcbf67f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805f7f81-89ba-4a52-addd-8d274a087af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "16701371-eb70-4216-bbf5-51445f34fcca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21741bc0-68f9-4a8c-950b-699c8a16b4f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfca48dd-b7e3-492e-b86f-b7eb34601676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c692a9-3773-4c72-9184-af37ed144844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7ca3ba-caca-4b76-98f0-4d920d4632b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae69ff55-3e58-421b-96a9-82a537ad44a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38c3010-53e9-41d0-93ad-06231fb77a8c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc6455e-7d57-43fd-8bd9-73d17ca85e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e42909e-633b-4e43-9921-5d8676ccf99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f99a3c-3ff0-4c25-bbf5-e21bf65d22e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe173f8a-452e-48ab-9d42-48efba5fdbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b89865-9c33-4730-8a26-4ece27b83357",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f49ef52-7a8a-4c61-a0d5-67f5e3d441a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc3db5f-a7d4-46c6-876e-cd887b0bb5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6893feee-6356-4629-bcdd-7885fc1a5929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf3fa85-50a2-405d-b3b3-169f4ff0ea6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b701e05a-3300-4506-910b-e6a853142dad",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a791964-e7b1-4e9f-abe8-5490fe5753f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a400e2-43ff-4918-bab9-bcf033ff652e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86979ad-001f-490a-8967-cf7f57080df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea9a24e-18b9-46be-84a9-c4c3e7152531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7cb922-2d1e-4544-9f84-9080a8f38633",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4986979a-c812-462d-909c-58044fd0a2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ea4be3-a4f2-4542-a5fb-736dbbe7a630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb233d26-2675-46c7-b07e-7fdb59949827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4657a3f0-60cb-4337-ab71-513841dfbdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca6f975-7160-4d0f-bae0-6ed6a29a4b22",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04e13da-2fa1-411d-89cd-12f44753ab46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb11245-5a58-4831-ab32-029086048cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00e071d-764f-4977-9407-26c85e239501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be39784e-c3f4-4bc2-8851-d169211e606d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0776ad3d-da88-43bb-99d6-14d754f63a90",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb683137-f4f5-43b7-af15-512650366adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919e68ad-7020-4e9e-8220-e0ad28e8ad49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d8ae39-cf1f-4cb1-9925-bbb3b74834a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47005910-4905-414e-a2b0-156a84448e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc1276f-c19b-484e-a1f4-08f0d0bb51b8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aacca34-8b98-4bad-818e-b8a133551daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee7d948-0ddd-4c0e-b537-e607d2dd6ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d26efd-7aed-4114-85cb-e15082d02570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d27b21ef-58df-49ae-a984-32d0b83fd0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfdd1a0-7ce2-4206-add5-4cad8f0bab8c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f0b969-f8b0-4b6b-aa3a-d604a3ffc1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d17f1a1-713b-49fe-95cd-9c4edef0e60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89f7660-6f35-48fd-bddc-04ffca22fb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0378c755-dbf2-49df-b6bb-af3c515cd398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5167b9-6a78-44c3-91e7-ed13d5aa2a62",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89175ac-1e1b-4886-aa5a-e6f309b708d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f00425-2b01-44e1-8d13-29b0afa29d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de0c90b-4701-4bab-92e4-8d4264df212f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b62dc0bd-4e7d-48b9-8630-c1e3a6eefc1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1747e7e7-99a6-40d2-95dd-c619cd876d42",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0e8c51-c495-4572-b6fa-0f7422863059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2ab26d-46fa-4877-a6bb-34d96fe002e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfa666a-0076-4d0f-abbb-0e9ad53cd03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "03b42496-7a46-4cb7-abb2-e197c70bf59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41558085-072e-4fdb-8d13-5d457aa61086",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2595a4-c359-47a0-83dd-0fed776b05df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d04420-117b-4f10-819f-7799500a2542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfeb9c48-753e-4fcc-8d95-983a828886ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "578647f4-cdb5-4e95-8744-d95eee4913f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdacdfb-017b-4b93-bd6d-246d1228f0a5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8a02d6-a019-47a6-b043-66a168d38eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e852ac6b-4a74-452a-a772-58f38d8aae47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660e7005-664d-4cb9-bb34-2b3e257f9998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1ccef8-a8b1-4a3f-95d6-2b98d06d52cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f3c2ce-3bc6-48ab-833c-e773a16bee03",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6110c16f-c186-4f91-bec4-4fb1d8a1612b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de2addb6-4341-44c0-bff9-d10a8a0103d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7118c02c-b53c-4541-9911-b843401e879c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ecc8da7-c445-4003-96ef-93dd80378ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9787dd1a-1359-4b3c-8b5b-f3a03e493c01",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92524b92-5b4f-4574-9d2e-d4d8411e94f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94458fcf-c9ee-462e-900c-d4f3c79f341e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cde305-a341-4087-acc3-197a071766a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3b25bf-beb7-45b1-9ddd-42826bcbfaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58502018-d5b0-4b0f-b447-608d0545b391",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6f9780-9e51-49b4-aaf0-f374ede258f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbc9d3f-55e7-407a-b670-e0a213b62238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518aeec8-f4ad-4040-abc8-947fabaeab0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d84dc4d-a753-455c-86ee-7997e5b31cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b8f676-ea62-43f1-b197-f820ce08db17",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da21b1a8-7d4c-4075-a4f1-b00da840ad23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d9f445-e082-4a42-b950-0ad6749d07cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3d51b6-e597-4682-97d5-60944e7da8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "624bcf95-312e-47a5-821c-49973e237076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2270dab1-3c0f-4fb8-bf34-ab0ca297c63b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262e2981-6d8e-4b6b-9b8e-492e4983f4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb45b61-5ac0-4778-a8a2-24af2fb24ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce996ba-de4a-4b12-aa67-1dc34863dfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe8cec0-28c9-4443-9011-1f692fdc3cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a0c1a9-7417-4d0a-ac43-236985d0b902",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5fb7a8-15d2-427e-969b-56ddd93a3d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ab2bed-f510-4f22-bb91-414347c718d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21ad0e9-7a86-4d6b-badc-650af44fefec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a5560c-f9d8-44f6-8e51-9715c699ac39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c03143c-a6dd-4a21-918f-e77277b3c030",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf46c3b1-cef6-455d-ba4a-27fbb3932fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407232f7-ef37-47a2-b87c-e6f18adf9386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacd51dc-5d2c-452d-8210-cfa2bf50e89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "857a41a5-b120-4466-85ec-a1ec701ed4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d45cc3-f7da-4d5d-a708-c76f24a4d4d2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554fef07-caa6-4bd2-bf4c-81e0aefaadc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6058d3a2-70a5-4429-bbde-91710e120cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e822f4-a4e1-4d3c-8e1a-d53bd5c16c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2174b728-a755-4bdf-91ae-6508c7915277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1af6bc-3b0d-4a37-bc74-4a1e40b8e803",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89abd1c1-bade-4bc1-a225-1265b10d29d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19ed995-b48b-4c61-bec2-9308f35bf07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fd0418-680e-42d5-82e8-c694dbea1241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0dd0a35-20a5-482d-9be0-f799c37d0d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76fd052-769e-4c43-9a35-590dc609a394",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51f1f1b-90d9-4bdc-836c-dcfff84b83b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8cef79-01ee-4079-b42d-abfb1e50a62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f88474-4881-499e-8ad9-805cdf1f4efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19c35759-e896-4ada-9407-9257a7f9fd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7097f1a-ddaf-44f3-a36d-432b6730cce6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c884fecb-6b1e-4890-89db-778a9b1d05d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3d4f44-56a8-4f18-beef-c46fc492cfaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1686d7e4-a1bf-41ca-b042-b0e759869135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03922bce-140f-453a-aa45-434f3a01c6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fac814-cb7f-4954-87db-319ed1396fa9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eab76a3-5ea1-4ed0-80c7-c3878c1c253e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b287d2-3070-4cc7-8788-2884f78d3c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b72fa6-89b9-4e62-9275-bd15f3b69fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db606b42-ee68-4c5e-ab00-4712b74cfaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666a636c-1bac-4136-8257-938bba5e15a7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4027f0c7-5f88-4fa7-9cc4-8d44878120fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415974fa-cb3c-4a76-8456-7472552789d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55b61b2-e5f9-4098-a3ca-269ce92fe5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4562e9fd-e286-4bd5-b8db-e2aa34bd0e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da157dba-4c11-42b6-9603-300b8b6c4e79",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e2e1dc-b81c-44a7-85b2-fbb4ac23e3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5666fbc-3797-4b2a-8b6a-69b977626b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fed48e-c826-406b-a960-71fb9658923f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a2ab60-fbef-47f3-a895-8d49b74ca7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf178091-dfcc-4c38-a082-a26dbb4ca18f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bf8f99-7649-43fb-9bf9-ef78947100bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd359c12-149f-4494-8c8a-c892624e024e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07136c74-366f-4700-8988-07572796c26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0e1d18-32d2-42eb-a9d8-c2ff4ed42edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdf1361-20d5-449b-898c-94bbb439664b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2079b511-6b43-4c33-91ab-43feca2ddd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8d2476-0884-4259-bba7-086e60985499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5d7a8c-10cd-45a6-9d88-a16188e3ca12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5a9694-8a59-4739-9e1f-c8d9483df7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3b20f3-23ec-459f-978b-05d5e4f6edef",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd15742-d093-4c42-98b0-204c3d2c07af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef8c27b-c36e-4503-8af7-87cec1af6940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73acea15-3472-4f63-9e9f-4c0df63415fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f26a796a-eac9-4c1e-b960-310f0a654dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdfeb7f-0cfd-472f-bd47-b1ea9014823a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8495695b-6335-47c9-ae7f-831210675af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dee44bb-e8c2-4e7a-8d69-16e1967054db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c365717-1231-4e57-88de-f2872f011d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "66138d55-b45a-4129-928d-e6d8ed3ab8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e28ff7-e1de-4359-9ebd-9d886138e692",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667921a2-b609-4a8b-805b-765f76f5b7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea1b91c-c96f-4eb8-88c8-e6f8e0620e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41d8626-15c6-41f4-8c8a-a81094e801ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "16bb218f-880e-40ad-986c-9fd29fa009b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b99184-35fc-4620-929f-695a9c92334c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59326667-7283-4e7c-bf3f-45c69588ea7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7373870-4c57-4e37-bb42-5d932a73bcda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7d37c2-2597-4278-9328-c1e9a2517eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "12966490-49b1-4327-b77c-75927ea18298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6645ec78-7112-4ca6-8275-e8a104befcbd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7d0f9b-b622-4c62-ad5b-859520ee3b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f0225295-5168-42cd-9e01-c951be3c77c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34259c41-17a6-4068-91ba-856ad3f7aa3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "64ee6ca1-de2d-4df8-8231-20719d8eb44e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d2d1147-400a-4e1f-80ad-d027d080119a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56f38ee3-9102-4ed8-8847-31eb4589b970",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb7c3c1-75e1-4af5-88ac-aa3671824177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68e98d80-579f-4c9c-b66f-9c995764bbad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fd126f-9479-4779-85fc-ebc0d8961f86",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2111db6-ebf9-4a17-8318-bd198b9cd879"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "385b1bb4-c167-48f1-a9bf-032a48564e13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4d67b21-98ec-411b-9f98-80a40cecfe96"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91bc04c2-6f49-44e7-a177-54284a76795f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78c049c0-46c7-4429-a296-95678485a372"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ccc4edc9-2ef5-4385-8582-92202fe1072f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e3bca24-7101-4153-983d-758e34bf5f48"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eb1c2edd-7e3f-4ded-9718-a25f9c3769b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae04d9c2-a358-4f67-85a7-e0ea138f85b6"
                }
              }
            ]
          },
          {
            "id": "a57c7f5f-d117-485a-9a12-a4d1ea7a24fd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d5b6792-b9f6-4b7c-b75c-58028d07ac26",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b0d33ab1-a428-4c5b-a1cc-696ca8c748d9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8abd74-ab8f-475c-9a36-ed576f792e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7239e271-0c04-4704-9dd1-104cf9b4f65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0e17b4-8874-47ba-b3a7-a727a6ad45a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b6763d-ca53-4e58-8901-b93918ebc6c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ced4f3ea-4f21-430a-9359-7420e1126cd0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e35bcd20-beb9-45e1-a4ac-f98d0b8ac3e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f4ea730c-29bc-4b3a-929d-5e194307c1ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3efb60d4-d677-406e-9e83-a4c77a39707a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cc7b133c-b039-43b8-89e2-43227827c266"
                    }
                  }
                ]
              },
              {
                "id": "6bee2144-c0ab-4302-80f2-a2d3e86c4322",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92be1f82-7177-4971-8018-846d3fa4998c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "10376d80-49b5-4ae4-b259-f82e0955923d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c547c41-547e-494a-bcfa-98d52cf2bcc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "222f00f2-06f0-4a6f-969e-750267faf114"
                    }
                  }
                ]
              },
              {
                "id": "a9dda387-0ef2-4f5c-9c16-176d203aef24",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e640e38a-df1a-466b-b5b3-d120bb4e3053",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84a3cba0-09eb-44d4-933c-7cf08c6c1b93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "737a851f-bb81-43ac-b344-762781b9ce34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "11dfc9ab-4f08-4d11-9521-b89b7a031c22"
                    }
                  }
                ]
              },
              {
                "id": "74de1849-69d1-4a32-be7e-47fc70cfa631",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc53c2d9-ec9c-428e-87f8-c86d871deece",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d64595e-355f-46ad-b9da-f42e590bfa5a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a1817b5-6a32-42cb-b396-6217cb2c4f10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fd044c93-8ca8-4fff-88c8-95ffcb4ff621"
                    }
                  }
                ]
              },
              {
                "id": "039a0fef-5998-414b-958b-4f4ba5a930fc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "efd99e44-b39b-4836-af16-2562c965a366",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6fa0c3e9-3f33-469d-bc90-29e5e43f790f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ffa2f3a-57ec-4c47-aaa4-13071acd2c7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e5a16f57-35d7-44c1-893d-50cd1b7bdfb5"
                    }
                  }
                ]
              },
              {
                "id": "0ba8d295-168b-4cea-b897-61996a2c3570",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e43b2f72-88f6-41ae-9325-4f6c38072e55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84cd6a19-23b8-4ac0-a3c5-a58d133952a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a129001-400b-4fdc-b8cc-6ee026d44ae7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "db4b9b63-4f36-4e95-81d4-5676337fcf34"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "08986378-41e6-419a-a051-00bb5c58183e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af0a55f7-2389-4903-9796-2b55f99750cf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ce474639-3d6e-4555-a43a-29ab6d0f84e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba2e9d37-cc19-4bb0-af06-f3fd95b0ee2c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cda375d0-ccd0-45c2-9c00-fd19d468cb5a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f86a1f6a-9eaf-4b99-a005-bf9d381919e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62edbcc3-7299-4e07-99fc-216025beefc1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3e841b5-d0e1-4a66-87f1-42e524dbbb8c"
            }
          }
        ]
      },
      {
        "id": "bd66e6a4-f6e5-4dcc-8fae-cb1d71b41157",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bb90b44b-13a3-42f1-bc4b-91b7c3250ed2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15179222-6143-4609-9169-8f9371d2709d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5d010ef6-fd58-4f91-862f-0fedb7ce5b7f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfb2a85-e66b-4602-89d0-1d0c44eaa672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9baf7a90-c40a-48e9-ba1a-3fc7574dd29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5359f2-5008-475a-a18e-35f100b411d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "57be1d9f-3869-475f-960d-abfdd0423dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a008a126-4e71-4bdf-be32-a13890521658",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00479b56-62e3-498e-b4a9-84235ce71ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b08fc8e4-0205-4102-9150-fcd979620a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dfb6d1-94b5-4a76-95c1-0af9f1849236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d128dec-f0ef-46a9-a5a3-95ef6467b537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1625136-075f-48d8-9c43-15c1d386654c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f6de61-d042-4d30-be91-2b4bc2929246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ef579c-7c38-49f0-a49a-b0a3b7adb7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9821d38-fcd4-48db-8249-96f15f943cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f434b96-5cda-40a6-bb16-56d3b5ab9134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e020f0-ece0-4a63-b6c0-7c3b4415a89e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6d86ab-afc9-43bc-acc4-6c59a16e9a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c435af74-f839-4286-bc65-45457aa26bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b73e08-ac20-4fe0-998a-4a726a05e974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e9eb184-d734-431e-ab7d-c4b109683683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861ab1f1-bbb3-4d34-a1b3-1887d4665d1a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a020dae7-577e-467d-ad5b-0b2783ae2702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b741b6e2-4f69-4fb4-af3a-af2a45c0e00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d493734-a277-44aa-add1-542f4e13c303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "782cdfce-fbea-4dc1-9e5f-972e274bb08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55289aac-c154-4f19-9882-dc2760f00463",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadcdd8e-3dd1-4558-a166-cf02f9f7ef3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5da358-5041-48f1-bc65-32a584d71221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09cdcb5-b71b-4381-a287-89d8fa97e4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "779b3ba4-8306-4edb-8e1b-9ae7b5117a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a314da6-56ea-452b-8819-a212b543608e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5009458a-68a8-4014-b68b-04cc66ffb5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb03810d-b152-4114-99a9-a7465f05e43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06eb0a2b-c211-41dd-99f4-47921513bdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "07bdb346-9f5d-4259-9544-71bd939fe67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca826918-15aa-44a3-a739-446330c8738f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2381cf3e-eacd-499a-b22b-827e015b155a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ca846f-7fa1-4e50-bc10-34afce1714cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9579f4-d7ce-4e2a-ac70-c63272fa5083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89de080b-712d-49c5-b88d-aa698ddcfb80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35f2b4c-82ca-475f-b28a-6db1ed8b63c6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5c2ea3-df1f-4b7d-8bea-3edf5068c7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6cf43a-7d4e-4587-a105-09e8f9416b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534c1758-75e4-49c1-866d-0f807174348d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c480056d-a865-439a-b7c9-925674492041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f58034-4658-437c-958b-400c34de8a05",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265dbcb2-3930-447d-99df-cc10f4cb5af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49cbe95-ad72-4beb-82d1-1821dd47e29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6478938b-572d-48cf-8db4-587d8d451e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aed90eeb-40d6-41a1-89db-89cf697257ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c98d25-3517-441b-acbf-c22f270c971b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185c514b-a92f-4559-b5a9-c6aba829344f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff74723-4d45-444e-b247-9c4251541181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b22ec3-79bf-47f3-8837-81af1709c7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "69703bb3-900d-414f-95b7-79c30552af00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3427bff3-863a-4e84-9a36-674e24f59862",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457d67f8-6c74-46bb-84a3-badd5ce12434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db55040f-4bd6-4e8a-a6df-5a2cc53c1ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708f003c-4c93-4e67-97d5-527c471e196e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76f5c6af-8eb8-41df-bd11-99bfb6459563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21f2872-5bbd-41a6-85a9-f1e5821cc3d8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b98c51-7980-40f7-acbb-47634a97f2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ced74b-acb0-42d5-9907-887b070479bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14f3630-993e-422e-908b-a8fa2fc3fc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d98577-e635-415b-ae30-bb13744c25ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127f3c71-72ed-4ecf-a26c-b7dc560c598a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d766eab-8331-4e69-bd90-bd491782a2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5543af-5511-4d3d-bb1f-515455771b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d45e2d-5d56-49ac-96f5-ca7615b0101c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2baa4395-ef53-4b30-acb4-1d64d1dc1e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c27238b-de8e-4165-b3ca-23748e3f5806",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d9d5af-c871-4a0d-9fcb-c6f65221b5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3792a0c-c09a-459e-ab23-7d026a40d61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d076b1d2-4b3d-419b-9b79-54364d60e53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "557815f8-2762-4dc8-8863-17f938150ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bfc6c9-aa81-4521-89db-d2014bc9255c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a155bb-45b8-4302-9ffd-2e79677dccd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7528c4b-4346-4ed8-8245-8f5b0fb5b538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdde9e90-6e8a-425b-9076-7e28616b76b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "62c43a48-89cc-4f10-8ce8-c47ac850d287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c722a4-68ca-4de3-93e4-6e63cb4b1eae",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c347af0-aa82-4bde-90de-2ed0810a935f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c16199-8c74-4e82-9624-5bdcf6691889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb38f78-110d-4e53-b6b0-cb533ab4b7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d2b47b-a5d5-455b-b1f5-1dade8079a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4f6e96-9809-4b10-bcf4-7e46c8490392",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46843dd8-8eb4-4b0a-98ea-daf305305a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd4f18a-1692-40c8-b233-fa05f8d7e1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2d76b9-90d1-4e30-967b-ded845916986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc5f314-27c6-490c-afc0-7be92a805da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f850679f-ebd3-4500-99f1-97740b8bb202",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49025b2-e7ed-4857-8af8-32b4f6f15e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01982015-7623-4de6-acdb-9449ff524bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d139ef-3846-48cb-bc4e-836668354716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4127806e-8ded-446c-ae38-c3999814d7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288b6d5a-e012-46a2-9c85-8b040b0dd816",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab089a4-0375-4866-9204-6f48d708e874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e56f9ff-281f-49c9-87d6-b577d54406bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36327ebe-1a1d-4b0e-a9bd-368a82133a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3df3dd5-dae7-479d-9740-6bc5054a40a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40363fc2-258d-48f5-b306-c7fe45c85cdb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcb6840-92e1-4fbe-8889-a7682b2c6033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ebb8f12-aee2-44b1-a2ef-8164d464c760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e55d1e4-84be-41c5-86fe-deb2c5e734d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22d521dc-4a7b-440c-8985-8aa21b939a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90c6f1c-33cb-4b63-80d0-4ac05b010ec0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc8782f-4846-42d1-afb2-9366cd4827b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1365de8-74b3-485b-b0ff-5ddb987d27f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf59d2d-c77c-40ab-bfac-7c7d1d41bf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61553d26-20ef-471a-a148-72d3987e845c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b78c518-08b2-40a4-8cfa-f89a867e486a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258f4d7b-68a8-4563-b95f-7cd65fd5da98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de5a916-084e-499b-aa5a-15e16826a31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8bdf2a-5a59-4b7f-9362-c9227e82c033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd8dad1-de7a-4274-b059-218b62ae73b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab8bfc5-62fd-4cbd-8bec-fda3efe0d955",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a716591-9e1d-4be5-b92c-7771c9f87b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dba5c95-783a-4f4a-8ec5-6084dc8c5931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f667ae-052e-4eab-89b7-f81b18bf7700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7739df12-a92a-4d80-b62c-b8aba12c5965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a436506-7afa-427c-94de-9d54b0bfb1be",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2df4c20-e625-4d26-9b5a-456db6804e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6991d4e5-e1f0-4d09-b2fd-f55daf9c01f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b287f22e-6c52-4c27-b2ca-1dea54e18c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59be262d-a12d-4fd0-8925-52176abbdfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e8ea87-5903-4c6b-b401-12bbfdf9a127",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce337cbd-6944-4f2f-aa9c-4373936d4247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e03a68-c22f-437c-b723-eb0103d88a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb35afc-f027-4162-81d7-88eecc2f4158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93289f03-30d7-4c79-b944-e4169b3ae9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8dee79-e09e-44a7-bda3-263de7f680cf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0235fce-58c1-4a0e-a2e4-3a039a2234a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f1dc2d-f26f-4c07-b936-86c23468df7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cb678a-1f14-49a9-af44-a56d0258aede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b782857-52e7-46ec-b970-8a5c099c2b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b56b6ed-7cbd-499a-a9e7-129cf07a52af",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bf5130-64fc-4b74-b62d-5f8a3e94fa41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4ec7a2-87e4-40b1-a72b-6d2884fcbce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74979fcf-86c8-4f27-955b-7b063c43ba8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6af56e-e9ad-4145-b9a3-4b9fcf64a287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9ecf2b-7247-456b-85b1-3dd3b6f5e663",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e931b4d-4296-4a40-85ba-f71aa6bea52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1f6061-632f-4af3-b2d9-f47e3730e1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad790b7a-ac33-408f-8dc8-14c018d19090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29512991-d7c7-48ec-915a-86832725be2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d055e2-8717-4bfc-9f29-42ab381c8351",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb8e4c0-8969-47de-bf85-a0da98bf6706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f9f52c-e97a-481c-a14c-1206ff46c802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10080170-fd9c-4b30-9825-57782b3868c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06c549ed-238a-47c4-9af2-53e0c1a1634d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82724e9c-028f-4667-9e1e-b417895d6599",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df765ba9-255a-4348-9609-a96215d9f65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449d4e57-2daf-4e9e-9cfc-6cc7ed1c473a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e35af3-f2a4-4c96-adf0-817537ecc730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6dbd62b-c0cc-4eaa-aa76-079cf60cacce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472824f3-4721-472e-9093-b00da1dc17a8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cbd27e-e136-48ea-ac70-3e5c7bb747ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3aaf77a-d3c0-4566-8431-68bc2a777809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc24039-3c01-489f-867e-9cd64289719e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ef13cb-15b8-41b6-9fde-ea136cfdf66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7321e94b-1b57-4f89-a145-cb7ba55002ca",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c505db94-0201-477f-88fb-bf44e07df457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35dbdeb6-408f-45ef-a981-326c1b7c7807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b08423-4d71-46f8-921a-1f6785b04f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "649b43c5-2222-4cc5-890d-3148c6723eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7e0246-b536-4e62-ba10-fa1cd1cb734b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a6bebe-16d9-410f-bfe9-353cec2f3758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7daa33-843e-453c-adaf-b442d594a798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efabe708-edea-481a-be34-6df5f1613c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c55723b-733b-487b-bca3-822ba0468cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe1670e-76e7-4fbf-aa68-bde45bec890c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4a4237-1fef-4d18-9914-50a472651561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd61703f-9cda-4269-a747-c752ec77fd04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b016f0-f813-46d1-ba38-9804bd9084ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "688e7ef1-5eda-4dae-8f6f-513c9146b707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c6c153-313a-429b-ac09-9389bd64d6ee",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559255c7-3770-45fc-b8cb-6fc77ba472cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23c6474-c92b-45a1-bf4d-23c963fbd03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5279ad2-5a23-49cd-ae98-5642c630141d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cad7fef-fdb0-463f-94c6-7633f30e0b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da5c2c0-05f9-4a64-b6a2-175f03ac19c1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554102a1-657f-43f0-9be5-35464a53885f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe4ef1e-9284-4eb1-93ea-5bb583c0a5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f0f00d-ccba-4978-b603-2dc089c224d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a07475a-f0a2-45f0-a8ad-f26ef1f8f70a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "249fe82b-0611-47bc-b9da-1a702ddc4f11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14dbd21e-df34-4e6e-83b4-94f880b648b5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4725a8-f871-4a52-a583-d20f5676e3e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e10dd177-32af-45cc-8a0f-02ab5fb80da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "921d3bca-e0bd-422d-b45b-823fff1ad2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad4322a6-c65f-4dbe-b607-e594ee26b87c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92d2924e-3db9-42cd-a62a-6fe0da4f7464",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a51d14f-23a9-47f5-ba82-9959e49518aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa04bccf-6cea-4636-9960-7024c132a231",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee3569f2-2c7f-43cf-8246-05606c8375b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9618addc-c0ba-4d29-a4e4-7bd1b50af81e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f2e3f94a-5cea-4705-814a-22b91b733227"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf1152a1-b11c-40f0-9f6e-848afdaf9c70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71b2cda7-221e-48ea-8b4b-df5f78fa84e8"
            }
          }
        ]
      },
      {
        "id": "e8ecdada-3761-471a-8cf1-de9b506580f7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "dce04380-9974-4ff9-8ab6-42d91ef38e9b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7aa6cfb8-2945-481c-bf9d-799818811f44",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5056b2ea-02ef-4d86-be81-3f23ac7ed151",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7948cc3-c091-4f13-a4a6-4f17b0df38e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c78514a-e11d-41aa-895e-4d3bf37178e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a8130f-01f1-412b-b3c7-835f3d4a8148",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab0c3e0-4846-402a-ab4a-bfc76a94e8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67669e2-d295-41c4-b84a-97de591484b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e871824-d65d-4962-b55f-c6b8a9c60679",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874f6f2c-2282-4032-aaee-84408a54ec45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e020ad9-731b-425c-b57c-1eec2bf5394d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3542a59-17e3-4b68-8d83-a41b571c878a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcef8be3-29f4-4dbe-a1a7-14fe23425d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127e6bc7-317b-47eb-b68b-f08acbc9f9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d01169-53ba-40df-b37b-c03605a786ce",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc7a4f7-15b6-4bd7-b03c-a127c53a3c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e8f51f-efde-4f3f-b94a-d63be931d479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4878cb69-4c45-4c10-b073-2d013fb49e36",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcc05b7-caef-49e0-a16f-aa6000335fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100c4d0e-a29d-4cd2-a7db-cef76adc8418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db401ed9-656e-4b05-999a-ef0f7c90a548",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa0df5d-8c5a-4135-8b05-8f161368c6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9bba768-2867-4ef9-b021-587a09be1380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99bd2e6-3889-4f91-81b5-98904e4d9707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78a9a9d-e129-4b35-943d-8d3811a7976e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131d7958-5fd2-49d7-8fc3-b8ca8d7b46bc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db8f440-21e0-49eb-ba7c-24b5f1a73cfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e383b28-c5f1-4761-a28c-38e0a2e7c1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b22ac6-b5bf-46e1-984c-a7eb8af7326d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087afac7-2d4f-4c22-9004-3d28e96581a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc60b7a-1a6d-4a3b-bbea-05c75c1fae45",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd5c2c6-f67f-4a5b-afd3-4146a989df41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "376188bd-4bb1-4848-a220-1fcf9592816b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba40af6f-9df1-458f-b363-d035662838cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25bccf64-ae70-44ed-8a8d-b2b2e3e0918b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686b9463-43c6-4037-b104-7b8b649db3e5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf95beb-b88c-4ca8-8ddd-94d046eea814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "650c2e5b-e6b7-46f8-a6f3-965becb91a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae1164b-0779-4c00-97d6-940aafbbefd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36489700-4c2c-40ca-94d6-b21e72f5bc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b24a49f-fde0-4ff9-a63e-ecbcf71d5af8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7db436-0591-4013-b2f9-c1f98193e373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70939ce3-e671-4777-8853-b28119e1dacf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec9e681-265f-46dc-a20b-b67d0609aa20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e2563ab-5c60-452c-bc81-10ed14191342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a04cf1d-5323-4aab-9772-4bd0bafb298a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1289001f-7dbe-4b17-99cf-52c0f45ff304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be6752a-3c58-4178-be02-8ed35b74fe25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "586710da-cb93-4ea9-b368-7dd0aa7eeeda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fac231-b93f-4a7e-af48-9aae3cbe99c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c38be9-ff8c-4ab1-91e0-65292be4c9b7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88d2dea-8b5c-4ede-9e4f-024da7ce93cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53e1fc3b-7e83-4960-97f0-a2371b4258be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d68488-4dfd-4948-97a1-62589843ec62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9bcf53-fd34-4fa2-975d-9a85f7fa922d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1e0fc6-916e-40d9-a2a0-c92ad47952c2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a20aa0-baa0-4a14-88ab-0120cb4bcbb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d63b9e4c-826b-4eb1-bdf6-6501a3bea64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81b06f5-6dfe-4f25-bcc7-f61947f7757c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149f0d09-53c0-4940-a7e5-61eb7edff8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdaab26d-30dd-47a8-8c7e-19e58fa061b2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8d3d00-7f64-4800-bd53-492d6296aa09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48bf8f9f-9661-4a6f-8114-00703874f10b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b967b4-9daf-428b-9253-31e67ed483e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535be5b8-fffe-44d7-8f99-2f989e160a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2419c5fd-254b-4a58-b8e9-b1c566a95a38",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0829c6-4755-4ddc-bc0d-907022d7709f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d2cbf45-dd0f-490f-81dd-4b41394c5aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735ebddc-6a57-4a34-8f63-1e8206cf58b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88674eb-932e-4356-99ab-c973b537ca9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8fcc15-973d-42f9-9f1a-4df48216c87c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013f8cce-32eb-4d5f-bf0f-d7a4afaa7e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92afb8c-ee4e-467a-a928-5fe756335094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b699d75-bdec-4004-af30-a5d14905c1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b245f84-295d-4af9-8fc7-cbdac0e11b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0971a32c-7189-4f01-89ac-387cc3d00c95",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6187746f-c1a5-429e-bfef-d21a383759c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4506563b-48fa-4009-a9dc-24e6dae0701e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd14b40-ca16-46d3-9529-a4571a73511d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8731eddf-097b-43ff-a229-160803839c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753b93ed-c4a2-4326-bdf6-580cb2554e83",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b5506a-aa9a-4ab5-a504-ad960ff01ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72698c6a-60b8-4f7b-a2cf-680ee85465b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75825e0f-3f70-4dac-9d5d-9459129bcc72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c70fb38-34bf-4d30-8f25-89277d7821ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797deb09-9bca-4f9a-a49c-4362ba96b01e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d35c48b-646e-420d-87e7-fb0165defa2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a675cf4a-4320-4195-aa73-83da02cd4135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbbc428-a40d-4d3a-b533-fb492394f217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f0e8b0-9887-48a2-a0f5-4ea3b72ab281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36323bf-4f3f-4ada-8ef0-e58518f5a76c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea71295-e4d0-47b4-ae7b-a4a2da77b275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45243fc1-41ff-419f-b646-cf366f2733f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac1cb39-607a-4339-8a5a-6a37427031d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d19904-5949-4b6c-ac11-5f71a059a66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5de03a-b8f1-460e-9386-025280612cce",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075f3f30-07ad-4245-8985-52e1979c1413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6efc4dba-0247-44d0-be3c-ee1f33095078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f10897f-d34e-492e-a576-8449695de191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453f2999-7e5b-40fd-b0ee-346d0a2a140b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61e9c9c-87b6-4482-b228-a4cd54c678a6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257521af-002c-471c-b6e2-a368cf18fbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27273602-c6ca-448d-a7c9-3719f67b8936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0872053b-8b78-4e28-b549-dbc6a7b74f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814d450f-5d47-4371-8942-afaa7cf0b2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d5c733-26f8-497c-af0c-878dd86a5413",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e10bcb-87ac-4cd7-9f6b-f387bd394c1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "809f0c41-5bbe-43ba-96b0-366650c506ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba98c63d-a916-4ede-8f14-f247ab3537c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40e03c7-d7d8-433c-9fc9-9d15d8329ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1e6916-f6de-4eb3-a3e7-037a20ef8595",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f32335-b0ab-4d9e-a74d-c6e300d84ddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e2a9eb2-d019-4996-8b57-8f9b9fe481cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76569cf9-476a-43c3-b464-5dab1e4af8a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf125682-aa5f-417b-99bf-1451d2f229d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dffe65-c2c4-4014-8868-84b2691efc14",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac99e2f9-5f0d-4510-8053-31be311c1831",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4ff796b-c646-4d5f-8303-e4fc1fc4d6d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1412f9d1-5e74-4225-bbdb-214a42759571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e22a73b-0c05-41a0-9bb2-43c6fdbd749b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c57f8ef-e524-43e1-b488-e09025f3d3ac",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8c8233-fe5a-4710-87a9-6254d9ecbf4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c88cad3-a3ca-4189-b016-191114ed83b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce125d7d-d5ce-4c06-81e6-6cc60734e95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e2c77c8-4379-456e-ad1d-d9f72488766c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db39ae6d-15bd-4883-909a-822f81fddf55",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c1c1ee-b89b-4861-afd9-7d403d536175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9b90ba-5aee-421f-ba01-b3b17dca8db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37af23dc-4ca1-4e90-8a5a-22b02f214864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6223f2b2-a69b-4d3a-84a9-1eb83b4c7a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17492f98-4de4-468a-842f-f2070d100912",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4d90c1-3936-4bb5-bd85-93c8aee4dbe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf051736-c769-4180-b6da-f0d053e513fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec689eb-7340-45c4-a26e-a8c8d82be02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc1571f-a883-4dec-bc87-4fc23093193b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86aee81-1ba7-4fa3-9698-e75b6592f856",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cc742c-d9da-4711-9dc7-921470f33a27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4fd1599-baa4-4d65-bc9f-9d45f1385480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028f3fcd-c703-4d18-aa5c-4fe8f7634e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f10ec7e-3c5d-44b9-a148-35f5bb881269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0f1952-39f7-498c-ab3b-151edd87d039",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30359344-5cb7-4345-96ea-fd30fe1c6759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f834abb-6f2c-4365-bc38-4f1c3ff6b9b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c693d885-1bc1-4834-b93c-5c84ba4614d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e8ab73-ebef-420c-8138-20d78135a655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15b4192-3a3b-4fe3-b5a5-697ca6f3749c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f201e1c-8b3a-4152-944c-4b5334dc1027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b894733-a9ff-41fb-b12c-b1f344ff071c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac75cce-3fc8-4b67-ad2b-54db176e9c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc8bebc-c288-400c-9bb5-8cd5d5f157d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed109804-7e61-46e5-af24-3f850d8a1bc6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1a5a9e-3389-44c0-86a2-6c44e2f15e5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36af77e0-7234-490f-a399-86822dbca8fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c26193-553f-4c9e-8fb6-fb558a58a855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f7c68e-8137-47b7-96f3-2b93ce0d61b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ab4333-9a01-4208-9463-7b3d5e74f143",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac13c7e-131c-401b-8402-dfad4b4d29c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a199a44-bc91-4eaf-bf3a-dfd47bb8a89c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8a7e88-9ba4-4974-b1cd-14176ab32447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072cb7e8-0a48-4362-b8a9-f0cb6072c0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c955cbce-c385-463d-becb-ab9f0c07aeeb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30895cf-9914-4f31-a78c-6584eeec4d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cfa86a6-a886-4a66-8c77-215ab53a5283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f870113f-c71b-4d84-9c87-41cfdaac1dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cf7b77-d815-4390-9aa7-5d8e6fff4948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb50a35-c52a-4002-91f8-4b8642219e9a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ab4269-3b97-4388-9e3f-552e7f9633fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd524a4f-e3aa-43fc-ab7f-6d57df36532d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c183533-e256-4121-958e-56cd1a4fb303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adbf95e3-80c0-46bd-9352-dffeebc59368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b03509e-6694-4740-9a36-bbc207dd7cdd",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29dd434-7aa3-4853-aedf-866a8b69a912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11356a08-747d-4718-9a07-5f8c2856ac37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97192841-502e-402b-987d-e3d94aaa060d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0975e734-8095-4117-97a8-d364f1d300e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0b1ac3-7ae0-4c32-aaaf-2b9a1eea60fb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26554e7-e92c-4efc-bf8f-db148238de7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f72f84-0ed4-4b1b-a68c-5ad92ba0ea19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "312d5fb4-f079-4f2e-943d-856648d91f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ab9562-2940-421f-8e09-9c80ddc081b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6acd9e6-758b-42dc-9c32-09106fc93a36",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13eb00c-da0a-41d9-bac6-54787e76c6ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1fe27a-cde9-49ec-92c2-3ab3eb3a763f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bfdbf9-b2ce-44fe-b433-b60c494e5f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6618a30c-2df2-4f23-9629-af358ed87a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e8e92d-a63f-4f83-a59a-703daf646262",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9720a2e-704b-403c-a83c-132ba6925da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c629c6a-d5f4-4a47-bb43-cb8a762449f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2723e76d-bb31-4874-898c-49927fdcbd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb00f8e3-ab4b-4702-ae1b-e03df692219b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fb4321-ac39-4033-9161-3717511b8aa4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be4a111-f76c-4480-a79d-461369b1b938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bcc4ef2-f253-4ff9-8eca-4f79c3288b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "539c82e3-c82d-4d13-a4bc-6e3dee7a5d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b17a1f-6a0a-4e65-bad3-004cd90c6051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4daed0d-b95d-43f6-b3f6-c57700d40e84",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e59b447-6781-4f8f-a2f1-de87544f9a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6270c423-6932-4e20-b5ab-9e949b2d48ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e146b7-da25-42e4-adcd-a56f5de00687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f41d5d-0d0b-4949-8365-b5068aedc617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5b3859-4b49-4faf-bf51-b7ef8349f770",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca96606-80fd-444e-bd3c-302990a2561d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14926766-0c6a-4bca-882f-91fc1bab67ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe04e437-496a-401b-871b-16b2f4cd2611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9359bccc-2ae6-46da-afbc-4595570df449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2895f2-829a-4080-8b54-7654b06a6aa2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38aebce2-a8da-4eef-a6a9-dec49fd84d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391f46c7-d3f6-457e-9ba5-c423e8dc2a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a99e77-f41e-4bb9-9002-972c77c92873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b006eab-aeff-43c2-aaa4-5b1e1ac389e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f40eecc-cd89-4580-82fe-4c997088a272",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f30556-16c2-409d-9179-daadb958eb19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1c3fbb-2f3d-412c-be9a-a4f63c5c745f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38afd518-27fd-43dc-a524-c8c8f79216fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f42f19-f1c8-4a8d-8895-84bf590b2181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35573e65-767f-413c-b8eb-012fd3f1f388",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51abf50f-897f-4df1-8498-e0e898feefca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df50765e-bbf3-48ea-a375-f77a791ae94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef4843b-39bb-4a63-bc81-85e714dce720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2537d9cd-0e32-4db1-ad6a-a94062ae0157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db32f7de-8495-44e0-aac4-660aab653cd5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7bb602-5551-4f21-a0e6-1c09663bf322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b93b87-362f-40d8-8bb8-841e1e23fdba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09d0e27-4ae2-4200-9c7b-e69a333b5e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b22aec-e68d-4b05-933f-4d8e2bee8ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ec4fae-126e-4429-8298-9c531beaf5bd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de70d65f-91ac-4669-9ae0-9d3048bffcc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f7bd763-e6f8-4f84-829a-c1d070db6be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab41a883-4078-4634-b334-6cc26bd9e090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c8d13d-a774-4018-a16b-ab5f41b322fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1e383b-e136-4d93-a077-3c125270f10d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abcd944-f4f2-4486-a237-a2c6ef07de67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b120456d-f85b-424e-80a1-c2ec83515cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da4a543-8e30-4d07-9c51-d5dce06d8dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661238e3-cf0a-47ff-94e9-2672fa1d1d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb82f05d-85d6-45e9-adde-7228420424f0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606739d4-fa86-408d-ac46-1688763bb2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378eb8de-7ed9-4d06-8b66-d652717814f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3578a4f-4afe-42ed-8376-70ee11c2ee2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7352a02f-bd2b-4be6-894a-5228aa7aeed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb64100-e20f-47d9-b5e3-da1f91416894",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf2ab1f-fdf7-4de2-86f2-2e654d7ce3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be5f050-086f-4d69-95e5-5b66c51129b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bdfacd-f587-4da1-b133-9feced75ff45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3af034-048f-4a4e-8e44-1b47b2e620d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1666b47a-7195-4021-9114-a01a40d9c62d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9314dc7-e595-4559-9b1d-d4302aa4c6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9edbe44-41b1-4d8a-9ea5-840c537c5065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c40ac48-cb22-4982-9a41-665c09fb4e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f0044a-f849-4938-af62-92ea759a471c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276a0067-53b5-4bc4-bbd0-a124019730f4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828b2f92-423e-42a9-bc73-714d0ac7ab5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c00c66-c2e9-483d-82f9-e75326ad13f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fab3aee-22b6-4d57-80a4-f2fe663221ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925e6b26-2778-4504-88f5-aafb9ec242b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc75f22a-9ae3-4617-9469-18c5206c9201",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5aa27a-356d-4bf5-9c7c-af1432ded0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16352f0-de96-486c-b0a7-f3fc68fb86e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d8aae1-21f2-4bb5-b506-8c7c62f572fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78536336-562c-451c-9c66-583d62edd862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b451be1-5688-452d-91db-46818b50ca62",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a20f0a9-7d70-45b4-b28d-ea967982fb80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e7ee00-f2c8-441b-8ba6-48e2e4d22016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef71a77a-341c-4e31-9a22-de897aebe883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3fd2d76-7e50-4009-ad5e-b4e3739163bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f246a7-6824-4d85-af3a-1364388cc38d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65c79c9-fcdf-481f-b876-57cb3ddcdf10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5569a66e-0ae6-4c89-a9fb-baf44a81b206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a59d522-9689-4383-855a-44343a094b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb80b4f-82fc-4091-8c13-559f4c922077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd62b46e-9912-4523-af4f-4b6161334f48",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef397d2a-ec50-45b3-aa2a-62312bfc93f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da0afdc-4ffe-4d92-bea7-6f3ba778d44b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b569601-9779-4e37-b958-b46d8d55a76e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f90121-3bf7-4f87-abaa-96569501e6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adae989-5d20-4169-a7b1-0c6e9a48426a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2a7864-2bc4-4521-85be-e306f0899453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd56f98-3da4-429f-93d9-89e3bbb8f52a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f88036-4a0f-43f3-a5cc-b8a8d739fa01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b00e9ded-6025-46d8-82e6-698349b1695a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bfaee5-aeb0-4f9e-a631-7dd07066dc95",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4264e3a7-fbd5-4efd-a6d4-1fcdb468a85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612f430c-2f70-4e25-8a50-8bc11ef4124d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a58d52e-3fe0-4b01-a86d-27987f061d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5cf6f7-9e4d-413e-9e81-156fa054d160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddb048c-6463-47e6-ba44-c8679255bd08",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fde4ad1-35e7-43e7-8792-8039f0891f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa77740-fdf6-445f-b9ad-cd0bdfcd2cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073b50e0-e2f5-47d0-bf4d-08fcc0562a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f55f24-eaf8-49bf-a549-e6191c3e753f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b64b0e-f0f2-4e86-9da5-f0c52d7bdb8a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1161ea4f-e89e-4354-a5ad-a9fc411ba5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017798bb-6e8b-4a15-97c7-9803db468894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404c6089-aac6-4338-8ae3-ddf260786629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087be20c-451a-4d5c-b399-099bfdfc3999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ba6f4d-0d6b-4bfb-93da-46bcf7e43390",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0198a47-7fc6-48ff-87a4-d62948d06319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59950c42-9ed7-4b8e-8aef-4f9b047e4e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0382797e-4780-428c-9649-1c4d200f6a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e64866d7-c18d-42b4-b066-731fd97dc24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76119e61-de11-4d4a-8be4-32a85aafb768",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b3e965-9145-4223-8f6a-726e39687db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b07908-272c-41b1-94cc-cfa25b64f805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df636eb-133c-469b-afa2-478d046498e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b864a5-149b-40c6-a458-2e0da3a7170d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1302d924-fe70-4148-84d3-0d5f4b27f5af",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b236eca-668b-418f-ae25-6c6b8578a051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fd03b19-de5a-4eef-ae9e-8eb088b786b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e448d9f-dd08-4d42-b145-662d794be714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf5341e6-a3d9-4b5f-b88c-e0c3bba7fddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0493d27-cf4d-4f64-bd7c-9c876cbd2cbe",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fe20db-be6c-43c1-9820-eb4cc2423cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb3d5c8f-a28b-4e21-920c-de014fd16014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1b7aac-5c08-4630-93b3-029f136c3d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6297b8d6-157c-4c3c-9864-b4785d5da129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4135d3fb-7cd4-448e-b26d-9b8f82d0fb71",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a849afdf-5ee5-43f7-9b4d-c0c323b1fd4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "280373e3-0c60-468d-b54c-4cc3e2465e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7d41c3-e325-4223-8f76-4de4f6d246d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3969fd4-53af-4a1c-930b-7f5d0a4ff817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d579ff-42d3-497f-8cc7-de34702ea4f4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711ac1f9-1e6b-4b85-92d8-23c50fbe1db4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de2509ab-d743-4e87-9c30-5d612f10a4d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fd35b1-e6e4-461a-be9a-2faf09142b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0cc24a-2b09-49e9-8500-6928784437e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41854d6b-6619-40d4-8d33-f70e0f10e5f0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72650f59-dc11-4ef5-aa77-71e03c72e55a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9ad589a-1cc5-44f1-86c3-69fb9549c474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7d00fa-bd50-4aeb-96aa-463af1de3c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05392352-69a8-4443-8062-4d847dd8ec42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ebdf9d-8c28-4a49-af22-285302460775",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956308dd-d433-420d-bc5d-5d6095092c80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25bdd4e8-bf4e-4de6-9d62-f701a148af53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dbf8c6-34e4-4ab1-b18e-a3a4ad4eca87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16576a24-6d0a-4984-9cfa-d7fe028b772d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19742e07-0064-4bbc-bcd1-a450c0c2f086",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639ed6b9-4c46-48e9-bd7a-927c5d9abdcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f415ccaf-a1e5-4925-b010-1e9633945970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a3044f-85f0-4e7f-af26-1b8b3f5a13dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629b0a3c-bebc-48d9-b5c2-37016065fe03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512c82a8-bb72-4c7a-9674-3e27477cd7c4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efbc61d-f24d-4db5-9a6e-f04815626aad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e641673c-f1d0-457b-acd1-c6665a9fbbf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faee87c-5945-42e9-b14b-7a5a0c3f48f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa248edf-5b40-4c9a-be4d-7b62407c0f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae587e2-2c49-4f4e-b557-c3d6bbbdc5a1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077aebdb-c331-43b6-a994-4a00e6202821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9117383b-e8ed-4fcf-a0c9-a4d7a48a52d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0e8246-e931-4122-99ae-5ba286aab75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8eb395-766a-49d9-a7ee-709f69852aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d0cecb-5197-4b3a-97c2-805880e6f39c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470ec3eb-6e0e-4a6d-8d65-dc93907914cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea17f419-7c66-4cad-8924-92c565748d86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbc65a7-0e11-42b9-ad0f-f9e34d87d88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d3076f-0224-48ff-b3fb-5432daee5b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491f4710-bf68-4664-a97c-70039606ddb4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4572486-a1b1-4696-bc1c-83b7228d1824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78ae3fdd-e18e-418a-bfa8-b9830a50e0ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9deb17d4-b8f3-41c0-8164-21a37a7e605a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192b916a-a600-4209-874b-2daeda50acdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55396fe4-ceb9-4449-bb46-9ee0c81dfda4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8868a3ec-976e-40b5-8f67-465d351425bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e52fed8-3240-4b21-967e-4e27c2562794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9300b81b-67f9-43db-838a-4c1a5f7c1cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee8b939-4185-454c-ba1c-b0b829e755c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6fce29-fed8-4477-85ad-e9c5ca9b8f78",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75162f0-2bf4-445b-8c86-4c303bea153f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4ae8354-c156-48f8-93c9-bbac2de66bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ebebf8-18e3-4164-a9f5-5cc32b773673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8fdddc-d167-4fbb-af25-0e77d3a7e91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7fc9a6-0b73-426e-8337-b810d2d79133",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2729c8-babf-458d-9544-406e2528790f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9847a80d-fb48-498e-944b-bfda26062b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9542c841-1b4e-41a7-bf28-1aad2d925c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e919d2-4621-44f6-be72-80249c5f7db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6ae606-4113-49d3-a2cd-93cd07043b79",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762ddd5f-c54a-4a36-b702-9261e60f1324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f4a6bcb-ccad-46e9-b065-bb2d6de85ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7e6665-d908-4835-ac69-826df6e58f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596f422a-3b7c-4ba7-b632-83a1cc02c720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d49a3d-2108-4a1e-8255-ffd7d278eb54",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599075ef-3c45-4065-b7b0-514a356c849d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b9d1f32-7fd5-4612-8d2c-b8de51e4c195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc3dfc0-d236-4c13-8f0c-0ddcee75cfe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9060739-dd4c-4172-aa5c-8fee02f21707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b43b10-6492-4790-9d33-4a288ddfbd27",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e96b6c-3670-466e-837b-475279186f6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "887912f6-6ed1-4918-b57b-67164bfbd88f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0c25bb-81c3-4151-8a80-feb3447697f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aef8345-e064-4d35-917a-a45eae0d1615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45dbc22-9277-4af8-ad9a-59a9ed560cf8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7e728f-3727-4eb4-825a-15618e2bd13a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb10048b-252b-4ddd-aad3-f84afb1f4837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea5b9c3-0e1b-48a8-a6de-f6b3fb09ef26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ab007e-94ad-4896-b89e-b2206553caf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52170a84-1a89-4922-b867-40699188286b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f571a26-41f3-43e9-84c5-869bfa6254e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55239aa0-86e2-41c2-bb78-dacfc42c43b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0877c7-73d6-46c9-b80f-f924b3c06331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c609274b-de9f-4a12-ab2d-03774248b1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a404d2e-acbc-4856-b088-9efefa782bb6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356f2e0c-9548-4507-af04-a99244902ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42b8c681-926a-4341-8526-d47dc88e3af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7d1b7a-5cf5-46b0-b38d-b043fdef68ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7fbb8fb-5bff-4e14-b01d-3aed7faef1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9249a93b-7d8f-4f8b-8d12-98a6d359e165",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188f8c7a-b1cc-4b9a-8566-bd53dc639beb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e1b9aff-0528-4c54-8f6c-1837d3affa0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a995dd1f-a397-4545-a4d2-e54adb4b3914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07045991-903b-448b-83e3-cf964de21764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690cc374-d0d3-40af-aa49-5829d88caccc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89da8d79-0f7e-40de-926d-b095e0c9cb39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4032968b-fc7d-47be-b498-1ff142b4c323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd91e88a-feb7-4eba-bad4-fd7c5577fa7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b84acd-d6f2-488f-bb94-aa5571d082c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1073db50-af7d-4cb8-aa91-3f6323cda8aa",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbffd7a0-0caa-4059-ac6a-dd4ab28cf77b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "938ec5ff-c28d-4820-b9b5-2aac27293433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "296ed006-e694-44b1-9419-f8b1e3c64c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9238b970-a735-47ca-9f68-584b9b89ec2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d268ac2-d147-4d16-94fb-2d8e324e295d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba7b86a-be39-4d61-a617-10dea48cf56c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0edca0fe-470b-4580-999d-e3b37e5c192b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd8e5a6-ee26-4626-a32b-6dec910f555f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a555c534-537d-4581-ae93-19748bd8d5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba33dc68-ce2e-46ab-a49b-a4f1de9d3587",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb31ba8-3637-4c79-8060-558a033c347d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b24d02ee-fbbf-4e7b-8b66-51db8e7e10cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedc48c8-9029-4609-8119-b9a2da983af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f9732e-db45-4972-a153-50e4f09191c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec72a76-722a-42dc-a5f2-ed17d1a202b8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adc724b-8b98-4a91-9d84-3c9e4aa607fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57e3029f-ffc6-488c-98cd-f2724e03e571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "207fbffe-3eb8-48fd-bb2f-01c0e75cfd1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85a2c3c-41ae-40ea-a1b3-61dec1764828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0ca24e-a81b-4e2f-b7e8-12a8bf026c65",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6273a9c9-b454-460d-8666-4db2ceb08ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38ab3b3f-ee49-49eb-82cf-981ae8f331e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddc239d-e68b-42dd-9d01-49e2f0a15706",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac33e29-cdde-452b-a70f-3f390baf2fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0b3c2a-3e48-40c2-ade3-aac14806df8d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8d74ba-0e08-45f1-a1c8-6e8a7b3c7c80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1912caea-8dc2-4e3b-91db-41dcc1ba5374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e44b431-94c5-4f21-9bc8-fbdd97591e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1f7c81-256b-4d2a-a404-96e68ec8ab1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819a6c6d-ad5e-4b2e-96a3-46261100c3f9",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a45a7e-fd00-4867-b805-654f4fb93e87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d634278e-c8e3-4c00-bea4-d3662b4bf215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c36ae8d-a692-4f1d-b79f-e74365ffa29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb42ac64-94aa-443b-9374-e3755783331b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee7b521-23e9-43b1-bc6b-c7909187bb31",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475bd1b4-118f-412a-b971-c617e2a05c40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59b858c2-3304-49c3-b714-07e8b9c94b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4011ebbe-c790-43eb-8999-c44c7b183061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cbd7c98-3e2c-41a6-8c07-94153da41370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995791ce-c76b-4a97-be9c-6c4189230f76",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b6b87c-c647-4efa-a46a-b7059248d901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "041ebe49-9e28-409f-8764-ca3e1c786b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ec27a6-dcef-436d-b993-dea5eb946f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b2148b-cf4c-4f02-9f5f-f27b79adec51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758b948b-45aa-4fa5-af58-96e71a256aa8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e40e0b-297c-4ef0-9f0c-62eec0caa1e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ea9935-0914-4ab8-b561-e0530c61b004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4ce777-c37f-40ac-bfe6-a6a8e2b2d08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe3d349-9cc3-461a-91de-ef0cfc0ba4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8af02a-4014-42d9-bb32-d78a10940eba",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f327c0f1-22c1-495e-86ef-f9664af87041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c64e699-fd1b-4527-92cf-eaabea1213e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef32de7-ed6f-4717-95ff-b36eed80f42f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3d92d0-dc86-48db-957f-1951aed74d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce68889f-5b4d-488f-96ed-a337fc0e902e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8170e66-409f-46a2-921c-8cbe3c081985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0fa6f26-9b8a-4ffb-a520-806f7ffd202b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "547b5e15-581f-4582-b49c-e3b5a17c7022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d726843b-0baa-47d0-878c-ad440d50116f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bd103f1-e75f-4dd9-9ade-2e252d5f5bd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cacb575-bced-44ab-879f-3efa0402b21b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8acb11ca-b008-44db-a691-fe1b8356db62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6309ec2b-a38e-46c3-8290-0fe48dadee6a"
                    }
                  }
                ]
              },
              {
                "id": "1f3fb5ad-065b-434e-8cdf-cc65af6529e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fcd5a45a-567b-4cf4-878b-00451f061b2b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b385c8-6a9b-4c45-b240-4d7b7376bf12",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f4dd3dcd-75d1-4735-bcd3-27820ed5ecc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36715da1-6174-4df8-9499-5638148f9ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b0c50ca-cd27-4cf8-956c-1695fa4e9944"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5453fb68-984d-4ee8-b22d-f2a3e78bae58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f49b02d-fd18-44da-905f-a09a18e600ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e5a40ac-79e6-4e37-a5cb-c1616deef9d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74ef3ad1-9b76-49b8-8bba-1e4e6708f956"
                    }
                  }
                ]
              },
              {
                "id": "279d7a8d-cad3-4394-98ab-9f0d39f57687",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2a45f3fe-8535-4006-ac30-897c6f7f8bc7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699c92b2-786a-436c-a75a-7ab77fb72fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "146abdc3-5e9c-4f63-bde0-122492a844b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f76a7b-86bf-45d6-b2cc-dbe2ef9d5c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3992c923-5eda-4645-94cc-036a087abc54"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ee6b609e-6311-42dc-a424-abba83cce14a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7ca90d1b-85b5-4a87-8d3f-5f01f35624b3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8aeebb7-505e-41d3-b59b-09102e4ca432",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "010c3b7b-6c0e-494c-b3c2-4ead9ec90535"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3b055b2-e7dc-47b4-b15d-e5a5db23ad61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbfd6e6d-ce67-47e4-bca9-d23d03fc25fc"
                    }
                  }
                ]
              },
              {
                "id": "202f904f-4933-472c-a4dc-6645a1e22b45",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cef3517-4e8f-490e-b793-3e9ae6cd2829",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bafab0ff-895d-4eb8-bcb3-279d90674ceb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ac54fbd-4932-4679-9c50-fd8062b26c34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cce8a45-5711-49f2-8894-b1c4541cf742"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c21d03ff-9730-4d81-a928-855b569d3c49",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cb71f83f-7e4d-4d89-a519-8c3289d45362"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "819bfa4c-62ab-46a8-96dc-3375be5c002f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d00a9cf0-f844-43aa-a791-ff8eb714ad0d"
            }
          }
        ]
      },
      {
        "id": "2f62dbea-6266-42f4-ae63-26765ea00c96",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "12ab45bf-9960-4205-a6c2-85b1bd81fabb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e5ecc997-975e-46da-bea5-9c19e0a14887",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6927f22-a0b5-4512-9dd5-c70a38c7e260",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5eda13-7de2-4c6a-abd1-fbeaf71962e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2d73d337-a743-4760-996f-021a0789a334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76ba746-4894-4e19-a448-9029d89b9976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "207f2eba-ceef-4f2d-aa46-939e485972cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "038d949a-392b-42a1-9d42-666435555964",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1469b76-123f-4c21-b169-735977519a7c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "592f71ec-377d-4add-b29b-da498fcc1052",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dfab2c4-ce6b-4f84-a8b8-de348ae4ef40"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c91448b0-f119-4300-a39f-bfae885cc2af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8496813e-7edd-44db-83c9-18aa48df18a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f51bcd04-5fbe-4ae7-9a85-9670178b8213",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14edaa1e-9b00-41df-9b85-87d178ac1ea3"
            }
          }
        ]
      },
      {
        "id": "d1a60e2a-3af6-4cf8-bc77-0bf20c899433",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0948a256-6272-4c25-994f-dbb21110baba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2442be37-7c1b-4948-8401-a2b06ae3e1ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6567ffe-98d8-46f5-b540-afccb0b0ab13",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d795b4de-656a-4815-a913-b836cf6bc890",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96c780fc-ccde-4208-9fef-230bd4cbeeba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cdcdc4-e024-441f-8224-ef3c9e4831e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42fd9f93-13b9-4a02-8d78-cdacede3202e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59a36182-d948-4fe1-bb52-f3151761cc24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8dba542a-994d-47f1-822a-13e1044092de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "673f617a-0710-4e97-b945-44ae26b0ffc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f05988b-c242-4a40-a732-518a2212ef4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "625c829a-4039-440a-a981-cf23df248eb9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee388cc4-ea0e-4717-8e2d-048954b56c21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14779627-a928-4204-aee7-226a4477856c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9da7991d-8954-4236-9f27-b7082f64f90f"
            }
          }
        ]
      },
      {
        "id": "b07b04b6-a9ee-4ee7-96b3-2833416883dc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "be1b2a4c-a26e-4dc6-8b16-e457b7ac375a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f1b306ed-3f0b-4dab-a7c3-0842c0cc26fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69270378-2713-44de-9481-4151c5a3f29a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c351dc-1fb8-4371-8ecc-3f843333a7d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0de3ece-313d-4bf4-b6cd-62010a4bcd80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465561f3-3373-401a-a6cc-b730286dc905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "111e08ce-7e19-4ae5-a80c-926da18b078b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bcc1c19-7047-4bcc-9f8e-935e497440e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9b72a63-87f7-45de-addf-294a8b3b3127"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c7eff5f-2511-42ce-9801-2f209abd9007",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3694011-de9e-4c4c-ac07-b83c0f7aa3ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "767ce1cc-29ab-4605-96ad-845ab8410204",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "12ddc9d7-4387-4d74-b74b-4b5f77e2cc22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e6b0aff-767b-4df1-93bc-d863ae48bef6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ece35c3-ec15-45d0-9aeb-ac2b7795e7aa"
            }
          }
        ]
      },
      {
        "id": "28f83b52-e543-4a37-a330-fb5ea66ae92d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0012e895-bd74-45bc-a27a-4b9dfd884ecf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77d15b12-ee15-4c13-bddf-65cfe18291c0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b1b311e4-ffed-47ad-8ba8-a8dfef558c52",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22d14823-3ec1-4ac2-a797-5e7034cf7bc8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28ec85af-6e5b-463f-af7c-92581454ef3b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 661.0317460317458,
      "responseMin": 14,
      "responseMax": 22357,
      "responseSd": 3250.536386595218,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726620185965,
      "completed": 1726620361030
    },
    "executions": [
      {
        "id": "27490125-388d-49fa-862b-0647aecb5ce9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4bbd9a21-2dff-4074-81bb-4bda962c0850",
          "httpRequestId": "72e9a324-4a7b-4e9f-aaf6-474b889e5fc2"
        },
        "item": {
          "id": "27490125-388d-49fa-862b-0647aecb5ce9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a43acbf6-2bc9-4a33-93ff-9db2e97a530a",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "f127370c-6cca-4174-981f-baaaa0b68d46",
        "cursor": {
          "ref": "cb7ae674-cbc0-4da0-a82c-a5fdda710d27",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "14b4104f-27d6-42cc-ac7f-203ed99071db"
        },
        "item": {
          "id": "f127370c-6cca-4174-981f-baaaa0b68d46",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f6bc2bbe-67d4-4b98-b5f9-27dd0b0c3dc9",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "22cb7510-4dda-415b-a92f-014fd89221df",
        "cursor": {
          "ref": "6b5c69bf-b260-4fea-9060-77c835f187e0",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "38d40f87-2d52-4d24-a9e4-8f500070d2b1"
        },
        "item": {
          "id": "22cb7510-4dda-415b-a92f-014fd89221df",
          "name": "did_json"
        },
        "response": {
          "id": "8f239f58-5408-4eaf-ba15-6cf3e27234fd",
          "status": "OK",
          "code": 200,
          "responseTime": 476,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ab8d46-9319-4754-8a63-59d6a23dde9b",
        "cursor": {
          "ref": "c3cc83c1-dffd-430d-a683-1f9d95aa7cb9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7ed45121-3c78-44fe-b129-35f872b06861"
        },
        "item": {
          "id": "c0ab8d46-9319-4754-8a63-59d6a23dde9b",
          "name": "did:invalid"
        },
        "response": {
          "id": "674ef2e8-5cb7-47fe-8bac-55d64144f5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2580,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ab8d46-9319-4754-8a63-59d6a23dde9b",
        "cursor": {
          "ref": "c3cc83c1-dffd-430d-a683-1f9d95aa7cb9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7ed45121-3c78-44fe-b129-35f872b06861"
        },
        "item": {
          "id": "c0ab8d46-9319-4754-8a63-59d6a23dde9b",
          "name": "did:invalid"
        },
        "response": {
          "id": "674ef2e8-5cb7-47fe-8bac-55d64144f5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2580,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7f4cbe-d8c7-4180-9518-5a226fd60d96",
        "cursor": {
          "ref": "26a11dca-4a6b-4281-8720-ac34d25f2490",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2bda9df6-2ee9-461d-921f-586f62bf79a0"
        },
        "item": {
          "id": "4f7f4cbe-d8c7-4180-9518-5a226fd60d96",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f79d7b6a-07c1-4485-a595-90800bccb6e8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2327,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8b1dab-59d3-49a2-8dbe-43ff70c6cfc8",
        "cursor": {
          "ref": "6ebd61ee-a136-4bb1-b053-a0b155b63cba",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ba67bcb6-1da4-4343-8d55-52baa31accc3"
        },
        "item": {
          "id": "ff8b1dab-59d3-49a2-8dbe-43ff70c6cfc8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3db88ab2-efd7-4918-9d08-5ca24b1bf295",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2560,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb69ef2c-8222-4538-be54-7a9f7fd92892",
        "cursor": {
          "ref": "6e3aa042-aa51-4583-901a-41cd5c82aa53",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "19322add-9289-4349-b176-975887d769a1"
        },
        "item": {
          "id": "fb69ef2c-8222-4538-be54-7a9f7fd92892",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1d61c233-b60d-4407-acfc-bfd94697547c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f273d0b-50d1-4c37-99cf-a1c986f6e02d",
        "cursor": {
          "ref": "56535173-88bc-4c74-aa07-0775ec424dc4",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4fcbfc50-4e14-44f7-b484-b118744d218b"
        },
        "item": {
          "id": "0f273d0b-50d1-4c37-99cf-a1c986f6e02d",
          "name": "identifiers"
        },
        "response": {
          "id": "259760a7-1a53-47ec-a1c9-840316da2e7d",
          "status": "OK",
          "code": 200,
          "responseTime": 2236,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781285b7-52d7-4080-b9af-a9fdbbbfe450",
        "cursor": {
          "ref": "8459fb55-b4ad-4a52-bf1f-b02c1e412f24",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3b21951e-2ae8-4dd9-aba2-ca011faf71d8"
        },
        "item": {
          "id": "781285b7-52d7-4080-b9af-a9fdbbbfe450",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0d698f64-646a-4dc4-b6f5-c839df9927dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa554af-bd19-4038-9472-e000893a8d25",
        "cursor": {
          "ref": "03a80558-5c5f-4d36-9144-2e5825898ae6",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f4591632-4d86-4d0c-9cd0-c7423e063e7c"
        },
        "item": {
          "id": "0fa554af-bd19-4038-9472-e000893a8d25",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d551b400-d402-4703-b8f4-c2846a3c5a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50436cc-901a-4380-b2df-e8b8d68804aa",
        "cursor": {
          "ref": "4ea8817e-1b3d-45db-ae42-543f6b9228f5",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c3a8d9cb-2a17-4706-b69a-cf0721c69002"
        },
        "item": {
          "id": "f50436cc-901a-4380-b2df-e8b8d68804aa",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a87ab133-69ce-4ebb-8e1b-049b9b64a70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4246866f-fe8b-4659-b419-21de5a840a31",
        "cursor": {
          "ref": "efcd269c-6b13-49c5-9ba5-349c7d253aa3",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "949fe025-d785-4949-b159-51e09c68582d"
        },
        "item": {
          "id": "4246866f-fe8b-4659-b419-21de5a840a31",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "715429a3-32e0-4729-b828-b40985682965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4051d5-ce6a-4b92-8730-f598a3e7cb33",
        "cursor": {
          "ref": "36a367f6-90a4-4ebb-9e96-731c884ebf20",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "abf331aa-f49c-4182-9dd2-e034db6e2c6b"
        },
        "item": {
          "id": "ba4051d5-ce6a-4b92-8730-f598a3e7cb33",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "054f9d24-d380-45c0-9d72-a8a5b64a95ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed07529d-3e76-4e85-a981-04cf6fd79246",
        "cursor": {
          "ref": "522ef65d-efb4-4786-adc3-00e6dbbe800b",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "59858554-3371-491f-a895-a9e5893b1742"
        },
        "item": {
          "id": "ed07529d-3e76-4e85-a981-04cf6fd79246",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b7864e7c-b6b5-4511-a273-56d40f69df13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897d1032-e58c-4b8f-b889-dc8cf4bebab6",
        "cursor": {
          "ref": "1da06d4a-dcb3-4a40-b37e-7274e7c1cd4d",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "624657dc-8ef4-4c2f-b4aa-77eee567374c"
        },
        "item": {
          "id": "897d1032-e58c-4b8f-b889-dc8cf4bebab6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "43a6b972-7d60-4b79-80c0-8a8b7150761a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90820e39-ab3a-4405-9e34-65b1c2ff9a36",
        "cursor": {
          "ref": "38a2b73a-aace-4b27-a09f-c8b498dd3c7c",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9f955763-3095-40a5-93bd-ea5f3899c755"
        },
        "item": {
          "id": "90820e39-ab3a-4405-9e34-65b1c2ff9a36",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3c48049c-c76a-4875-8f8b-229040f8fea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7f067e-aba3-4447-b7d5-802585f827b5",
        "cursor": {
          "ref": "469b8564-43ab-4266-91f2-db4ca0a34ae2",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e259a25d-de04-4def-ba20-9c9a309f1466"
        },
        "item": {
          "id": "2b7f067e-aba3-4447-b7d5-802585f827b5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0276a834-ce9a-43d8-8d68-1b45f59f1a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb48e675-df27-40ed-b505-0f75ce839f18",
        "cursor": {
          "ref": "4c635715-4f28-46d9-8a8d-bf758171e4f5",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0239f7b7-c9c1-4a19-8dec-60b8fa24bab6"
        },
        "item": {
          "id": "fb48e675-df27-40ed-b505-0f75ce839f18",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3b6aa8dd-5567-48e2-9273-e03f1d8224c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6c40b9-8f0f-4a3d-9348-d047261eef52",
        "cursor": {
          "ref": "027a2754-deb3-40de-ad6b-5f421e1fcfc1",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c6ed104d-dee7-4e78-bb2e-86375c0213aa"
        },
        "item": {
          "id": "1d6c40b9-8f0f-4a3d-9348-d047261eef52",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "004a4050-9804-4499-a7ca-277496118be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a0716e-c88e-44db-a89d-df812135a7cc",
        "cursor": {
          "ref": "8a956630-c751-46bc-9912-3f7f4e68d1cb",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e37dea25-accd-45fe-9b4e-a9471f20b417"
        },
        "item": {
          "id": "81a0716e-c88e-44db-a89d-df812135a7cc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "80df3f5e-d960-44dc-a69b-469ee3703139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8503e94-b865-4eab-9f68-eff6c2908520",
        "cursor": {
          "ref": "7fcff7c5-c0fe-4f56-bb05-dcc4b98dbdb6",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "44245ab6-0a38-44e4-97a1-9a2ba48591e8"
        },
        "item": {
          "id": "e8503e94-b865-4eab-9f68-eff6c2908520",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f6484732-f1ee-4667-87d4-6cfde653afcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4489833-94b6-44d6-a2e9-39bdbf2297e9",
        "cursor": {
          "ref": "818dd828-6035-4d81-8c8b-b7ed0a3fa70c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f3bf041d-eb6f-4cba-8c9f-f01046414b19"
        },
        "item": {
          "id": "c4489833-94b6-44d6-a2e9-39bdbf2297e9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "594645ec-9805-413d-89f6-2ec0f5da21ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a22dbcc-73cc-4891-bcf7-40f437d4a5a4",
        "cursor": {
          "ref": "b6955d60-68db-47e4-9a19-52208d699acf",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fa6bcda3-0800-42a2-8aaa-b97fa1e8f25c"
        },
        "item": {
          "id": "5a22dbcc-73cc-4891-bcf7-40f437d4a5a4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "57c1903a-5b68-43a1-ab55-b2703455bf10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d87357-7a4e-426a-aa02-589a33948b24",
        "cursor": {
          "ref": "2af5fae2-4c26-48cc-b4cb-81c53ab21763",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c8ff1b21-740d-4b8d-b7d3-550cf98d7386"
        },
        "item": {
          "id": "52d87357-7a4e-426a-aa02-589a33948b24",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0de6376c-30eb-4ff4-bb38-1dddc7fa84cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7408202d-1fb2-4b2f-a2cb-8d244df1005d",
        "cursor": {
          "ref": "7c9bf377-7268-4369-aec7-a632e69b456d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f35a416b-3ab2-4ae9-b351-567a18e37409"
        },
        "item": {
          "id": "7408202d-1fb2-4b2f-a2cb-8d244df1005d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5abd77ef-1d92-4227-ae3d-c66a0f774bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0eeecd-1a17-4613-8e42-d1ddfdf82cca",
        "cursor": {
          "ref": "9f31d466-1c0a-480f-a7bc-52857c887c1f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "574ec14c-8850-46a7-a331-02c04cf166b3"
        },
        "item": {
          "id": "0e0eeecd-1a17-4613-8e42-d1ddfdf82cca",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7c63710a-7ab0-415e-91a4-c14dcd180d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b033efaf-a55d-4dfa-8fbc-518002c86c8a",
        "cursor": {
          "ref": "8361d545-d56e-4b98-9da2-e5e169f3db48",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "caa19799-825d-4a7d-83ca-fe53d986e454"
        },
        "item": {
          "id": "b033efaf-a55d-4dfa-8fbc-518002c86c8a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9ef0ac4e-e836-4e90-b7c0-0450bf3aca53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e9214b-62ba-4654-ab5d-16318bfa1a3f",
        "cursor": {
          "ref": "e778f90d-0df9-49e8-aabc-215e7b129e7b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "75dc3f96-4cf3-4da0-ba09-1574a7ed04bf"
        },
        "item": {
          "id": "c2e9214b-62ba-4654-ab5d-16318bfa1a3f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0e833769-0216-45b8-b519-2d4ad7051f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72949360-6618-4f6d-ae59-66a2469c6ae8",
        "cursor": {
          "ref": "026d443f-1fad-4c43-b3c8-85d86fba3a4b",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "79d72bc5-3b28-4865-abf4-eb9f7c6f6f36"
        },
        "item": {
          "id": "72949360-6618-4f6d-ae59-66a2469c6ae8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "584f5a25-1cc5-4142-bdb0-e15bc70e1ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4857e670-0b6c-439b-b41c-94493dfbc231",
        "cursor": {
          "ref": "baf81c35-4d51-4cb2-bdb0-d79c3da22b00",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7db1327b-fc71-4d7f-a2df-b3b433d7a106"
        },
        "item": {
          "id": "4857e670-0b6c-439b-b41c-94493dfbc231",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "12894d0a-8fd5-4f31-9ff9-0b0063ddf4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a675417-e9f7-4bca-9a04-d2e7f651664b",
        "cursor": {
          "ref": "641040af-178b-4a12-96ac-6fb397c6534c",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3c2bb18d-8adc-41cc-85e8-c2fd3c9b69d0"
        },
        "item": {
          "id": "5a675417-e9f7-4bca-9a04-d2e7f651664b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "24c50869-3bce-483c-9587-0462f278b8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d2fdc3-07e2-4fb1-b52a-f17e6e24d36a",
        "cursor": {
          "ref": "a12f4a0e-d600-4fe5-adec-4057d04f6a7b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ed6ce8e8-5018-42c0-b8e8-c840bd50ab32"
        },
        "item": {
          "id": "25d2fdc3-07e2-4fb1-b52a-f17e6e24d36a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f77e8d47-f09c-4fc5-9d76-003fe438ac32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f31eb4-7ecb-40a3-81af-fa509a6d0cfc",
        "cursor": {
          "ref": "e8e6e66f-d482-43a7-8fa5-eac6a93bfc5b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c1f9a1d1-34bd-4272-8737-92deaab0b7fc"
        },
        "item": {
          "id": "91f31eb4-7ecb-40a3-81af-fa509a6d0cfc",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5d538c9a-1f14-47d6-a6d5-158522885435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1c2085-70b3-4626-8c99-67eaaed8a678",
        "cursor": {
          "ref": "4975b496-c1e9-43a5-a526-b5a791e03dec",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1ab2cad9-81e0-4f73-8474-3e6f7af0c26a"
        },
        "item": {
          "id": "5f1c2085-70b3-4626-8c99-67eaaed8a678",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6772eaf6-17d8-445e-8897-d881658e785b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd59de0-c203-47e4-932f-3373f67d7b16",
        "cursor": {
          "ref": "a76bdc8a-e2e3-48bf-8977-172fcf6edc26",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e0b23bee-a89d-44a5-a0d5-554ec0efaf8e"
        },
        "item": {
          "id": "1bd59de0-c203-47e4-932f-3373f67d7b16",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4ea0da3d-49e7-4218-93b9-0c7be20ce4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c3f318-d661-405e-828e-b0d924a41d8f",
        "cursor": {
          "ref": "c57096c7-a5f8-443f-a4e4-829c200ef9b3",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ce7f94e3-6f73-40d9-8fe0-34e8b8d1faa6"
        },
        "item": {
          "id": "68c3f318-d661-405e-828e-b0d924a41d8f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "50e3225c-9f63-4b7f-baf7-2e2833a8bf6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8c809f-487c-4ba5-97ab-208daa077b36",
        "cursor": {
          "ref": "07d4e78d-dd35-48d6-b622-94f90fe82451",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fbc063c3-c607-4cf1-a383-1a1a0ed144f4"
        },
        "item": {
          "id": "3d8c809f-487c-4ba5-97ab-208daa077b36",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7b6d6bfc-9016-4c1e-8468-6111fa78eb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49136364-4ead-4ba1-85cb-8392120f78fd",
        "cursor": {
          "ref": "572f624e-f4e2-45d8-b93a-5ba6dbc470be",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8eebe81e-ed23-4306-8203-55966cbda2d3"
        },
        "item": {
          "id": "49136364-4ead-4ba1-85cb-8392120f78fd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "859e9b2d-5ac7-42e9-af12-86f8bb9bd975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc18132f-01e4-4c30-9a10-80a9c4e9e7ea",
        "cursor": {
          "ref": "7d5445fd-8193-4901-9584-757734c650b3",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "19d3d3de-b65f-4172-af88-675b2e3aac3e"
        },
        "item": {
          "id": "cc18132f-01e4-4c30-9a10-80a9c4e9e7ea",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4735220d-b78c-4042-b63b-cca07f881e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0b9f90-439f-4852-92bf-a84a0adcf958",
        "cursor": {
          "ref": "53ddcf17-0e9c-45ae-9445-4b0a4b873fb5",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d3f73cd5-b3a2-49a4-8c85-6afc62256981"
        },
        "item": {
          "id": "0d0b9f90-439f-4852-92bf-a84a0adcf958",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "caceeed3-ce78-4f7e-9a0a-7e1cf1723818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17470d5d-a3bd-4f7c-a33a-20a5743f3e66",
        "cursor": {
          "ref": "76c0b227-dc53-45a3-b9ce-3600973026a2",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "af51996d-e231-469d-a376-9096f701a8f6"
        },
        "item": {
          "id": "17470d5d-a3bd-4f7c-a33a-20a5743f3e66",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "85ed7cfd-a381-4033-98b6-f45ba9086b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ef6722-d2ed-433e-ab75-448db07d797c",
        "cursor": {
          "ref": "18396f03-d3d4-428d-b7dc-5cc9eb051bc2",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "636282e0-0531-4659-931a-6f2ad968ce23"
        },
        "item": {
          "id": "45ef6722-d2ed-433e-ab75-448db07d797c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "76999a66-c6e8-4a68-9940-f61dacbc585d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4fe836-d0ee-4099-8ab3-9e1f6e2a31a4",
        "cursor": {
          "ref": "82adcf31-fcd9-432e-a097-0068e176f003",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9fd86f40-c5b5-43bd-9c93-1579a772eff5"
        },
        "item": {
          "id": "4d4fe836-d0ee-4099-8ab3-9e1f6e2a31a4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c3bdbb1a-ade1-48da-b186-96799a7aea3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1132b0e0-7e63-4d67-b295-69fccda2662d",
        "cursor": {
          "ref": "d5ea5ae6-6dcd-40ed-a07c-b76243df75d2",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e2a3e5ba-8f1d-47aa-b9b7-e20a327a0952"
        },
        "item": {
          "id": "1132b0e0-7e63-4d67-b295-69fccda2662d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9ff5d352-b980-4fbb-8a1e-82816ae0a664",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ecadea-0a3d-4cdc-99c0-af74abba38bb",
        "cursor": {
          "ref": "449114a9-c152-4c31-b00d-ba33eddd3a77",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "aff786c9-d374-42aa-9d89-536aa4ad87a9"
        },
        "item": {
          "id": "28ecadea-0a3d-4cdc-99c0-af74abba38bb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "81cc6927-8cac-4806-8139-0b05fa49e9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45beaa36-fbf0-4a69-98da-1f5921d66c8a",
        "cursor": {
          "ref": "fcc6bd2f-3742-42b6-8643-12c02afb8bb8",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "80e756f4-4177-4333-b319-2f781a2e9841"
        },
        "item": {
          "id": "45beaa36-fbf0-4a69-98da-1f5921d66c8a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "df45cb54-7f1f-4a81-8696-6fd124a9f97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef16c6b0-7f49-4712-9c86-89a10dd42cd8",
        "cursor": {
          "ref": "0fce0b91-8154-492b-823d-3cef92a6c5dc",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "19753123-f915-439a-b231-c856d3f42c50"
        },
        "item": {
          "id": "ef16c6b0-7f49-4712-9c86-89a10dd42cd8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "099d23ac-1172-4317-9fcb-de0ad7780a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e01e974-e454-471b-a000-8815d5996b79",
        "cursor": {
          "ref": "6dcb2342-0bc0-4bbf-8797-972a6f847a0e",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "70083936-de0b-47de-b012-26a2df62398e"
        },
        "item": {
          "id": "0e01e974-e454-471b-a000-8815d5996b79",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d54b7926-eb81-4139-8a0e-29e51c505f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3c37d8-416c-4822-be65-23c89cf250d7",
        "cursor": {
          "ref": "d8590a7b-3651-4277-b212-dca97e9a3018",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "03cfb6b5-502a-4e3d-b6ec-3ecfbecd046d"
        },
        "item": {
          "id": "9e3c37d8-416c-4822-be65-23c89cf250d7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "95cefce4-8ce7-46bf-ae6d-fca74b27f3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39f12f4-3cd6-4898-90a7-41f88365ff2f",
        "cursor": {
          "ref": "9d078086-b010-4c5f-b4e4-3afb5076730c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "53139c26-a462-415f-be7f-d61568d96723"
        },
        "item": {
          "id": "d39f12f4-3cd6-4898-90a7-41f88365ff2f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "072466be-92fe-4ee9-b8c3-96ed4c3a9148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d4eff5-430b-4b1d-8cbb-3bc86d14b4a5",
        "cursor": {
          "ref": "dd447082-ec08-436a-b0e7-b74cbc3c3948",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9d4ee1d9-a158-49b2-a744-ae49cc13d5b5"
        },
        "item": {
          "id": "11d4eff5-430b-4b1d-8cbb-3bc86d14b4a5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0da46d55-6ca1-4f9f-9e80-1501dfe07cde",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3eacfb-8837-4a45-88b9-c2d6760ea6ca",
        "cursor": {
          "ref": "d2bd0b3f-8278-48d9-9922-bbbfef0ed967",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0bc44869-2c89-4c74-bcad-e7be87ad5ca6"
        },
        "item": {
          "id": "0c3eacfb-8837-4a45-88b9-c2d6760ea6ca",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "175da1a7-c83c-4a6c-9c92-42945f1d02e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f55c25-f7c2-49b5-ac16-208d65a9f88b",
        "cursor": {
          "ref": "7497b941-b185-49a9-97e6-7852d61b02b4",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bf336f48-6d37-4b0d-a6bb-909bf5d22ba0"
        },
        "item": {
          "id": "b0f55c25-f7c2-49b5-ac16-208d65a9f88b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fb5ac384-a085-4761-b4be-4ad6e51ace01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c90bcf-dec4-4857-982f-918608b88261",
        "cursor": {
          "ref": "e9f9ec6a-e541-4cf1-91db-b1ce33a1701d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d96fc1e0-e406-4fe8-82f4-c572d8bfc5f5"
        },
        "item": {
          "id": "57c90bcf-dec4-4857-982f-918608b88261",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ee28125a-e578-45fc-92a9-bd2aa7b3c07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71b7920-29a0-4959-b3b7-bb1a6f8097c3",
        "cursor": {
          "ref": "1a15784c-d282-4c82-930c-a4fbdc897331",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1754c2f1-6812-4f75-a2f9-6fb4bd042833"
        },
        "item": {
          "id": "f71b7920-29a0-4959-b3b7-bb1a6f8097c3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c44e6edd-94ce-4582-9dd1-03f12e271759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbfee99-fc57-473c-b12a-886d3b85f563",
        "cursor": {
          "ref": "378a5172-43f4-4d2b-a6dd-b7224fde2932",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2a2e3652-cc55-484c-bacc-fb8db10e88a5"
        },
        "item": {
          "id": "4dbfee99-fc57-473c-b12a-886d3b85f563",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a24dab6a-8ab9-4ae8-91af-3cf94a8b863e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4524541-a2ee-4473-8898-01f20cfb37f7",
        "cursor": {
          "ref": "3c619677-2fb2-4ad7-ac59-b64dda0bafd1",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "03d53b74-d6be-47ef-a6b5-965c4b01ea90"
        },
        "item": {
          "id": "a4524541-a2ee-4473-8898-01f20cfb37f7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "592c6a16-0174-4b61-af9d-28131d9dcd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1dd798-7f14-4466-a8ab-fc28e430f4e4",
        "cursor": {
          "ref": "08a0694c-2352-4dce-8f27-2d1b258696da",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "adb3299c-5b52-4f9b-ab2f-7bd22b8b0210"
        },
        "item": {
          "id": "9e1dd798-7f14-4466-a8ab-fc28e430f4e4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "69262fd3-27c4-44b6-b71a-8bd2cbb3aad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c4e014-8198-4348-8ea8-2ef3816dacbc",
        "cursor": {
          "ref": "00fa256f-f648-48ce-9fd2-86d7852453fa",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b35cc72d-b82c-4306-81d3-2584a73a6bec"
        },
        "item": {
          "id": "f7c4e014-8198-4348-8ea8-2ef3816dacbc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5f0280fe-3f5b-4086-a070-e5be7af6a2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c85a7e1-c398-4ab8-9a00-7e2b2ab879f7",
        "cursor": {
          "ref": "4f54dd9d-d4e1-492b-b18a-e313cac26b68",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9fd27714-2fdf-4707-bb2d-272a3ab031cc"
        },
        "item": {
          "id": "4c85a7e1-c398-4ab8-9a00-7e2b2ab879f7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a9fc7878-dd56-49c3-94ae-03ead0117990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb642f8-111a-4076-9fba-34e0d4bf9966",
        "cursor": {
          "ref": "79cea70b-1167-4fb6-a049-94d70730ac9b",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "631cd3ba-b517-4c56-acd2-14cb940f45ff"
        },
        "item": {
          "id": "ceb642f8-111a-4076-9fba-34e0d4bf9966",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0b4d1dac-d88d-43fc-a2d2-85b800099c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c44c11c-f963-4760-a906-f410ba4e4ccf",
        "cursor": {
          "ref": "c41789aa-944d-4f8f-82dc-603810e09a90",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fb6bca9d-06e9-4697-b89b-306038271199"
        },
        "item": {
          "id": "2c44c11c-f963-4760-a906-f410ba4e4ccf",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4c66c437-ac99-4b25-8343-3cc9834eee71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b20571-3578-4bd9-8a1d-0e7090b5f0cd",
        "cursor": {
          "ref": "7fad468d-1384-4365-8e9f-82d7bce6a670",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2c8fd02f-3707-4463-95fe-43d02d7667fe"
        },
        "item": {
          "id": "92b20571-3578-4bd9-8a1d-0e7090b5f0cd",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "da42bd93-ee00-4ecf-af82-8b088253adeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a93642-313a-43b6-99ae-3b86c17b5f42",
        "cursor": {
          "ref": "60dfa353-343f-4c12-9398-f8c82e4c2ad3",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "80ee46aa-d8c8-45e0-9f05-47cbdc1cd722"
        },
        "item": {
          "id": "57a93642-313a-43b6-99ae-3b86c17b5f42",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f5052fde-3796-4ebd-b75f-6f02b069f641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc81936-19bf-4c93-ad40-17ef805e93fc",
        "cursor": {
          "ref": "b95abbad-6dfe-4ba5-9d31-322b2691bbb0",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "119859da-8f65-4231-bf17-e707142f388c"
        },
        "item": {
          "id": "4dc81936-19bf-4c93-ad40-17ef805e93fc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "face191a-6b44-4f71-8921-9f6c8bbdc0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa1bd6f-6a42-4ec5-bc65-ca0e042377db",
        "cursor": {
          "ref": "7820db0f-6ea3-40ca-a2ff-bf3b8f874764",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3542da92-504e-4209-9842-7629501058ac"
        },
        "item": {
          "id": "8fa1bd6f-6a42-4ec5-bc65-ca0e042377db",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "47d63f3d-8e10-48d7-99a6-dcf08352123e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21741bc0-68f9-4a8c-950b-699c8a16b4f4",
        "cursor": {
          "ref": "e53c1821-b7e2-4fee-a6a2-1767c7b59a6b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d25e5867-7d57-4506-98ed-3cd85d560448"
        },
        "item": {
          "id": "21741bc0-68f9-4a8c-950b-699c8a16b4f4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "94cea602-23a9-4c4b-a762-bd915abd7948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38c3010-53e9-41d0-93ad-06231fb77a8c",
        "cursor": {
          "ref": "c3113712-2ca2-4566-ace8-712ca3aa4d2a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8f6da1e8-d102-4f7d-ba31-f1c9254d9ff9"
        },
        "item": {
          "id": "e38c3010-53e9-41d0-93ad-06231fb77a8c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "00e4d84f-c7b8-4e52-ac7a-32def4deb9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b89865-9c33-4730-8a26-4ece27b83357",
        "cursor": {
          "ref": "151ba37b-6fce-413d-ab04-3453dd37b653",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8f157f54-3cca-4ad2-8c3a-620f2d92b9ab"
        },
        "item": {
          "id": "73b89865-9c33-4730-8a26-4ece27b83357",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4b245a35-9d1a-409c-807a-36ddc16f419c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b701e05a-3300-4506-910b-e6a853142dad",
        "cursor": {
          "ref": "0f9e3fef-c53e-4d72-8592-9119f9e03a12",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3d666bfe-ae41-4d52-a20c-dc39acdaf7dc"
        },
        "item": {
          "id": "b701e05a-3300-4506-910b-e6a853142dad",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c3eaaa98-5cc8-4ffe-b4cd-80ea35887ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7cb922-2d1e-4544-9f84-9080a8f38633",
        "cursor": {
          "ref": "5cb7ffe0-0866-4123-9b20-00c7f41a86d6",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "175343d8-c2e5-4205-aefb-8d1be8243ed6"
        },
        "item": {
          "id": "fc7cb922-2d1e-4544-9f84-9080a8f38633",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fbe32d3c-7caa-4a45-a17b-c1aef166a48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca6f975-7160-4d0f-bae0-6ed6a29a4b22",
        "cursor": {
          "ref": "ffc97bc4-e74b-44f8-abbb-0cc448d2673a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ac9a1bf0-f270-470b-8c1e-b0df9a620c2a"
        },
        "item": {
          "id": "2ca6f975-7160-4d0f-bae0-6ed6a29a4b22",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "006e51d1-9e82-464f-b9d9-ebd23c21d22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0776ad3d-da88-43bb-99d6-14d754f63a90",
        "cursor": {
          "ref": "6d1f37a8-9d75-49dd-b9c4-cb35c3b2c20e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "66db4707-13d7-4ad0-9d05-918083e14504"
        },
        "item": {
          "id": "0776ad3d-da88-43bb-99d6-14d754f63a90",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6e4d20a4-557d-4e0e-bcc5-0534e49f0c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc1276f-c19b-484e-a1f4-08f0d0bb51b8",
        "cursor": {
          "ref": "0aa03597-9250-44dd-b339-f4ec6c51e800",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e4e3440f-d2e8-4d07-8497-03f0eac53683"
        },
        "item": {
          "id": "9dc1276f-c19b-484e-a1f4-08f0d0bb51b8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "993b7616-b344-46b7-af1c-643cc968cd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfdd1a0-7ce2-4206-add5-4cad8f0bab8c",
        "cursor": {
          "ref": "03be649c-af6b-4cea-9a53-f383524e7d05",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "728f8ad7-9cd2-4fb8-92e3-9251a3f0b1a9"
        },
        "item": {
          "id": "9cfdd1a0-7ce2-4206-add5-4cad8f0bab8c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "267c5c79-12c9-404f-9bcb-abda510accdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5167b9-6a78-44c3-91e7-ed13d5aa2a62",
        "cursor": {
          "ref": "6f2bdfc9-ac91-49e5-b868-d02cd36b4dc6",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b9d9c81a-a903-43d8-9fb8-e271afbb7d96"
        },
        "item": {
          "id": "fb5167b9-6a78-44c3-91e7-ed13d5aa2a62",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "16ccfd63-b466-4066-8707-59ab53b9fc95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1747e7e7-99a6-40d2-95dd-c619cd876d42",
        "cursor": {
          "ref": "8ae7ec9c-6ac8-4eca-8b6e-577109b82803",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a3a60fb3-03a7-464d-b13a-3c2ef7207e9e"
        },
        "item": {
          "id": "1747e7e7-99a6-40d2-95dd-c619cd876d42",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4cffe57d-f9a5-4cda-963d-980b41ca8c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41558085-072e-4fdb-8d13-5d457aa61086",
        "cursor": {
          "ref": "8fdbc338-23bf-4202-9bc4-9d4a2b0ddf31",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ceb1206e-b7c9-4fe7-9cf5-716d7ec848ee"
        },
        "item": {
          "id": "41558085-072e-4fdb-8d13-5d457aa61086",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "78670c22-a1da-4bb3-a462-1bbaa8ad04d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdacdfb-017b-4b93-bd6d-246d1228f0a5",
        "cursor": {
          "ref": "13e2a58b-b48b-4233-9a28-3d835935c8d5",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "79f421f9-1e4a-47c4-8866-e2ee45b65899"
        },
        "item": {
          "id": "7cdacdfb-017b-4b93-bd6d-246d1228f0a5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c2a2a607-3ce8-4526-b1e6-90a47485e1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f3c2ce-3bc6-48ab-833c-e773a16bee03",
        "cursor": {
          "ref": "57335eba-0543-402a-aa6f-26a5e8b43993",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "430a5cb2-82cf-4093-a8f8-e2d6c4886633"
        },
        "item": {
          "id": "75f3c2ce-3bc6-48ab-833c-e773a16bee03",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8f1054ef-d2b6-4e09-8215-815fd08d185a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9787dd1a-1359-4b3c-8b5b-f3a03e493c01",
        "cursor": {
          "ref": "13c00167-dba0-4f21-8cc2-f7fe2e267aaf",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b22bb283-245d-4473-a2d8-0591fb9a4f36"
        },
        "item": {
          "id": "9787dd1a-1359-4b3c-8b5b-f3a03e493c01",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4b6ee558-7185-4dfc-aa78-d675f963f330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58502018-d5b0-4b0f-b447-608d0545b391",
        "cursor": {
          "ref": "578b2f79-ebb4-4e98-9c7c-ac1f1fed583d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "84fea5a0-f437-4bd3-8516-7177f06ae810"
        },
        "item": {
          "id": "58502018-d5b0-4b0f-b447-608d0545b391",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c75abba8-b27c-49e4-93a6-abc35d553ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b8f676-ea62-43f1-b197-f820ce08db17",
        "cursor": {
          "ref": "93bf8969-9cd0-4b21-8949-1758a1779152",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "22a7624e-ae94-4585-8f51-417884c20469"
        },
        "item": {
          "id": "54b8f676-ea62-43f1-b197-f820ce08db17",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cf56d07d-54f0-4b90-a745-88b5aec63401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2270dab1-3c0f-4fb8-bf34-ab0ca297c63b",
        "cursor": {
          "ref": "ccd5c7dd-29fb-4cdd-aa9d-67cfeeeb56b2",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4d4ddc91-ace9-4a71-94c2-56fd6042cccb"
        },
        "item": {
          "id": "2270dab1-3c0f-4fb8-bf34-ab0ca297c63b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0779d72d-0a85-4b69-a1b2-cf6a68653e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a0c1a9-7417-4d0a-ac43-236985d0b902",
        "cursor": {
          "ref": "c3f234eb-a2df-46c4-af48-88c3c966bd2f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b7a6e1ef-4397-40fe-92c9-f680b65c93c2"
        },
        "item": {
          "id": "19a0c1a9-7417-4d0a-ac43-236985d0b902",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e0b215e0-8393-442d-85f7-815c82b34364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c03143c-a6dd-4a21-918f-e77277b3c030",
        "cursor": {
          "ref": "9bda2496-bcab-4a75-9109-fd7d41f9c9a1",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ca43571c-49d7-4fe0-8c8f-8e9ee2162313"
        },
        "item": {
          "id": "7c03143c-a6dd-4a21-918f-e77277b3c030",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "355bec71-9514-40ee-8b73-baf6f41c87b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d45cc3-f7da-4d5d-a708-c76f24a4d4d2",
        "cursor": {
          "ref": "0e40d3da-00a1-4944-b2af-8b8f1667285f",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1eee3bcb-7602-4ab7-86fb-6c0762428887"
        },
        "item": {
          "id": "b6d45cc3-f7da-4d5d-a708-c76f24a4d4d2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e904679c-60b0-42ac-8488-398b5df993b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1af6bc-3b0d-4a37-bc74-4a1e40b8e803",
        "cursor": {
          "ref": "c1beb0d8-ebb1-4b11-beb7-a0d2948c31bc",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f796bd77-2549-4024-a506-f01653fb98d3"
        },
        "item": {
          "id": "cd1af6bc-3b0d-4a37-bc74-4a1e40b8e803",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "36a94e22-96bf-4649-816c-41a2a09a2b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76fd052-769e-4c43-9a35-590dc609a394",
        "cursor": {
          "ref": "54cd722a-a972-4445-8c37-12c05d763d3e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d4d23ba9-21cf-4223-a0aa-b745903b9f0e"
        },
        "item": {
          "id": "b76fd052-769e-4c43-9a35-590dc609a394",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4b38e059-a457-4bf4-8cf8-6bfb07309d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7097f1a-ddaf-44f3-a36d-432b6730cce6",
        "cursor": {
          "ref": "de72fe0e-efba-4061-b9b1-8e0b824e2c51",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "30075e0d-8234-4ce8-9aa5-58f194863016"
        },
        "item": {
          "id": "b7097f1a-ddaf-44f3-a36d-432b6730cce6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "17c4d5bd-c482-457e-9ef5-fb16770fadbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fac814-cb7f-4954-87db-319ed1396fa9",
        "cursor": {
          "ref": "3bf44244-21f1-433a-be54-2e52d1e74009",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "97eb50ee-2460-4b00-8bc1-586f5a6d4413"
        },
        "item": {
          "id": "18fac814-cb7f-4954-87db-319ed1396fa9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a93531aa-faeb-49e9-a3fd-4593e2e6546d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666a636c-1bac-4136-8257-938bba5e15a7",
        "cursor": {
          "ref": "bfe7e0e2-8bde-4e8f-bc19-44096489000d",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c0c683e4-7e19-420c-ac46-2dc509d37b1b"
        },
        "item": {
          "id": "666a636c-1bac-4136-8257-938bba5e15a7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a5e397d2-0d2f-43e1-9113-a07b6970ae62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da157dba-4c11-42b6-9603-300b8b6c4e79",
        "cursor": {
          "ref": "de557b2f-5ed2-492f-887a-58a73c080e4f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "945687fe-5b43-47d5-a100-f8440afe5388"
        },
        "item": {
          "id": "da157dba-4c11-42b6-9603-300b8b6c4e79",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2b60b4c2-e358-4e78-8b0b-40b61b8c3c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf178091-dfcc-4c38-a082-a26dbb4ca18f",
        "cursor": {
          "ref": "b6e784f8-41f1-42e9-aab1-c00e962a3e19",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3f7dd572-2440-4e58-90cb-462a37a2c3ff"
        },
        "item": {
          "id": "bf178091-dfcc-4c38-a082-a26dbb4ca18f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "244c525e-d1dc-47a4-82f8-fac3f66b3e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdf1361-20d5-449b-898c-94bbb439664b",
        "cursor": {
          "ref": "d09b73d3-26f6-45c2-9823-e8c866d3f410",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "aff1e0ca-6d66-4575-a74e-5fbf247127af"
        },
        "item": {
          "id": "fcdf1361-20d5-449b-898c-94bbb439664b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cf9d36e9-46a6-4309-ae3f-7a0333d80241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3b20f3-23ec-459f-978b-05d5e4f6edef",
        "cursor": {
          "ref": "119ec8bd-9928-4453-aaf0-d340a8a05e36",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cd12f5d7-af4c-4893-8d38-10f86864c0d8"
        },
        "item": {
          "id": "5e3b20f3-23ec-459f-978b-05d5e4f6edef",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "69379cc7-52dd-4b88-98bb-8bfe0db3f89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdfeb7f-0cfd-472f-bd47-b1ea9014823a",
        "cursor": {
          "ref": "757ddf24-ecd0-4c01-a2fc-0b02a9c5079d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "043a4ec5-52bc-4734-b090-a164b03f53da"
        },
        "item": {
          "id": "5bdfeb7f-0cfd-472f-bd47-b1ea9014823a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5823c1b6-c0e1-42a0-a114-128322097151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e28ff7-e1de-4359-9ebd-9d886138e692",
        "cursor": {
          "ref": "6f5a2c56-6eb4-403b-9885-4466790b28bf",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c3ca4df8-8396-4f06-bd09-47736a72e47a"
        },
        "item": {
          "id": "e2e28ff7-e1de-4359-9ebd-9d886138e692",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9728bc99-ac95-4997-b9c5-d0b16bb2d44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b99184-35fc-4620-929f-695a9c92334c",
        "cursor": {
          "ref": "9cad311f-43f1-4c69-b9f5-fa12271b25b1",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4304a933-6892-453f-99ef-35f83a2a2e28"
        },
        "item": {
          "id": "89b99184-35fc-4620-929f-695a9c92334c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d8229360-08c5-4804-a71f-286d9d21662c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6645ec78-7112-4ca6-8275-e8a104befcbd",
        "cursor": {
          "ref": "e4f8bbbc-0bd8-413c-8a47-6b113e057feb",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ac6010e2-26ee-45ea-8210-5cc11b09e8ef"
        },
        "item": {
          "id": "6645ec78-7112-4ca6-8275-e8a104befcbd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cd883e0e-fadf-4ce4-bd24-97a16346320a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f38ee3-9102-4ed8-8847-31eb4589b970",
        "cursor": {
          "ref": "545f5b1f-3512-485e-926d-4f68320f84e0",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9c444355-8fd9-4c33-b0f2-398bc51a215b"
        },
        "item": {
          "id": "56f38ee3-9102-4ed8-8847-31eb4589b970",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "24fe6113-3f59-46a4-ad7a-1d7e8f5ffedc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d33ab1-a428-4c5b-a1cc-696ca8c748d9",
        "cursor": {
          "ref": "5ae5c04f-1ea0-4056-9cab-84927a973270",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ac7d4c3c-718a-4504-be14-1f72db7c0329"
        },
        "item": {
          "id": "b0d33ab1-a428-4c5b-a1cc-696ca8c748d9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f59ba754-cd41-4e60-91cf-d254dd843e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ced4f3ea-4f21-430a-9359-7420e1126cd0",
        "cursor": {
          "ref": "dfeb82b5-deec-48c6-8be3-822c320e9090",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "37efa71a-485d-446b-bd33-a762485f9472"
        },
        "item": {
          "id": "ced4f3ea-4f21-430a-9359-7420e1126cd0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3182a0c7-f3fb-4a7d-a651-5a06a60747b3",
          "status": "Created",
          "code": 201,
          "responseTime": 22357,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bee2144-c0ab-4302-80f2-a2d3e86c4322",
        "cursor": {
          "ref": "0fa217af-3eb7-4dbb-98a3-35fb5bf02a5e",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "566f76d6-6748-4f3a-8c8a-6669fab6cf8c"
        },
        "item": {
          "id": "6bee2144-c0ab-4302-80f2-a2d3e86c4322",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4946b431-fade-4199-baad-6ab1f39a6b1c",
          "status": "Created",
          "code": 201,
          "responseTime": 20829,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dda387-0ef2-4f5c-9c16-176d203aef24",
        "cursor": {
          "ref": "3831cb2f-f935-4f6f-9ede-888321352a19",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1606b280-e8e6-41f8-9d35-c2f91654aae7"
        },
        "item": {
          "id": "a9dda387-0ef2-4f5c-9c16-176d203aef24",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3202ae67-066c-4e87-93c7-cb9dca4c2a84",
          "status": "Created",
          "code": 201,
          "responseTime": 21165,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "74de1849-69d1-4a32-be7e-47fc70cfa631",
        "cursor": {
          "ref": "460028a4-5908-4209-91d0-2677c7c2bf29",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c1bad5b1-aa2c-4932-8316-353fe8615df8"
        },
        "item": {
          "id": "74de1849-69d1-4a32-be7e-47fc70cfa631",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c0ccd69d-47f0-422f-b397-ec2787b528d0",
          "status": "Created",
          "code": 201,
          "responseTime": 20979,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "039a0fef-5998-414b-958b-4f4ba5a930fc",
        "cursor": {
          "ref": "03d0fdf7-acb8-4f8e-a0a8-05c5dd6aa22f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d5b7b580-2477-4405-908d-3e8c880f8a32"
        },
        "item": {
          "id": "039a0fef-5998-414b-958b-4f4ba5a930fc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9adff8d7-e36d-4c18-8afc-c1cac30d01a1",
          "status": "Created",
          "code": 201,
          "responseTime": 21096,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-18T00:45:14Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-18T00:45:14Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0ba8d295-168b-4cea-b897-61996a2c3570",
        "cursor": {
          "ref": "cc85a223-598a-448a-b278-2d0238019571",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5dc29d03-6ccb-421b-b9e0-1150246fba64"
        },
        "item": {
          "id": "0ba8d295-168b-4cea-b897-61996a2c3570",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "97b5c96d-8719-4c5c-847e-271e2915a147",
          "status": "Created",
          "code": 201,
          "responseTime": 21175,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d010ef6-fd58-4f91-862f-0fedb7ce5b7f",
        "cursor": {
          "ref": "c31edfe1-f603-467c-ba17-b0857f53ce95",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a106a657-c1cc-43fb-8639-637d302e1a9a"
        },
        "item": {
          "id": "5d010ef6-fd58-4f91-862f-0fedb7ce5b7f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dc8f0566-e631-4ebd-9a7d-a12cfd747c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a008a126-4e71-4bdf-be32-a13890521658",
        "cursor": {
          "ref": "22d3f7af-e665-47b2-add1-ef7fa80d43c3",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e0d5ec24-d4e2-464d-99d8-8a842a426091"
        },
        "item": {
          "id": "a008a126-4e71-4bdf-be32-a13890521658",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "37833a04-7e52-4be9-af9f-41cde4b71004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1625136-075f-48d8-9c43-15c1d386654c",
        "cursor": {
          "ref": "5cd05540-663e-46b5-a81e-57d110eeddfe",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6aebe43e-25ce-4b98-9461-72bdc8e0d599"
        },
        "item": {
          "id": "f1625136-075f-48d8-9c43-15c1d386654c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f37b2e8d-93f6-4ed4-9226-73db8fb92fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e020f0-ece0-4a63-b6c0-7c3b4415a89e",
        "cursor": {
          "ref": "8e50703e-223b-4e75-ad5d-0300857c39c6",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b989e726-59b0-4044-bc85-30a217421aa6"
        },
        "item": {
          "id": "99e020f0-ece0-4a63-b6c0-7c3b4415a89e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1d0a7b15-569c-447c-9938-c788ff7e4ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861ab1f1-bbb3-4d34-a1b3-1887d4665d1a",
        "cursor": {
          "ref": "9bc668fc-84e8-4c2a-9c40-f094d0072963",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9dccdc3a-a9d6-4377-ae22-954be67329c1"
        },
        "item": {
          "id": "861ab1f1-bbb3-4d34-a1b3-1887d4665d1a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "02850728-f2eb-4a53-a506-bf1661c5c045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55289aac-c154-4f19-9882-dc2760f00463",
        "cursor": {
          "ref": "1ae41be5-0933-47d2-b215-48594420cae5",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0ac60d46-a1f8-4adc-a615-fcce27adaf3b"
        },
        "item": {
          "id": "55289aac-c154-4f19-9882-dc2760f00463",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e643b969-771c-4575-9221-625b1cef8e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a314da6-56ea-452b-8819-a212b543608e",
        "cursor": {
          "ref": "64961d68-dc7b-4d6c-8b51-299aab562ab7",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b87c8a31-7920-4967-850f-5abda6496bbd"
        },
        "item": {
          "id": "7a314da6-56ea-452b-8819-a212b543608e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e10b92a2-447f-4856-bbf2-694d6011b993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca826918-15aa-44a3-a739-446330c8738f",
        "cursor": {
          "ref": "447850ff-e9e7-4967-8f3f-f0ad6233896a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1bdeaaf9-b4a7-4280-8004-fae99759dc6d"
        },
        "item": {
          "id": "ca826918-15aa-44a3-a739-446330c8738f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0b4dd3c3-0e0b-4f83-835b-1dbe9a9425dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35f2b4c-82ca-475f-b28a-6db1ed8b63c6",
        "cursor": {
          "ref": "c54b94ff-29ec-442d-adf3-52c0ee054d31",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "211a1498-d23c-49bb-99a3-dc9de3f4d252"
        },
        "item": {
          "id": "b35f2b4c-82ca-475f-b28a-6db1ed8b63c6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3454c770-9e42-49f4-beca-82f4c9c2ea9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f58034-4658-437c-958b-400c34de8a05",
        "cursor": {
          "ref": "c848f8fa-2860-4e8f-8ed0-4def43d296b7",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ce41cbce-b7dd-43ab-ac1a-280a53e6134c"
        },
        "item": {
          "id": "86f58034-4658-437c-958b-400c34de8a05",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c0a38f05-1588-4295-a63c-b33c0f3dc839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c98d25-3517-441b-acbf-c22f270c971b",
        "cursor": {
          "ref": "13d97135-e627-4505-89ae-dee0794b5a46",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e28bb96b-2c76-4e4b-9e2f-53bb97de4164"
        },
        "item": {
          "id": "61c98d25-3517-441b-acbf-c22f270c971b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5388697d-7d81-4a6d-9b48-e179e4432f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3427bff3-863a-4e84-9a36-674e24f59862",
        "cursor": {
          "ref": "18558819-acc9-4445-b914-adb1d6b11c6a",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f2e0b27e-9115-47e3-b96f-27713b435c22"
        },
        "item": {
          "id": "3427bff3-863a-4e84-9a36-674e24f59862",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1d8c762c-09e0-4efa-b4c9-53075606e9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21f2872-5bbd-41a6-85a9-f1e5821cc3d8",
        "cursor": {
          "ref": "47103092-b287-4f7e-8b87-0c6e5a26c6d6",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "19e9af23-bdff-4824-9139-05a491baeee3"
        },
        "item": {
          "id": "c21f2872-5bbd-41a6-85a9-f1e5821cc3d8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "63e9015f-70e3-4740-93e9-d7593f40881a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127f3c71-72ed-4ecf-a26c-b7dc560c598a",
        "cursor": {
          "ref": "07ac9f56-1a18-4991-a41f-c1969e7d1f76",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1b973721-69a2-45f7-a377-f01e0b577b5a"
        },
        "item": {
          "id": "127f3c71-72ed-4ecf-a26c-b7dc560c598a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b3db1256-27d7-42cb-aff0-415b91494b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c27238b-de8e-4165-b3ca-23748e3f5806",
        "cursor": {
          "ref": "f2e7f0d5-0a4b-41db-a4a6-e71644d2e99c",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "26d35047-ae13-4a95-910d-68fb7e093f67"
        },
        "item": {
          "id": "5c27238b-de8e-4165-b3ca-23748e3f5806",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2cebc59c-97ee-4fe2-9d10-536475392ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bfc6c9-aa81-4521-89db-d2014bc9255c",
        "cursor": {
          "ref": "6111fcfc-e82d-489d-b8a9-e590b01fa59e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d5acb120-907a-4db4-a6de-1b266f4a6779"
        },
        "item": {
          "id": "b5bfc6c9-aa81-4521-89db-d2014bc9255c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9c0fd0d0-b71d-40bf-ae60-a1da18f8bc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c722a4-68ca-4de3-93e4-6e63cb4b1eae",
        "cursor": {
          "ref": "d94949d0-8045-45af-a415-5c71d9399a35",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "03c33465-d68a-4f5a-920d-43364e5a6ec1"
        },
        "item": {
          "id": "39c722a4-68ca-4de3-93e4-6e63cb4b1eae",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e4f6474d-fad7-466f-88e7-d009e15c251b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4f6e96-9809-4b10-bcf4-7e46c8490392",
        "cursor": {
          "ref": "0f89763c-87c9-4ac8-9d79-aeb24a92fb3f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7dab1e79-935e-4680-9152-a16d9d3e74cf"
        },
        "item": {
          "id": "2b4f6e96-9809-4b10-bcf4-7e46c8490392",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9d3a23af-8e01-407a-aeee-e8a2c29d0d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f850679f-ebd3-4500-99f1-97740b8bb202",
        "cursor": {
          "ref": "57838212-42ce-42a7-8e3e-1ccd7a89d1ae",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a00bf6b7-27b2-47dc-bd35-9637e3f499d5"
        },
        "item": {
          "id": "f850679f-ebd3-4500-99f1-97740b8bb202",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a5145365-e0f4-4e3b-8b80-e46d7e49a49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288b6d5a-e012-46a2-9c85-8b040b0dd816",
        "cursor": {
          "ref": "0a94cde7-eb6c-490b-9a19-58aa7adb8d4e",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3eb49d6f-fc1d-4669-937f-c87d2cd4f3f0"
        },
        "item": {
          "id": "288b6d5a-e012-46a2-9c85-8b040b0dd816",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "37dbf2df-e23e-4f7c-9962-2a8b5ef163d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40363fc2-258d-48f5-b306-c7fe45c85cdb",
        "cursor": {
          "ref": "9ac67309-05ec-462d-a5ef-8d7880829ee2",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "71596e1a-27d4-42c5-b970-230439ed0809"
        },
        "item": {
          "id": "40363fc2-258d-48f5-b306-c7fe45c85cdb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cad161fc-8872-4288-94fa-a548d6173ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90c6f1c-33cb-4b63-80d0-4ac05b010ec0",
        "cursor": {
          "ref": "8cda09a8-7095-43e4-9fb5-81d7547ae4a5",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "98bdb244-d5aa-4dbf-aa45-00c6f5134774"
        },
        "item": {
          "id": "d90c6f1c-33cb-4b63-80d0-4ac05b010ec0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "be894be1-ede3-4729-af98-71d4d66d25dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b78c518-08b2-40a4-8cfa-f89a867e486a",
        "cursor": {
          "ref": "4d8d1b6f-1f25-404c-9f5f-21cc715459d2",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bd7b214e-f188-4158-ae3f-990dcc05059c"
        },
        "item": {
          "id": "6b78c518-08b2-40a4-8cfa-f89a867e486a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e6f93ebb-9d01-453c-9b0f-054d64a8a3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab8bfc5-62fd-4cbd-8bec-fda3efe0d955",
        "cursor": {
          "ref": "182884e1-06ea-40a9-b2bc-810e914b7d34",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ce2cd148-8615-4e32-b251-ff5e3d479a31"
        },
        "item": {
          "id": "dab8bfc5-62fd-4cbd-8bec-fda3efe0d955",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4ac2194d-d566-40ff-8684-672f52b48539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a436506-7afa-427c-94de-9d54b0bfb1be",
        "cursor": {
          "ref": "56c1663f-b163-4d3b-8524-7ab7c79b5b6e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "60957777-dad3-41f7-96c6-a8a2d3127f82"
        },
        "item": {
          "id": "0a436506-7afa-427c-94de-9d54b0bfb1be",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c135198a-727f-4b1a-8b4e-6877139daa90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e8ea87-5903-4c6b-b401-12bbfdf9a127",
        "cursor": {
          "ref": "e5d1ba8d-4af8-4c47-a531-036c02e0e2e0",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fb620eae-28bb-4ebb-bcc1-32f311d5bee0"
        },
        "item": {
          "id": "74e8ea87-5903-4c6b-b401-12bbfdf9a127",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4cc38550-89e4-4ee4-bc18-80cb5a26ddb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8dee79-e09e-44a7-bda3-263de7f680cf",
        "cursor": {
          "ref": "d44d5b14-154f-4704-b786-232189eda557",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "498c5e0c-372d-4995-a175-98c7595035e8"
        },
        "item": {
          "id": "8c8dee79-e09e-44a7-bda3-263de7f680cf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "72ce511d-ebbb-453b-9a55-b3d95e03f8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b56b6ed-7cbd-499a-a9e7-129cf07a52af",
        "cursor": {
          "ref": "662cf9d5-936e-442f-9f81-3616894cf23b",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dc85cb9c-8403-447f-9342-4aee9c75f544"
        },
        "item": {
          "id": "4b56b6ed-7cbd-499a-a9e7-129cf07a52af",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "239d165e-2911-4a5b-8c24-a5729aca4cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9ecf2b-7247-456b-85b1-3dd3b6f5e663",
        "cursor": {
          "ref": "e20c1560-3314-4ed8-a593-f4cf734c6ebb",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a99244a5-22e2-4fe1-b2ad-cf1cf2fd5c69"
        },
        "item": {
          "id": "8c9ecf2b-7247-456b-85b1-3dd3b6f5e663",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "26a38d0a-12a9-42b2-9e31-4c1469ad9aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d055e2-8717-4bfc-9f29-42ab381c8351",
        "cursor": {
          "ref": "a87741a8-668a-45dc-9639-bf943a2a8d9e",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cfaa03df-89e0-463f-a097-57f3fdafd5c4"
        },
        "item": {
          "id": "d6d055e2-8717-4bfc-9f29-42ab381c8351",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ffcb641c-0dac-4fa7-a8a1-e3586b5bc7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82724e9c-028f-4667-9e1e-b417895d6599",
        "cursor": {
          "ref": "b28a0fda-d2f7-4d0f-b2f0-0fa0539632c3",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ace71fef-f695-4809-9914-a57148031e65"
        },
        "item": {
          "id": "82724e9c-028f-4667-9e1e-b417895d6599",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e8031c99-80e6-42be-8644-63bd8b6373ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472824f3-4721-472e-9093-b00da1dc17a8",
        "cursor": {
          "ref": "bd59d15a-d219-40ce-b5ad-939b483aaf34",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "37627ec7-8e04-4e22-bf06-82f2dc18741f"
        },
        "item": {
          "id": "472824f3-4721-472e-9093-b00da1dc17a8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "17c4bfef-233c-4ff7-af10-307aa977987f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7321e94b-1b57-4f89-a145-cb7ba55002ca",
        "cursor": {
          "ref": "ac943cb9-1290-411a-8419-b032897d7309",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1654ad6a-6a79-4204-baad-8c4cf2e6a348"
        },
        "item": {
          "id": "7321e94b-1b57-4f89-a145-cb7ba55002ca",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8db58767-1233-4ba0-a7b2-af6627e4b6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7e0246-b536-4e62-ba10-fa1cd1cb734b",
        "cursor": {
          "ref": "dbeb58ab-cc73-4668-903d-fa6c76bb6fdf",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "36224d25-5858-4ab0-a2e3-71356a2d716b"
        },
        "item": {
          "id": "1e7e0246-b536-4e62-ba10-fa1cd1cb734b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5f4e4ec4-60c0-4f95-8ac0-6e38b5280659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe1670e-76e7-4fbf-aa68-bde45bec890c",
        "cursor": {
          "ref": "0417a616-dccb-437a-9e5d-834987fb4c4a",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8accd886-da44-40d2-b730-73e55af1b8f7"
        },
        "item": {
          "id": "cfe1670e-76e7-4fbf-aa68-bde45bec890c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b1aed6ad-f409-49c8-ab8c-e75083318937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c6c153-313a-429b-ac09-9389bd64d6ee",
        "cursor": {
          "ref": "00675aae-6e9a-4217-87af-bbe29b266646",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "13d5a69e-628f-46c2-9339-e99a0c1ece74"
        },
        "item": {
          "id": "c3c6c153-313a-429b-ac09-9389bd64d6ee",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cc817fcd-e692-4d81-9e9d-04c5786e775f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da5c2c0-05f9-4a64-b6a2-175f03ac19c1",
        "cursor": {
          "ref": "5f95f610-7446-4ba1-a7b7-05417b87d3a1",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c26fbe3d-550f-4f57-a318-1fba4a1ea732"
        },
        "item": {
          "id": "0da5c2c0-05f9-4a64-b6a2-175f03ac19c1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0d0e42f9-9bc1-4e72-9147-42ac5319a8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dbd21e-df34-4e6e-83b4-94f880b648b5",
        "cursor": {
          "ref": "c6f52aa3-0695-42ce-ad5f-97dbb8411388",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "85799d49-58b8-4057-b3a3-721bb9d89a7b"
        },
        "item": {
          "id": "14dbd21e-df34-4e6e-83b4-94f880b648b5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6073ebfe-e1ff-40d2-a68b-f96238ed289c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5056b2ea-02ef-4d86-be81-3f23ac7ed151",
        "cursor": {
          "ref": "1cc82f6c-f8f8-483c-8084-240342bb1c12",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b5ae78b9-2c29-4744-a9b7-b67f1eb7b64c"
        },
        "item": {
          "id": "5056b2ea-02ef-4d86-be81-3f23ac7ed151",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6f05da56-ce3b-4d50-984e-a3a1aa246f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a8130f-01f1-412b-b3c7-835f3d4a8148",
        "cursor": {
          "ref": "6edff2c5-c0a9-4861-a469-8f6f07ff3e88",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "323f47ea-c887-4f8f-a168-b0528df1ef08"
        },
        "item": {
          "id": "b7a8130f-01f1-412b-b3c7-835f3d4a8148",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c65a5280-a318-4b95-96da-e4d900201019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e871824-d65d-4962-b55f-c6b8a9c60679",
        "cursor": {
          "ref": "a0b40e7a-94c7-4315-972b-78c40b10c650",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0a7288e0-a4fa-457a-a612-b90f50fa5257"
        },
        "item": {
          "id": "8e871824-d65d-4962-b55f-c6b8a9c60679",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e67bdf2a-d994-4532-ae0d-2a943695c54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3542a59-17e3-4b68-8d83-a41b571c878a",
        "cursor": {
          "ref": "a346862d-330f-4657-a588-568e808495ff",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bdcb1947-6cb1-4c9d-9d50-73ddb4f5dd5f"
        },
        "item": {
          "id": "f3542a59-17e3-4b68-8d83-a41b571c878a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0fc3b909-60c1-4f32-a11f-e2635e136897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d01169-53ba-40df-b37b-c03605a786ce",
        "cursor": {
          "ref": "044da199-a66a-46f7-8636-69876f9b95e3",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b1e812c8-ec5c-4f95-8d06-ec84972b1da3"
        },
        "item": {
          "id": "06d01169-53ba-40df-b37b-c03605a786ce",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a73803bf-6341-4f84-963b-90c56b5d857b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4878cb69-4c45-4c10-b073-2d013fb49e36",
        "cursor": {
          "ref": "eec589c2-4dae-49b6-98e4-a10dc83613bb",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "64f39729-a2c7-41da-b5a0-a156fa524478"
        },
        "item": {
          "id": "4878cb69-4c45-4c10-b073-2d013fb49e36",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e9e56121-6baf-48bc-b74c-c47fee397908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db401ed9-656e-4b05-999a-ef0f7c90a548",
        "cursor": {
          "ref": "35ab43b5-483d-44d3-b3da-f0fe173baa84",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a92b5174-5f53-4dfd-816b-738e1930d5fb"
        },
        "item": {
          "id": "db401ed9-656e-4b05-999a-ef0f7c90a548",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5be3aa19-7994-4db2-98c9-2ef66373a54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131d7958-5fd2-49d7-8fc3-b8ca8d7b46bc",
        "cursor": {
          "ref": "a0cfb78c-d466-49e3-80a0-c6841d1cc9b3",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "36467cb7-889c-4750-ad0d-8873e7d7e517"
        },
        "item": {
          "id": "131d7958-5fd2-49d7-8fc3-b8ca8d7b46bc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "69d184d4-b074-4954-b2d5-3f79d96411cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc60b7a-1a6d-4a3b-bbea-05c75c1fae45",
        "cursor": {
          "ref": "129d7cf0-b87e-4d30-a028-6b61158fcb1c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7163bcee-e300-4272-aced-711073620e2c"
        },
        "item": {
          "id": "5fc60b7a-1a6d-4a3b-bbea-05c75c1fae45",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "435f1d04-6723-446e-a812-fe121bd03808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686b9463-43c6-4037-b104-7b8b649db3e5",
        "cursor": {
          "ref": "a75634d4-e540-47b3-8064-dd3f9f8ecefe",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0a6a7708-bfe0-43b1-88d7-8449a81ba4db"
        },
        "item": {
          "id": "686b9463-43c6-4037-b104-7b8b649db3e5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3a6440f5-7c4a-46a5-a7dc-c65256047e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b24a49f-fde0-4ff9-a63e-ecbcf71d5af8",
        "cursor": {
          "ref": "acaee2b4-5897-4888-a4e7-6b71a1449907",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "39807796-e212-4466-b32b-8ba3b1c00912"
        },
        "item": {
          "id": "6b24a49f-fde0-4ff9-a63e-ecbcf71d5af8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ae9bf1a6-f7b2-4cf9-91c4-8dffa95292a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a04cf1d-5323-4aab-9772-4bd0bafb298a",
        "cursor": {
          "ref": "c86a9ed2-2e4c-4980-8484-df40fab47e93",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3e0ad840-3e9c-44b8-a668-b3fc245c887a"
        },
        "item": {
          "id": "5a04cf1d-5323-4aab-9772-4bd0bafb298a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "27b44517-9b88-4d7d-9e06-44b1bb7ccb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c38be9-ff8c-4ab1-91e0-65292be4c9b7",
        "cursor": {
          "ref": "93aee406-50f4-4753-b37a-f647d23a31f5",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5ed659a4-8002-4d2f-adab-506843f1a656"
        },
        "item": {
          "id": "17c38be9-ff8c-4ab1-91e0-65292be4c9b7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e8973a71-28f4-4bf7-943a-dd0a48bcf977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1e0fc6-916e-40d9-a2a0-c92ad47952c2",
        "cursor": {
          "ref": "cb12e6bc-bda4-48b6-8d03-dbbcd50ae493",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1b5dc15e-4d1c-41e3-aa43-e67e06eda644"
        },
        "item": {
          "id": "2c1e0fc6-916e-40d9-a2a0-c92ad47952c2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bd06cdd1-cf8c-4c77-a21e-53746c695db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdaab26d-30dd-47a8-8c7e-19e58fa061b2",
        "cursor": {
          "ref": "44a241ad-0bcf-46d4-b728-b230d825e9e6",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "835b7bef-ff75-4e75-8f9d-beb0dfde8e4e"
        },
        "item": {
          "id": "bdaab26d-30dd-47a8-8c7e-19e58fa061b2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ae268862-abd3-445b-b343-9348869b80bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2419c5fd-254b-4a58-b8e9-b1c566a95a38",
        "cursor": {
          "ref": "5bc3fe9f-04fa-4428-a317-22d7bcd7a918",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "df40b486-c794-4ebf-b42d-2a8a356bb7a3"
        },
        "item": {
          "id": "2419c5fd-254b-4a58-b8e9-b1c566a95a38",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c8a5f868-9c3d-4144-b4f1-bbe87bea0be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8fcc15-973d-42f9-9f1a-4df48216c87c",
        "cursor": {
          "ref": "c32b021b-d49a-49ab-b562-b625b5ceec40",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6e5a0f4c-e8be-4546-b101-19c5385cc5b4"
        },
        "item": {
          "id": "8c8fcc15-973d-42f9-9f1a-4df48216c87c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9f459b35-7638-42be-80ee-76336bebfa12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0971a32c-7189-4f01-89ac-387cc3d00c95",
        "cursor": {
          "ref": "0fafa08b-be20-4ba5-84dc-5e05d52ddc73",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d8e45016-e1a0-46b1-935b-00307795d8f0"
        },
        "item": {
          "id": "0971a32c-7189-4f01-89ac-387cc3d00c95",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "87743b1a-31eb-47c6-aaaa-3eb6fd3c6d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753b93ed-c4a2-4326-bdf6-580cb2554e83",
        "cursor": {
          "ref": "cbaeedcc-5ee1-4c69-af46-94e7bdac333d",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e19f5e36-7c80-450d-b954-0c412b0f591c"
        },
        "item": {
          "id": "753b93ed-c4a2-4326-bdf6-580cb2554e83",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fc754953-49ec-4299-ba11-c58295c4a11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797deb09-9bca-4f9a-a49c-4362ba96b01e",
        "cursor": {
          "ref": "a43db781-c22c-4558-91af-da66f39cfd2a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "30b935b2-e9b6-4bee-aec5-e06793b7aa4e"
        },
        "item": {
          "id": "797deb09-9bca-4f9a-a49c-4362ba96b01e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "dc225d31-3db3-4ef4-903d-e6cc48606e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36323bf-4f3f-4ada-8ef0-e58518f5a76c",
        "cursor": {
          "ref": "3bd1c1d8-62c1-4c43-9a6b-ac2c49a4ca26",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2f248ee3-0287-4d86-b68a-0d14ddc6dc57"
        },
        "item": {
          "id": "b36323bf-4f3f-4ada-8ef0-e58518f5a76c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4cc408a7-0788-4922-a95f-ba668bb12a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5de03a-b8f1-460e-9386-025280612cce",
        "cursor": {
          "ref": "d49e6e63-cf05-48c9-ae4c-b5674b3ddd72",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "62652b44-9d56-42a7-9c86-3fe37610e659"
        },
        "item": {
          "id": "ac5de03a-b8f1-460e-9386-025280612cce",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ca7dabd5-3e3f-49ec-9f77-a285d8598e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61e9c9c-87b6-4482-b228-a4cd54c678a6",
        "cursor": {
          "ref": "f23bfde2-88bd-493b-8c8f-a6cb8ffe42d7",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b0476cb5-0070-473a-a260-7d3c476c80f9"
        },
        "item": {
          "id": "a61e9c9c-87b6-4482-b228-a4cd54c678a6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "53758e03-b910-45ec-b0fe-cb0779e7ddc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d5c733-26f8-497c-af0c-878dd86a5413",
        "cursor": {
          "ref": "6fb2cf4a-0f1a-4854-a1ab-484473794ddc",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a5b8e3f6-ebdd-4ff4-922e-eb9862d7e59c"
        },
        "item": {
          "id": "87d5c733-26f8-497c-af0c-878dd86a5413",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "99d06f07-9f0c-43d3-a650-10335c16d589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1e6916-f6de-4eb3-a3e7-037a20ef8595",
        "cursor": {
          "ref": "471746df-ac1c-46d2-97b5-c3a22dcb28e4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ca0a7a15-f4b3-4580-b780-10fc7645ffcf"
        },
        "item": {
          "id": "4d1e6916-f6de-4eb3-a3e7-037a20ef8595",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "078be731-4959-44a0-8727-58c4a311a3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dffe65-c2c4-4014-8868-84b2691efc14",
        "cursor": {
          "ref": "6681c230-58de-45ca-aeca-fa4ddd3d3508",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3b4ca111-deb9-46fa-b086-fbf621aa60b7"
        },
        "item": {
          "id": "61dffe65-c2c4-4014-8868-84b2691efc14",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a43f5a36-6665-4053-ae08-ba0fc2e05a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c57f8ef-e524-43e1-b488-e09025f3d3ac",
        "cursor": {
          "ref": "cf1c42b6-1e54-4b88-84fc-b3ef8da0f273",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e4ff52af-dd1a-4f4e-bd66-8242d72676da"
        },
        "item": {
          "id": "1c57f8ef-e524-43e1-b488-e09025f3d3ac",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5ff11bdb-6a1b-4659-9608-14891398d2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db39ae6d-15bd-4883-909a-822f81fddf55",
        "cursor": {
          "ref": "1243a1c4-168a-411b-8ee6-f33a63e4bbb1",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "be005c29-33d8-4726-9e0f-76dda4564c64"
        },
        "item": {
          "id": "db39ae6d-15bd-4883-909a-822f81fddf55",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "955e3669-d855-4fb0-8fae-9b0131318a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17492f98-4de4-468a-842f-f2070d100912",
        "cursor": {
          "ref": "b9c5dbf8-dfc1-43c0-84f4-27125fe8a649",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "dc273498-933f-4bbc-9c35-b3fd13000346"
        },
        "item": {
          "id": "17492f98-4de4-468a-842f-f2070d100912",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6de446d0-2595-4e48-9330-c7a242acf629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86aee81-1ba7-4fa3-9698-e75b6592f856",
        "cursor": {
          "ref": "ed00409b-89a8-471c-b13b-4ee8541b4e31",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e33ad149-3003-443a-8e12-f833f98b8105"
        },
        "item": {
          "id": "c86aee81-1ba7-4fa3-9698-e75b6592f856",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7bbc919d-3066-43df-b23c-c6ce18cf7556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0f1952-39f7-498c-ab3b-151edd87d039",
        "cursor": {
          "ref": "c0480a5a-b6d6-40b6-8b29-efbe32bde8eb",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f87c9601-5921-4444-8563-a3f7206eaabc"
        },
        "item": {
          "id": "1a0f1952-39f7-498c-ab3b-151edd87d039",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1134fc62-da2e-4b61-a9f2-68bc7d02f1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15b4192-3a3b-4fe3-b5a5-697ca6f3749c",
        "cursor": {
          "ref": "9ef56f5d-bd06-4881-8bca-5904b6d8a551",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "255c19f2-7966-4351-a5e3-017074e12577"
        },
        "item": {
          "id": "e15b4192-3a3b-4fe3-b5a5-697ca6f3749c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9a335db0-e6bd-4830-91af-e777bc34b9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed109804-7e61-46e5-af24-3f850d8a1bc6",
        "cursor": {
          "ref": "35081354-97bd-4f9d-89da-47eb7a0684c3",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b22256db-d61c-4a19-b7c4-e622ed890adf"
        },
        "item": {
          "id": "ed109804-7e61-46e5-af24-3f850d8a1bc6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a7721573-68f7-494b-9cd8-e83105411336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ab4333-9a01-4208-9463-7b3d5e74f143",
        "cursor": {
          "ref": "1886c2d2-b344-470a-86f8-88b84426d202",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9d921b40-5c2d-4f60-8b77-b675737c7339"
        },
        "item": {
          "id": "93ab4333-9a01-4208-9463-7b3d5e74f143",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8550c46b-9b36-4b30-a32d-43df42a24279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c955cbce-c385-463d-becb-ab9f0c07aeeb",
        "cursor": {
          "ref": "a02f13b1-9299-4d98-9c40-5712975fa28b",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6dda0f8a-11de-4c27-8014-ada526882703"
        },
        "item": {
          "id": "c955cbce-c385-463d-becb-ab9f0c07aeeb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e4812252-0756-4c4f-8451-02f31b02bf6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb50a35-c52a-4002-91f8-4b8642219e9a",
        "cursor": {
          "ref": "abcc4064-ccba-40ba-a209-8f5ff438d68a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cf883447-059e-4a63-9b10-43a046e114dc"
        },
        "item": {
          "id": "3bb50a35-c52a-4002-91f8-4b8642219e9a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1749d347-22cf-4a20-b49a-e90428ee294c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b03509e-6694-4740-9a36-bbc207dd7cdd",
        "cursor": {
          "ref": "76ddf24f-4dce-475c-ac0d-2ba08c3ca946",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f7eec59d-b58f-4ff8-9793-822a1dae6546"
        },
        "item": {
          "id": "4b03509e-6694-4740-9a36-bbc207dd7cdd",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8a226773-f09e-4e9e-a5bd-d73135f46015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0b1ac3-7ae0-4c32-aaaf-2b9a1eea60fb",
        "cursor": {
          "ref": "25fcba26-3f39-48c6-be82-cef43612a477",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8b8bbdc9-446b-4335-8c8a-6e8e6d425f8a"
        },
        "item": {
          "id": "be0b1ac3-7ae0-4c32-aaaf-2b9a1eea60fb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "22b34a07-c474-45bb-ba7b-6ee88481712e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6acd9e6-758b-42dc-9c32-09106fc93a36",
        "cursor": {
          "ref": "46fff873-7a55-44e8-b051-6f94b3dc9a88",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "96bf8ecb-c5dc-42ff-91d4-ed656c43baa2"
        },
        "item": {
          "id": "a6acd9e6-758b-42dc-9c32-09106fc93a36",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "131bacb0-571f-48e0-a974-fda49019a2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e8e92d-a63f-4f83-a59a-703daf646262",
        "cursor": {
          "ref": "c03c3c9c-7b75-49c6-90a9-2f3bcb7fc2f1",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b5606356-e252-4aa3-9125-c722aa9e9c74"
        },
        "item": {
          "id": "13e8e92d-a63f-4f83-a59a-703daf646262",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "27e6b132-d6cd-411e-965e-7d95344ffac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fb4321-ac39-4033-9161-3717511b8aa4",
        "cursor": {
          "ref": "372eee71-80d5-438a-9e97-10bf777afb1d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0aeebd67-7f22-49a9-b2e3-19a198f86b15"
        },
        "item": {
          "id": "a4fb4321-ac39-4033-9161-3717511b8aa4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "98bf31ce-8049-4fa9-bf22-38e51e13e41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4daed0d-b95d-43f6-b3f6-c57700d40e84",
        "cursor": {
          "ref": "c70083e5-bf7e-4fb2-a2fa-3a3181a2ebae",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "dd90a014-ed03-4c17-adfd-ba1fc381ccd8"
        },
        "item": {
          "id": "a4daed0d-b95d-43f6-b3f6-c57700d40e84",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "dd0fda57-211b-4a41-a76a-464a33725868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5b3859-4b49-4faf-bf51-b7ef8349f770",
        "cursor": {
          "ref": "eccd36d5-65b8-4286-934e-f959173dcb1f",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "dbfbc8ef-c7f5-4bc1-b7b6-260e2ea48d21"
        },
        "item": {
          "id": "2d5b3859-4b49-4faf-bf51-b7ef8349f770",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "93ac2586-f84c-480b-9d38-38158bf792fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2895f2-829a-4080-8b54-7654b06a6aa2",
        "cursor": {
          "ref": "aa6c12df-8479-468b-aa46-209a8667ccfd",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "81234ab1-2d43-49f8-a148-ebd8e7f0a949"
        },
        "item": {
          "id": "6f2895f2-829a-4080-8b54-7654b06a6aa2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3a6aeabf-d895-4b8d-96ea-ba34f5fc814f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f40eecc-cd89-4580-82fe-4c997088a272",
        "cursor": {
          "ref": "162c477b-d31b-457f-ba9e-b9d342a275f4",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d55b8151-c49e-417d-898b-7e25a54fd39f"
        },
        "item": {
          "id": "2f40eecc-cd89-4580-82fe-4c997088a272",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cfa9810c-582f-4b62-b179-7bebf29431a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35573e65-767f-413c-b8eb-012fd3f1f388",
        "cursor": {
          "ref": "8ee5b296-7a31-478e-8457-ce4cff175e27",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "be006772-9f07-4236-92f8-856a1614a6b8"
        },
        "item": {
          "id": "35573e65-767f-413c-b8eb-012fd3f1f388",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7d1a9791-17ae-4204-9a7b-5cca0eba5e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db32f7de-8495-44e0-aac4-660aab653cd5",
        "cursor": {
          "ref": "133a8433-248f-47c3-b8f2-cbec6ae51e09",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1f4ba3f6-4580-4072-9c73-9620f81704fb"
        },
        "item": {
          "id": "db32f7de-8495-44e0-aac4-660aab653cd5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "dfdbbd5d-bc1d-45a8-b36e-648d698e3b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ec4fae-126e-4429-8298-9c531beaf5bd",
        "cursor": {
          "ref": "8d8daee4-98d3-4100-9126-befffbefe0f3",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "53ffebbf-18da-42c0-abfe-7a9397666fcd"
        },
        "item": {
          "id": "28ec4fae-126e-4429-8298-9c531beaf5bd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "83cc5835-9910-4ac5-b711-04578ae941ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1e383b-e136-4d93-a077-3c125270f10d",
        "cursor": {
          "ref": "4e0da1ad-6f4a-40a9-b34d-213c736ee292",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b0c5364f-5bfe-418a-bdad-fe2b9fe6cd28"
        },
        "item": {
          "id": "ad1e383b-e136-4d93-a077-3c125270f10d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "af2c184b-c39a-483c-8ab6-09143613c2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb82f05d-85d6-45e9-adde-7228420424f0",
        "cursor": {
          "ref": "dff6c50a-7444-46f5-bd06-588ccde7211a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f385278a-0cb6-44bb-9c68-687bac9b6a42"
        },
        "item": {
          "id": "fb82f05d-85d6-45e9-adde-7228420424f0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e3cf0c2b-511f-4eca-9c5a-9f99b2f99219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb64100-e20f-47d9-b5e3-da1f91416894",
        "cursor": {
          "ref": "a1c29b88-e1e7-4c0f-8588-fc1508f3833f",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f99a6e38-6a55-4853-bace-014433ed0d37"
        },
        "item": {
          "id": "2fb64100-e20f-47d9-b5e3-da1f91416894",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "629d855e-8bad-4f15-ad31-9676eb50eedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1666b47a-7195-4021-9114-a01a40d9c62d",
        "cursor": {
          "ref": "91133a96-6d43-4274-b084-052ecfdec35b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "143b84c3-4e4b-4761-bc4b-7f2ead3484bf"
        },
        "item": {
          "id": "1666b47a-7195-4021-9114-a01a40d9c62d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "09d1ba3d-0c71-4002-af8b-293098da066c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276a0067-53b5-4bc4-bbd0-a124019730f4",
        "cursor": {
          "ref": "3c8f9e83-3198-482e-b391-c2607804996b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "95697018-830c-4776-a199-a19d7b5c92a2"
        },
        "item": {
          "id": "276a0067-53b5-4bc4-bbd0-a124019730f4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2b2769f5-54b4-4120-9279-abdd953b286d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc75f22a-9ae3-4617-9469-18c5206c9201",
        "cursor": {
          "ref": "b411fd50-29a9-455e-afcd-1ca5f14d4c88",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bb4e9770-d73b-4405-91d3-a59972df20d6"
        },
        "item": {
          "id": "fc75f22a-9ae3-4617-9469-18c5206c9201",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "681bfa84-1c16-4aed-9ce3-bd939105df3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b451be1-5688-452d-91db-46818b50ca62",
        "cursor": {
          "ref": "eee2b932-8332-4824-9c6f-e71d0f76fc90",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5121df2c-082c-4d46-8365-8043c05c4f1d"
        },
        "item": {
          "id": "7b451be1-5688-452d-91db-46818b50ca62",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "de104b49-a345-499f-b8d9-b8a3eb554544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f246a7-6824-4d85-af3a-1364388cc38d",
        "cursor": {
          "ref": "5da2c5b2-ed15-4842-9bc7-5fdc86438049",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d40841c4-ce01-4f42-8b6c-22a2ef12fcc1"
        },
        "item": {
          "id": "f2f246a7-6824-4d85-af3a-1364388cc38d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bfb5a9b2-cb20-4998-a585-131325ad2986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd62b46e-9912-4523-af4f-4b6161334f48",
        "cursor": {
          "ref": "c58d2bfc-c052-48d8-89f6-ba893edd2859",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5e8fca96-f6c3-45c1-b33e-0ba4e6c5da19"
        },
        "item": {
          "id": "dd62b46e-9912-4523-af4f-4b6161334f48",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "83d5a202-752c-439d-a5dc-e98a3e49eeb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adae989-5d20-4169-a7b1-0c6e9a48426a",
        "cursor": {
          "ref": "40fd9ba2-6141-4a6e-8d1b-627a565ba3b8",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ae822c42-8d70-4c15-a593-772827bb0698"
        },
        "item": {
          "id": "2adae989-5d20-4169-a7b1-0c6e9a48426a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "786f5715-86a3-46f7-96eb-6527283c3751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bfaee5-aeb0-4f9e-a631-7dd07066dc95",
        "cursor": {
          "ref": "6e8a24e7-2964-412b-9f40-2383033a5de1",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b9ce3cab-6183-4aaf-af59-df34aff94aad"
        },
        "item": {
          "id": "87bfaee5-aeb0-4f9e-a631-7dd07066dc95",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f4a040dc-941d-4fef-9aeb-a7ff5ae06aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddb048c-6463-47e6-ba44-c8679255bd08",
        "cursor": {
          "ref": "f524e6fd-dc3d-4072-9ec1-b4c8cfaf7d3a",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7ce70721-8639-4ed1-b545-0b08c5d9d3d3"
        },
        "item": {
          "id": "dddb048c-6463-47e6-ba44-c8679255bd08",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2e254501-7dbe-483e-8c5e-a4b1e42fb559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b64b0e-f0f2-4e86-9da5-f0c52d7bdb8a",
        "cursor": {
          "ref": "b8229738-833b-4ee0-b1c5-051f0c0b8063",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4fd21745-f07f-41fa-89ef-c54626c2a352"
        },
        "item": {
          "id": "76b64b0e-f0f2-4e86-9da5-f0c52d7bdb8a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4d55441d-3251-47a4-bdef-405f2916aedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ba6f4d-0d6b-4bfb-93da-46bcf7e43390",
        "cursor": {
          "ref": "525b9672-a95b-4314-9ff0-e8440064f70e",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cfb4381d-1d60-4929-afe1-ec48d88c13b9"
        },
        "item": {
          "id": "19ba6f4d-0d6b-4bfb-93da-46bcf7e43390",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8633dff5-4e63-4f8a-bfaf-e399541ee6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76119e61-de11-4d4a-8be4-32a85aafb768",
        "cursor": {
          "ref": "4b2141cd-4b09-454e-9f44-a3ead47135f6",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "35473694-5664-42d4-8c13-1ab490c0be59"
        },
        "item": {
          "id": "76119e61-de11-4d4a-8be4-32a85aafb768",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c7314549-b12e-475c-96ce-7edced9ce7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1302d924-fe70-4148-84d3-0d5f4b27f5af",
        "cursor": {
          "ref": "40ec7b26-c69a-47a5-b6cb-832c3426a8c7",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0e952656-8039-47e4-9bc4-4e23eae9d917"
        },
        "item": {
          "id": "1302d924-fe70-4148-84d3-0d5f4b27f5af",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fd01c54c-c43f-4d9b-bcbf-1f5766210888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0493d27-cf4d-4f64-bd7c-9c876cbd2cbe",
        "cursor": {
          "ref": "0e7f8869-f23b-494a-a1fb-67da7b3750cc",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "103568e0-05b8-4b84-a312-b7de60b1f6fc"
        },
        "item": {
          "id": "b0493d27-cf4d-4f64-bd7c-9c876cbd2cbe",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4a538917-aab3-44e9-b139-058d77bdae34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4135d3fb-7cd4-448e-b26d-9b8f82d0fb71",
        "cursor": {
          "ref": "cf1ab5bf-ad85-435a-9007-b5746df0e951",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "122c1d43-6d02-4e0f-ae01-36c68e7e283d"
        },
        "item": {
          "id": "4135d3fb-7cd4-448e-b26d-9b8f82d0fb71",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7aedc356-f04c-4263-a810-5be3fb691aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d579ff-42d3-497f-8cc7-de34702ea4f4",
        "cursor": {
          "ref": "017a74bc-bb4a-4ba0-a945-072d7a1f6c79",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7ba00ee7-b27e-408d-91f5-53d6d14fb5a6"
        },
        "item": {
          "id": "70d579ff-42d3-497f-8cc7-de34702ea4f4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d4c2418c-e2af-4195-b2cf-8d62e277a9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41854d6b-6619-40d4-8d33-f70e0f10e5f0",
        "cursor": {
          "ref": "630a7659-49f1-4911-bfac-b0c520ae7f9c",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "af9a6f96-78cf-488e-8583-c3d2dca41aaf"
        },
        "item": {
          "id": "41854d6b-6619-40d4-8d33-f70e0f10e5f0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "68067371-c7d0-41c4-908f-4810b5e20449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ebdf9d-8c28-4a49-af22-285302460775",
        "cursor": {
          "ref": "7d623822-ddb6-4cea-9e7c-72f40bf852a8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6ca56ebd-a48d-4c92-80a2-b208a1b69f0f"
        },
        "item": {
          "id": "40ebdf9d-8c28-4a49-af22-285302460775",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ad9d88c9-92f8-4d92-9509-79a7f057f20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19742e07-0064-4bbc-bcd1-a450c0c2f086",
        "cursor": {
          "ref": "a364dadf-f415-43e5-82c2-a5693ad720d7",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "39787f71-a16e-4b5a-81cd-0ff7374e0328"
        },
        "item": {
          "id": "19742e07-0064-4bbc-bcd1-a450c0c2f086",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "85e5fe63-a1fb-4ff5-af1d-948f6853fd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512c82a8-bb72-4c7a-9674-3e27477cd7c4",
        "cursor": {
          "ref": "bae2a9dc-be24-4ce7-835d-6157569dc66d",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1f036e74-5592-4c3f-9dec-c710709d709a"
        },
        "item": {
          "id": "512c82a8-bb72-4c7a-9674-3e27477cd7c4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2ad2ea24-daa6-400b-81bf-caa2baec1c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae587e2-2c49-4f4e-b557-c3d6bbbdc5a1",
        "cursor": {
          "ref": "4ccf8468-c4f9-434a-8721-4e986b16665d",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "63906910-6b9d-49bc-83d8-57484c81dd57"
        },
        "item": {
          "id": "9ae587e2-2c49-4f4e-b557-c3d6bbbdc5a1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "db1d6e71-09fd-425e-b815-ccc158e102a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d0cecb-5197-4b3a-97c2-805880e6f39c",
        "cursor": {
          "ref": "3f4272d4-71df-4db5-90a5-588c15e7be1f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "536a0760-ca38-4b3d-899e-125de3e06931"
        },
        "item": {
          "id": "c8d0cecb-5197-4b3a-97c2-805880e6f39c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "97a51e26-a51d-4604-9fad-73c55b7785a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491f4710-bf68-4664-a97c-70039606ddb4",
        "cursor": {
          "ref": "dd19e262-2ac6-40c1-8666-7b1009711b4c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f463aa5e-cd7e-4ba8-ad6d-6c76e3f90cf5"
        },
        "item": {
          "id": "491f4710-bf68-4664-a97c-70039606ddb4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c59a05b4-d941-4e17-887f-bb279b71020c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55396fe4-ceb9-4449-bb46-9ee0c81dfda4",
        "cursor": {
          "ref": "fc2a4281-e8c8-41c5-8db8-8e3628fc8ba9",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bc7fd537-ff1b-4631-a280-248271f347fe"
        },
        "item": {
          "id": "55396fe4-ceb9-4449-bb46-9ee0c81dfda4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "baa8011d-0087-4751-a7b2-691921cc6c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6fce29-fed8-4477-85ad-e9c5ca9b8f78",
        "cursor": {
          "ref": "e908dd15-41cb-4531-b322-c0e8345fa3d0",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cbf4616b-8960-4669-9353-c4fef549a7ae"
        },
        "item": {
          "id": "0d6fce29-fed8-4477-85ad-e9c5ca9b8f78",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c398246a-c472-4881-85a3-15d2f13f6e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7fc9a6-0b73-426e-8337-b810d2d79133",
        "cursor": {
          "ref": "8689d523-ec8b-4e20-b5cb-945cd9fb1e9e",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f9751bd6-d2df-4766-aa26-adde741e76e5"
        },
        "item": {
          "id": "da7fc9a6-0b73-426e-8337-b810d2d79133",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e3577e87-061d-477a-b3c4-f7f485e99091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6ae606-4113-49d3-a2cd-93cd07043b79",
        "cursor": {
          "ref": "9bc7d276-aecd-4c05-8d62-21975cbd4c1f",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "424a465b-e603-4c37-aeff-89f0090116a5"
        },
        "item": {
          "id": "fb6ae606-4113-49d3-a2cd-93cd07043b79",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "29b8b48d-ea37-4825-921f-6f6a17f2e127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d49a3d-2108-4a1e-8255-ffd7d278eb54",
        "cursor": {
          "ref": "dee54200-4aad-4961-a576-30495cf62218",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5aa9d089-19f8-4924-b3dc-24fe3c6e72ea"
        },
        "item": {
          "id": "51d49a3d-2108-4a1e-8255-ffd7d278eb54",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "24adc1c9-e2cb-4c5e-9ab9-9e8a7fa6e6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b43b10-6492-4790-9d33-4a288ddfbd27",
        "cursor": {
          "ref": "38bfd8a0-8c1d-4cbd-8256-9b632492cdb9",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "93a1695c-47a0-440c-90a7-deafb0a03c67"
        },
        "item": {
          "id": "e9b43b10-6492-4790-9d33-4a288ddfbd27",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "55a64ac3-9e26-4cd4-b040-d1702ea789b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45dbc22-9277-4af8-ad9a-59a9ed560cf8",
        "cursor": {
          "ref": "3b58cff2-f5eb-48dc-a729-ee20674edcff",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e9221138-7b7d-4d19-b07c-5b5a4f7ab033"
        },
        "item": {
          "id": "b45dbc22-9277-4af8-ad9a-59a9ed560cf8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "95f06cfe-98ad-4aff-a7b0-aee2c7332459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52170a84-1a89-4922-b867-40699188286b",
        "cursor": {
          "ref": "953e3fd7-b623-4e3c-91a5-abdc847fc47a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0ac4c575-4547-4504-b44b-ea5d98f5fc99"
        },
        "item": {
          "id": "52170a84-1a89-4922-b867-40699188286b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0054a65c-1db6-480a-b01c-9dc3c3dd0055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a404d2e-acbc-4856-b088-9efefa782bb6",
        "cursor": {
          "ref": "cdc74d75-3ff7-404a-883b-ce8cba2f9b71",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a968742d-d15f-403b-b31e-1cc3a17ef3ac"
        },
        "item": {
          "id": "3a404d2e-acbc-4856-b088-9efefa782bb6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "404f0ab0-d457-4a96-b0c4-26d714cf79dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9249a93b-7d8f-4f8b-8d12-98a6d359e165",
        "cursor": {
          "ref": "a3cf56c7-3ede-49fc-8229-a5daaa4c43de",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "99797966-1e18-40a5-a859-a93d723609b7"
        },
        "item": {
          "id": "9249a93b-7d8f-4f8b-8d12-98a6d359e165",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f997dc5b-7397-40d9-8d2f-23ab96c01ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690cc374-d0d3-40af-aa49-5829d88caccc",
        "cursor": {
          "ref": "12c2fa40-b5c0-4a3c-9789-95064e92bb53",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2759caad-7ee4-477d-80c9-ee1f6bec05e8"
        },
        "item": {
          "id": "690cc374-d0d3-40af-aa49-5829d88caccc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "61c5eb4c-f0e1-4db3-97f0-1c885cb32612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1073db50-af7d-4cb8-aa91-3f6323cda8aa",
        "cursor": {
          "ref": "ee1ab979-4b38-4cce-b342-a6f46c292122",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "07cbada9-0e77-4ad4-bfd4-8cf7e28c99a7"
        },
        "item": {
          "id": "1073db50-af7d-4cb8-aa91-3f6323cda8aa",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "32609dde-9420-4bb7-a339-6bb9f9bc9059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d268ac2-d147-4d16-94fb-2d8e324e295d",
        "cursor": {
          "ref": "5f857919-3133-4555-95ff-7f71e750fb96",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "729639cc-c2bf-4335-b228-2d7dd61b896b"
        },
        "item": {
          "id": "6d268ac2-d147-4d16-94fb-2d8e324e295d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "89fe7d21-7d95-4ddb-9af9-f228c34ee92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba33dc68-ce2e-46ab-a49b-a4f1de9d3587",
        "cursor": {
          "ref": "a5578a2c-7973-45f5-97a0-ff2ee0b28d69",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "40dbc6fe-4161-47b0-a4e6-4687ec787d2f"
        },
        "item": {
          "id": "ba33dc68-ce2e-46ab-a49b-a4f1de9d3587",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9fbc5060-c4ba-4710-9150-c7b1b14485c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec72a76-722a-42dc-a5f2-ed17d1a202b8",
        "cursor": {
          "ref": "66b54d35-5a1e-4956-967e-4df73e9a3d88",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ebc015bb-16f3-41be-aa9e-69cce1160860"
        },
        "item": {
          "id": "eec72a76-722a-42dc-a5f2-ed17d1a202b8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b598d4a7-81a0-4b08-bd42-cda43ac6b365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0ca24e-a81b-4e2f-b7e8-12a8bf026c65",
        "cursor": {
          "ref": "c60a549b-c55d-4531-8e81-dd51df22afbc",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5cef9cf7-4973-4390-9863-9dfdecde10f2"
        },
        "item": {
          "id": "4f0ca24e-a81b-4e2f-b7e8-12a8bf026c65",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5603f95d-1a56-4c82-b27c-6f58efadf318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0b3c2a-3e48-40c2-ade3-aac14806df8d",
        "cursor": {
          "ref": "c3ce06eb-ead8-44d7-8fc0-ff5d932ccbac",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "faddf23a-2676-4a96-89e7-9c01df03f179"
        },
        "item": {
          "id": "5a0b3c2a-3e48-40c2-ade3-aac14806df8d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1202ee27-396d-43ec-87e6-b92ec7749d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819a6c6d-ad5e-4b2e-96a3-46261100c3f9",
        "cursor": {
          "ref": "9350c0e4-1d48-453e-9024-dacb65bf2984",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6ffe0f12-0530-4170-8a80-69ee1a806ebe"
        },
        "item": {
          "id": "819a6c6d-ad5e-4b2e-96a3-46261100c3f9",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "755358c8-eb39-4e2c-a26d-e67f8e294988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee7b521-23e9-43b1-bc6b-c7909187bb31",
        "cursor": {
          "ref": "20370c0a-0f25-409c-9d46-fc087abf34d9",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7a961e10-423d-408e-ae18-cba8667bd26c"
        },
        "item": {
          "id": "6ee7b521-23e9-43b1-bc6b-c7909187bb31",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f4e4cb5b-4085-4e73-92cc-3ae632ce4db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995791ce-c76b-4a97-be9c-6c4189230f76",
        "cursor": {
          "ref": "e2b36bec-fe8c-4ce8-8988-f3b5049bf4fb",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a5e42971-4b14-4a23-a53b-006256346911"
        },
        "item": {
          "id": "995791ce-c76b-4a97-be9c-6c4189230f76",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f14ab081-e89b-4e07-a416-49e03d9f47f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758b948b-45aa-4fa5-af58-96e71a256aa8",
        "cursor": {
          "ref": "3c26511c-8a08-4f6b-a761-855d4a90efb8",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2e35cb6f-f7dc-45cd-b8aa-410312682e2b"
        },
        "item": {
          "id": "758b948b-45aa-4fa5-af58-96e71a256aa8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "239e16a0-9550-4ab9-92f2-a6fb54a8e117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8af02a-4014-42d9-bb32-d78a10940eba",
        "cursor": {
          "ref": "38abe4d8-d732-44f4-a40d-765b9f5d6fae",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3bf73d2f-c6eb-4679-a9c0-5f240c22ad5b"
        },
        "item": {
          "id": "1f8af02a-4014-42d9-bb32-d78a10940eba",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cecd9c3b-626c-4660-933b-95f96a4b8acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce68889f-5b4d-488f-96ed-a337fc0e902e",
        "cursor": {
          "ref": "9823c7b0-1b18-4f6f-8b81-857721f8884f",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "680a7970-3980-4b66-866f-fe1bb6cf5160"
        },
        "item": {
          "id": "ce68889f-5b4d-488f-96ed-a337fc0e902e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d43c8bba-5c43-4e61-8ed4-30e9e299835c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd5a45a-567b-4cf4-878b-00451f061b2b",
        "cursor": {
          "ref": "73266329-7d73-4631-adef-65dffcf045a5",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2b1ef6e5-4315-4d5f-a7f7-9c1aa7eb2f76"
        },
        "item": {
          "id": "fcd5a45a-567b-4cf4-878b-00451f061b2b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a12b4d45-8024-46ec-84be-b13b3a14aa5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a45f3fe-8535-4006-ac30-897c6f7f8bc7",
        "cursor": {
          "ref": "2ce88e07-92d5-45a6-acc9-0ee9eec44312",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8de54560-b85e-470b-a574-cf95dc9f92e5"
        },
        "item": {
          "id": "2a45f3fe-8535-4006-ac30-897c6f7f8bc7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "35c1be41-79dc-4da3-917f-7b4dcdc5d786",
          "status": "OK",
          "code": 200,
          "responseTime": 2575,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca90d1b-85b5-4a87-8d3f-5f01f35624b3",
        "cursor": {
          "ref": "464ff9f3-252c-487b-968c-d93dc568fb21",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "24717770-5428-411f-90b9-daf4e848c41d"
        },
        "item": {
          "id": "7ca90d1b-85b5-4a87-8d3f-5f01f35624b3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "85a28c38-f62b-4958-b0c9-5f28a879925b",
          "status": "OK",
          "code": 200,
          "responseTime": 4060,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "202f904f-4933-472c-a4dc-6645a1e22b45",
        "cursor": {
          "ref": "2fffacac-dff0-4952-a89c-3841cb5da29f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e860f6c9-fe62-4309-9173-509eb5dd3e4f"
        },
        "item": {
          "id": "202f904f-4933-472c-a4dc-6645a1e22b45",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "22c8a5a1-a03f-49f6-977d-0250df8d406a",
          "status": "OK",
          "code": 200,
          "responseTime": 2968,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6927f22-a0b5-4512-9dd5-c70a38c7e260",
        "cursor": {
          "ref": "e12bf9af-70ec-4456-84f4-11290f374dec",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "29a7e6f6-e7a5-4ea9-980e-6561caa19c62"
        },
        "item": {
          "id": "f6927f22-a0b5-4512-9dd5-c70a38c7e260",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9b174cd8-4743-4c25-91c6-b93a6eaf5dc5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6927f22-a0b5-4512-9dd5-c70a38c7e260",
        "cursor": {
          "ref": "e12bf9af-70ec-4456-84f4-11290f374dec",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "29a7e6f6-e7a5-4ea9-980e-6561caa19c62"
        },
        "item": {
          "id": "f6927f22-a0b5-4512-9dd5-c70a38c7e260",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9b174cd8-4743-4c25-91c6-b93a6eaf5dc5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6567ffe-98d8-46f5-b540-afccb0b0ab13",
        "cursor": {
          "ref": "56610a76-b3f0-46f8-9f09-0c213801ff7c",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c0e20e60-ca03-4008-9522-65768ad6a4b8"
        },
        "item": {
          "id": "d6567ffe-98d8-46f5-b540-afccb0b0ab13",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "eb40bc98-8207-4c6e-ba98-27ff980cf7f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69270378-2713-44de-9481-4151c5a3f29a",
        "cursor": {
          "ref": "a74e8e59-6305-4557-adb6-1bd17c347e95",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "12075642-f136-4bcf-a612-1b3e18deb3fe"
        },
        "item": {
          "id": "69270378-2713-44de-9481-4151c5a3f29a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac9c0ff5-84f4-4b0c-9584-4aa0ec5a4ff6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}