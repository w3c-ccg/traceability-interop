{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "61454701-62cb-4bf1-a279-ba4efea8a169",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d318fa18-e22f-43c6-aa50-dfd2a1bcd19e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "906673c2-105b-4660-b886-c1f2678f3d58",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f793894b-8026-4eae-8f83-74fbcc5112f4"
                }
              }
            ]
          },
          {
            "id": "4bd694c4-d40e-4300-8ea8-2d67ed57e0fc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "771d51a3-6f95-4060-a169-be0cbd1d77e0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "85537a91-6a85-4472-bf12-32eeefd7ac0a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ecd32f9c-9b6a-4dff-93a7-3ce0ff60d1e1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d480feac-e174-49fb-beee-b2cc83b728ac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9a6a23a8-030e-42ee-b78f-bd4f78c69d28",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc0bdcb5-dffd-49a1-9536-6780018858df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c402802c-a0d2-43a1-b475-915751880e26"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8198f551-703b-47fa-8844-8b3017d972b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a46fb875-f190-4275-8d62-e6ef1188630b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5f52011b-7794-4b2b-be4e-ec4cbeb8c754",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c5d37d5-1a22-43f7-b460-eefb6f31d39c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c70c519c-9d37-4982-ad2a-87dd65ed404c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9f16930d-b18b-4fda-aa67-64668e6d0a57"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46f97fcf-7a5c-4844-b944-170bd6969a53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8afd07c8-e873-4733-91f9-f9792af4eeb6"
            }
          }
        ]
      },
      {
        "id": "01c35052-ac20-4c43-ac8c-febaa3675134",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "36b0c716-0eb9-480f-a43d-47891ecca2e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8255e0e5-732a-4a01-9f61-3ce471170274",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "645814cb-803b-4b03-8b16-a68d67f3c8ed",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5491cb5c-b1bf-4e70-b817-8fd9a3067556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1eae21ea-e98b-4aa1-83cb-e145c44a7245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485f4b05-855f-4164-a3e4-f7c81590ffa2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72495041-bf0d-4525-a51d-f6a999cfeca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "510efa3a-178b-401d-92ff-44646b3663e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e17f92c-cc74-4ced-b333-3c053504430b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678c85a4-8990-4813-afd2-c7a22b8c6948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50e96f13-a671-493a-b067-c76bab351ece"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a7fc3525-7844-4cab-8147-8f2b00eaa4e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8f2959c-88e0-4d9b-962a-0c7a9910ae12",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d476470d-9d99-4220-b9f7-7444e7ef5b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cabfd500-0cba-466e-aa06-523679091b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec20aca-3068-4806-971c-66bab8164e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4b0b33-f059-4f59-833f-d03acbdaf5dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "32326032-e232-4927-9b26-6118b55b1cfb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "496f7fa0-ab0c-4bf8-ac97-e962261103ec",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7efa8c7c-31d1-41ee-8217-9021926ea337",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "937d3a65-a7de-409b-8546-f8ebf3eb91f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61f69746-2962-442c-89d4-6a5c1b398a1e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0be10f9b-e00f-43fe-ac9f-bddc6f9209b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33721c33-a526-47e6-930b-51434236ed95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4300508b-16cf-4420-a234-c2c7743bbc3f"
            }
          }
        ]
      },
      {
        "id": "8166dd6a-fb3e-431f-9d0c-fb16a59dc081",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3b9a2256-beeb-471a-af55-d2bfd51f3619",
            "name": "Negative Testing",
            "item": [
              {
                "id": "58732038-55cd-41f8-9d71-f59c05587b0d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9a65ed2e-6608-479e-b049-fd7b3ff9d5ca",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f744ec9a-ba7b-45e5-857a-4077ee30809d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff06430-2bb1-4195-83db-bc371042b21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fc7bc2-28ac-465f-9616-dc8719f1ca53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0d609dd-7d15-4f9e-9375-bdd45773d6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3c4da4-023d-4cf7-b510-9f88053f9477",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3edd4d8-bec5-4d4f-9948-51fadfa6a9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed310ab-a5c4-4935-9f58-eed06a52cf57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364754b8-5ab8-41b8-b9d2-258470d0d6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a084891-5e9f-4be4-a2a7-d7a557354cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0713ec82-b910-4aaf-9dfc-3650037e6013",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3a6c9a-ac2e-436f-abf1-d7f73170a5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d756ed-a48c-427b-a5ce-1e3e61397fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932c30b2-491b-41af-ab20-63bb4e6682f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af61306c-7b3a-4bad-958a-d34446c0915b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dc518b-340d-44b4-95b0-f6c125b165a0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4af5169-052f-4511-b137-b8b335a60b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3a8c37-4557-49d1-bd00-771cd5cefadb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7875d1-f6dc-4614-8f04-63d2a3eca1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f51fd42-fc0e-4d35-ba43-88c8fb639338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737d7732-f8b6-41ec-beae-9c5e8b88fbac",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31a00ba-2ac2-410a-9627-c4d4fa4fd7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74fed42e-2531-4146-b4a3-9614c67cce9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14cafdf-f9d3-4bea-920e-31233b2a223a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eee8ea5b-1370-4a64-97c7-568dfef48da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0119f712-9ae6-4609-9115-302b4cae377e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04eae5d5-d8e0-4c7a-abbd-200d367a9439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4408be27-ebe4-42df-93ce-57409f7e9378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f50de9-e302-4c6d-8a1c-8f7df73da2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58f67d0b-2989-48a4-b1db-ac01e49cd696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af073f69-01dc-49e6-8170-57825c0fc5d1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5017ba-4f17-4beb-a378-4a8d20a1cec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93dadff9-cc9c-4f66-b9e5-dd9712b851f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37083ea6-50d6-456c-86dc-a286e1b263d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aabc8cfc-a26a-497c-8937-070f9585287c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff904cb8-3c76-4a54-9a82-7a0e41d6c30a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7b535b-9da1-4cca-8282-fc8b9931711f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a6818c-1745-4c19-9807-d029320dde47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcb30a0-022e-4a35-b0a3-40dafab2a3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6f987d6-3261-4f94-a9a3-08d6b41a1800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f88ddf-40be-4826-ad63-c20971adcf91",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05102067-a44e-4b30-8b3c-76ce2f9598d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be1562c-7fbd-46cc-992a-ff32217f41cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a3d08f-a280-467f-be5a-02a3407e5862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14936f74-afc2-4380-ad1d-0553ae0cf44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a182a5a0-dd0a-48c4-bf18-d06520bc406b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbe658f-2d58-48d8-886c-0ed2d3ca1a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d9891b-b71e-45d4-9658-5b7bbff39bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2254f8bb-808c-4524-88ec-c9e9e5382cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c2434c6-2012-4e77-b383-747402dc6ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1ffe28-ee43-4253-b170-1fe4e04a0250",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a12fdcf-634c-4274-a3d7-9b598ca89bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6787f09d-b45c-4dc1-82e4-1894ce94bfa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36da4a8-431c-4127-b2f2-f050975a0b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b46cf110-c342-48cf-8e01-ee7625bdfb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f27df8-5d4f-42ab-9c1b-2025360d98ba",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eefea38-5838-456b-89b3-3e28884c7fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a8a4f5-7a17-4b1b-b3a9-de0f34f9aa90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1058b5a-d739-415b-8a18-f2b6c8c3da23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9181bba-e213-4e3c-ad6c-adba598fd826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af3e1f4-7315-4603-8797-d7e90bcf3038",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f38094c-006d-4b35-be06-4c69acd755d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d583c3b-6402-487b-888f-57ee0713957c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe3d1be-08ca-4235-91f4-54e96dbbabb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9670eb88-6290-46a7-9dc4-e7a13a24878c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2810c8bc-e869-47ed-a4fb-ce04808c9cb9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "151d1558-93b1-4c5c-a9de-3bb9a8a54ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b543e045-6876-471d-94ca-c62320599604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15e01b4-9bda-4b43-bf75-9660f7120d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cec14007-5a3b-4245-b4d0-4a7b3a00cee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2154b5-31dd-4e13-868b-fdd5e62d8e24",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c285756d-103c-401f-84e1-7628a0e1f613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef60a76-b2cb-4abb-a5fc-3c50d252268b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9517f5d0-d10f-4eff-b741-cd8372d4a9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a31dd084-0310-49b5-ae28-9cc4519cd3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bbe027-2593-4fb9-ba9d-88b852d32376",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287f4151-57bb-498d-80a9-ce059d17cd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe66e581-6d79-410e-b4fd-c860d054542e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603a0d35-1b55-4c16-bbf1-1c82217d6ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca651e2b-92ab-4c3a-b437-6bb757a24973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c155e6b8-1ea5-4735-8ea2-b1d1774cf7fe",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feabd862-8a81-49bc-a027-80b076b5c6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e83870-32f7-4800-9dcd-b69c6c625e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b1a921-c50d-49d4-804e-15bd18ca4f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83bc5828-7204-4cdd-859f-ece9c8da2fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf05130-4773-4c31-a34e-c388a69f3c02",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada24fed-a72d-4949-b271-7b7a54d73443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff35fffb-3dc2-488b-b591-6515ed55d4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0c8c19-8e4c-4678-8816-d25a273a6ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "35bc7644-623f-48b4-ab19-af4f72a245d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a0cfc6-d48d-4962-8c3a-834abab43ba1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45d3bc9-88fc-48e3-91e8-6d26ef95baf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef2a913-e273-405c-a149-2880ddb865ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359f20c4-3bcd-46f7-b096-b694373865ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0efe41f2-44c7-4c4f-b651-ad535c2ec66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087c925d-9c04-49cf-ab12-9d31542cb259",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad06dd6f-cacc-471d-996f-94e7737ff634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b37f4f-45ea-4ae1-96f1-c94279d90e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792fa3b7-0d2e-487e-a5e2-30db2a7d12d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70328232-8487-4387-ae2f-74afad710fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54eb53b3-8a3f-413c-91ca-d4aecdf54d19",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8363e2-d3f4-46bb-b3aa-ae02a7321bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f01cda0-b089-48c6-bd73-b6f7e6f1321a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef33c2c1-b268-42fc-b9d9-1aa492d4d1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5aaebeb-b074-48df-8d9a-7196103268f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef2bd2c-7251-4e37-9ad8-e23171dedf6c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a956f8-7607-4836-a71d-82dbc72ee1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f2b6e0-cd03-4718-831d-c4797add7463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f206b9-e1cf-400c-8522-a42d5e5267bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b35ad0d4-7e17-44d7-b24c-563d1cb5e40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d582494b-7dfc-4e01-bcc0-91f0a2165e51",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e1609e-0d33-42c5-9994-c046da4126e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca2a394-43c9-4563-8af2-62eaabfe29eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9007de48-8be4-4967-8d52-f6c94824cce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f46c58b7-da45-43c0-a1c1-5be9e4c01cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24d9b58-2bb3-4256-b908-c4935e067a35",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e1ba24-ae11-4140-9e69-81083997aa46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66ffa2b-9f83-49ef-8933-0201d644c818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a24d676-71fa-45a1-97f0-e5997b54f960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb84db76-a798-4baa-8f50-d713d1a147d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2d1da3-8db3-4ebe-b069-78c515cab309",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b17d4d0-136a-4367-8580-ec7b914c4661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993a77c4-def8-4d8c-aec2-81175063f44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ede094-857c-43f5-aa0c-008870a9d5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78befada-e6b0-49bd-a410-c17cc20beb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bca2ac-c528-461c-bc43-75626a6f1907",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c208bf91-92ea-4eed-bb25-1d08b1f12d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa2a130-7592-4a1d-a96b-7bd722859f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67db1415-9d6a-46fd-8f3f-e11902c20c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "692bfecb-21dd-4286-b86a-01c02d80e7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee9ecc6-a7c0-4b56-bc63-1264f002d4f8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e009c43-3816-4861-8da5-e7efb18a9c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984ae360-52df-4e7f-a071-e44eea0527d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e85f38-5600-45ec-9080-f818c5c604e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f19a745-cf80-4922-98aa-df6b79d4da89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4b631a-be5f-43cd-abec-c701f521487f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3685b08-0a18-4136-93c5-ac3ac90137fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03cfb0f2-4290-4e40-9a8f-14b670a54c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacce72c-3a44-409d-8371-16606efa04e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7b3f5a-2110-4bf3-ab5b-8eb8dd2ac3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7584969c-b4cf-4909-bb0b-95b5c856af45",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbf1ca9-cb02-4232-86f0-091e2ebf2546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160a6f44-b2bb-4319-90ef-d63516aaa6d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426b276b-c4e9-49d2-a120-6cc192ccfbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd017d6-3829-4983-9dbe-2104209c3381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa95888-05c3-41b6-89c8-a4a5aa62fa37",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139b0c1d-8db3-43bb-b9d0-fc5b4308710c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70722529-0a50-4bad-8955-f3651051f2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0570a088-abbf-4ac9-a30b-829192017822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "614c623d-8b14-4033-93de-a55062a0741d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8d8ea6-b3c3-48a6-b597-66461dfa7011",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87c1d3a-23c5-4b3a-a5fb-4b1d7a2703f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdef77e3-d763-4429-aaa0-aa6af94dcd55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ce27d7-b14f-4100-86d1-4cf7d8c070c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1059aeca-e89f-44ea-bb06-0d8353e4aa18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e797464b-54c7-4a93-97b4-0479f6528aad",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3567c1d3-a2fe-4e5a-88e0-825eb3c2b796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2f8a74-31b8-4dda-801d-70914263cd22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6646b973-f875-4ead-b2ae-0a3149aff627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f274c78-12ca-4d12-a75d-27112b0e0037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750c3285-c215-4f1d-8fa4-b17b132b48a1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af45b78-b7ae-48f9-b15b-a06803ece349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654a61a1-33da-454a-b438-50f4bff15509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2c7b57-1342-4445-aa19-a5993436d064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "564a6436-9309-4ef8-b1ae-80441b01a7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34bfe3b-cad6-4825-90ea-d9fa10118835",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fe4e65-fad6-46de-b5bb-466f9e7b4b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0240870e-8044-4947-ae28-b46d55871e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8a7939-1df0-40c3-b72d-34135231fbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2242c3-8875-42a9-b0d0-6305c0a54b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5887511-73ce-4149-ba6e-af5b27933528",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0d982d-a70c-4758-bcd7-23eb0e283199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39a4c65-ab13-41e2-98a8-6360f9f7774b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd89065e-64bc-49a9-9825-ab85b6651950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "16df96e1-eacc-42ee-a5d6-ac492a350988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4438626-8631-4499-8640-8b7df8f9b2fb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc180799-371f-46d6-988e-2f42c3875aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac65aea7-a42e-45c4-bba4-230d42b48c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836ed35a-274c-4be2-ae2c-a9810471e72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1bddef58-8905-4f18-8d55-4fd8940b06b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2935c201-5deb-4e64-bf08-f542ead4e464",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44055af-e8b2-4609-9894-d36d2479c24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8e60d1-808f-4c4f-ac70-7327e2154241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ee3f0b-c8b5-49ff-a498-609a1ec34372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60aaae99-33b4-4af1-85d1-d426cc02609c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30974d93-eca2-4d4c-b228-9d22220b2781",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea87efd-8e34-4b5e-8c4d-7917ae05ac23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f780172-8e9c-4d0c-b023-bdc82cf2512f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb5d5c7-42ec-4caa-87ad-137190af01b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2696ae-65b6-4c44-b17e-69c26067d47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946a8655-8c9e-4ba1-953b-c2d980051f22",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b10788-35e5-4529-9c99-89534dc0cc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce57e1f-cc9d-44f1-a53b-8e986a6a4fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6934e0f6-9c09-4e9a-9b03-ccafda87f4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "38bd6a47-6ae7-4edf-aa6a-b62938e66947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55919db7-f94b-44e6-aca8-f405006d1f45",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cfc53c-21e6-468d-8505-f9ca7489499b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1bb5d6f-cefa-42ba-8bc4-0565ddadb73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6691236f-4ad0-433d-992d-6b5fc3732ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6e0bad-faa9-4e59-9c6b-fab991f28ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78a57be-db91-4159-825e-70b7b7a9bd55",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2741afe-6b82-485d-ae50-78136b00fb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a5c81e-d526-4e38-85ed-64ffbeb527f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb09a44a-15f8-42d8-b17e-0256a805149a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6b240e-2317-409e-bfe8-4baafd3015bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f73a75-e283-460e-bb92-ef48a7b81065",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1747c5-f778-40a7-a1c7-c6a32111975b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14f25e7-f606-45a8-b068-004bc56be44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57b645c-9ece-45c6-a51e-2ec60f7e5d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8fba98-091b-4575-9e86-135ac7b16060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f541241-9fd5-40d2-a4de-efc3d141ce14",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b68775-d9d1-4a54-9a5e-ec730ad2426c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65e0276-b5c3-4be2-b248-db7c8a24690c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250c88c6-caf1-43db-83e8-958a82248c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "414fe84e-51dd-4565-a8a1-425714fad618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d091af2-0072-4120-8390-c95416e86d2c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd2efb4-9855-4f88-9a8a-2e539d747723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2923fa11-afb6-404f-a09f-724b387cab21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8876547-3a24-4fb4-9e48-d357b5f602fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e511f241-bddf-4ce7-9b3b-3c4f410edc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ed4435-a7dc-484b-84ec-aafcd640a319",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e120ca21-fee6-434b-b143-524e56314e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac286ae1-27ee-4f4e-b3f8-455c6abaf623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbedb2a7-8818-42b7-abdf-cecae9f3f571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74e2da1a-ff19-4826-a867-4e5292a1e990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a947fe8-6c16-4203-a258-03bad7b66466",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b56185c-84a2-4904-9610-0930d86a239e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea943009-4f5b-4ba9-b6d6-438ed33b5faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f642387-b4a4-415c-bea0-91d295aefa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46d3fdab-3bef-45b2-81c0-fb4b54e74be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f57580b-af81-4799-9253-d2efbe62303d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e7f8cd-37f6-489a-8526-41c688df09b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75d2472-9f60-475b-bab1-71a39cf28fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e968777-f259-4e93-b560-e6a11509d90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdda1127-059e-486a-ad03-4d82d0efd653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5389f7-778a-45e0-9eb5-268d2c3e7c44",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa8c943-758b-4f54-89bf-ec1ad09ccf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f83664-229d-439b-bb16-bb17cce7978e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34845527-f97c-470c-abac-bbd98c400e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c358c23d-0b0c-434a-a111-8a9446dc6ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58170de9-f028-4b3d-9964-b83b279e34f5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f335f13a-8778-435b-9023-4db35f937694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0a9564-9ace-443a-98f0-7794e2aed73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ac0207-c578-451b-937c-25b7ddf242de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "443a31e3-b7ef-48ce-8fbc-2558a31521aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93550bb6-4f91-46db-b1bc-219a80a37faf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b753b6d3-8604-4bbb-a549-10d189113a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e96c1e2-22c1-4fb1-b23b-3b4b12cce895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d56fe7-9533-4d43-80ef-2488b8d02dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0412e510-71e1-470c-93c1-e9258bccf21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7616c82e-4520-46ab-a938-ebf5fe61d1c7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff129ea-59e5-46c4-9493-6ea5e6a33298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345d4dfb-7568-4add-8988-47e8f18e9db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11f1035-548e-4e6f-af6b-f588460b1480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "21c0838e-90af-4fa5-8947-ea9ba2bdf7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b39efdd-9e60-4443-97a1-ea4ea565bc76",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3463f57b-660b-4158-b943-d24cc31eb270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fa9deb-c8e5-4585-81b4-504b1d1aa91e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d683c6f-7589-4d59-9a56-4486665608bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eba296cb-5b08-4944-b33a-93d5670394da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c413ed73-76ec-443a-bc0d-23bb607debbc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442c5de8-cb35-43ff-b61f-d099a0b28eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d499e5-6eb6-4d93-aef3-5b1e46073aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3202e4-60be-4ea3-8267-a6264f3cef21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb504530-2d67-4215-81a7-fe947dbc4ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f340a53-9217-4f38-83fd-c3d78b479c75",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b390584-8b41-48ce-97de-8c32c0ef983b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778234ef-0947-4c4c-b363-d8e953be56a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b0856d-3484-4637-bda7-bde5578a6c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd4df5c-1290-4e7d-aa64-8aeb9d6cff37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0792165d-d380-45d3-a67a-8572943517cc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a315f199-9957-460b-9004-d4d5aec7e47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7adadf9c-a7b6-4ed3-a325-aefd4c6e0abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b017956-7882-4fe2-9f8f-bc1349ae2e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d20fd87f-62f9-49f9-bd31-6164b9cc59b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed82cf36-9343-46c2-bb13-e72e280d75d2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1f8cbd-051f-47d5-bcbe-bacc0b085ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc16838-e138-40ae-9ae8-3778594998f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45535996-fd76-4bcc-a5ba-572d148d0143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d8f829-ccdb-4b0a-9869-c006570f3d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1fd45b-8b83-4b20-8f38-3bb006666943",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb7c08d-cc13-4268-a522-e86b3a7693b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0b4dcc-e231-4b9a-8c4f-b2296edb731e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd2bf47-dba1-41eb-89b7-30b4d919b475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bff7619-0db3-4d1f-926c-c7fa54bba612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed01ce4-9c7a-4fa4-860f-f39a52e1cc5f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f29f12-19bb-4fb6-9ada-f8a8fd657f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0f5dfa-c4c7-4806-b143-fe2330127ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48d04c9-a44f-4d45-9511-e80d8e270475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9886a8-4fff-4065-ab2b-acb52cbec139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662fb993-4340-485d-8f04-d87c4e2d229f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d991e55-ac07-46db-98e4-6b64c6704d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2477b4b5-85f2-4db0-bc2d-2793b2e1aa7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06113bd7-811b-4cee-bc6c-66e9ed85e6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b96b49da-c02b-4971-ac39-30874a982e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8004a9ab-a316-4a59-bb78-b1e57d2a21c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8c06d5-642c-4e76-b2f3-2ec8fab4869c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63be273c-0d82-400d-9f72-ac73786d1db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f3b3dd-a27e-4f11-8054-3f060c31ed94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "abfc78e3-e09e-4655-9624-0aa933e83a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbd414a-6581-4193-8bb1-b61c949e61bd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765a128f-6000-4b08-994b-6d07cc887833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ed58ef-3370-4bfd-a827-4aeefe8f58d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94b2257-9ea8-4add-bb7a-ccf80ddc6407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c795270-9d97-46a5-a6fc-c72153134d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9ddf26-4615-4a44-9d44-c4302c3054e8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f350ed-f5c9-49e4-9d29-6e88cf529519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4509c8-02cb-46cd-a190-dc5484d45672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0546ac92-f6bc-43b8-93ae-af916ced77dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e6a3ca-588b-4418-a727-73ac0d937ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b87525-10e9-45da-91d0-5bffaeb1d722",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6372535c-6ff4-461f-98aa-1cd383d9065f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21eab4f2-f934-4b16-818a-17792f09ec27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68191d60-b029-4ff4-ab3c-4785a0c8b99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "264f87af-3e83-436f-86f3-a9b8953aa528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e681bdbe-b9f0-4938-8ac6-728084b46928",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641ba084-f3a7-49f8-829a-2acb207f3113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed5da39-97ee-455e-93a6-c26836208404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68422626-ac7d-45da-997f-5b97e633179f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c53cd3a-9f99-4847-833a-08610a301e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e02294d-6ef3-4abc-8946-a9ddc2aa86d9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e07715-5f94-44bd-a739-6dca7f830516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a5b1e3-9773-4290-b79f-c4eaf135a21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a18e7d7-1614-45bc-a13f-c93f309b6338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5df699fc-a1d7-40df-926a-70fc82498936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7beca705-11a4-4864-b014-2cb6af516d90",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6a905e-cdcb-4e12-b6eb-7c63cdc33daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc4ea28-0541-4ede-a8c0-d5ceb73bcee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8331ff8b-89b9-402a-bb43-0074e2c06ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59fd7dc4-d059-4dc5-b6a3-0081254248e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e2929f-3b17-4081-8cfe-c4080d6482d8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3955220-49db-4f13-8e3a-3644065c288e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143ebef5-9226-4565-afdd-7e9112710e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9ee819-1155-4815-aca2-f12941458dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a4ce7b-09cc-43c4-ac56-1dd141c10986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20578df-ca07-4ba4-b6b4-5b579d4ceef8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a06dec0-ef22-46d8-bb1e-1606afae9b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb3d772-a817-4968-97ab-f342a7823db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ac6b57-2121-40de-90c8-b7d3aa974785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c693bb-1c0c-4934-b9ea-35ad73b24d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9bc523-6145-4fe2-8bfc-999b20ce14ab",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2352cd0c-5d22-43d6-bb34-ce9d90562916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66faedc-2669-462b-b898-16b784da2ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b04764-0d94-4c35-a6ee-848d028e3e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "20a9caa9-bc0c-4248-84af-e394422c2030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bc3db1-4697-45cb-8ab1-112e4d2ae34d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fef40fe-6b48-46a2-8881-431b34248b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f55240-812b-4308-9d55-fc4cc55c02a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8d45cf-01d2-4fa7-8c9c-9add74cdf674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c68dd661-aa7a-4fa5-9452-b065fcc7c7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b6adae-6e14-4ed3-bd59-38e74dbc04d6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e688696-213c-4497-9e57-f0ff82cf6948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397002ae-6d64-4cce-8fa7-fd7cd09f80ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72db3ccf-e7c3-4571-a4a2-46a5f290c2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e99f79d-f6ee-4369-be24-ded18e6fb1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f028dd-5ae5-4c22-9c59-2cd101b77b2b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75922ff-c234-4ddd-8be5-3fafc826784e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c110975b-fb29-4c48-8104-9f527de9d9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e83eca-360e-408c-bea3-745b8a7f2b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f820d1d8-f100-4a2f-9104-a7bc0939ebf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4006e8-ad99-42aa-8dc6-e9ce7bb413ed",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71a997b-6084-40ea-a150-0ad113d6a8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa7cf045-b1c7-4da2-bf8c-b5bf0abfa8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcf04ac-3d21-4697-afd9-d7f12376965e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "933e238d-23d8-403a-a507-babb1fc96885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58c6ab0-08d4-49c6-a4f2-de42b0fce3a3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f65cb3-422d-44ea-8096-e244f958698b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d874dc0-c8a5-4847-877c-f84f5eb5419e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9d5f05-af05-4c6c-a980-2662ce25b5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3483455-33ed-4bdb-a79a-14df661649b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97905800-a0c0-45d6-af5f-4be6b0233c83",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259c96c6-fb0b-40f1-b36f-d27bb8376de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90fc6f22-a7f5-4eeb-8c77-80afee6fd327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a442e5fb-0189-4bd7-bc82-f48f605b718d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4327717e-f3ba-4bc0-b17b-50ef89d1160a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e815838b-b71d-4a88-89e3-c43fd5d34a40",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886f0775-9f8e-4b6e-a212-08556fe9064a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c710e5ba-7de2-4e3f-aa40-821e79958acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1d5e19-16de-45c0-9ae5-fd480ba4749a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa7b7ed-8852-4e2f-a2d5-8c2166c5085d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b90d247-2588-4f4d-8447-eb2c8ba3f529",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837334ad-bd63-4d68-a847-4f425c882a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6446f049-f633-4897-a83b-ae064524ac38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198e02dc-7ef7-41b6-aa03-3084e3f5cca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8941af02-1c2a-488b-aec9-235d97819e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b318c4ac-2463-44ab-8e01-ca4104d93d89",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74f8771-a28d-4f0d-ab8c-81f5a260ad51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ca71b3-c615-42e6-be38-8a04d44f7012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceaf8e7a-4ea1-45d6-a346-c1973d4dd6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2c8dfe-5e96-43b5-a30a-37dd37eba4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1544f9-b057-4d42-acb5-0874ce71d1fa",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e728fc-a648-483d-9dd6-5ee84b99a865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7bc3ec7-9ec3-4787-b70e-15fb059b94aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41181c7e-85b7-455a-8f7c-3745137fb6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d544f0-1f2e-4340-ac16-c7f5979aabf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e64619c-114e-4937-b791-bb30f2b0d59c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea875e8f-69b7-4419-b6b2-8984581fa17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1cf7d6-1882-4bf3-9477-e1365773ccd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff12183e-693a-48a0-96aa-edf368043cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f74ab508-3a9e-402e-a75c-31d3f2c21283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23470e6-c716-46e2-b6d1-ba3c94a71716",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653250a1-0fef-43e6-afde-e603cecf8e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13cbad7a-8b4b-4e97-b5be-b42d4d7900ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d200738-32de-4bc2-ac61-26daf4c93529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "87dbf626-eebf-4dbc-9376-9e6a967e077f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082ab870-4819-4e32-9bb8-a543dce65188",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f048901d-8dae-4df3-8d5a-f97a6d87a4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344acd62-865d-40b1-aeb1-5c8eefac1829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfdce31-b92b-4b52-aa0f-847e19e75198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "084bd6a0-5f66-4f60-816a-3f7fad70161a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030627ca-740a-4a4a-afd9-8dc34b69ad10",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7721587-52db-4b52-9099-0c4d24b10a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3513886-9026-45a6-9973-5cdacb0e009c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b7fdb4-ab2c-4f3b-a01a-4ac19771fbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab852f68-f3a6-4025-9757-10871482b33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414aee5c-dd55-43a0-bbf9-a06fdfeca5e6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc528ae0-72b7-4d89-a6db-17fb8484db92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb5339e-74ca-4926-b886-68f688addb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61950d2-a111-46f5-b8f1-f0c30fd7392b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ab8d14-b9de-43f2-a6ea-febfd2ff38f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411e557b-abd1-4094-bcd5-0369ec3630b0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b132fba-059a-44f0-80a9-a11c1f84cde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f017ff27-2e2d-4dbf-84ff-b41ba55206b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229ef517-e079-48ed-bce3-23cc47d7d7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e280e4e-3500-49ad-963d-bcd507956e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8372284e-45a0-4cda-8b53-1e8b3c2c8dc7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c35a55-0cea-4196-9763-2c835e2bb667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854b47f3-efd0-4308-81a5-9e5aa8b35654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245b0fe3-a2c3-4c44-8d13-7c26d313e11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2368b9dc-ce22-41ab-9a26-6b8b7e422701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255290b0-25ec-45d5-8957-8bebf3a04e08",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da47d6e-eac6-4ce0-9bb0-e9b0d08dcb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e24c12-e8c9-4810-adb0-d1d3df62716d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e20be94-84b8-4751-b5c2-688e446d6858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "67fcba70-ee59-475a-bfde-fbc609ba1188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c8d317-233a-4d98-bda5-63f45db35a24",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f13534-0d41-409e-a7e1-13e9a9e77158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04252083-ba25-4eec-8487-7f4c1f917dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f38fa7-a7ba-4dfd-96a5-8846411445ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8006e4f0-5fe6-4946-a861-b4c57259dfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f80ca1-f1f0-4e19-a172-2814e148e98f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6b7f96-0a08-4553-aacd-ca65543315ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc764e2-d73d-4951-8286-cd0ec1749ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66af7644-064e-457b-acfe-00cfa6e281f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "864e881a-2bac-466d-816a-b7c1401de2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b777cb-2559-42fb-86fa-1803e2d5066e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa1bf03-f05e-4040-b00a-588fa18a9747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d355b1cc-7e1c-42bd-8a88-aac40d503247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61010097-8778-4907-adac-0137d968570d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f8a8b60-6302-4b46-a00e-d42ee83c1b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cacf5c6-95ac-440d-8efc-4589d5d89394",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7012cca-f57a-4eef-977a-3f4d6f7c381b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ab08a2-1fea-4f1a-9801-2750fb3a1a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f58c80d-bb59-4be0-aeb7-c70ebaa981e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "264aeff0-5cc6-4324-b3ef-ba27263380b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b207b5-213a-41cc-873a-dce11b712e3d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c1b723-8940-4e79-be54-11f7a0db2290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f37341f1-f5cc-443d-8435-b72d55651639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599527dc-6e91-4ada-af92-efa5e706c778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "479c4e89-d8f7-4340-aecc-4bc10b29f3c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0a735110-26f4-4453-b150-4e58d83ad7e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc278d3c-d336-42a3-bd2e-f4c980816784",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9460c9e5-a2af-4bc1-9e8e-a5fbc7b662ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d81192e4-1a86-4e6e-a178-e7818f5346e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76f0e1f-cf33-4d63-affa-336725e66cd3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d16232e-a82a-4baa-a788-0d5c54a6a033"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71195f7a-5c4c-4c03-aa85-b0dfbdfc3b1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a30ec29f-0b7d-4711-b12a-a0255b13ebc0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04eb5326-48a9-4d07-89e7-93af38c6eb41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9765a61f-67d2-4382-8d83-f5592c7215c7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f0b4daea-5639-4501-b990-08ea81f61e90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0d20ddf-2f93-4b50-8e5c-3baa57fa9107"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cb6522ac-46f2-42b5-8190-4b5f18659475",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6464986e-685c-4447-b36b-5bfab32f22ee"
                }
              }
            ]
          },
          {
            "id": "21e97f0e-25d2-47d2-8891-13618721898a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d2773e91-cacf-4e49-acc7-1d994d6f744c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "39ae32d7-bc3c-4928-8347-103e10f87990",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b91d86-3574-4e3a-be4a-a22b15cbbdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "93f99f7a-1160-4373-94b8-b569615fa8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3222dd8b-eb53-4a65-9a7d-9065d414189c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfacc0df-9a5c-4f4f-b755-e47b88df4a28"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d65287e6-15e2-4b43-9935-a3815c28dcb9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13356c86-3f7b-44bc-9013-3c571eb01d33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "289f65ac-96a8-4a1e-bee3-1a2171f934f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1dfc9a7b-3d1f-48af-a7cf-b18f6bfeec77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bff84094-7b32-4464-93ca-ccf973b7d5dc"
                    }
                  }
                ]
              },
              {
                "id": "edc788a9-4649-46f5-8131-b8eacbfb461a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d91d8c8-dd6e-4257-a302-de89cad06978",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "056e8121-fe7e-42cd-834a-a48d5ccdfb04"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c88c9846-858b-4c6a-b037-266be7b8a4be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e6f3f562-cd09-4728-b10a-063c39d70ce1"
                    }
                  }
                ]
              },
              {
                "id": "21be88c1-3faa-48f7-a9df-8c8a7bf93dc4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c609723f-fe62-4386-8b29-0ffe5bb0869f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0474af0a-99cc-4320-b126-1add712f92ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cc72860-8c40-4aa4-8b05-e8929c65a3ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4a961e4b-6954-4669-8c4b-c492730ce21b"
                    }
                  }
                ]
              },
              {
                "id": "3c768258-cc6b-4705-835a-daee897c90d5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70b80ac0-73db-428b-b490-3a0040f9eba0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d27d205-1ae9-426f-bf4f-3561b74705dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c3b71d1-2a18-44f9-bffc-d1a0d2cae99d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "76c268f8-3804-4104-9451-42305a57c3a7"
                    }
                  }
                ]
              },
              {
                "id": "9f39ebc5-2215-4909-95d5-18ff1153cc04",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e974410b-ebd8-4dcc-af35-9bffe538ee75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94012ce8-6c2d-41c4-b979-d8a0203a824f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da4273e2-b47b-4ad1-8d01-e9f3cb8ba08a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1c94da59-6f9b-43c3-bee0-71d8a59b4b1a"
                    }
                  }
                ]
              },
              {
                "id": "f5078c57-3c1c-4bfa-a690-d26f407e338a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b375c00-61eb-4bfa-918e-26da392b3671",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3477bd2-7ca0-4cfb-bff7-8174c88bab67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03e091ab-3485-4d6c-a092-929d0fd6d462",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee14bdb6-a0de-46e2-a0ac-5f07c8240962"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0bb87ff1-5d25-4f95-abcf-e442e57244f4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0266bf3-5f77-4a3b-81f1-8182a30e8e17"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e6aa440e-1339-4f99-9872-34ab6c5e26fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "736a0107-61e3-4500-a2ed-51f6e629c3d3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "386aac4f-b25d-4986-b322-f9a9a2b58570",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3eecae03-e758-4344-ba5c-ad5b994206a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9587920-ffba-4030-957c-78d4e6742c7a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46d2d085-6d44-4a61-89e1-c2b57cd9c474"
            }
          }
        ]
      },
      {
        "id": "0386be9b-baea-4480-958b-5a27c92c2096",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "98ef652c-528b-4612-ba42-780100b382c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b6c0c9b-e619-4afa-b152-9aa0b78125ac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "57526264-22ae-4c05-a55d-e2a1bed02f8f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ad5e8b-0969-4415-8b1f-8ef74d00e203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b25d7a4-ed4a-4978-8614-33f5e70754ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24512e42-2fc9-41d4-b494-ac02f1ec48b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d8d479-e4d6-49f2-adbd-d9c411201a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443cd464-0e20-4534-8434-eb09cb839c02",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9fa0bb-963c-4658-9f1d-c4b23e694fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4102bbf5-b900-4372-b9a5-0381d51d9a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c67496-7275-4dae-b816-57669726a3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fda6cce-aa1e-4ccf-a182-577df304d6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0795e84e-3ac6-48c6-a96f-0d78607f23a2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c951f3-6de8-48e6-bca7-f9bacc9dc8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db815378-1174-4291-a63a-5fca33ac8b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bef637-1792-4094-a8ba-e42c23387f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82b6343e-9280-4494-b8a8-8d0b46630bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761827f3-2472-4d5a-84d5-722bbd9c657a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a2e120-2451-42a3-b8e5-3bb090ee7a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a15f07-61ae-437f-a98e-a9f8ca305717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677a6851-099e-45bc-886e-a7088ef7803d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b267908-f2c4-4833-aa89-36e558a553e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f067c7ce-7441-48db-b0c5-396fabf98850",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263617a3-f22d-474a-ae09-3a3ab30a3e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e525c0-a395-452d-8007-d135a4d7845f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fffa04-332b-4ad4-9f34-698d77180736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba09bc09-4b2d-4b5c-908d-db1ee5502e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9111ce-85ec-4a30-8807-95e439222654",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1fe328-0f23-4193-91f0-5bf9d9287d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec403f09-8ec2-4918-94f5-f90ecda99574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91dbb86f-55b3-4cd7-a4ac-b92fcf0fd0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "618919f7-7758-4828-a633-086ec7f38cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf20c05-f269-4474-a573-bcab759df97d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c327bce-a17d-4dfa-85d9-39801b08cfe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5783814f-805f-4ba8-b3b5-45fcb31fbf5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f10169-e5b4-4672-b10d-c390768a784f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "65a92d3e-836f-42dd-98d8-f5795af4b5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50499e3-7868-47fd-8d14-0b0f29497bb5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40789a0-986c-48df-a210-0097426ed4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60a58e1-cc3d-4109-a128-77aa8974b42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63891fd3-94f4-4584-967f-239fab5d7d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75dcaeb7-9a8b-4534-8f76-ddc6e88582c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83f666e-0070-4ca7-83bb-a3f7edd9c156",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163cb1e2-1abd-4c9b-86ea-2363c93ee00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88df0886-c450-47d8-a521-0c0d08f8d54a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6449c9-729c-409c-827a-80dfb8f953aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac1b58a-4e01-4754-a8af-1fdc2494d713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fb6a07-486b-4b47-8b7f-adde3f75dbcc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5181c57-759f-4e8c-a88d-227e492329a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ad97c5-a643-47f4-acb0-d3dc969562bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5311fb41-bb5e-4607-954c-b51addc86dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d679374-494d-46ea-ad6a-dd80c1a20f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf76945-71ce-4535-99fc-55714b4ad928",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5da405-dc9a-4346-8393-08f48dc14f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff15cde8-6f90-4091-a5d4-4d15062df9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657baa6e-2f1f-41ca-8fcb-207d3f7b57a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d5df8d53-a9b3-4a03-ba36-d8942ba3fa43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b387a77f-0838-4fa1-a872-26a61fe0f816",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2d15e0-e43d-42fa-9cb1-7616a130c059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06f53f0-8cd7-4faf-92d2-3d4d4ce4f20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40395e52-5315-42a6-8675-0630e44a7b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "750006ad-485d-493a-8392-6c006cf60785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944f404f-0351-4cbd-999b-ce5ec66acc16",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586d0da6-871a-4bb2-ab6e-526cdf98bf4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc350c95-f6df-44f4-af53-3907b2f07c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29accf71-3ab7-42a9-87a1-b3fe746a7fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a013848b-e207-473b-86fe-f38d0dbf83c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28812c30-6488-4042-b949-aae75494e890",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b530a9f5-a902-4910-93a6-381f4baf0ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0472d39c-2d3c-45e9-8e27-58f584726df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda47208-ccb3-45e0-9759-613ffb434555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a027c8fd-ae0e-453c-9384-bf0c515b57d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be249a09-31b2-43ff-be52-78215ec1a046",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201509f6-3f3d-4d71-aaf8-4c1683f686b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cac8f6f-c676-4439-ad9b-b141a7ae688a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a5ba6b-74f2-4d92-8f8f-ecb9144f1887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "88fd90d6-a3f4-4225-9d04-b6af945e7940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a37746e-3a2b-44d1-b320-46d4b7e5a3f5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9cfe86-b726-4604-95f9-90f9bb815953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fcbda98-2c22-4b00-bc22-67804c781e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18774c8a-5331-4543-93ba-5902bea52f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac1ced2-9c42-4bcf-a3d2-6f0f83466493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99648f52-c5d3-48f0-9e98-8152775ed915",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b540e3f9-026e-4478-b8e4-c0cccde2d3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901ba649-c335-46c5-a63e-314f09e70bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db25866a-8ddf-422c-912b-31284a60bf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbca5e0-03e0-4bee-ace5-502d8fcbbb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699da074-a2fc-4eb6-8574-f1ce126a6faf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31811035-d9a8-49d2-8cdc-355f89c1d68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ace3dd4-bc92-4647-8d70-57fc07c47408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5979329-a87f-488c-8e99-407f0d1d1177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5905be-d22f-4b64-ab42-abe99ac8d853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e43f48-b18f-4087-bd15-edc3c6f22996",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c098f325-f3db-4e87-80f1-f3666730d9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0d498e-bf6f-4e45-ae57-65571667827a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69885d78-6bc3-4d3c-a38f-1f9d3ef5e317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed79dd0-c737-4be4-86b3-c158e8c885b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb274027-5bf5-455a-a935-47a454b1cd19",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32dab0c-692d-4ea0-b077-810ba06fa081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d91439-d801-4e7d-b1a8-3b0cc4853adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c4dce3-3e0d-41f7-b509-219c424eae0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f45b4cca-64f9-4218-8038-cd333263c560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1498098-8008-4bcb-82ba-1daf9a360ad5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4aeaf34-e72d-4bd2-ab44-44f6435b8ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a45938-8834-4d25-85db-213aaf7405cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845de1f7-f35d-44c0-a5e6-d119d8b4a668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b74ad1b-fa50-4faf-bba5-7a23ecab3cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de7c1fc-7bc8-40cd-ab66-300e875f18a4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7350f2-1241-4f75-bb92-793b957e5649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4655ea97-3cf3-4f9b-9e82-d027e94d7b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84adfeb6-71b3-4bdb-97f3-00dc9a426cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eedd2eac-1224-41be-8377-7000f51120d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1aa97fe-9111-4d4a-b798-f1aabef00c84",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d6c92f-34e4-4cfb-a47a-42ad55f9cdd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f762a7d-a815-45da-84e5-9aab90e91767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06e58d1-b135-40e4-b83c-43317681cae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1268de18-08f8-4db3-8308-a7f47705cea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc380d8-9fa1-4f19-92c1-facde86e30cd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7534de9-7772-4478-8512-41e8e86e45df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e970ae7-ee31-42ad-a9af-187949c8d68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117245f3-c207-4548-acfd-d17db58fe67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c07e77e6-88ca-4aa7-9801-66c731a8da89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01839461-7539-46ee-acf9-3edcbea677f3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb98f38f-5fa1-4d88-a399-9acd2868ce0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5363f992-a0de-4a72-953e-460adb1b4d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f65bc7-3a76-4974-b866-d594b7e23860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e140b49e-7d1f-4d58-b3ac-f2d4184a768e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1dadc31-6fd5-4570-b2fd-ad3793ff1625",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133bb8c3-0e99-4b30-9181-6aec6a9f3803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ccf700-bf42-41c6-9e1c-4b0e8e7911e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8b0381-51a4-471d-9124-5a4281ee0309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80fe18c1-121a-48b4-b111-3f461c7b082c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d293abab-c736-4845-b1e1-b13b08285f94",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bac54f4-1cc9-4760-891d-b79402a4878c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a114afa-c4d8-47ca-994b-5219bb6c7425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f75e9e-9dad-40d3-9b57-9ef17799279d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03a6059d-bd64-4fc8-880f-22789452e10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0dcae6-c990-4355-ae3d-d811d83995c2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b433de7-8764-470f-8378-b524afcb00a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e1dd42f-c2b3-45a0-9259-976326a5f1b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e795c717-a3eb-479d-b778-009c97cc73bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95cd12d0-a01b-4a93-8208-3eca81203892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8ef43e-4226-4cfb-a040-8f7d42449636",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33cf580-19dc-45d8-9c40-9a59b4c2d2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449cd389-8f85-4b6f-89c3-42a1893584df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123798ee-7420-4a8d-9885-985a41031f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "401cb680-a3b4-4f37-804c-30badf31ee66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00655635-e941-41d0-8565-78267e2ab028",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a0a205-569f-4148-8f42-fcf9fa93fa32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa8a7c8-66ab-4e06-96e1-dbd200ddabc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3a2cc9-292d-43cd-b016-0b584231664e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c772cf5-c83a-4144-b0e9-ac5879a8446c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6349b52c-64c6-4646-8d53-b1ddba1a87ac",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1308bacc-8360-4949-aa15-e961f6344955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6baa6a97-a3b1-4045-ba2f-85fbcb253510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0316e46a-fb17-4c8f-8d23-e385a8c6b473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dacbdd4-5129-4672-8761-cc3f97d50c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4047d7e-fc2e-45eb-b5de-0c838ca5c404",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5e19ed-95c4-4cd1-b747-f6f71106f2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7c57c6-3caf-4c1e-bd0e-9e3fe6a7924f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16520de1-3176-47b8-899e-e251ca256a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3baae69-7f5c-4546-a1b0-c613a946002c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "493298d9-1a0f-4c6a-8887-7a943eed799a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8020a28f-9664-42b9-a778-0ab2f658253e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5cc5c2-2d7a-4e24-9782-ba8688d80d89",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f4759d12-5e78-4e64-9ad0-df579708ce38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a696e85-77d7-4ead-b6ff-1c653c049eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ff501d0-0367-41d3-9513-49decd7bd726"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26d7540b-c204-49ed-88fd-f4665d5b965e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d25aee01-7d9b-4130-80a5-ce27ac32d5aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "527f3aec-3be8-47d8-a37f-485a3b068c7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e2a701c-fa2a-4ea1-b72a-8b735e3c41f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26c03d91-7a09-4a6d-aeed-6b1084127804",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b611d376-15d0-46aa-bee2-cf93e562b14a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d91baa7e-185f-4d93-ad96-b954135c484e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb244b0a-49f1-4e3f-8b82-ede674a253f4"
            }
          }
        ]
      },
      {
        "id": "0bfcc001-746d-4de3-9f1b-66fb54209cdd",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "41ee0f5e-01b7-4e49-819c-5f5e7f163015",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a500658-39a6-4a0e-aa26-57aee6567cf7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "79f212d4-ef8f-4490-ad89-e050ee80e3c5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fd70b1-d5ce-421d-940b-b2e3e26955f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "187d3b83-065c-4eb0-b5e2-d87ff8204071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af29ba96-f41f-4f0f-b2bc-0e07deab75f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5df803-485e-4a24-a4ef-0227e675a981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda17abf-9ea3-4df8-913b-4b34ea14abf9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6ad7a3-29d8-4f9e-8d92-ae4c3b1fed46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d13d7c9-96cd-4113-99fa-cda549527e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec564604-4406-4a96-b842-7eb82b8294d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4894d2e0-4543-4f86-bb96-0ac66c7b1063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebf5df4-da6f-438c-a86c-4110caf5d44a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcdb40d-6d9d-487a-873c-21355a392dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0c5cf0-28b1-4c0c-b70f-e820bf74edb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efac2185-1fe0-4b8a-9849-69e3121199ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0aafcc0-8a01-4857-a917-0245d356538f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd819ca-b8bd-4c0f-a83d-b6ea3dc6833d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e060235-6b65-4eb8-8ffa-c7446ffc79f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a544b26a-f2eb-48ef-b331-c6c88a9a490d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412f5c1b-4b8b-4650-9803-ccaf1c506d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f16673-d51e-4bf7-a69e-77205c7737f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947178f9-5afa-48f4-a455-6ee31be48a1e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f09cbf-e730-4180-a21c-43ed7fc55ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ab5169-34b9-4101-9a9f-ae44199f4448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c611c2d7-ab0b-4b33-b5c1-4385dfac0fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef09e5b-3dac-46d9-aca2-5e880d3ef7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2096286f-c8d4-4b9f-b8c9-a16dd8fb89ac",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd7e35a-ffb9-4270-9035-3a86ca508813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9860106-c47f-47e1-80a1-5fcf83a7cc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb8400b-bdb6-4d58-a7b1-37cce70a27e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa59f086-5c51-4e16-8b54-38b15fc119d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c428a8-eea2-43b5-a234-fa9dd87c2208",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949306e9-4649-494e-b3a8-8d40c36a6206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade34b13-90a9-440c-8a30-e4038cf8d510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47fe9d7-3c17-4c3e-898d-5efaee68b688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7b8b6b-b64c-4dab-aefd-17d42ed2a2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3e0c41-79ad-4d23-988c-13b2ff686ea1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5da72bd-a029-4bb5-ad33-665a0a721dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1446a4f-764e-4a7d-8ae0-153a206205c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2619df5-2a77-4a22-bc17-00f8212ea17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3000a86-b0ee-4cbc-a3f6-3708fb0469a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e20271-8a1c-43e1-b3ae-9de3590a8d57",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20625489-b1ef-4232-83e2-e68682d815b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47df6c6-3f10-438e-a6f6-55937447f015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787e2b4c-adc2-4776-b321-0544b1c602c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c362b79d-fc91-40b6-9b87-7014e7873749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb116901-e677-4359-9dd3-cc86c7710aea",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e42355-d1ff-41ed-81e0-c750fba354aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac0b4f6-2bac-4e8e-9151-a70fe9e11033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ceb4e1-9c7c-4a8c-bfed-c741e748d673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4e789b-6f6f-4c60-89d1-8b9a284a4bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58ed443-4e3c-49b9-97bc-0ef6d42cdd52",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0225c09b-e102-41c3-a661-805d975ec472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b851466a-38a8-4fe5-99cd-8fd77e74265a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77130eb9-2da2-4410-88bc-8ac25cc2582f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "536d6eef-2619-4f76-93a3-72cd3a42dbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5331bea5-fae6-4b55-9b37-def247bc7667",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00423b5-1ce2-4725-a8f8-f403b4ed3b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4548f15b-6b2c-41f9-b34c-c512c0cd37ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a691f9-3c69-4c81-ac40-556b4ba2c281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6cb079-0119-4eb5-90ea-ddc75e109956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86ba2d8-6863-4742-b010-fcfd36515c9b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0feea6-0cb6-4bd3-bccd-d28cb00b79a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdead3a6-8470-47cf-821c-18e90661e8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca76928-7390-4d77-a36c-7295f7efae6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43fd7624-79e5-44ca-af2b-5874a227132e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed94d1e0-5f89-4751-b0de-87c70aa221e2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "037652b5-9b56-4e20-ad5d-04e41eb26d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8e6716-8d78-4b6d-b350-f6f48b4a111c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1c4330-bc60-4174-b510-ac8edbf6aeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "70af349b-17d9-4b3c-b3aa-0fff3451bc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d781f2-6ade-432d-ad91-81baff39dff2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96289c86-6583-4196-849e-d08a76c42710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b17613b-1c63-4dba-b996-f03032fe68dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac5b7ec-9867-4262-b159-45185c9256eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb7409f-ef37-4bc5-ac48-7ddb62c6c18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458cbe27-3104-467b-9f03-2d50663522f7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff459d1c-b73b-4661-b880-57b8e816aba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880a84e2-d50b-482b-8c0a-212bd43c3a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b21f135-edae-4d6c-aca1-26a62435bc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb3e037-1405-47e0-8f8a-9ac257122985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cbd798-d453-4e4c-91b3-3b36d66ce841",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1c8a74-fd95-45dc-955b-ee734d2a0e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5e11f6-544c-40f0-85f3-90562d943bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d292fb66-b40d-451d-8593-ba57dccff025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4613cd65-7f82-4d8f-8fa4-63e02b77f421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2582d96f-4593-4f32-a7e6-931355a5067f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec09aea5-737b-4fd3-a74d-563f783897d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7e87c1-f0f3-4913-9b88-35c0db9718f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde28a44-88c0-4caa-aac6-7bd4dd78545c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2db157f2-7d74-47f0-bcfe-cbb750356936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bc1ec3-0d5a-4888-95cb-e85ed52a9584",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3abb119-8a55-4989-bb8e-3da2620e5722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb5403d-8ea9-4c11-9bd3-23ac1a2a4851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec58b03-862d-4f1d-b8f3-8d10e8db8276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "045a8f39-e3fc-4d8f-87c6-2d73d5a69789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81147e10-ad94-4b01-a7f1-b40afbf6a9d5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4dcb99-6c7e-472b-9822-ec2b24e886f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e9abc5-c06b-4e95-9719-0382c0eda3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1441a04-05df-4b9a-ad68-eb2d058e8b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04a98ef3-5999-4c1b-b3c9-065c6ef7dd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f7341e-9908-4bc3-a0b2-ae0fc41d3427",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4752e5-8bb6-41c2-8dbd-ef85a3fd7a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47e065e-deaf-4d2f-b4dd-8939f0d21607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db8c164-f633-4123-ae9c-21f0a08342a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b019b617-4a3a-41a6-ada4-7f39543c9146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ab53a6-c765-480b-88f0-9dcc38c896d4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc14448c-c0f8-49f9-b316-144da8dbd0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068a7da7-9bc6-45c2-92dc-ebdeb5c6c572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc2a133-bd61-4a93-9462-a9daa620aee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d61c7fe5-8133-413d-9daf-68b3ff326cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a35889d-e433-4997-a354-a0dbe8d971a3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5533d295-825e-4e1c-a91f-c38d2b6a5b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0845fd-3cf5-40cd-a60b-94214b146ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a5515e-48de-4a57-bd8e-a7a1a19b5443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c56aee6-6b75-46c7-975e-6188ccfbfa0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec19928-79b5-47ed-ba05-dbeafd871685",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd0653c-fc6d-4ffd-813c-4dc21824328b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7c8b5a-cd13-4104-b142-6eb09aa916f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b93b912-064d-4891-944d-761bdb99c858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e2b1c5-6dde-4626-87fb-893c8d544e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1832cc-4958-403c-8330-de15a5db665b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e71fc69-d66c-4635-bd4f-bccb2382b2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0287ab73-350d-4206-bdac-34f2b32fce0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e753c7e0-aedd-4e80-8929-6044ee3de8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca1f83a-038b-418c-aab3-1931b66e6c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c42282-52a1-43ce-918a-eec68318f15e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d174e1-03fb-47e6-8423-a4d32e3ce03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fbfb1f0-022f-4ee5-a94d-8c1abf48d46b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1150ada1-1a9d-4dae-8ddd-c28c04f56875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa86e12-4cdf-48d0-81db-adbed646afb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7034e7e-a55a-43fd-bd82-d2e648d13dc2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b2e59b-91ad-47b5-a886-c6d49b01317f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faecde15-da33-48b8-8fe6-454f79cfd439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ddd906-0040-4aa5-b552-3894de36ee91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19996fdd-9463-45f3-ad7c-877c7df2dd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b036ad14-855e-40b7-bb7f-ff578b13e3cb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a055ca0-28c9-4938-9977-5c86d2e6b12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ea118e-ed0b-420c-ba6e-b5480082d302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0680cb-ab7a-4521-9ee9-bccb38dcd47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "891a91e7-079f-439a-9629-4ad0ba78774e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a5cd44-93e7-464b-b4f4-c730ba8e0b31",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22009320-73bf-4d1e-a625-bf3c4c9676e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242c9fcf-36df-4160-b4ac-338eb5e1b47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3c8019-29fb-4200-92a9-51ff1d7f988c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f13d981-02a9-421a-8fb5-689b1c83f216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749779ba-fada-411b-b7f3-4b525177a8e2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b58e12d-116e-4371-8898-71304c2df056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1cdbd6-b3bb-4837-aa38-6d47326c940a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9020f230-1d3a-4187-859c-7b6762aa49fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4be7f89-c640-44cd-9c40-5cf97dbfa9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878732a7-72ff-4bd5-96c5-22d2e68bde3b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf28c04-31cd-49ea-9ce2-95c6e5dbe375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb0d2c4-4b6b-4f36-98e5-bfb1eb5f48e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4c869c-f458-4f53-abe0-f780938a2e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4f1d57-1c04-45b4-984a-e344736d5791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23501dd-f821-4478-9049-b5d06ab58051",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3d2c11-aefc-4d8d-b7f5-0420f39adf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37931d56-8baa-4137-bca8-8a10a57ecda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428efc79-fabd-46f5-b830-2da322a8a992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa9fb86-87e5-4e68-b3ed-8370307caeb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40deba80-85b4-489e-bdfe-e6bddc43feb0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d89800e-c73f-4944-bcc0-169808fa944a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e166be13-42bf-42ad-9251-c63d66149e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98f09cd-4586-4a0a-b593-b80667d0d774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2773cf2c-75bc-4a33-88ae-6925707370a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7982a73b-18bd-4d52-bfd3-ff5229f9f1e8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e653e3e2-f78e-421a-a48f-f85b36137fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1007ad-96fe-4688-8c04-3d772fa2ab88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3c025a-5123-4c69-842d-779629df91b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc9c548-619b-44b7-b8fd-4a301f66bf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2c1b14-99f2-4ef7-ac64-8a60e9ea3c2f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c28b74-a004-4bde-aa3f-84da7799d9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5beca9-0cc4-48e1-9bad-346e208f9b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1341deff-d096-4213-a91c-e1ea7f151ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8fe345-ddb5-42ef-96c3-079363f7a20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1c9811-8598-48f2-9665-d6e00b7bceca",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16fa4d9-9be1-490b-b0b9-9c6c4d09359d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d03099-e460-4b08-9cfb-ee7a13a69bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1857ce09-63d3-4ebb-bb5e-f0f6646ad92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b335fa8c-aecc-40a0-af33-a9bdc6801f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435d5b99-0fab-4094-b000-26aa0bfcb666",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8909af-ba01-4bd4-b5e7-39927be3d7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e482d77f-311d-450a-9f54-5f65f4ca4231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf935a94-c00a-471f-a9bb-b7a88ff30c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "184432ab-f6f1-4616-8808-834ed06c403a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ebd6fe0-94ba-4270-8392-1dc7c604ccb2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2538380-bc0a-463e-ae10-c9855bd2c3a8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8febe017-e829-46f1-aeef-91b8bdce2358",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8711aa-270a-43cb-8633-79cd2ba4dffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6506c65d-ff8c-4e40-87ae-03861c66f867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a721d72-b1e1-45be-ae88-393b5f646864"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2c33baa-a03a-496b-ab81-791a1584b52e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4841018a-5c6a-4fac-9754-3d413ae4192c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc9adbfa-2cbe-4934-b676-9a4e1d985c08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f350b97-fe67-44d2-b208-45a77d50ed43"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25d4bcf3-e308-494a-8b15-3ede7637eff9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa39eb13-07d1-4962-9af5-9f8e06e02d22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca3d7367-e37d-4771-ac06-836c2070e0d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "203ed4d8-738a-4b7f-80ae-74caf53c50bb"
            }
          }
        ]
      },
      {
        "id": "8bdc3a69-c31c-4f99-8a32-2231eef94929",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a753231a-d3bd-4919-8451-f2235f05ef82",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a189e7a2-5397-428c-8a06-d55c362c8aed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f250e9ba-6f0f-4f35-89cb-2e24e053684f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb701be-87c6-4c5f-b12c-cec348997afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53bb8a92-06da-450e-a3e9-a070b43b928b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a28f0e-99db-4640-97b2-98e296885b71",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3d6682-599e-4cbe-98fe-ca5a8b06de20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37358878-38cd-4939-865e-31432092101a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0296450-11cf-4d2a-a59f-2dc348806329",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd4794b-3de3-45bb-99a0-7a21b023eadb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba647285-a650-4373-8ae6-e723dabc9791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97acb5f9-4127-4f6c-a933-ab343bf8c5ce",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff2174c-78ce-448e-aa46-ffb9c58d4b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f08de36-2ee2-48fb-afd9-2a49d72ab6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b61f865-e7f1-4ced-8198-ae036a4cdd41",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd41157-9421-4683-bcb7-24347f00ef8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3cceb9d-bc75-43df-9698-2b4053416738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad2c06d-be40-40c0-96e8-7ab36e9df52d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443ea3a6-83bc-42e6-9b2f-10f758748c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915f4885-2a43-4d70-9c7e-79f2c7873bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d628781d-0d17-4c6c-b366-de0c65ce6289",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9087227-ab8e-49e6-80c6-82e2a301e37a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007893a8-a472-4f7c-b056-b2694f5d3c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92d200a-9763-4e35-8640-4d6d69c87432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51aac5b9-ed01-44cc-81a7-be7448aa56db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76978b41-0cc7-48d2-bef3-39df063c1d16",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dad89c-3f47-422e-a003-8aae04ba438f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5920522-55dd-4405-9640-a75c68ebe40d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7415c8c7-0f16-420c-b6df-5980cc79ccb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a20855-2ea8-4a5c-9abd-5f64cba1d810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a516c0-3d86-4bc7-9e0b-9a3b3912a039",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e69c09-48b9-450a-80fe-6a14e2bcfbdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de4a6f71-81bd-4b4f-9a52-2e26d07b11e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3104640f-5357-422e-aeb1-deee1ff1ad03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9ad740-cecd-44ea-9378-be97f996b097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec43580-1a90-4161-95ec-08c0f9b51933",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e1fec2-6d94-43f9-bfab-96e0ee6b491a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d483fd98-8e2d-4efd-b0fc-98fea0b15a9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824343dc-8079-449b-a746-3fb22a15627f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6fe35b9-4172-46f9-9a28-76479275020c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce46c02-47ff-458c-881b-bbbc08c3ee6e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b625ec2b-0460-4ea7-aa78-cd029184202d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76436796-8cf0-406d-b9c8-e45619afb440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de51b802-c8d4-4366-8a26-a4e09fc758f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0efab6-7525-4c68-9861-2aa791c9df5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd958b6-3ba0-4e79-bea0-c578da362ef6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97174557-d6ef-4878-8833-32b51f915c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7662ab80-633e-4740-8259-f00c69806ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff78ba8-df6f-4b54-966a-ddd5bea47396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403815e2-de7a-4c6f-a9c0-8002041d1c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44677e4a-c82b-4d09-8a0d-bbc4f95ae598",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1c8dec-d04e-4e54-9599-e48b862ac51c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e622a2b-cc82-47fc-a1bd-b0fcf44a6929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448b3a46-c890-4131-b3cd-307efeaaf710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96cb1ca4-45f6-4608-a105-47738b4cf72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2103a58-213d-41e5-9c0e-5956b4fb9cd7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a7e9f5-f675-4bac-8377-471a1c907f4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5441e2e0-6309-4a21-8017-db6e16f1fac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b898c5-902d-4e2e-80ab-59c639b4020f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bca1b5e-ab68-46cc-9aae-c3807154b4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0be249-c59b-47bf-aab0-6b67f01095c1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4289de2-3ea6-48ca-a065-e46e1551cbd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2a9fa08-2b11-4fd7-9f1c-f2f182f96f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b311a4-5c00-4617-9db4-126b9a1f2ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5ce5e2-ca92-4aca-93e4-27e9ce718058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e43347-dc4f-4e87-9620-cb9c434ded03",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbd8322-b7da-4249-9013-8364f4168558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf3a3cb2-c818-4b19-a0e4-fb497767c3e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e263a06a-036f-4d7a-8cb6-b0334328636a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae0bed1-32e6-4bd8-9b0c-97869ade3200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be692621-b865-4618-b69f-2dc038ec6195",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723673fe-7c71-4b51-8b9d-a3e6c2abf11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42775b8a-8b49-4238-a536-c768a470b20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f931f22-6d9e-4331-86e9-63aa309fca7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9272a975-688a-45cb-a0e4-63bea3b74a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e689dc-edcd-4f81-9089-714be3450343",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25b03ef-5c48-49eb-a7b4-fe37707f027a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe0beb6-2205-42e7-9783-56fd4a2781fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30323f52-9adb-4e26-99c2-fef648b6bf92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d29dafb-7012-4e2d-937a-acc6ea4ba9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb249fd3-908d-4ffc-867b-a7d38b25eef0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b237815-d7e4-4584-bedc-7bc773d99bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48fd71d5-c4cc-45bb-9dbc-1311858dd6c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae017898-4886-4c36-88e4-fa989430c14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3114abb-a5a1-4735-8eb9-96d39f290d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8a5538-dbca-4901-8578-5a1994245796",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d512c5a-a9e3-48f8-946e-b777cefa2de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2694dca-a582-4acd-b94c-c580a5e7571b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee927a6-3b15-41d1-99de-8ac66b5e860e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957c5d49-9a11-4ffa-b74f-d64066679642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0ad5a5-e5c0-46a9-8205-922aadc0934a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a505ee-fd62-4e3e-b439-52e84ec31521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88dfc970-cab8-441d-b110-8255286e5bac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6844600-c305-4d4f-8af4-3397e45c02f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e028f8ac-61f4-4edd-b48d-8676d5cbb483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be109aa9-c04e-4d7f-b766-b3eba8f6b33e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9d6638-76ff-411b-872c-d53c1a21d5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21ab860-d004-481f-a87e-d2b85f2c5962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb93f78-91a7-4b6e-9f52-37d8bcff0567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83cb12d7-066c-4816-af30-6940d5623481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e7accb-af87-4349-adea-19e9f8f16379",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2ca0ad-433a-4638-9eba-092eddad2c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2911acf-eaad-4259-8080-7c4d9fec0ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5bf673-38cc-48f6-9451-ea94120879ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202a66d0-193e-49e8-ad7f-788d0b4b6606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c1596f-ace8-4d8a-8085-90fa5aeaaf6c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f7d51e-6d3f-4c3c-8eb4-a6638a2dadb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41061f1e-f191-43cc-b8e8-6a3f12a59fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "951c6a22-e1f6-43fd-abae-8aa9862f9347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864d8db9-8b8a-4eb3-898e-d2809b6512b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81566e1b-57c8-4d4e-a372-ef591b41664a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69698579-a888-466c-bc88-c990062dae74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81013f58-0927-4036-9105-cabdbfcee831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef24766-36d1-40c5-8633-26d2c90fe3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42dd0862-2d88-4106-ab85-b923b2fc260f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f57f2cc-593b-4721-9a30-a3a15a914bf5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae7e0d8-2547-4b80-9275-e7994154fcce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81f1a517-7d68-4233-8ec5-c2f79cfc33db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f93b11-79ef-4d3f-8335-a0bf23daaeb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a058951-11d0-4389-9250-30f806b573d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8750f97-4f01-42c9-8f1d-99310ae760e1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ab637d-7f53-4552-bca5-d232a0cdb0ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62f7b73a-cd56-4fa7-81de-31a481127810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4957305c-b379-4fdc-888d-4ed87598efc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0a6296-0a31-4dd7-8601-245fe74dbe7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab6a72a-fd3b-458b-8124-8ed8318e2364",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955e09ee-87d1-4bf5-9c29-2a8bfbffa37d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c60797-88d6-47f3-9f84-8259c00f8230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70dd1dba-c3cf-462a-8d76-d8e1a389f8c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01966739-ae91-4662-92aa-409be338f8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42516fe6-5e47-4b11-8f21-500838ee1db8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d830d4a5-058c-4099-a554-9b304d600062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efa384c0-ca3f-4a4f-8f84-8bc650425b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb2a882-592b-4505-a6fd-c7e14dd568a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "186e47af-30fa-4147-9df9-490ce16d1642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b8177b-72a7-4358-90d0-3a120c240a88",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84467024-b940-47fa-9f17-aed46635af79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1c35709-4a8d-46d2-976b-34844c0d7eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5743aa91-06ff-46d1-9903-083b6d4a26bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b345573e-547a-4d5c-b111-b455ffd78c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85b3ae2-00cc-4940-adcc-a0a08d40396e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e483f6-6d2f-4d68-9041-cd4852a17250",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42e16574-7a20-4c0c-9a03-b403950caa9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ec3d2f-c1c6-4384-89b5-e90a97879173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e54a50-81b5-4875-a5b7-25a7205521dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07dd267-89f8-46b2-9eac-dd8e2c99dadc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2592d42b-81df-440f-87e5-f224c7da87b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60c191a8-083f-4b05-b983-c01b444b4e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fd9ebc-e6f4-4144-bdac-cda02cf0897f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8d0100-f48f-4741-8f7e-4bc508a0a772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79486995-6150-48e8-aec6-90427e0a4690",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c618d1a0-c1b7-4cfa-b062-c464dc982bb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e751863b-289f-4c8a-8ad3-357d6d442c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e5f8b8-484c-4b0c-8ab6-c970c625c1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701fb100-862e-4c8c-98e7-15f343123b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37935856-d189-48c3-9f78-abe08f6ec49a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd03788-64a9-4efa-93d5-ee8e85497df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "706bed2f-1f29-4e7c-98df-10f71793f706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845aa048-687f-4dd8-b758-2fd408d9472d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33910886-f2a7-41b4-97d2-7ad73bb407e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea7e8f4-5379-4aea-9d6b-063914ef98d2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88fcdef-6a4d-48ec-adc3-27db4e8005e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040dec7e-6b8b-4489-b857-e594e2c83a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "960aa73a-b787-45c8-943b-d282770cfd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83311be9-2cf4-4049-975f-d6681f78b54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa3b646-d394-4f9c-ad01-d1673f11dcf3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b791d663-2e55-41a6-800b-79aa1abcdede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1273d09f-794b-432f-b410-59668e086747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9627bfde-6eb8-4a2a-b7d0-e49572b0494c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c757a1e-1a13-45a5-9f8e-aa294e2ab5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60426da8-cf96-4e4a-87fc-af20154b4e02",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff98a84-73fc-435c-bff9-e98256d1be92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e94f455-ff2e-4393-b28d-63b3ab68bccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3476be8b-b907-4359-85cb-90513471fab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b359896-f88b-4719-8170-25bd8ad4e0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b743d3cc-8bbf-4add-a868-acbcaecad475",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5857a9ad-3be1-4375-980c-bd34aaac60d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94f0e91d-e792-46f1-90bc-b0271bf79299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddefbeb-84b9-4891-9de4-489e8a9e90da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff3f127-6cc3-41a1-b6ec-1da03997c91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0414aa57-f97e-48b0-a107-876e8e042f5e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328639cd-d530-42b5-a12d-caabf68a3b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6363bbdd-e872-4b92-ade5-51f273f8be98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b5bf1d-bdcb-4d02-b7d6-de9d67415b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2192aff2-09bc-40e3-8fc9-3def6c974e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d50a5f-0ff1-40de-b83b-8baa75047f6a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad070c4-e805-4fe7-bf19-249f6e93c03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad20ea53-f336-40aa-a2c7-a8b570eda993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1a979d-7c78-405c-bae3-95ba002cb5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29de4fd6-ad22-4d06-ab33-f5e955d09934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef806db7-68e8-4e1e-9d8d-f5b09aeee8ad",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d1cd49-5cfb-4173-b054-bf26f56c7b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26946f2-c4bd-442d-81e2-5e210d6ee9dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3744f30b-1170-4ba0-9e09-9e1850375ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf93c63-fce9-419a-ba7e-408fd65a2f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88be0002-0e12-499e-87c8-50ac8a1f2283",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18e78b1-750b-4b5a-b3b6-23d05707b119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb42e7c-3ebe-400e-8a2b-01e8bd4d5bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ebdbaf-c19b-4e31-8566-3c6a7c45f3e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06064b82-def3-4329-a607-1c6677eeed22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37b845e-b128-45af-b852-ee9b850d27f8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84773362-5a7e-40f9-809b-a6550eb4c9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6465ef-b38b-4c35-a86f-1404686378b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a5fd5d-6fd1-4453-8c8f-f73b4ae9f256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265ae0b3-0551-4bee-bd57-a5d0e867950e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d16fac8-c8f0-4892-b8d1-c4485b9474f5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8de9825-36ad-4b67-b2dc-147498545c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78dade7e-ed20-451a-86e7-375d04f646ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef67c6e-5ba3-440f-a86e-2a00c54f4a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ebb844-f0cf-40c7-b5b3-2bba4baac97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75136475-1681-4a48-aaf3-334211c6acd5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cd5b8c-46d7-4dd0-acea-7252a67e4f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca25737-2ab9-4481-85e8-66b078b6d4c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d49fc63-4b16-444c-8ba4-03f21fa5db2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dda5302-6a88-48ef-aeb5-005cbc17005c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed77a6a7-5546-4d5c-a4ed-d8d4daef7cc5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05255aa5-1139-4027-ac24-20bfd84094e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e05373-1818-4f1c-bf33-81e716c30d7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "991a21ca-c3b1-40c0-b383-007015704e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540bca58-77f6-4ff2-a5c1-a60ab5986404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419d8ed5-2e3c-486c-8ed4-a3be653a12b9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80bf4dc-42e2-4a19-a93e-13fda4b1dda3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a392f5-6fc1-4db7-a407-3553920c61df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e41d73-60d7-4c95-b1be-1ed6a1046da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726800fc-a786-4610-9ecc-664280f0a7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842a8d63-9f7f-4ff5-944a-7d46f23ce37c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739eb580-10ed-47e6-82ed-fc8c52eb8857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0134c692-031b-4f12-98f3-babb16c4bbc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd28e9c-61c4-4ef1-a772-dbd3003c09eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92674023-53db-429d-8293-7be53c5fce44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef7d86a-2bce-4027-a443-2ea9a1ea1480",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1387168e-927a-4729-a30b-4d64e4f5af08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6520f8-3174-41ae-a4f3-96851cec3604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a780301d-00ad-4f08-b71a-7cc40d28d390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69443c81-da37-437c-9a3d-ad5f1d5475e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca2dd01-b54b-47e3-bd99-f2d5116f5ab3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99da85e-9891-4d39-848a-8b2ca609be47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "626dedf9-6d4e-41b6-9ac4-8e980a797c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cec9c9-d0d7-4ad2-a372-520824a261db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885b866d-bd73-4d3a-9d57-b1db5b7356f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91229a9e-8e1e-4fcf-9c75-884fed98a590",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f45d661-9b67-49a5-b510-ad595602b80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0e4006-b11b-4b08-b1ee-c0f76321a2bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e233cd2d-4808-42ce-aefd-5db5129fa4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405b9ae9-a59b-458a-937c-e578072a7232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053bc7ff-c449-4e4a-92f3-73d329b51e09",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebab2c2-0189-46f5-a50b-8a3784ad59c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa82e5e-5098-4e04-a07b-7fa4e4b58277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fbbba4-68b8-43a4-bba5-2e9be2491c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6083fc75-ca80-4137-a5d6-782b91a507a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f188421e-4f37-4af3-b85b-655f370a1f2e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bc11bd-b692-4ced-b98d-1589e4f4b819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79077cb7-2a16-453b-8f8b-e80101141ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a503b43b-02f2-4b45-9620-bdd573d8901e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39a6af8-9768-44f1-b39a-d6dab703deef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051b67bc-25ef-4a6c-a2b8-05ce2d65239f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48aa1b1-fcc4-435b-92f4-cf003a88a02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c23ba5-af98-4110-83b4-947d836c10fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04381793-89e1-4b46-baa8-088912e8334e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832437e0-602c-48fa-8292-4caa558b7f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4070d1-097c-47d1-ab15-bdb82acb8195",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fca9b8d-2564-49d8-9e83-2f9c6ecc7394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41aa955-01b7-497e-ae76-0fec877ec173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189f7485-7cc0-4f3f-ac9c-8533a6b6319b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b99e9b-feed-478a-88bb-76e9a92864e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4301201c-d799-49d0-80cb-a5260ecef6d1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de458904-a1ba-4f7c-9dca-6905742b0928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db53b29-26a8-40ab-9267-a4d64bad2e0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87bf714-a2cf-4929-b1f5-f49daba733ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede95e54-59cf-4020-a5e4-f5ee00fc7cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc87a060-fae7-49ae-8779-624a95a7787d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a409985-f71f-4382-865d-40de0a17ea43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9214a1a3-55c8-4208-90ff-42039fac0080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce0faa8-0d70-45f3-b489-6724dcb7bfff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ffd7770-8a6a-4112-bbb1-e606893b7b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cefa94-81e9-448e-8f1b-88ddad1daf6a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb17cf7-52a5-44a2-ad3c-885881c28983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d58f3ad-ac4d-45e7-aa26-5a1571669686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846eaf68-290e-41de-bc02-3c5a652e3118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088b8653-2244-4847-93b3-eb584ef68797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7fc8d98-b997-42c3-a055-1dbd342e86a9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff30d07-ee77-4ace-b725-6331b2c237ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff411f8c-fa17-4774-be2c-bcf0f9eeb820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd74d74d-3e9f-4fbe-a3c4-100d126acf5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b857ce-06b7-444e-8a5c-2d9f38ae37ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182b2a0c-690c-4782-866f-932e1c2e8228",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f46410-0da3-48c8-a1de-d36e616d8a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b0e546-a59c-4b8a-b783-7912c39deb09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298d5837-add9-47b8-a784-055d2f2ad8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8075c2-5af0-4c45-9bb7-aedc009ed2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5587595-f8f3-4082-ad99-e16675beedc2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf29c49-28a7-485d-b562-0296cfc20cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749f575e-474d-4cbd-8062-49b861dc1ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f10b9a-a2ed-4a87-aae3-ddfd50a9a45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c712ad51-f68c-43dd-8f4f-bd96437318ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8f9d19-c13b-4859-98b4-276bba49414a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d3ecb3-4d20-4665-ab6e-988dfc403f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44f979c-f71a-45b6-9b95-a96aa2158995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "496e727e-1116-4ee8-b2ce-6cf8ec95df3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227cfcf4-7884-4b06-b280-809b02cd3404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09033339-39e8-4bb3-b00f-190c36e0e520",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f230fe-5eee-46c4-98ac-27679dda236c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9bd9e8-d867-46a1-bf69-818b1980b534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b27f123-0f8a-4204-92ff-0ad5812610ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f4ad978-af6b-4db2-8cbf-857e48ab7d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd84a04-f976-4e87-88c4-5b8a29d487b7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aeb4203-2b4d-4638-b048-cba95d44e3db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "238cb57f-b91e-47df-9efd-3421d1e7a7d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a770b0db-a102-4711-a79e-0af1d911be73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4818405f-ff19-4146-81d8-23b6ccaea763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efb6eb5-7ee3-4c45-a25c-ff2a576129b2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06108068-6c59-4113-a813-4136d19d9a67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "448efec8-5ff8-4eda-869e-ee367950ebdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925beced-655a-40da-a394-5ac465ffd648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630a6ed3-7ef1-40f8-8443-e63ccf0092ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc48994-fcfa-4910-aff7-4b583ffe05b9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda76bb1-b803-44ce-8397-eecf2dd5143a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "477620f9-ec20-4e63-adec-951d94b273f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac277263-e6af-4e8f-b334-9e5a06dc64f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600158f2-e5e2-486e-9b6a-3af37ae4e1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a05a41-732e-46d4-8cbb-a41062e2a1cd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67a0874-b3bc-4618-83a4-d4d8f4ed28a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "581fb05c-107e-4b4c-a203-bb3588b2b921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8a9e4d-3775-41ee-b4d6-976d1aee62ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e04cf84-0dd8-4cea-8d4c-8c1fe6f22d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9acb9e3-b246-4f95-be2d-8d17fe51c5ab",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dab898-1291-4117-b373-775ffea4ea87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55db8210-3be5-4303-b971-73f57ccfc539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6df7b5d-ce2a-4d32-afdb-3d801ba748c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5646a92-2b96-4525-8d0a-f1faa5a005c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f81807d-51b0-4aba-a083-e1317cff4a69",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2078a9-296c-4bc6-b4fd-174e0342cef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c534f844-6a99-4ce0-ae8b-191ee6777c82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb83e329-1bf8-44c2-b70d-9d3ffad1128b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47976814-28c7-47a8-9735-c787825351ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5ff9d5-ee31-486d-af6b-fb638a55e1fd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fec3a5-4646-4509-af20-e91f1c6612af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41dc4746-2cdb-4340-afac-7870415001cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49577124-6712-485e-a3e1-2ac604b525d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88863936-450b-43cd-9bad-09cd788f4d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ead5af4-6426-4161-bdbf-26a2a0704daf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c108ab6-c8cd-4ca5-96a8-b81130aba1f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ae2e853-5767-46c6-bef4-767af09854e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0584d3cc-3d88-4762-bc05-0e0aad035e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ba1906-b92b-4baa-a6e2-bbf961decfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f895ba-d8bc-4ba6-ac78-d92e1fcb0763",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c164da-edea-4b26-8690-043b3bd140bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f99a53e6-c334-46ef-a0db-08823c48b804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32db3360-299b-40ae-8003-0bb7eb151fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "992324a0-5f7a-4ccd-8016-ef9183234cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8492f89-85d5-45c1-a253-04e7a0b2b6bd",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7090cb6-54a8-4d01-88ce-25620358ecda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "991c6a3c-4de7-48b7-8664-178ff5e7593c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "118f49f2-e316-47aa-9614-8c0946cda72c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90fdceb-9da6-4877-84cc-f49008b4f244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fe2dc0-b5d1-4bd5-ba37-2e366abaacfd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7f2348-d992-4d2a-9800-0ac3083b80fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f378cd37-04c8-4653-a24d-0f2558aeddca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed662b4-a007-4f3f-ab67-8ba511d45b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c23dbc4-47d6-4315-8dac-c49e372f1440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0c1e75-0315-4d77-9292-0626bb1268bf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b500e623-03a5-4e13-ab9a-6c891c466cb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb884952-ab0b-4503-80f8-ab5eba24eba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05702d3-73db-45cf-8d50-8d44faf6a59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc8b870-3a4d-4cf9-b907-1a2deea93e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36176ca4-e857-49ec-9b20-b0cc94de206d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84292bf9-9e1b-437d-8103-d9f1256cdf6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de3c38e9-a97d-4fe7-a469-656f6f338cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b284ba-7c82-49d5-a520-ffadadea3c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df278312-3e05-45df-ab54-9ba807859afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270036e6-e5b0-43b4-af5a-f9c93dd37cb2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b02dc42-92fe-4d3f-b0fe-801e4c4c2fa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f996b826-ec0a-4728-8564-95fd8f5649b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33be0db8-07fe-4414-9eb9-bf16641b4d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f03704-3daf-45cb-9949-96e3bcf44cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a932940-7ae6-4d26-a051-d31399fd27b0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7300814e-1b74-4231-bc82-72bf40fdf739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d3aa90e-3393-4680-8109-d9c0823c48c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9dacbc-40ef-47d6-aedc-98d6f44694d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3624f2-f30d-4f7f-8bef-263b54c66060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e83dd6-8f71-4b32-995a-2df75828641a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b01b47e-7e33-4353-a943-35addd76e163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7de9c5cf-f1a4-4909-a5ba-df924a4d4bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b344283a-34e3-47b5-866b-6f7423db9d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029da8f5-c763-462d-877f-170ed7cae8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09008ad-416a-4aaf-9750-b6e3b031fce0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1750149-3d4c-42a5-a12b-34904545c6b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7ca996a-5546-4cba-878d-c90844e15d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05be46a-aeb6-43fe-89e4-4a3a60e74de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66ea789-acaf-4d15-9d58-00b80c7ac5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b5e36d-98bd-4e5b-9d2f-b8ccfbedfbf8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5dbe06b-f3d3-439b-b5b9-4aee069464ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29af77a0-290c-48cb-934f-0a942bae2f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1737e39c-fb24-4f46-85b3-897669263d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59efba8-5f00-41bd-bc4e-adac41cd2a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6888dec9-3a89-4612-87dd-2470940ef1a2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3a4124-404c-4ca5-be73-a884b6aa5328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c6e0d6e-0c9e-413f-9c73-fa3ecdc654f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adf85dd-56a2-40dd-b8f0-f9d22ea2db22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e7cbef-10a5-42a3-85b2-46da3a80e05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8ef112-5272-4db8-8f65-ec44b23c9f08",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15a4d2c-7c0c-4d3a-b7d8-6ca77bb81b40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "750c4900-6d86-476f-9550-35021a4b444a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5a5a83-d11f-4a23-a925-ceb1c0d23bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1703b83d-4166-4b85-86b7-59ed96e7668f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9951fa75-2445-4a54-9c9e-26ec77b8e8c4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14c0346-bd7e-47be-a1cd-eaea2dfb3bff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e79194e2-a7e0-404a-9f36-92938c7d7a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1040af4f-0444-47b6-b3a5-3fe736a585d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ffe8a6-1981-44e4-9f70-74c61c249c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afb6184-2c23-48d1-8578-fbb2ec766169",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d275fef8-43ae-4f68-9f34-e15c941be380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f07996b6-d6e1-41b4-b4f0-150d2a18cf71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735a2e99-e4da-4176-9846-0b92f0ca34f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55796bb-6f12-4038-986e-8dd2ee565fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5704bb44-7c1a-4851-904d-8be903ea710c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f0f148-f946-486f-b7fa-c028119d9c12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9e61a06-05d9-4906-bbab-3314ae7767c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee02b9a-f79d-427a-96dc-9348d8d1a108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02dee52b-c760-4dad-9c09-dffc988198ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7cad85-7b1f-4022-a725-6399f85dda05",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040554d8-ddb8-478f-bf6b-864030b1c656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e24ec309-b544-45fa-b9bb-4d79dc29a80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b105e28f-652d-4752-81b4-4291bc40fa85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef72603-4126-4e3a-a485-8f61695eb087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32020c56-b422-4457-ac4a-98d8b5d026f0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee8053d-1560-4719-91c2-2f6f18882f34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "941c3bae-013b-410a-a650-f5caac74e4b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4d4439-40cd-4166-9893-608d74b7edb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89539681-f2a5-4e40-9d8e-d929160c3fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309efad9-f3f3-405a-a7d3-caba1e9636de",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ddad84-2a61-4f25-a4de-f0c95bc5f0b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99c8cede-c380-4739-8969-2305a0ba36fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a8fbfa-9a59-45df-9104-8f02c903ff7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0a99a9-78ea-4de6-a66a-002125bc09c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7bf6f7-6e59-4eb3-816c-41e58553a263",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a714c1d-0e6c-4124-9b22-3396dc5e52db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dbedf24-04ea-4516-87b0-b523178ae77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c81c673-5e7d-4952-b5a6-e93881860eea",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735cbb67-0b33-4676-943a-1f3ca4a9ec47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7705fc31-64b5-4270-8acb-a22c98ca2bdd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d921c2-6ac9-407e-b50b-849173dec0e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09563739-5052-40e0-b85f-2dba2753e624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "939e1a51-644b-4fd3-8e6e-c72b4781a27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8aee1ec-4198-4ff9-90e3-83abd1a46d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98d39d7-83aa-4d2e-9400-969e2355345a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd80ec54-ded5-4528-9b8a-41108ae80177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee22e176-2be1-4e03-98e7-f4310dec1687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b3862a-4abd-410e-ad8d-c50826bd87fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07e03c8-995b-4383-b847-c286a50811fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc78299c-5908-4fa8-9dee-47ded1f04d43",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288d641f-9211-49c5-9d44-35bdb3b6b5ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f802f6ba-bc9a-41d8-9e91-86afb63a8976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b5b6af-2b00-43b7-bda2-375e3137304f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2250ea5-edd9-4f91-a712-6ac7d2a63c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781dfecd-6d48-487f-b0df-b49483ebab9d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8952c427-c232-4006-8521-46cd1965c5ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04dec5b6-7b1d-4b53-9e30-410704d16acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec18cd2-942f-4351-8c6e-c13d97cadff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a9faa5-5502-435f-9bd9-a8eb41686d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a567e2-a022-4c88-8350-a0f3e466dc70",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb1c8ff-ff3d-4b7d-80b1-161c07cdc7c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e66b0d3-cd9d-4051-8877-9b5f96524f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92796932-63b8-451f-b196-e8d752ed1996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ca6def-ec00-43ed-8d33-a0624de732b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7722be64-34ba-4e25-8598-630ed85cba88",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60cace3-76df-4981-985a-17d293dd08b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a33f9a9-8909-4185-b94b-74cb2a25d3e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9115af40-3988-4860-98e1-34fc11ac042a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b41f3e-8e78-4ec7-bc25-9c4dbe175a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c820548-cfb7-4691-b1e8-da1f44fbd38f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cda882d-bc57-4530-b2bf-ab3216047f99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8529177b-b7e5-47bf-8da9-0e642850140f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d264fbd-d074-4370-bc3d-6455c9734ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5056bb3d-75d1-425c-8e40-00b2886d80c6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3feb31f3-0bf9-4388-b526-449acd9eaa56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1328ab84-88cc-4422-8321-763b8b043a8a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54a212fd-f5fc-4ad0-8af9-2f7fb39303d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fed8666a-f071-4da5-ac11-d301634f5f5c"
                    }
                  }
                ]
              },
              {
                "id": "d9407f4e-6880-44b0-b62f-f1314d49605d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c9dfcd0-baf0-44cb-8048-2ac95702138a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e34b232-9e3b-4c0c-8b14-4900f72c3e84",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "eb64ff27-79a6-48d8-9ccd-ede1742bba5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be74fd46-b978-472e-b123-c9baa776d840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1856a8e2-41f5-46fa-ac89-23ee27bd4e8c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04f16d01-f0d4-4555-94c3-c4c2aa3a0546",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e69606e3-c41d-4737-876d-7a3d6e44ea4d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "977faea5-ee07-4573-8b1e-34f0f0a9d0c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8043a6d-1d28-48a6-9391-7b3b10d1a450"
                    }
                  }
                ]
              },
              {
                "id": "a5fe8d7b-ac78-4deb-96db-d3a99c5d9c6a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "da540163-f737-429c-8279-08c785a85975",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5247c04b-3257-431c-a4ae-0071069b1184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "108a552c-2b47-40a5-a37b-c00ccb7a7c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c910c5e8-fb9c-4071-938b-7ea55dc47158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9dc8f8-1702-4788-a50b-0c533502d358"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "15b13b8d-7067-4f8f-9132-9036e71dc7a4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f4850638-67ca-431c-a099-093aae88251f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aff5d37b-130e-4eba-b22c-6ccce844f1f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "63b3fed0-b385-40d7-845e-0baa65975e3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93d62b32-e405-4455-b73d-b76b1e172460",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78a45ce6-8dc0-4fee-8759-c091acaa30a8"
                    }
                  }
                ]
              },
              {
                "id": "c6057866-a08c-46c9-8a9c-cdc8eace3af6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfc3aa4a-8725-420b-bf6d-0a39a929b1de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "097c410d-97dc-4f83-aaf4-f55fff2e98e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10b6faa3-820f-48c1-ad65-8e4e158c4f72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a4662c3-a0f0-43a5-867a-944c499becd2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7971e9d6-f350-4678-b8c7-b33a18fc0992",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c5b56d2d-c5a2-4cc2-8b31-46f129e6be5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e89ecff-93ff-4790-acb2-4d4212b4f359",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ceb2a839-8f69-4e0c-a159-5d3c4fc9b2dc"
            }
          }
        ]
      },
      {
        "id": "ac6f608e-c02f-45c7-9dfa-320636a05249",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e0a2e026-6e99-483d-8ad5-4431cdba2dd3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6e4502a-3ac5-4152-ae1e-4af90857279e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7421d8b8-1543-4e8f-8863-dff31fa8a098",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe86fe50-1c0b-4ac2-8494-e84d7a0bc53d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2f9d966f-4483-4d39-b2bd-cd42e1cc6515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53918cd-cd19-4760-b40e-e0b6f48c3784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86049c30-43e2-413a-8c9b-c26c5ab24ba9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f1b8f5e-6a8d-435f-8a66-e1ac46b59a37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3639c2eb-e15f-400f-8460-a6598161f1a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36cb2010-77e4-42ff-8400-a1fdc7e4144b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2984f5c-53af-4590-a304-73ad855fc27a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "784acc90-ee3b-4392-9873-b19e826916cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "877e759b-9cf2-454f-9e6f-5facb866625c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c70a12d-406f-444d-81a2-5b354d43bbeb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e33af405-ba1b-4eaa-91f1-c0e52470a568"
            }
          }
        ]
      },
      {
        "id": "503d88c2-250c-4926-b22e-efe3a2d569ba",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7a76d67c-76cd-4c2a-8f9c-c7a6927fcf2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a4f406e9-0f57-48d2-866d-4dbe08726420",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50022796-23ba-49a2-a099-60ac1f5196f6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab31be81-4492-4317-994d-ccc618568b5e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48f4341b-9863-4633-bfd2-14bb5336737f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6743adbf-c3f7-4930-bf31-7a9c344bc9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73c8236d-1413-40e7-94a9-787af0acb419"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f9254ff-1d8c-43f2-bff5-ec19d74c4319",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bbc45ac-03f4-498f-8d5c-47f75592a22c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "433ddbc1-8a46-403b-9700-6623400a050b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c4036e3-3af5-4e71-9ba5-60e7f844cd9a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd712b91-7784-44a4-aab4-0a245b44f39f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bc7531e0-7bb1-4593-8ce4-d810ee3e026d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2df899ec-b361-4a7b-a104-cd30056487f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7eb861bf-e559-42e4-b8dd-460336cfe453"
            }
          }
        ]
      },
      {
        "id": "51dc89ab-a2df-4ea4-afdc-f28da72c1112",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fa50522c-6e62-4f5b-b1de-7e1a1933eff5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9a6b59f-6ccf-4f78-8585-b14a22dc28fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f829ba54-022b-49e9-beca-31dbeb6b6745",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd1b138-9aab-4efd-8ad2-f4f207352314",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e940ac20-f957-45b7-9e22-e61ea6072042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1394b2d-5c6d-46de-bdeb-de421211d686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eedaf21c-7819-4e9e-a850-58e4f8f2a830"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3aa713d-a786-478c-b4ca-bfb7e58bd411",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9eb5b7e8-b4bc-4e8d-af92-a92c35516b76"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93e0e340-296c-4ee4-98e7-92db1a6ed0d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5822abab-f3c3-49df-a945-71f1443e7029"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6827693d-6fde-47c9-81e4-fc45d0d071c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "50210311-0b81-4dd3-864f-2a17428eeab2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5048b2e7-2266-4029-906f-fb807a5fad7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21ea4414-7fd3-4680-afa1-69d4cbf51b68"
            }
          }
        ]
      },
      {
        "id": "08e90d1f-0af3-415b-874d-a652c6b9e7c5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce508618-12f1-45b7-8e39-f357ee0ab58c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5fd5f7c-ec4a-41ec-996b-f9d7fa37e885",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4996923c-f148-4e86-b3b4-71200b1d8a2c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52cfdb77-e473-40fd-b65c-56900f9773b0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fe48f98-10da-46cd-b92d-7f2e28712fcd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 222.2456140350879,
      "responseMin": 5,
      "responseMax": 7940,
      "responseSd": 599.1181554878382,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699144614174,
      "completed": 1699144686696
    },
    "executions": [
      {
        "id": "d318fa18-e22f-43c6-aa50-dfd2a1bcd19e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0a92c12b-d48d-452e-b36d-eddd1999ddca",
          "httpRequestId": "99729381-8bbb-4556-917b-9ab2e5a8e37e"
        },
        "item": {
          "id": "d318fa18-e22f-43c6-aa50-dfd2a1bcd19e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ddc951b7-3d63-4722-aebb-d2c45def63f8",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "4bd694c4-d40e-4300-8ea8-2d67ed57e0fc",
        "cursor": {
          "ref": "7cd72a61-566a-4b1a-8898-1f5f1182e503",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fd29ef93-26b1-46a1-8061-325e0e438571"
        },
        "item": {
          "id": "4bd694c4-d40e-4300-8ea8-2d67ed57e0fc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ab5a841b-bbc5-494a-907e-110a6436f439",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "9a6a23a8-030e-42ee-b78f-bd4f78c69d28",
        "cursor": {
          "ref": "f68fc720-a58a-4125-8834-9acffbd1cca1",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cf6b1e31-288b-4c58-9165-cf93de201854"
        },
        "item": {
          "id": "9a6a23a8-030e-42ee-b78f-bd4f78c69d28",
          "name": "did_json"
        },
        "response": {
          "id": "d20570d1-5a47-4164-bbae-50a128c03731",
          "status": "OK",
          "code": 200,
          "responseTime": 255,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645814cb-803b-4b03-8b16-a68d67f3c8ed",
        "cursor": {
          "ref": "892fe51c-d33c-4b2e-a252-308af18b0368",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eb38a447-a99b-4518-8c29-7470d66c15fc"
        },
        "item": {
          "id": "645814cb-803b-4b03-8b16-a68d67f3c8ed",
          "name": "did:invalid"
        },
        "response": {
          "id": "3ab644d9-1e73-4ec4-b091-7aee0090ad7e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 738,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645814cb-803b-4b03-8b16-a68d67f3c8ed",
        "cursor": {
          "ref": "892fe51c-d33c-4b2e-a252-308af18b0368",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eb38a447-a99b-4518-8c29-7470d66c15fc"
        },
        "item": {
          "id": "645814cb-803b-4b03-8b16-a68d67f3c8ed",
          "name": "did:invalid"
        },
        "response": {
          "id": "3ab644d9-1e73-4ec4-b091-7aee0090ad7e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 738,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485f4b05-855f-4164-a3e4-f7c81590ffa2",
        "cursor": {
          "ref": "d851db67-3351-4d40-bfc3-568ea9882053",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6adf6b4a-0ed9-4a74-af51-94e56a8c175e"
        },
        "item": {
          "id": "485f4b05-855f-4164-a3e4-f7c81590ffa2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d99c84ba-8c16-4bd8-95ea-41496d0bdf57",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e17f92c-cc74-4ced-b333-3c053504430b",
        "cursor": {
          "ref": "723828bb-fead-4aa3-aebe-0c47170f95b7",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9ecd08f7-c7b1-498a-9118-10887f44eb22"
        },
        "item": {
          "id": "9e17f92c-cc74-4ced-b333-3c053504430b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bb9b1cd5-4d1c-47c3-b89e-4ff17bcdc3e8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f2959c-88e0-4d9b-962a-0c7a9910ae12",
        "cursor": {
          "ref": "cfb0e6dc-76c0-45e7-8e15-fa0a27e973e7",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d52b8508-351e-4aa7-8c7e-ab066c3c8bcb"
        },
        "item": {
          "id": "e8f2959c-88e0-4d9b-962a-0c7a9910ae12",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "caced8e1-a2b1-43d4-8a93-6eac689c18a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496f7fa0-ab0c-4bf8-ac97-e962261103ec",
        "cursor": {
          "ref": "0be00b41-67f2-41f1-afc1-3df446f1e21b",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1dd362fe-62b1-4f72-99d4-b4ceebf102f4"
        },
        "item": {
          "id": "496f7fa0-ab0c-4bf8-ac97-e962261103ec",
          "name": "identifiers"
        },
        "response": {
          "id": "29b52e02-7157-4378-8414-ee84718e997b",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a65ed2e-6608-479e-b049-fd7b3ff9d5ca",
        "cursor": {
          "ref": "239a721e-2926-4cb5-878e-431b401248e3",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f0230839-d2e5-40a9-a7ad-d8ab7a10a89d"
        },
        "item": {
          "id": "9a65ed2e-6608-479e-b049-fd7b3ff9d5ca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "959204d5-0692-4de2-91f1-0584f8f15519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3c4da4-023d-4cf7-b510-9f88053f9477",
        "cursor": {
          "ref": "93eb0c8a-9eab-4800-b2c5-1dea755c1175",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b54cdb3c-bd14-47d9-99ee-060720bcc1a0"
        },
        "item": {
          "id": "cc3c4da4-023d-4cf7-b510-9f88053f9477",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2ff77438-010b-4cef-97a8-a1306741da2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0713ec82-b910-4aaf-9dfc-3650037e6013",
        "cursor": {
          "ref": "ccfdfa7a-36db-4c22-b94b-1381f34d7a03",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "defa3cfa-22c8-44bc-91af-c68c47b5a1b6"
        },
        "item": {
          "id": "0713ec82-b910-4aaf-9dfc-3650037e6013",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ee7eadf5-36f5-4e03-a131-aa511d56588a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3dc518b-340d-44b4-95b0-f6c125b165a0",
        "cursor": {
          "ref": "887fd4ff-35c9-4b05-8d14-30a7e2fafabe",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d7a203b8-0511-47e2-8a6e-8c6d71070fec"
        },
        "item": {
          "id": "d3dc518b-340d-44b4-95b0-f6c125b165a0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8a787462-b3bf-4046-8156-5548fa5b3f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737d7732-f8b6-41ec-beae-9c5e8b88fbac",
        "cursor": {
          "ref": "34394ec6-54b4-4397-9691-814b66eab67a",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7f11f239-3421-4235-bc1d-e07e859d7cd4"
        },
        "item": {
          "id": "737d7732-f8b6-41ec-beae-9c5e8b88fbac",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9ce298d8-8110-4f3d-9096-b10830c5915c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0119f712-9ae6-4609-9115-302b4cae377e",
        "cursor": {
          "ref": "f30d574e-49ca-40ff-b3c7-3ac682ae12fa",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9c3dddc5-abec-41ea-89dc-90b03e01bfc1"
        },
        "item": {
          "id": "0119f712-9ae6-4609-9115-302b4cae377e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e6042ec0-cbe0-462d-a79c-2c93ed1b5144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af073f69-01dc-49e6-8170-57825c0fc5d1",
        "cursor": {
          "ref": "5c13606c-4d4c-4086-bc7a-7c3ff5d63f1f",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "abe95f4a-cc79-4f4c-a3a3-07fea4e9b72f"
        },
        "item": {
          "id": "af073f69-01dc-49e6-8170-57825c0fc5d1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a4c3aea9-fc5b-4dcd-aaa9-3618f1941ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff904cb8-3c76-4a54-9a82-7a0e41d6c30a",
        "cursor": {
          "ref": "03043d84-f164-4d3e-907f-ceb9e1c4a98f",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8975d243-a2bb-4f52-818e-46ba1da6abe7"
        },
        "item": {
          "id": "ff904cb8-3c76-4a54-9a82-7a0e41d6c30a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "edc2d549-c25d-4d70-b023-ed6f178e36a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f88ddf-40be-4826-ad63-c20971adcf91",
        "cursor": {
          "ref": "5fc0d73f-f0c9-4856-bf42-32aa09a2386e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "081ee2d0-f7fd-4474-b12e-0ec9543f1a30"
        },
        "item": {
          "id": "80f88ddf-40be-4826-ad63-c20971adcf91",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "493c9d32-3b5e-4be0-afcf-cd058d65574e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a182a5a0-dd0a-48c4-bf18-d06520bc406b",
        "cursor": {
          "ref": "086e510b-a7ea-47c9-a137-db1b484913ef",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7b15bc66-756d-4059-97e6-20b200bb1214"
        },
        "item": {
          "id": "a182a5a0-dd0a-48c4-bf18-d06520bc406b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e0c81925-3cea-445e-89db-6e65ad835924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1ffe28-ee43-4253-b170-1fe4e04a0250",
        "cursor": {
          "ref": "d1f29ab6-fc6b-4a7d-9332-4186ea4824a3",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ab2b91a3-148e-4250-8ff9-22d5bc8ff726"
        },
        "item": {
          "id": "9c1ffe28-ee43-4253-b170-1fe4e04a0250",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "23c406fd-bb19-4c35-bdb2-178d25bc2e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f27df8-5d4f-42ab-9c1b-2025360d98ba",
        "cursor": {
          "ref": "cc6075d1-57dc-4773-8712-18cd43e04bc4",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1e66894e-bc96-4d0c-bfff-61d9b2a607b5"
        },
        "item": {
          "id": "00f27df8-5d4f-42ab-9c1b-2025360d98ba",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8b18ec16-6d84-4c50-81d6-00e4f79f52b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af3e1f4-7315-4603-8797-d7e90bcf3038",
        "cursor": {
          "ref": "4a83fa1b-3887-42d3-a7e6-cb8567e88bd2",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5338e63e-f9c7-4798-b06d-f375bd798720"
        },
        "item": {
          "id": "0af3e1f4-7315-4603-8797-d7e90bcf3038",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8b18d11e-4e21-495f-a835-d403251a690a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2810c8bc-e869-47ed-a4fb-ce04808c9cb9",
        "cursor": {
          "ref": "a11018c6-32c4-4c33-9a72-748c432e9b63",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ac08e31b-3182-42b5-8bf0-3dd0da7ba38a"
        },
        "item": {
          "id": "2810c8bc-e869-47ed-a4fb-ce04808c9cb9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "65e16d47-fb6e-47df-91a8-819a65b9d0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2154b5-31dd-4e13-868b-fdd5e62d8e24",
        "cursor": {
          "ref": "6ff7ac8f-84b5-4797-8ae8-8da2c0aca3c3",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7aff8b31-87a2-4edf-9a1d-873368717ff8"
        },
        "item": {
          "id": "1f2154b5-31dd-4e13-868b-fdd5e62d8e24",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "42cbbad4-12a7-45e4-b9d1-5d3ee82ea892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bbe027-2593-4fb9-ba9d-88b852d32376",
        "cursor": {
          "ref": "eed8741a-2d92-43d7-a54d-a322053e4591",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6ff0d790-b7e7-440d-bc90-1104aeb677cd"
        },
        "item": {
          "id": "e9bbe027-2593-4fb9-ba9d-88b852d32376",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "65997002-56e9-4177-9ba8-5e85a091bbb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c155e6b8-1ea5-4735-8ea2-b1d1774cf7fe",
        "cursor": {
          "ref": "495db398-e419-4619-987a-95ad3cbfbc4b",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "30fd9c71-391a-4335-bfd5-ee1167a4929b"
        },
        "item": {
          "id": "c155e6b8-1ea5-4735-8ea2-b1d1774cf7fe",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b849edad-c292-4ae4-aa20-17a6735f66f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf05130-4773-4c31-a34e-c388a69f3c02",
        "cursor": {
          "ref": "5c20d191-b051-4d2d-8a98-985174de95f0",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "08daa7f8-d67a-4477-944c-d581a555dfd8"
        },
        "item": {
          "id": "daf05130-4773-4c31-a34e-c388a69f3c02",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3c49ba3b-431e-4433-a074-b63205fff55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a0cfc6-d48d-4962-8c3a-834abab43ba1",
        "cursor": {
          "ref": "1b116f8a-d761-421a-a846-181cb908b930",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "83c7d222-594e-48d0-9506-ed1656ad7a71"
        },
        "item": {
          "id": "c8a0cfc6-d48d-4962-8c3a-834abab43ba1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4a655c46-7352-465e-9715-e899a7ca48c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087c925d-9c04-49cf-ab12-9d31542cb259",
        "cursor": {
          "ref": "8d6c479f-4c34-4851-ac22-7cba03c0859b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3cf9e684-2bff-44b8-8186-2a9f1949093d"
        },
        "item": {
          "id": "087c925d-9c04-49cf-ab12-9d31542cb259",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e6e9939c-8bfc-4263-8956-6973fa39298f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54eb53b3-8a3f-413c-91ca-d4aecdf54d19",
        "cursor": {
          "ref": "c05d2bf9-605c-42a3-b85a-60705ba742e5",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8bd8ca19-4674-460f-9b0f-1496a3914bec"
        },
        "item": {
          "id": "54eb53b3-8a3f-413c-91ca-d4aecdf54d19",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fc5feeee-01c0-4c5d-b9fc-bdd7ae5a9741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef2bd2c-7251-4e37-9ad8-e23171dedf6c",
        "cursor": {
          "ref": "4c0a7337-7b0b-4d3b-b84d-33284c4653dc",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1aa627cf-7356-46b8-be65-46927cb5da26"
        },
        "item": {
          "id": "5ef2bd2c-7251-4e37-9ad8-e23171dedf6c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f964c6a0-8db9-4fd0-81d9-e1787499a765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d582494b-7dfc-4e01-bcc0-91f0a2165e51",
        "cursor": {
          "ref": "a826136d-6c66-4ded-812d-faa823cb371f",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "965de2d2-76d2-4e50-99e5-b68d8e4878eb"
        },
        "item": {
          "id": "d582494b-7dfc-4e01-bcc0-91f0a2165e51",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9528bf83-6922-4b01-9e09-65374b8b8619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24d9b58-2bb3-4256-b908-c4935e067a35",
        "cursor": {
          "ref": "58cf839b-a0f5-4f73-b848-76a5cb040832",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "de0a1078-b3a2-4182-bbfe-f4e1e4186c0b"
        },
        "item": {
          "id": "b24d9b58-2bb3-4256-b908-c4935e067a35",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "af6c5faf-3356-41f4-a4a4-ac08bb55320e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2d1da3-8db3-4ebe-b069-78c515cab309",
        "cursor": {
          "ref": "908d4f1f-f8e5-4afc-abc9-be189b11a382",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "295aed2b-1f83-46e8-abe1-c16cbcfd9da5"
        },
        "item": {
          "id": "9e2d1da3-8db3-4ebe-b069-78c515cab309",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bbcc52ea-3b9b-469e-888a-595819bbd836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bca2ac-c528-461c-bc43-75626a6f1907",
        "cursor": {
          "ref": "12bd8af5-dbe7-429a-9632-89bdc4aa4fc7",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "316bcae3-1349-46a2-b739-ef416e779065"
        },
        "item": {
          "id": "e2bca2ac-c528-461c-bc43-75626a6f1907",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3f827f94-50d9-44a0-90e9-746b4f15513e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee9ecc6-a7c0-4b56-bc63-1264f002d4f8",
        "cursor": {
          "ref": "563396cf-84e6-4178-8f27-cf5fd232cc05",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1a8f19da-0577-4860-9657-4f6acbcbe085"
        },
        "item": {
          "id": "2ee9ecc6-a7c0-4b56-bc63-1264f002d4f8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f00f89fc-8a2d-41be-8449-5a461be914c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4b631a-be5f-43cd-abec-c701f521487f",
        "cursor": {
          "ref": "ed488609-3f35-4d25-b515-91cee641273a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "51496bd7-ec09-4471-a68c-ba548cea9b10"
        },
        "item": {
          "id": "6e4b631a-be5f-43cd-abec-c701f521487f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "03055997-6470-48a6-9820-1656457dee9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7584969c-b4cf-4909-bb0b-95b5c856af45",
        "cursor": {
          "ref": "a6c8e9e7-90bc-404c-a946-f89e4dfe64d4",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "68c75bb8-80e5-4d5a-bb4e-a24b979f597c"
        },
        "item": {
          "id": "7584969c-b4cf-4909-bb0b-95b5c856af45",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3beeb221-4af8-4ddf-a963-f1dfa64237e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa95888-05c3-41b6-89c8-a4a5aa62fa37",
        "cursor": {
          "ref": "04ca9167-2584-49ef-aad7-26bab30d400f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3ad8cbb6-a638-43dd-b2a7-64c9a8d5c151"
        },
        "item": {
          "id": "faa95888-05c3-41b6-89c8-a4a5aa62fa37",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3cd6700a-dd23-4c61-bd28-4edb1afb6dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8d8ea6-b3c3-48a6-b597-66461dfa7011",
        "cursor": {
          "ref": "2fd5e30b-d3fc-40bb-8a5a-40b0618163aa",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "59cf5f72-f363-4ed9-90c2-cfe0b99645e3"
        },
        "item": {
          "id": "de8d8ea6-b3c3-48a6-b597-66461dfa7011",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3d12b4ab-c2c4-4fdf-9d5a-a0e65e470c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e797464b-54c7-4a93-97b4-0479f6528aad",
        "cursor": {
          "ref": "4a08097c-5742-45ae-a984-7229b2a45564",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ab3a5976-ec5c-4239-8466-7277d0fed202"
        },
        "item": {
          "id": "e797464b-54c7-4a93-97b4-0479f6528aad",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8e5675a8-9780-4fb1-84a5-98add19155e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750c3285-c215-4f1d-8fa4-b17b132b48a1",
        "cursor": {
          "ref": "eeec93d8-81b8-4bc9-947a-2199ddbdff52",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9ded00e1-0f60-4084-80a4-2d2a7674eb80"
        },
        "item": {
          "id": "750c3285-c215-4f1d-8fa4-b17b132b48a1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "54a32a2b-6b59-4f4d-821a-f22424403b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34bfe3b-cad6-4825-90ea-d9fa10118835",
        "cursor": {
          "ref": "3d9222c9-892f-4793-a3a9-2aea34771854",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "915fb239-bd59-462a-8748-e283c7c5e415"
        },
        "item": {
          "id": "f34bfe3b-cad6-4825-90ea-d9fa10118835",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3eb4a8ad-ec72-46fa-a221-93c256b3b48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5887511-73ce-4149-ba6e-af5b27933528",
        "cursor": {
          "ref": "f1e91ab5-043b-42f9-aa29-50e13429efe2",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a8579f9f-bae7-4601-9f19-bba5cd1198c1"
        },
        "item": {
          "id": "c5887511-73ce-4149-ba6e-af5b27933528",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "690a14ac-b0bb-4167-998d-903af3d42407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4438626-8631-4499-8640-8b7df8f9b2fb",
        "cursor": {
          "ref": "da6ec42b-28ba-4907-8307-57a1d3d1fe61",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "58318845-0127-4b2f-91f7-2f19e22849a3"
        },
        "item": {
          "id": "a4438626-8631-4499-8640-8b7df8f9b2fb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3510ea3a-9268-4d61-a7fc-5cfe0baefac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2935c201-5deb-4e64-bf08-f542ead4e464",
        "cursor": {
          "ref": "8a13d518-73d0-47c0-a852-c1b7ed216eeb",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "71b481ad-60a7-4522-b06b-a818d3e90c4d"
        },
        "item": {
          "id": "2935c201-5deb-4e64-bf08-f542ead4e464",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6705fba1-f9d5-4558-a6ca-720fb1f15473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30974d93-eca2-4d4c-b228-9d22220b2781",
        "cursor": {
          "ref": "032409bf-651b-4a0b-a9b6-fb664ed239fc",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "01a85ee6-dcc9-4ca9-87a7-f32c1d59e27a"
        },
        "item": {
          "id": "30974d93-eca2-4d4c-b228-9d22220b2781",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6e33db52-45f2-4fa0-978d-a8537449b6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946a8655-8c9e-4ba1-953b-c2d980051f22",
        "cursor": {
          "ref": "05fce701-89e4-4a53-9d1c-16ec9e4c3ac4",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8fdd4d4a-e9af-40f4-864d-0e0197a6f103"
        },
        "item": {
          "id": "946a8655-8c9e-4ba1-953b-c2d980051f22",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4289ab09-2499-4f1d-a764-9434fd03eb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55919db7-f94b-44e6-aca8-f405006d1f45",
        "cursor": {
          "ref": "8a246687-1a2b-4725-8ab6-99b3863c569b",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "157c65f9-562b-4920-9c93-da969b0c4dd5"
        },
        "item": {
          "id": "55919db7-f94b-44e6-aca8-f405006d1f45",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bc3abdfc-1cba-475d-a181-96d69d51c0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78a57be-db91-4159-825e-70b7b7a9bd55",
        "cursor": {
          "ref": "12b52738-d2da-44a6-b63d-9615f9c54f1e",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3c310713-6b9a-4bc3-ae3a-07bfc700234f"
        },
        "item": {
          "id": "a78a57be-db91-4159-825e-70b7b7a9bd55",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "18be1258-17b9-4318-91e6-1856bc09d02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f73a75-e283-460e-bb92-ef48a7b81065",
        "cursor": {
          "ref": "4152b5c3-fcba-49ac-b872-59ce73d01446",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3cf2802f-b3ad-492d-800b-9f0d998c8c34"
        },
        "item": {
          "id": "67f73a75-e283-460e-bb92-ef48a7b81065",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "65b14736-f1aa-4e0b-865d-da571559d593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f541241-9fd5-40d2-a4de-efc3d141ce14",
        "cursor": {
          "ref": "da0fd424-1377-41fc-945a-fb61907bcb6a",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e2d0cc7c-b301-435d-b9da-ddad40c95659"
        },
        "item": {
          "id": "7f541241-9fd5-40d2-a4de-efc3d141ce14",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "af7ee5a6-c7bb-4433-934b-f8d06ba75850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d091af2-0072-4120-8390-c95416e86d2c",
        "cursor": {
          "ref": "49be9ae2-edc2-4153-b6ec-64414c05bc0d",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ff240ce4-0c00-43f0-b779-9f898c2bc6c2"
        },
        "item": {
          "id": "2d091af2-0072-4120-8390-c95416e86d2c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "45badea2-36cd-48d2-b013-525cccd21d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ed4435-a7dc-484b-84ec-aafcd640a319",
        "cursor": {
          "ref": "4cc63dc4-ae30-41ff-85ea-be92e91ffa04",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d3a71030-a8ad-46d0-a410-2ceba023c76d"
        },
        "item": {
          "id": "a9ed4435-a7dc-484b-84ec-aafcd640a319",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "693b9dfc-3ccb-4aa3-bfeb-6f5e895e4a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a947fe8-6c16-4203-a258-03bad7b66466",
        "cursor": {
          "ref": "25bdc6f8-83f5-4380-bb4a-0bf20f4b2e3b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6e176cfb-eb81-44f6-a8e6-c8adf181be09"
        },
        "item": {
          "id": "8a947fe8-6c16-4203-a258-03bad7b66466",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3d8a84db-0ea3-46d8-80b7-99c56bcf0ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f57580b-af81-4799-9253-d2efbe62303d",
        "cursor": {
          "ref": "eb57ba6c-eed9-4c55-affa-4ec57674277a",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "096d802c-6dd2-4776-99cd-4302a64e5a08"
        },
        "item": {
          "id": "3f57580b-af81-4799-9253-d2efbe62303d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "52255bb5-5708-48e0-8c9d-c5d6bf16d0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5389f7-778a-45e0-9eb5-268d2c3e7c44",
        "cursor": {
          "ref": "1114b878-2342-4ef4-a5be-c2c3f8079a8d",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "21b103ad-5f4e-4dd6-b04a-6b12a615aa68"
        },
        "item": {
          "id": "8d5389f7-778a-45e0-9eb5-268d2c3e7c44",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f7be5609-cfcd-48da-8de1-d50d528f16c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58170de9-f028-4b3d-9964-b83b279e34f5",
        "cursor": {
          "ref": "3d39e583-3cf1-40e5-ab4c-1d2e8d81085a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "117bc9a5-e245-4e0d-a5b4-a90a5fdb548c"
        },
        "item": {
          "id": "58170de9-f028-4b3d-9964-b83b279e34f5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "525d8eb8-e8fc-42ea-a66a-c994b288004b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93550bb6-4f91-46db-b1bc-219a80a37faf",
        "cursor": {
          "ref": "5fde2e2f-b008-4bb3-8134-7b1e0c8d9e01",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7e715a36-fd8e-482a-b969-587dc798a57f"
        },
        "item": {
          "id": "93550bb6-4f91-46db-b1bc-219a80a37faf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "df915dcc-240e-4ccc-902f-3c26d8d27be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7616c82e-4520-46ab-a938-ebf5fe61d1c7",
        "cursor": {
          "ref": "bc124d2d-b887-4edf-910f-b507c81a9cd6",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a080d7e9-617f-4cf2-bf97-31164c6cf2a3"
        },
        "item": {
          "id": "7616c82e-4520-46ab-a938-ebf5fe61d1c7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f25dad7c-40a0-402d-b551-96069cd2a2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b39efdd-9e60-4443-97a1-ea4ea565bc76",
        "cursor": {
          "ref": "c09c5d5e-5adf-4fbf-9aa3-0359a05f52e5",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b9335422-71a9-4979-8c7b-fb8d685d6445"
        },
        "item": {
          "id": "8b39efdd-9e60-4443-97a1-ea4ea565bc76",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9e86eb07-ee45-48bb-91f8-b584a66002c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c413ed73-76ec-443a-bc0d-23bb607debbc",
        "cursor": {
          "ref": "7d478738-318b-4dfe-a4cb-85b881f9d9fc",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a6aebdf0-0ab3-4629-a4b7-eef135b0bacc"
        },
        "item": {
          "id": "c413ed73-76ec-443a-bc0d-23bb607debbc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "49c55c53-3701-41b2-bfd3-040221ee3e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f340a53-9217-4f38-83fd-c3d78b479c75",
        "cursor": {
          "ref": "2542b0f1-d608-4c72-a738-c6cc6d76b2f5",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "71730089-b407-4217-83af-fae4212333dd"
        },
        "item": {
          "id": "0f340a53-9217-4f38-83fd-c3d78b479c75",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "513f86fe-331d-4f81-82be-3bc4eda61f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0792165d-d380-45d3-a67a-8572943517cc",
        "cursor": {
          "ref": "e279899f-2e11-4ad8-895c-0d9579882965",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b04d8684-2901-4f91-9bb1-13d440f72a4d"
        },
        "item": {
          "id": "0792165d-d380-45d3-a67a-8572943517cc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "161503b7-b2b0-495d-b05b-31fd8600dede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed82cf36-9343-46c2-bb13-e72e280d75d2",
        "cursor": {
          "ref": "e2a331ac-c215-42b7-a4e0-dc829a3a5be7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3cef62c9-9409-4b60-bcf0-1314cfb159fe"
        },
        "item": {
          "id": "ed82cf36-9343-46c2-bb13-e72e280d75d2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e47bee51-004e-4b42-9057-1e60174f06e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1fd45b-8b83-4b20-8f38-3bb006666943",
        "cursor": {
          "ref": "a353b5fd-2760-4f99-8610-fe45327fced1",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "34cac067-96cf-48b7-9760-33ec8aa4bc8b"
        },
        "item": {
          "id": "8d1fd45b-8b83-4b20-8f38-3bb006666943",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6a502b51-5c85-4bce-9eaa-ed15e38210f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed01ce4-9c7a-4fa4-860f-f39a52e1cc5f",
        "cursor": {
          "ref": "4c6e7952-84bc-4abf-ad9e-aea7ff086bf5",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ae349e9a-a250-4306-bdff-7937b222804f"
        },
        "item": {
          "id": "fed01ce4-9c7a-4fa4-860f-f39a52e1cc5f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0f9e552c-4e06-4339-b890-856dee83ec02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662fb993-4340-485d-8f04-d87c4e2d229f",
        "cursor": {
          "ref": "b4b9da88-98f2-417a-b86c-33dcc0b64536",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5a57b5c6-412f-45b4-926e-8108e09f1c4c"
        },
        "item": {
          "id": "662fb993-4340-485d-8f04-d87c4e2d229f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ce82a79c-610d-4183-8ea8-aefa713227ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8004a9ab-a316-4a59-bb78-b1e57d2a21c8",
        "cursor": {
          "ref": "8d99830b-8001-44b1-a343-44216535a373",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "16b7e4ee-fc06-4af8-a558-321a5561b72d"
        },
        "item": {
          "id": "8004a9ab-a316-4a59-bb78-b1e57d2a21c8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1fb8a93b-1eb5-400a-b08a-4cb8e840f52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbd414a-6581-4193-8bb1-b61c949e61bd",
        "cursor": {
          "ref": "bbb6dadd-1c7b-4549-b062-6bdc18f4dccc",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "540423c4-9ed6-406c-98c6-0337de783bfa"
        },
        "item": {
          "id": "1cbd414a-6581-4193-8bb1-b61c949e61bd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d5c062eb-7297-4278-acb2-cfe9875bcf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9ddf26-4615-4a44-9d44-c4302c3054e8",
        "cursor": {
          "ref": "e8a1f4b6-8199-4bc4-9503-ee24993f9ed4",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e330c859-3484-4625-b9ab-728aa715fb14"
        },
        "item": {
          "id": "9f9ddf26-4615-4a44-9d44-c4302c3054e8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9b094e4a-5d18-401f-b959-0e9bc492ca7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b87525-10e9-45da-91d0-5bffaeb1d722",
        "cursor": {
          "ref": "6c791643-f567-44fd-9938-da3a30a7e26b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "aa7e7ffb-e22c-4075-9e3d-b1f1996df8f9"
        },
        "item": {
          "id": "66b87525-10e9-45da-91d0-5bffaeb1d722",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "56c3b1da-8f50-4f12-ad33-eb0d209b0f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e681bdbe-b9f0-4938-8ac6-728084b46928",
        "cursor": {
          "ref": "f840c365-e9aa-4d87-b75e-8ffb91070fe8",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "30241877-36b3-4530-8a91-29031e3942ed"
        },
        "item": {
          "id": "e681bdbe-b9f0-4938-8ac6-728084b46928",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "32f1a9f7-72f5-4968-b072-8837020cbc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e02294d-6ef3-4abc-8946-a9ddc2aa86d9",
        "cursor": {
          "ref": "0d88712a-fcde-4537-8761-9bce4a146519",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a0ee58e2-607c-46d7-ba53-076c8e356eaf"
        },
        "item": {
          "id": "4e02294d-6ef3-4abc-8946-a9ddc2aa86d9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7fdeecb5-d526-4567-ab30-59caccc35b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7beca705-11a4-4864-b014-2cb6af516d90",
        "cursor": {
          "ref": "4ffab05b-f210-45a6-a3f1-07bfd7090ed1",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "49cad47d-ad22-4984-beae-036d9f7ebd9d"
        },
        "item": {
          "id": "7beca705-11a4-4864-b014-2cb6af516d90",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1aedb134-fda2-4cc0-a0b9-2bf0fe53cec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e2929f-3b17-4081-8cfe-c4080d6482d8",
        "cursor": {
          "ref": "9d029577-bf8b-4a11-b83a-8e54384c8618",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "71c8ec37-981a-4182-93c9-f0c56af7d36f"
        },
        "item": {
          "id": "01e2929f-3b17-4081-8cfe-c4080d6482d8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e905c095-ea7c-4adc-bb85-d4d2b9afa04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20578df-ca07-4ba4-b6b4-5b579d4ceef8",
        "cursor": {
          "ref": "c15d37a4-ec43-4794-8396-08f356b2e343",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d64c508d-5990-43d6-95cb-3110e563bed1"
        },
        "item": {
          "id": "d20578df-ca07-4ba4-b6b4-5b579d4ceef8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c358a1e6-635c-48d5-89b9-b0afe12354eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9bc523-6145-4fe2-8bfc-999b20ce14ab",
        "cursor": {
          "ref": "3be978bb-6bfd-4bf1-abb5-0ed2c3f70973",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ea56a489-d35c-431b-8839-89538d9d37ad"
        },
        "item": {
          "id": "8d9bc523-6145-4fe2-8bfc-999b20ce14ab",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "01cb9971-3434-4846-8154-9b1db80a0c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bc3db1-4697-45cb-8ab1-112e4d2ae34d",
        "cursor": {
          "ref": "ba852125-9390-4779-ae2f-45de2ce84fb7",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9ea0ec3e-bf71-4b5f-8ccf-98a6a95c525d"
        },
        "item": {
          "id": "34bc3db1-4697-45cb-8ab1-112e4d2ae34d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "383c3e43-c948-4f96-9225-faa5ccedc82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b6adae-6e14-4ed3-bd59-38e74dbc04d6",
        "cursor": {
          "ref": "60c84fae-3866-4ec7-be0b-a4bd11912258",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dcfd4a9b-7e2c-4a88-9f9f-5ef9cf74f87a"
        },
        "item": {
          "id": "a7b6adae-6e14-4ed3-bd59-38e74dbc04d6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b4063f67-88a0-4a4c-8df7-98c84c575e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f028dd-5ae5-4c22-9c59-2cd101b77b2b",
        "cursor": {
          "ref": "608a4b8e-5aa6-4b28-8f8d-2ee3797fd5b6",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "600ab204-4ed6-43db-855d-c9e3bf15b7d6"
        },
        "item": {
          "id": "56f028dd-5ae5-4c22-9c59-2cd101b77b2b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e70c4af1-f558-45b8-b4aa-33d7de2318da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4006e8-ad99-42aa-8dc6-e9ce7bb413ed",
        "cursor": {
          "ref": "447ce5f2-6076-4086-a939-37da9584814d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7c08d0e0-2be2-4b62-9ab9-25e5ddd01d05"
        },
        "item": {
          "id": "dd4006e8-ad99-42aa-8dc6-e9ce7bb413ed",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c0343a67-6095-4638-817b-a1e8e5d785bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58c6ab0-08d4-49c6-a4f2-de42b0fce3a3",
        "cursor": {
          "ref": "1f6074ce-785c-44c4-bcb8-e2b1e24a167b",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cf78c384-ac78-42b2-a862-914175c1fe2d"
        },
        "item": {
          "id": "a58c6ab0-08d4-49c6-a4f2-de42b0fce3a3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "592f0eb6-67df-4e5a-bb47-eb140fb3df8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97905800-a0c0-45d6-af5f-4be6b0233c83",
        "cursor": {
          "ref": "b6b96cea-7de6-4a9b-8c90-dc50b6e17a77",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "63f7908a-1b3d-42fd-8a9d-468f4f54c7d2"
        },
        "item": {
          "id": "97905800-a0c0-45d6-af5f-4be6b0233c83",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9c89956d-502c-4d42-9464-320d58cd358e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e815838b-b71d-4a88-89e3-c43fd5d34a40",
        "cursor": {
          "ref": "9be7a45f-4a2f-4973-a878-fb852d1c894d",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "25222e7b-159f-4e48-892c-53ddddf685db"
        },
        "item": {
          "id": "e815838b-b71d-4a88-89e3-c43fd5d34a40",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "490412d0-f746-446c-baa2-59eaf8a00212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b90d247-2588-4f4d-8447-eb2c8ba3f529",
        "cursor": {
          "ref": "e393e4c1-6c25-4239-855b-3110470c393d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "931662e8-97a9-4ac4-b762-5c12e3d63cf9"
        },
        "item": {
          "id": "4b90d247-2588-4f4d-8447-eb2c8ba3f529",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a24d0c6b-1c4f-4b7d-b732-565b06ad5300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b318c4ac-2463-44ab-8e01-ca4104d93d89",
        "cursor": {
          "ref": "e86eef30-2da2-4542-8fbe-7812365a6d20",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "017fa394-b696-47c6-a3af-9bf2b9ed4bee"
        },
        "item": {
          "id": "b318c4ac-2463-44ab-8e01-ca4104d93d89",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1f366ba3-eb6d-4e90-ba21-3af1d84c99dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1544f9-b057-4d42-acb5-0874ce71d1fa",
        "cursor": {
          "ref": "4b82dc34-7d26-4a2c-8efb-f1d35a6bf590",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e54b1ec2-6c02-4fe7-97b9-621285e32c12"
        },
        "item": {
          "id": "3c1544f9-b057-4d42-acb5-0874ce71d1fa",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1ca4ad34-f489-404b-a3ae-11a5c169e937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e64619c-114e-4937-b791-bb30f2b0d59c",
        "cursor": {
          "ref": "3d8de1f6-cdfe-4abc-8ab5-bdca68392e01",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "43286019-2267-469a-80c3-923aefc92eb1"
        },
        "item": {
          "id": "8e64619c-114e-4937-b791-bb30f2b0d59c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a6047f67-f1f1-4a52-a37a-4b43cde24f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23470e6-c716-46e2-b6d1-ba3c94a71716",
        "cursor": {
          "ref": "a9954290-c3d0-4346-8824-d948c3852ce3",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f59816b1-d421-4b07-9ef0-774a7f087251"
        },
        "item": {
          "id": "e23470e6-c716-46e2-b6d1-ba3c94a71716",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "feaeac7b-334d-4a6e-83e5-1830361f8c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082ab870-4819-4e32-9bb8-a543dce65188",
        "cursor": {
          "ref": "611c3ad9-8f97-4287-96b7-9fdb070b4aff",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ccb130e6-e33c-41df-8002-6854fc9f837e"
        },
        "item": {
          "id": "082ab870-4819-4e32-9bb8-a543dce65188",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "924986b6-c08d-43eb-9d0b-7cd340a2e579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030627ca-740a-4a4a-afd9-8dc34b69ad10",
        "cursor": {
          "ref": "34d50815-8780-44ad-b1b3-d2abef5f4020",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "07348078-3966-4698-859b-a00e315f39af"
        },
        "item": {
          "id": "030627ca-740a-4a4a-afd9-8dc34b69ad10",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f9328c9d-54ca-4283-85b2-b7d4ea21f28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414aee5c-dd55-43a0-bbf9-a06fdfeca5e6",
        "cursor": {
          "ref": "01c38832-4ef0-42ac-b6e8-bb474f27cb80",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7992bc9b-d782-4763-af68-c032ef93ae7d"
        },
        "item": {
          "id": "414aee5c-dd55-43a0-bbf9-a06fdfeca5e6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "21579322-be46-4dde-850f-f0ba27f1f1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411e557b-abd1-4094-bcd5-0369ec3630b0",
        "cursor": {
          "ref": "b923fb27-f607-4e38-abb0-eea81e280bac",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b18eff1c-5b4d-49f5-b7c9-8dbf0fce7dc0"
        },
        "item": {
          "id": "411e557b-abd1-4094-bcd5-0369ec3630b0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "30f13baa-5aef-4e58-81c0-0a54b960806b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8372284e-45a0-4cda-8b53-1e8b3c2c8dc7",
        "cursor": {
          "ref": "58f14879-1c1c-4e91-9d8c-6efca73e14e1",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bebcb628-95ec-44f4-9325-41f1e27fe04e"
        },
        "item": {
          "id": "8372284e-45a0-4cda-8b53-1e8b3c2c8dc7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "54e1759b-bec7-4c38-8643-f8a9d6cb4157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255290b0-25ec-45d5-8957-8bebf3a04e08",
        "cursor": {
          "ref": "5f1e49b3-9d63-4b0f-8e2f-2e6fe49adaa8",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "00beb162-b1b0-4b64-9a71-54c311926ded"
        },
        "item": {
          "id": "255290b0-25ec-45d5-8957-8bebf3a04e08",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a9c75354-fada-470a-ba7e-c1ee01efd397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c8d317-233a-4d98-bda5-63f45db35a24",
        "cursor": {
          "ref": "a54d456b-3f5d-470e-947a-24d1e275cf0c",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "34ea0db9-bd1c-439e-86a6-10a651fa6878"
        },
        "item": {
          "id": "f2c8d317-233a-4d98-bda5-63f45db35a24",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e520ca0d-65f2-4ab8-8554-8828201a9eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f80ca1-f1f0-4e19-a172-2814e148e98f",
        "cursor": {
          "ref": "7c8f2350-931a-4d5b-8055-9212a3420cd4",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9119d01e-3e3c-495c-8734-2e4f76337af7"
        },
        "item": {
          "id": "61f80ca1-f1f0-4e19-a172-2814e148e98f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2a398367-1f1b-4307-8237-432ab3e9d812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b777cb-2559-42fb-86fa-1803e2d5066e",
        "cursor": {
          "ref": "937ddc1b-1436-4b2e-9b0d-41d61af08e37",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2d837aeb-fe1f-40e7-86d5-5e863c447a1d"
        },
        "item": {
          "id": "21b777cb-2559-42fb-86fa-1803e2d5066e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1898ddbf-6b37-4e41-a8d0-e9db9372745b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cacf5c6-95ac-440d-8efc-4589d5d89394",
        "cursor": {
          "ref": "ed093623-4d25-43b3-a9e8-87650db2216e",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "84f1561f-5f9d-44a0-bee1-9289eeb3d742"
        },
        "item": {
          "id": "1cacf5c6-95ac-440d-8efc-4589d5d89394",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f3e402a4-b203-407f-b3b7-b5b1424e2aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b207b5-213a-41cc-873a-dce11b712e3d",
        "cursor": {
          "ref": "4dd8f227-7f48-4f02-a9eb-3b1a1f84b9c7",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cbef4f10-59a0-404b-a58e-709b668f56a2"
        },
        "item": {
          "id": "e4b207b5-213a-41cc-873a-dce11b712e3d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f9b663b1-b5b8-4b32-9e40-b25856e461f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc278d3c-d336-42a3-bd2e-f4c980816784",
        "cursor": {
          "ref": "8b81327b-307d-467b-bc09-c808bf187efa",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "61637f5b-e47d-416e-ad79-261f43ec1b85"
        },
        "item": {
          "id": "cc278d3c-d336-42a3-bd2e-f4c980816784",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e9edfd5f-ff91-437a-8cf7-e7a4e8e58f21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ae32d7-bc3c-4928-8347-103e10f87990",
        "cursor": {
          "ref": "bbc8b67b-4e83-4617-8f5d-001fe0e900e3",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "718b300e-4049-478e-80c0-e87c43818d2c"
        },
        "item": {
          "id": "39ae32d7-bc3c-4928-8347-103e10f87990",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "52e23195-5918-44af-b4cf-a318fc50ef17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d65287e6-15e2-4b43-9935-a3815c28dcb9",
        "cursor": {
          "ref": "5c66275f-567e-4a3c-a068-a3ead628f7b5",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a90c73b9-8582-4355-901b-ba2b942a0fb4"
        },
        "item": {
          "id": "d65287e6-15e2-4b43-9935-a3815c28dcb9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dffb0e29-63e8-4b5b-8106-53b0cea06780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "edc788a9-4649-46f5-8131-b8eacbfb461a",
        "cursor": {
          "ref": "b13ad886-7491-4a18-9eb7-3d2bc9535a78",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6889a0be-877c-48be-8cc8-e0ed3b170555"
        },
        "item": {
          "id": "edc788a9-4649-46f5-8131-b8eacbfb461a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5b030e3d-5c60-4641-9ec2-8b4f4da6eb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "21be88c1-3faa-48f7-a9df-8c8a7bf93dc4",
        "cursor": {
          "ref": "4e2ff302-d86f-4f46-a5c4-e8e71165616c",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d6d2d20d-5f90-40d2-b9a5-6e9790e75519"
        },
        "item": {
          "id": "21be88c1-3faa-48f7-a9df-8c8a7bf93dc4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "57c199da-53ba-43ce-89cf-29a62cd12b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "3c768258-cc6b-4705-835a-daee897c90d5",
        "cursor": {
          "ref": "f1f0c018-4a40-48dc-94f1-fc681b731611",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "29bbfce8-53c0-479a-b4b9-727326636ead"
        },
        "item": {
          "id": "3c768258-cc6b-4705-835a-daee897c90d5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a80a787a-8000-48bb-a7ed-dd3142ca65b9",
          "status": "Created",
          "code": 201,
          "responseTime": 7940,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f39ebc5-2215-4909-95d5-18ff1153cc04",
        "cursor": {
          "ref": "4d78079c-1ba0-4542-a8fa-28fbb5bf30a7",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "881a9a07-180a-4342-b57d-18dca2c246b6"
        },
        "item": {
          "id": "9f39ebc5-2215-4909-95d5-18ff1153cc04",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "10dafbd8-01d4-4278-a5a3-309d02914035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 993,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f5078c57-3c1c-4bfa-a690-d26f407e338a",
        "cursor": {
          "ref": "84598acd-acdd-42db-8300-d9b5bd6ca185",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "716eeb4f-46b6-48dc-882a-680908744250"
        },
        "item": {
          "id": "f5078c57-3c1c-4bfa-a690-d26f407e338a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "33a6f8d3-7656-4749-a27f-1e50a12bd016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1732,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "57526264-22ae-4c05-a55d-e2a1bed02f8f",
        "cursor": {
          "ref": "a169977b-44f8-4380-aa3f-d44daa555614",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3f441217-edda-4640-b0a1-f72b8782de72"
        },
        "item": {
          "id": "57526264-22ae-4c05-a55d-e2a1bed02f8f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1aad6a9d-c5bc-494b-856e-61812a8a700e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443cd464-0e20-4534-8434-eb09cb839c02",
        "cursor": {
          "ref": "5fd10138-988c-41af-9904-dfd5c106e930",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "497328c2-49bf-4076-ae01-b410d3cd44a2"
        },
        "item": {
          "id": "443cd464-0e20-4534-8434-eb09cb839c02",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e8e1a8c1-bdb8-4632-b0a2-4b46ce169570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1349,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0795e84e-3ac6-48c6-a96f-0d78607f23a2",
        "cursor": {
          "ref": "9d1dabcc-7c73-42cc-81cc-d734f577f56e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "076b429b-05b7-4e15-8f20-e6c3dcb8aa39"
        },
        "item": {
          "id": "0795e84e-3ac6-48c6-a96f-0d78607f23a2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "430707c9-04a4-4a70-ac5f-f281de58630e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1213,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761827f3-2472-4d5a-84d5-722bbd9c657a",
        "cursor": {
          "ref": "c1f2d045-b132-4d8e-b867-981c7254f0e6",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "749e4ceb-51f8-43de-9f1d-0d9ae88aa1d0"
        },
        "item": {
          "id": "761827f3-2472-4d5a-84d5-722bbd9c657a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "29fa7d42-00cc-42e8-b88f-ac81546af802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 936,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f067c7ce-7441-48db-b0c5-396fabf98850",
        "cursor": {
          "ref": "c922a3cc-4075-442d-bd7b-78fc307c6ac0",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d5ad9c78-71c6-4a0e-8714-8b695f0e1dce"
        },
        "item": {
          "id": "f067c7ce-7441-48db-b0c5-396fabf98850",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4c232a01-d769-4f48-acf9-ee9735e775d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1509,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9111ce-85ec-4a30-8807-95e439222654",
        "cursor": {
          "ref": "d5e8bf6c-ec3d-4985-9c0d-1d6d13162006",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "140e18e2-69ff-4bfb-ad9c-427b1ecaff48"
        },
        "item": {
          "id": "ed9111ce-85ec-4a30-8807-95e439222654",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0d98626b-2b3a-40aa-8222-dc46f948abc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf20c05-f269-4474-a573-bcab759df97d",
        "cursor": {
          "ref": "fe8b12cf-e3dc-42c7-8db9-1de8fcf0a0f9",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0986382f-bd1a-4e19-84bb-023166610441"
        },
        "item": {
          "id": "7bf20c05-f269-4474-a573-bcab759df97d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fbdd7245-1369-4c65-b21e-2563c32059e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50499e3-7868-47fd-8d14-0b0f29497bb5",
        "cursor": {
          "ref": "48f97b7b-c64d-41ef-964f-ea848d8bd47c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5ee4c1a6-15ff-4a04-acd1-1fc46e5faf92"
        },
        "item": {
          "id": "e50499e3-7868-47fd-8d14-0b0f29497bb5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "00a691c5-a382-4d23-ae04-0e54613005d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1143,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83f666e-0070-4ca7-83bb-a3f7edd9c156",
        "cursor": {
          "ref": "0bdeecea-cdf0-4b33-9b40-6b89158efd25",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8a42f4e6-7205-4799-912f-c9046161fd86"
        },
        "item": {
          "id": "e83f666e-0070-4ca7-83bb-a3f7edd9c156",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6ae9a2bd-53d4-4dbf-87d1-679c37dce320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fb6a07-486b-4b47-8b7f-adde3f75dbcc",
        "cursor": {
          "ref": "061552fd-23d3-4a26-92fc-604dfdb7ace3",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e24ff637-f80e-4039-aaf8-dc3ee57c6052"
        },
        "item": {
          "id": "11fb6a07-486b-4b47-8b7f-adde3f75dbcc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "10970471-04f6-49ee-9a34-9474ed384482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1246,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf76945-71ce-4535-99fc-55714b4ad928",
        "cursor": {
          "ref": "78234067-2c5f-46d9-be4c-f9d2d3581d14",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8123528b-ace8-4308-907e-e4fff23a242e"
        },
        "item": {
          "id": "4bf76945-71ce-4535-99fc-55714b4ad928",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e77c75d0-b410-41e8-b00c-4a26ec07a5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b387a77f-0838-4fa1-a872-26a61fe0f816",
        "cursor": {
          "ref": "079eb227-3ec5-48c2-873b-c50a2765bc82",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f40f837a-cc2a-4620-ae6e-3f9bc92a6dde"
        },
        "item": {
          "id": "b387a77f-0838-4fa1-a872-26a61fe0f816",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ad64bbfa-f7d3-4f00-a2be-27a2fb69882e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1130,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944f404f-0351-4cbd-999b-ce5ec66acc16",
        "cursor": {
          "ref": "d34be538-5f37-4f69-bea0-ebaae2d96882",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bf22a0d3-150f-4930-be14-aba44acd8356"
        },
        "item": {
          "id": "944f404f-0351-4cbd-999b-ce5ec66acc16",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0bb96864-d7e9-4d5f-957d-3097d846ce0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28812c30-6488-4042-b949-aae75494e890",
        "cursor": {
          "ref": "e1aa9010-08a7-4adb-9b2b-a0fb582e5268",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7829cebf-2156-4a44-8685-ca3448a562b6"
        },
        "item": {
          "id": "28812c30-6488-4042-b949-aae75494e890",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f9e35047-bb19-45ea-b8b4-848f51b9a4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 958,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be249a09-31b2-43ff-be52-78215ec1a046",
        "cursor": {
          "ref": "90a7a168-c837-4a7c-ad50-ac7d0c38294b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "22ca7277-762a-4f6c-8530-dfccaf71b291"
        },
        "item": {
          "id": "be249a09-31b2-43ff-be52-78215ec1a046",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a3dffbcf-d3b2-45e7-80c6-dc095d58e0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a37746e-3a2b-44d1-b320-46d4b7e5a3f5",
        "cursor": {
          "ref": "b68fa993-50bd-448f-8919-cccf6992478f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6adb4cf9-fbc7-4603-86da-8bb28b92131b"
        },
        "item": {
          "id": "5a37746e-3a2b-44d1-b320-46d4b7e5a3f5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "53ae970b-6792-442c-8ab7-676236ed8d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99648f52-c5d3-48f0-9e98-8152775ed915",
        "cursor": {
          "ref": "6ef4ea98-c4ab-4697-b42a-96c1c9f2c333",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fa67d81a-d3c7-4146-88ea-6ae14d4eeba6"
        },
        "item": {
          "id": "99648f52-c5d3-48f0-9e98-8152775ed915",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2d9fdc65-dc76-4e93-b2fb-2d3a61c42592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699da074-a2fc-4eb6-8574-f1ce126a6faf",
        "cursor": {
          "ref": "35ea5502-010e-48a8-98a9-48c88bfc187f",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "266c8eeb-16d1-46c9-98cc-a8616e734f17"
        },
        "item": {
          "id": "699da074-a2fc-4eb6-8574-f1ce126a6faf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "82e23d72-a12b-4819-86b1-d6d27b7ded81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e43f48-b18f-4087-bd15-edc3c6f22996",
        "cursor": {
          "ref": "db47a19b-c5d9-4f53-a696-3d3b67be3a27",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a180fe45-ed35-44ce-a03c-b84f0447a44e"
        },
        "item": {
          "id": "00e43f48-b18f-4087-bd15-edc3c6f22996",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cf293ec7-0756-4914-9f12-e1d3dd2d8a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb274027-5bf5-455a-a935-47a454b1cd19",
        "cursor": {
          "ref": "4667c543-0762-4ce7-9e07-580ccf3bf21d",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "92eea01c-4047-4f80-a08f-dd8d077b2022"
        },
        "item": {
          "id": "eb274027-5bf5-455a-a935-47a454b1cd19",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cf45e39d-47b7-4a76-a9c6-0281c50dfe9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 974,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1498098-8008-4bcb-82ba-1daf9a360ad5",
        "cursor": {
          "ref": "2ffc24ba-6698-4f11-8d00-3db23e310349",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fdefba16-db6a-4fd5-91cd-de5575a74e4f"
        },
        "item": {
          "id": "f1498098-8008-4bcb-82ba-1daf9a360ad5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a44aa1a1-f9aa-4c12-98a2-a045d92fb1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de7c1fc-7bc8-40cd-ab66-300e875f18a4",
        "cursor": {
          "ref": "09b6be39-0dfb-4f03-a5b0-5664e5fd9629",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ca3cc1fe-0b87-4639-953d-7db34f9b2dfe"
        },
        "item": {
          "id": "0de7c1fc-7bc8-40cd-ab66-300e875f18a4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e72ed16f-1f7b-4328-ac66-94c6a6364c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1079,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1aa97fe-9111-4d4a-b798-f1aabef00c84",
        "cursor": {
          "ref": "13ec9994-23bd-4341-a5c4-e5f76d8d1683",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6f68346b-295d-45ce-8d1f-6cbc0d31768a"
        },
        "item": {
          "id": "f1aa97fe-9111-4d4a-b798-f1aabef00c84",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "efeeb0a4-9e62-4e91-ad21-01b0348b7373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 887,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc380d8-9fa1-4f19-92c1-facde86e30cd",
        "cursor": {
          "ref": "1b7867aa-e5bd-4efc-ac07-e56ace931e90",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3f7c5647-69e6-4266-b65b-9d394680e1dc"
        },
        "item": {
          "id": "9fc380d8-9fa1-4f19-92c1-facde86e30cd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a6eabc33-9016-48c6-8dde-69cdc115b093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01839461-7539-46ee-acf9-3edcbea677f3",
        "cursor": {
          "ref": "9f20aa49-3f24-4aa1-921e-13c5f6f9c5ff",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b6533d04-bbe5-4b3a-b6f1-342ca75c5055"
        },
        "item": {
          "id": "01839461-7539-46ee-acf9-3edcbea677f3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9bcf5f02-fdd9-483e-a068-c22f36632f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 881,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1dadc31-6fd5-4570-b2fd-ad3793ff1625",
        "cursor": {
          "ref": "e9f89002-01e0-493d-aaec-bcfb8dd64668",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "30aaf630-9225-46e0-99af-5794f8bf811f"
        },
        "item": {
          "id": "d1dadc31-6fd5-4570-b2fd-ad3793ff1625",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8ebacd44-fa90-42c8-aaf2-8ba57660d9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1461,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d293abab-c736-4845-b1e1-b13b08285f94",
        "cursor": {
          "ref": "6922fcc6-b652-493c-8b34-8df54e648cba",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cb0c8d5c-e33f-4aca-ae95-787d12f07239"
        },
        "item": {
          "id": "d293abab-c736-4845-b1e1-b13b08285f94",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c8af4721-fd17-4b29-9a32-46d038f0e33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0dcae6-c990-4355-ae3d-d811d83995c2",
        "cursor": {
          "ref": "268d9140-1f3a-4155-9cb7-37358dce207c",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fa0f09d0-4cba-4702-b365-694971036640"
        },
        "item": {
          "id": "be0dcae6-c990-4355-ae3d-d811d83995c2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3982c4fb-913a-465f-8035-5aa2c0b89ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8ef43e-4226-4cfb-a040-8f7d42449636",
        "cursor": {
          "ref": "cfa38895-aab4-44c1-b7ba-6369bdbab76c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "784a8b0d-aa2b-4d8c-a5b0-58e9c3f49892"
        },
        "item": {
          "id": "ca8ef43e-4226-4cfb-a040-8f7d42449636",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "87ddacf4-6e26-4657-b6e0-b0dbbb30b0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00655635-e941-41d0-8565-78267e2ab028",
        "cursor": {
          "ref": "eae43344-0d9f-4252-882a-a1c823f5180f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "18aac46a-d93f-4db6-878d-40c2a74a5ed9"
        },
        "item": {
          "id": "00655635-e941-41d0-8565-78267e2ab028",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "19d4d303-b155-4a23-9e44-c9d75c81cc01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6349b52c-64c6-4646-8d53-b1ddba1a87ac",
        "cursor": {
          "ref": "a7447a2b-b539-4fd5-b1a7-e69ec46d4b05",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f99dbc6c-ddd2-4d7c-8a90-62b2dd07e8ef"
        },
        "item": {
          "id": "6349b52c-64c6-4646-8d53-b1ddba1a87ac",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cafa0476-4852-4125-baae-4ad63b62d05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1122,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4047d7e-fc2e-45eb-b5de-0c838ca5c404",
        "cursor": {
          "ref": "481e2bce-802a-4c8c-a31d-bd1d0fd4dc99",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0178ac42-3a77-4ae9-a9e6-a5ec43a2241a"
        },
        "item": {
          "id": "f4047d7e-fc2e-45eb-b5de-0c838ca5c404",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "09fe4a7f-625f-4be7-ab15-4b88456ac66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8020a28f-9664-42b9-a778-0ab2f658253e",
        "cursor": {
          "ref": "0138cd35-63c0-4a8c-a0d8-f534c6d9899d",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ef3b758a-b6c2-4b9b-88bf-536eeb53b012"
        },
        "item": {
          "id": "8020a28f-9664-42b9-a778-0ab2f658253e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b1cc1bc0-7752-473a-8686-2237c66a75ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 438,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f212d4-ef8f-4490-ad89-e050ee80e3c5",
        "cursor": {
          "ref": "6648589a-86e3-4187-8b35-a49264724b1c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d207ee0e-693e-442c-9948-07a238c9bc0a"
        },
        "item": {
          "id": "79f212d4-ef8f-4490-ad89-e050ee80e3c5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9e04ef7f-7f65-4f52-bfee-9e9897339bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1583,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda17abf-9ea3-4df8-913b-4b34ea14abf9",
        "cursor": {
          "ref": "3e8559ce-c2ed-4c30-ae25-01327de224d0",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "87178a0f-02b3-42cf-91c2-e037f59a8a54"
        },
        "item": {
          "id": "fda17abf-9ea3-4df8-913b-4b34ea14abf9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "01d1d606-7b78-4778-a8c6-d09ceea7e5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebf5df4-da6f-438c-a86c-4110caf5d44a",
        "cursor": {
          "ref": "c88a8af5-2409-4fa2-9320-d39af7a96cfa",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1739dd06-ca2b-4d29-9be6-bd2dedf1270b"
        },
        "item": {
          "id": "eebf5df4-da6f-438c-a86c-4110caf5d44a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3e8a3019-1a6a-476e-85c3-c3f58b7959a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd819ca-b8bd-4c0f-a83d-b6ea3dc6833d",
        "cursor": {
          "ref": "be7d5953-08bc-4810-b6cf-fa29f6755f4b",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3a8bd8b7-b04d-4f22-b042-56730182043a"
        },
        "item": {
          "id": "7bd819ca-b8bd-4c0f-a83d-b6ea3dc6833d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d715d677-bbb5-4987-944c-f40e40e003d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947178f9-5afa-48f4-a455-6ee31be48a1e",
        "cursor": {
          "ref": "c5f67cc0-8c9f-4172-af87-993e2b9c6bba",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6fb07554-414e-4a78-94d6-4f341d024e1f"
        },
        "item": {
          "id": "947178f9-5afa-48f4-a455-6ee31be48a1e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3e0ed060-b1ec-4a43-8d17-5ffeb6de1b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2096286f-c8d4-4b9f-b8c9-a16dd8fb89ac",
        "cursor": {
          "ref": "0b3b1d2d-8acf-43f3-a376-20b838073e61",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0446813c-db6b-4f0b-84fe-7d93312c5c92"
        },
        "item": {
          "id": "2096286f-c8d4-4b9f-b8c9-a16dd8fb89ac",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6dacf530-d50d-4104-9ff7-a4c72d20c488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c428a8-eea2-43b5-a234-fa9dd87c2208",
        "cursor": {
          "ref": "61e184f3-04b5-4754-9073-671dae753a6e",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2bf4e99e-5633-4428-9e51-5362cd957c09"
        },
        "item": {
          "id": "62c428a8-eea2-43b5-a234-fa9dd87c2208",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2624e98f-a7da-46b1-966b-5d53726563fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3e0c41-79ad-4d23-988c-13b2ff686ea1",
        "cursor": {
          "ref": "8fca9c7c-0500-45f1-9a88-ddce88dbec17",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4c827eaa-6723-47ab-a07c-ea97e6ef7cf7"
        },
        "item": {
          "id": "4f3e0c41-79ad-4d23-988c-13b2ff686ea1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "05b3af3e-5a87-45f8-9374-74d1b0bee2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e20271-8a1c-43e1-b3ae-9de3590a8d57",
        "cursor": {
          "ref": "8438aa27-12b8-4d1b-9adb-855eb097bcc5",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ef458bf9-cb4a-43b6-ba47-fe655130abc5"
        },
        "item": {
          "id": "98e20271-8a1c-43e1-b3ae-9de3590a8d57",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1f0d05e3-dba4-4e72-83c8-8c82ba191e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb116901-e677-4359-9dd3-cc86c7710aea",
        "cursor": {
          "ref": "e3fe5a74-c578-48fe-b6a9-c3004712568f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "145ce06c-607c-49dc-b7a0-4dc43e5a89f7"
        },
        "item": {
          "id": "fb116901-e677-4359-9dd3-cc86c7710aea",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f6ef6a14-bec7-4ff5-af40-c7e023c92ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58ed443-4e3c-49b9-97bc-0ef6d42cdd52",
        "cursor": {
          "ref": "297a62db-f6ec-475a-8c4e-494fc8a3c52c",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bdee22a1-309a-45b5-acc2-1cacade14119"
        },
        "item": {
          "id": "d58ed443-4e3c-49b9-97bc-0ef6d42cdd52",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "46111527-9314-4eb5-9448-59561528256f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5331bea5-fae6-4b55-9b37-def247bc7667",
        "cursor": {
          "ref": "8542fb2e-64a2-4a2c-a396-62aa40fbb8d4",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fcbf39ba-f97d-493b-b59b-4b84ba910013"
        },
        "item": {
          "id": "5331bea5-fae6-4b55-9b37-def247bc7667",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "85373e4b-9ed5-46a8-b311-4393592ee998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86ba2d8-6863-4742-b010-fcfd36515c9b",
        "cursor": {
          "ref": "5653fb1d-f522-4452-9b51-565017247ed1",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3b30d71e-9e92-4091-bc9b-167ec576c51a"
        },
        "item": {
          "id": "f86ba2d8-6863-4742-b010-fcfd36515c9b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c925d76e-1aff-44e8-948f-a3fac99636b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed94d1e0-5f89-4751-b0de-87c70aa221e2",
        "cursor": {
          "ref": "fc5a7603-d00f-4e2e-bc72-7ffe302ec710",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "10018ef7-82e5-4acc-a924-247838edd268"
        },
        "item": {
          "id": "ed94d1e0-5f89-4751-b0de-87c70aa221e2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "847666c4-2876-4b19-b7c1-b5a76d7021a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d781f2-6ade-432d-ad91-81baff39dff2",
        "cursor": {
          "ref": "36812a36-7914-4d86-839e-2d9b623f5c62",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e09d6cd9-5dd1-4d06-983e-6316410ec993"
        },
        "item": {
          "id": "96d781f2-6ade-432d-ad91-81baff39dff2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e5f45244-610c-4e17-85bd-11c63e7866f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458cbe27-3104-467b-9f03-2d50663522f7",
        "cursor": {
          "ref": "51d5ad4a-f665-472b-a919-1aea30ee4583",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a7af1f43-08c1-4862-9d6b-5456e2b30f78"
        },
        "item": {
          "id": "458cbe27-3104-467b-9f03-2d50663522f7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f6b99e20-0f9a-4e23-bb82-4e90b6f2868d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cbd798-d453-4e4c-91b3-3b36d66ce841",
        "cursor": {
          "ref": "c7bb2928-f0bb-4e47-ac41-4929ea4389ec",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8975fcee-2bd0-40de-85cd-d926e827fef7"
        },
        "item": {
          "id": "a3cbd798-d453-4e4c-91b3-3b36d66ce841",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d2fe50b2-a948-4f0d-bc1a-5f4227b694ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2582d96f-4593-4f32-a7e6-931355a5067f",
        "cursor": {
          "ref": "898c656f-dfa1-4ca3-95ac-7c0def69fd15",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7de4ddc5-d60b-4d51-af46-250f7bba31b9"
        },
        "item": {
          "id": "2582d96f-4593-4f32-a7e6-931355a5067f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b1cccd02-56f9-414a-be83-fea5e37e3031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bc1ec3-0d5a-4888-95cb-e85ed52a9584",
        "cursor": {
          "ref": "eac4804e-e3f8-45a4-abfc-19b295a7197a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "267ef04f-9f74-4ece-9bda-7c2a26eb66ac"
        },
        "item": {
          "id": "77bc1ec3-0d5a-4888-95cb-e85ed52a9584",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ccc80f81-13da-4723-b204-214bde880394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81147e10-ad94-4b01-a7f1-b40afbf6a9d5",
        "cursor": {
          "ref": "949c9db0-4208-476f-8a2b-47055ec375a6",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fb9b42d7-ab5c-4765-9ea3-2ceab89ac9fb"
        },
        "item": {
          "id": "81147e10-ad94-4b01-a7f1-b40afbf6a9d5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ee3d2a31-9d9e-493f-a6e3-5f1b45539742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f7341e-9908-4bc3-a0b2-ae0fc41d3427",
        "cursor": {
          "ref": "1a5827e7-2acd-449e-b226-b235b9a15a4b",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1a828ba5-3397-4419-bb37-fd703574990c"
        },
        "item": {
          "id": "65f7341e-9908-4bc3-a0b2-ae0fc41d3427",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "35a93189-7cd4-4275-9abd-07889175ebdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ab53a6-c765-480b-88f0-9dcc38c896d4",
        "cursor": {
          "ref": "fc984b4e-d2e2-4f13-b1e0-dfdddbaadd4d",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "13ba4914-d95e-45c8-85d4-80bb48a7ad59"
        },
        "item": {
          "id": "a5ab53a6-c765-480b-88f0-9dcc38c896d4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "203cf461-b616-476e-98f4-4746ce3d4fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a35889d-e433-4997-a354-a0dbe8d971a3",
        "cursor": {
          "ref": "a9717141-edd7-4ca8-a904-eabd9bd7a0ee",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "85e281a6-7953-4fb2-bdbc-63ccd73ecedf"
        },
        "item": {
          "id": "2a35889d-e433-4997-a354-a0dbe8d971a3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "43c84c88-12d4-437e-b356-14e4802d842b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec19928-79b5-47ed-ba05-dbeafd871685",
        "cursor": {
          "ref": "4471c1f5-e63d-43fb-84e4-16f8fde7f9ff",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "025f16c8-ae3d-4c1b-93b8-29f28268771d"
        },
        "item": {
          "id": "1ec19928-79b5-47ed-ba05-dbeafd871685",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c2d99556-d55a-4ed8-a401-6d829481059d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1832cc-4958-403c-8330-de15a5db665b",
        "cursor": {
          "ref": "c4025b96-b8be-47a3-965b-d67c7c03c489",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ab28452e-b639-4ab2-a4c7-b376cc3badba"
        },
        "item": {
          "id": "9a1832cc-4958-403c-8330-de15a5db665b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f8770458-5617-48f6-a41b-415de440c39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c42282-52a1-43ce-918a-eec68318f15e",
        "cursor": {
          "ref": "2554f04f-99e8-4b93-a652-6be15910b2f6",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bc11257f-e97e-4a76-acdd-e8574a63fd23"
        },
        "item": {
          "id": "90c42282-52a1-43ce-918a-eec68318f15e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3dff6866-8048-4561-8552-b26057c6f40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7034e7e-a55a-43fd-bd82-d2e648d13dc2",
        "cursor": {
          "ref": "f425eb33-639e-4b7d-b502-731753d52187",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "477ff38c-0161-405f-b769-211e7d2ef7c7"
        },
        "item": {
          "id": "a7034e7e-a55a-43fd-bd82-d2e648d13dc2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5a913f6e-f486-4ca2-a3cc-fcb988073090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b036ad14-855e-40b7-bb7f-ff578b13e3cb",
        "cursor": {
          "ref": "754b7407-4d12-49b4-9c82-0a35141b0680",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f240e6bf-7204-4361-921f-a32d92d91c13"
        },
        "item": {
          "id": "b036ad14-855e-40b7-bb7f-ff578b13e3cb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b383c6c4-0f76-4a15-8a07-280638adf2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a5cd44-93e7-464b-b4f4-c730ba8e0b31",
        "cursor": {
          "ref": "d44056a4-ea35-4f08-bead-878d917f5dc2",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "56659358-ff64-41e7-9cee-00d02f987a0e"
        },
        "item": {
          "id": "95a5cd44-93e7-464b-b4f4-c730ba8e0b31",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "88faa421-d3a7-409e-969d-51e15fe5e92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749779ba-fada-411b-b7f3-4b525177a8e2",
        "cursor": {
          "ref": "1e64c5b9-f0e7-4dbd-8ab7-38114095a3a0",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0d988f22-6e4a-471b-bae3-c9d10d082be4"
        },
        "item": {
          "id": "749779ba-fada-411b-b7f3-4b525177a8e2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "af67ca27-1bdf-4325-ac31-f927c70705f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878732a7-72ff-4bd5-96c5-22d2e68bde3b",
        "cursor": {
          "ref": "cf4e3f21-2d89-4127-9860-14ada9ba47ff",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2b552ace-26f7-487c-b228-fdab63544911"
        },
        "item": {
          "id": "878732a7-72ff-4bd5-96c5-22d2e68bde3b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "249f8c55-8df0-45a2-8089-ecb19dfe2f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23501dd-f821-4478-9049-b5d06ab58051",
        "cursor": {
          "ref": "6b1ec13b-2394-401a-a84e-eb661bbf5465",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d213f20f-1856-4c71-85ef-d000d94c2e95"
        },
        "item": {
          "id": "f23501dd-f821-4478-9049-b5d06ab58051",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bacd618f-33de-44ae-a8c7-aa50dacf2499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40deba80-85b4-489e-bdfe-e6bddc43feb0",
        "cursor": {
          "ref": "bd7a0669-2688-4341-93d9-924679c594f4",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3ef39d45-6422-4487-968e-a2cc6e87603a"
        },
        "item": {
          "id": "40deba80-85b4-489e-bdfe-e6bddc43feb0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1e926631-1489-4508-98a7-eeeedae5b865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7982a73b-18bd-4d52-bfd3-ff5229f9f1e8",
        "cursor": {
          "ref": "303f21be-1cde-4580-a712-56ab45dacac7",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "91f55d6f-434f-459d-9a68-281ab4781768"
        },
        "item": {
          "id": "7982a73b-18bd-4d52-bfd3-ff5229f9f1e8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2facbe7a-b840-4ca8-98c0-44eb6e5b9ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2c1b14-99f2-4ef7-ac64-8a60e9ea3c2f",
        "cursor": {
          "ref": "dc9b213a-3faa-4927-984f-2215cbdc46d9",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ab339297-fa1c-47c4-a73d-1741b8ff9f84"
        },
        "item": {
          "id": "8a2c1b14-99f2-4ef7-ac64-8a60e9ea3c2f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9293b46d-d1db-4f2d-b120-a9cf7a0717d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1c9811-8598-48f2-9665-d6e00b7bceca",
        "cursor": {
          "ref": "c6fee673-8c8c-4d56-8a6b-68e95bfc259c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "acdc9c2b-466b-400d-97cd-afd5027761d5"
        },
        "item": {
          "id": "ee1c9811-8598-48f2-9665-d6e00b7bceca",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "637794e0-9fb0-4059-b81a-4ebbb90e1e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435d5b99-0fab-4094-b000-26aa0bfcb666",
        "cursor": {
          "ref": "a1188908-6226-45d5-86e7-73287c069e74",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6fd3b029-98a3-4e46-b2a3-04e46589d5f6"
        },
        "item": {
          "id": "435d5b99-0fab-4094-b000-26aa0bfcb666",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6785bd95-1f52-481e-b62b-35094702a335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2538380-bc0a-463e-ae10-c9855bd2c3a8",
        "cursor": {
          "ref": "a99b105f-fbd6-405f-a740-9704c9e2f68e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "11835d7d-7b6c-46b7-9a2b-e590cbcdcb99"
        },
        "item": {
          "id": "a2538380-bc0a-463e-ae10-c9855bd2c3a8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6c9aebc4-b678-4cf1-813a-ba4777a96f4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f250e9ba-6f0f-4f35-89cb-2e24e053684f",
        "cursor": {
          "ref": "31716c17-9d3c-4216-88d0-725e81a81995",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "800b5c7f-cd27-43c2-a6b3-f2599657cee4"
        },
        "item": {
          "id": "f250e9ba-6f0f-4f35-89cb-2e24e053684f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "250067aa-20fd-483b-86e0-969696f5c58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a28f0e-99db-4640-97b2-98e296885b71",
        "cursor": {
          "ref": "2c14622b-b56c-4fe2-a4c8-aa0d3d823869",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "72dc8d09-2978-44f8-84e1-3a1bb5d45563"
        },
        "item": {
          "id": "57a28f0e-99db-4640-97b2-98e296885b71",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f418370e-0a4f-4826-9782-050f06fe7d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0296450-11cf-4d2a-a59f-2dc348806329",
        "cursor": {
          "ref": "c3d45f8e-4676-4573-bb8d-d5e558589172",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e063aa92-cbc5-41ce-9e19-56a12911c737"
        },
        "item": {
          "id": "e0296450-11cf-4d2a-a59f-2dc348806329",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "280a8547-b341-4519-bdd7-85702d9ed94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97acb5f9-4127-4f6c-a933-ab343bf8c5ce",
        "cursor": {
          "ref": "39c569ab-ced7-422a-a24b-6efe4b88f15d",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d4d56fe0-9faa-4a4c-88ec-fb4f44fe0450"
        },
        "item": {
          "id": "97acb5f9-4127-4f6c-a933-ab343bf8c5ce",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "36e7d67f-6a6d-4b64-87b9-67e1d2ca930d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b61f865-e7f1-4ced-8198-ae036a4cdd41",
        "cursor": {
          "ref": "6cc91f90-0044-4d15-8ebd-ff2367709521",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cae54f75-d9e5-416e-805b-714f2447839a"
        },
        "item": {
          "id": "0b61f865-e7f1-4ced-8198-ae036a4cdd41",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9e879744-0b23-4163-9d60-b0c4698696f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad2c06d-be40-40c0-96e8-7ab36e9df52d",
        "cursor": {
          "ref": "ce48041a-c8c8-4577-8337-5e49e67caaeb",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "40a1e9d0-2728-40b5-9fd0-32b8acd6f2fa"
        },
        "item": {
          "id": "bad2c06d-be40-40c0-96e8-7ab36e9df52d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "42b032ca-2ce5-4b7e-8898-488b62a3d4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d628781d-0d17-4c6c-b366-de0c65ce6289",
        "cursor": {
          "ref": "ebc3741f-33b7-4d83-90b8-a01a74df3152",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c26b1563-1292-45c2-9181-7012852473ee"
        },
        "item": {
          "id": "d628781d-0d17-4c6c-b366-de0c65ce6289",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "eaa31d60-b1b9-43ce-8119-944996b9508c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76978b41-0cc7-48d2-bef3-39df063c1d16",
        "cursor": {
          "ref": "355108ae-02a7-4f99-82c7-77873b93f902",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "08af9b8a-4d89-4353-bba6-6709346cf2ce"
        },
        "item": {
          "id": "76978b41-0cc7-48d2-bef3-39df063c1d16",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "55f991c1-c742-44a5-93b5-d84468551a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a516c0-3d86-4bc7-9e0b-9a3b3912a039",
        "cursor": {
          "ref": "c5b2a645-f537-4dc3-b353-cd85c4586900",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a4fc7296-d13b-4dec-a09d-9267eb735fd6"
        },
        "item": {
          "id": "e8a516c0-3d86-4bc7-9e0b-9a3b3912a039",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8d441c5c-a1e3-4dc2-8edd-3f26e8486de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec43580-1a90-4161-95ec-08c0f9b51933",
        "cursor": {
          "ref": "adfaab65-3279-430c-9c71-6c6c3175c57e",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8883b365-712b-4051-910f-d413ac4f3685"
        },
        "item": {
          "id": "7ec43580-1a90-4161-95ec-08c0f9b51933",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f103e0eb-9939-40fb-9e6a-d57d35aad945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce46c02-47ff-458c-881b-bbbc08c3ee6e",
        "cursor": {
          "ref": "eaa4ed94-a26f-46ed-993d-2f86b3c40ee8",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a52f94cf-4b5c-4c06-8488-ab0eddc1e617"
        },
        "item": {
          "id": "5ce46c02-47ff-458c-881b-bbbc08c3ee6e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "14f6e8b4-fe92-4bf9-94a5-aaaa3089a344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd958b6-3ba0-4e79-bea0-c578da362ef6",
        "cursor": {
          "ref": "cbe85b3b-ff03-4f82-858c-7b3c0970b36b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "41a902b6-eec3-41c2-b490-77473ea6e694"
        },
        "item": {
          "id": "7bd958b6-3ba0-4e79-bea0-c578da362ef6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c49fb343-3240-44de-a43a-03118876bfa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44677e4a-c82b-4d09-8a0d-bbc4f95ae598",
        "cursor": {
          "ref": "fe86e54a-75d2-4c56-b085-294e64b62ba3",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "286e75f5-a777-4082-b31d-8d56f4085783"
        },
        "item": {
          "id": "44677e4a-c82b-4d09-8a0d-bbc4f95ae598",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "15e7c4f5-8d3f-4576-98e1-f4d8c61e9166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2103a58-213d-41e5-9c0e-5956b4fb9cd7",
        "cursor": {
          "ref": "07b42f99-f371-43da-8861-44749a1c2d6f",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bbd4dded-a65d-4ea2-9389-6162a365872f"
        },
        "item": {
          "id": "e2103a58-213d-41e5-9c0e-5956b4fb9cd7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "00480080-067e-47aa-bb62-1a43566e478d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0be249-c59b-47bf-aab0-6b67f01095c1",
        "cursor": {
          "ref": "ace4eecc-1898-4e43-b906-de33afce499c",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5ebbdb75-d5b9-4953-8fad-041e492364f0"
        },
        "item": {
          "id": "3a0be249-c59b-47bf-aab0-6b67f01095c1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c4a0fec2-d426-4326-ae0f-17eece1581ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e43347-dc4f-4e87-9620-cb9c434ded03",
        "cursor": {
          "ref": "5bcebdcf-03d5-4a8c-baa3-6f2f8ac99ce3",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2c5bbdea-e986-460e-8e8f-f3b1a06d6296"
        },
        "item": {
          "id": "a4e43347-dc4f-4e87-9620-cb9c434ded03",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c7e8e750-edbc-4181-ad72-aa96995facd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be692621-b865-4618-b69f-2dc038ec6195",
        "cursor": {
          "ref": "ea442194-7dde-46ee-828a-a3a2cb47c8f6",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d6a54367-afc8-45ab-bd0c-8004f5d1c1ae"
        },
        "item": {
          "id": "be692621-b865-4618-b69f-2dc038ec6195",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "04453b65-e294-4f90-adc6-c7ee442d7418",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "72e689dc-edcd-4f81-9089-714be3450343",
        "cursor": {
          "ref": "a104d858-346f-473f-9844-0fe4b3d589cf",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4da8d77b-bc0f-4589-be8f-e4244547dc8d"
        },
        "item": {
          "id": "72e689dc-edcd-4f81-9089-714be3450343",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9f6ee4dc-e6d2-41d8-bd56-4ec1ec9f4bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb249fd3-908d-4ffc-867b-a7d38b25eef0",
        "cursor": {
          "ref": "7276bc8e-11ef-4295-b927-5537358caf39",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8c2682dc-d546-492b-9b63-f967d1046d98"
        },
        "item": {
          "id": "eb249fd3-908d-4ffc-867b-a7d38b25eef0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "725d98df-f771-4ff1-9567-1d5d2951a43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8a5538-dbca-4901-8578-5a1994245796",
        "cursor": {
          "ref": "ca57abce-0491-4fd0-9f38-e4b484288217",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "61805852-7951-4cf2-9533-570a878b6b7f"
        },
        "item": {
          "id": "cb8a5538-dbca-4901-8578-5a1994245796",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6f4c7cb8-df1a-466f-bb06-e576d9c71f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0ad5a5-e5c0-46a9-8205-922aadc0934a",
        "cursor": {
          "ref": "2c46cbc0-916d-40ce-af97-ffee86988841",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bc30ce2b-2f31-49b1-928a-164af8d9b2e8"
        },
        "item": {
          "id": "ef0ad5a5-e5c0-46a9-8205-922aadc0934a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "779fdcd9-5212-4206-88c7-8dbe37f6ac82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be109aa9-c04e-4d7f-b766-b3eba8f6b33e",
        "cursor": {
          "ref": "651ef62b-e883-46be-8e13-f089ef7f6cda",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a39b7a1d-7692-4162-8e2f-bc4d8a33a374"
        },
        "item": {
          "id": "be109aa9-c04e-4d7f-b766-b3eba8f6b33e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5a67a72d-3bdf-427c-9c18-db2d8cd1ba58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e7accb-af87-4349-adea-19e9f8f16379",
        "cursor": {
          "ref": "6839345e-6c4c-4dfd-9b4c-8cfe655abae3",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "da565b51-ebf9-4f62-8bc3-509c57fd2840"
        },
        "item": {
          "id": "e6e7accb-af87-4349-adea-19e9f8f16379",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "39c2129c-a604-4feb-b470-7a97940170b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c1596f-ace8-4d8a-8085-90fa5aeaaf6c",
        "cursor": {
          "ref": "40952f9f-56bf-4b68-b3ad-9316dc28e342",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8ea28be5-a0dc-4412-a522-6e7bbad66320"
        },
        "item": {
          "id": "48c1596f-ace8-4d8a-8085-90fa5aeaaf6c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e861fd5c-55cf-48f9-a5fd-d7e392177aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81566e1b-57c8-4d4e-a372-ef591b41664a",
        "cursor": {
          "ref": "5e90d208-88ce-4740-b3b7-b6c395144c55",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4c259ce4-5256-4481-991f-ccd2453abc49"
        },
        "item": {
          "id": "81566e1b-57c8-4d4e-a372-ef591b41664a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6678477b-f4fe-4137-b3ac-0c5d388f0562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f57f2cc-593b-4721-9a30-a3a15a914bf5",
        "cursor": {
          "ref": "09f88903-3571-407e-8e63-be630effbcdc",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "880e49c4-f039-48c0-b646-f6fef03a325f"
        },
        "item": {
          "id": "3f57f2cc-593b-4721-9a30-a3a15a914bf5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4e48f482-7cf3-43ac-acf2-6af4c805b370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8750f97-4f01-42c9-8f1d-99310ae760e1",
        "cursor": {
          "ref": "a868ff0c-68cf-446d-b67c-e6b4cddd38de",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "94f60770-25cd-40c6-a5c5-c97f9454742c"
        },
        "item": {
          "id": "c8750f97-4f01-42c9-8f1d-99310ae760e1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ac29997c-7727-4640-afad-977db2d28fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab6a72a-fd3b-458b-8124-8ed8318e2364",
        "cursor": {
          "ref": "2bbafe2f-f690-459f-9ff7-1af85dc4ab4d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f016d1ba-8204-45f3-a8f4-a53d27d3a1b4"
        },
        "item": {
          "id": "1ab6a72a-fd3b-458b-8124-8ed8318e2364",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1dcf14a1-8709-4f52-a1b9-7f2cc97d29bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42516fe6-5e47-4b11-8f21-500838ee1db8",
        "cursor": {
          "ref": "aeae3a42-b97c-4547-9908-17f167de4e39",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a2c6e585-296c-461c-8192-3d03e264f1b9"
        },
        "item": {
          "id": "42516fe6-5e47-4b11-8f21-500838ee1db8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "acb9e81b-9c42-403f-9662-d8094a2e470e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b8177b-72a7-4358-90d0-3a120c240a88",
        "cursor": {
          "ref": "364e365f-f02a-4c50-9083-7d98d33cd438",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "586c6276-2bc3-4d4f-ae0b-920b3e7f8e0d"
        },
        "item": {
          "id": "c9b8177b-72a7-4358-90d0-3a120c240a88",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "11c72630-e2cb-4572-b2fa-df801102bccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85b3ae2-00cc-4940-adcc-a0a08d40396e",
        "cursor": {
          "ref": "df7f5729-6c2f-42a7-ac37-19512061f677",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5f2ef978-19eb-4ad4-8985-22275bd587bc"
        },
        "item": {
          "id": "d85b3ae2-00cc-4940-adcc-a0a08d40396e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b915f55d-7f4e-4ca7-a70a-6303667bee8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07dd267-89f8-46b2-9eac-dd8e2c99dadc",
        "cursor": {
          "ref": "136b922f-d91e-43c9-88d3-7444341fc8b6",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e8a1c4b6-84a7-497a-8932-4c313b9bc4a6"
        },
        "item": {
          "id": "e07dd267-89f8-46b2-9eac-dd8e2c99dadc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2377937b-6351-4b69-b63c-cc8ff2a00220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79486995-6150-48e8-aec6-90427e0a4690",
        "cursor": {
          "ref": "3d86917d-aaba-4cc0-85c8-1070e9505d79",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3993a6dc-8d25-484d-a49f-0b2fb193bec7"
        },
        "item": {
          "id": "79486995-6150-48e8-aec6-90427e0a4690",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1d878664-16e1-4673-b804-f84291ca5f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37935856-d189-48c3-9f78-abe08f6ec49a",
        "cursor": {
          "ref": "813c0473-5417-4c7b-8f21-1007fb13992d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bccdfc99-24fc-48f7-8509-1d9ca30f43ef"
        },
        "item": {
          "id": "37935856-d189-48c3-9f78-abe08f6ec49a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "82b75d82-474f-49b8-b024-49e33e965f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea7e8f4-5379-4aea-9d6b-063914ef98d2",
        "cursor": {
          "ref": "7da1e1a2-f081-4fbc-940f-04525822da04",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "05eab1b6-c64e-4507-aa90-db928fb4620d"
        },
        "item": {
          "id": "8ea7e8f4-5379-4aea-9d6b-063914ef98d2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a2b77a31-8934-4755-b3f4-8286b3179424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa3b646-d394-4f9c-ad01-d1673f11dcf3",
        "cursor": {
          "ref": "b086f3a6-7249-4a65-830e-69d1f76edfdb",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f33e7af4-90de-4567-8cbe-c8bcf1c9568f"
        },
        "item": {
          "id": "0aa3b646-d394-4f9c-ad01-d1673f11dcf3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cac59dba-bb58-4d1d-affe-bc511bf4cf09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60426da8-cf96-4e4a-87fc-af20154b4e02",
        "cursor": {
          "ref": "f56f9ba6-344a-4119-acaf-310c9ea59e90",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3b45daa5-eaef-4413-ae95-c0b55bbeb57e"
        },
        "item": {
          "id": "60426da8-cf96-4e4a-87fc-af20154b4e02",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "72b1091a-b821-464e-b20c-c8f46ded9445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b743d3cc-8bbf-4add-a868-acbcaecad475",
        "cursor": {
          "ref": "6ae62cff-1bc3-45a5-9189-d24dae64ea3a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "53921321-0dbc-4703-8a02-40161a24630b"
        },
        "item": {
          "id": "b743d3cc-8bbf-4add-a868-acbcaecad475",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3610b578-4c5e-4a8f-9631-b0afa6880f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0414aa57-f97e-48b0-a107-876e8e042f5e",
        "cursor": {
          "ref": "a95649ba-fafd-441c-adcf-72675e56f028",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "96f9280d-56db-4b10-950a-8ac1d5f37b9f"
        },
        "item": {
          "id": "0414aa57-f97e-48b0-a107-876e8e042f5e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "283e4d54-3fa6-474f-9d87-9afee5f90e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d50a5f-0ff1-40de-b83b-8baa75047f6a",
        "cursor": {
          "ref": "93f36563-66c8-4066-ab41-e6b5badd20f8",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8445620a-ba88-4465-8f12-2e53ef68d93d"
        },
        "item": {
          "id": "e4d50a5f-0ff1-40de-b83b-8baa75047f6a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2a479447-f2e4-41e4-9b5a-bb35115b3042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef806db7-68e8-4e1e-9d8d-f5b09aeee8ad",
        "cursor": {
          "ref": "797abcb4-1225-43a3-8af2-f72aad8b4b57",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f28aa057-8c12-44ab-a102-012207c2d804"
        },
        "item": {
          "id": "ef806db7-68e8-4e1e-9d8d-f5b09aeee8ad",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8b2976d1-31b8-4fca-94f3-36f169a3872f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88be0002-0e12-499e-87c8-50ac8a1f2283",
        "cursor": {
          "ref": "07cc0e3f-3c9c-421c-bda0-8d6d9206ec72",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "11478d9c-99c2-4a5f-a5f3-8d0803db5b9c"
        },
        "item": {
          "id": "88be0002-0e12-499e-87c8-50ac8a1f2283",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "13cac3a0-53f7-4145-a641-ad7fd348667a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37b845e-b128-45af-b852-ee9b850d27f8",
        "cursor": {
          "ref": "45fdee39-a492-4f44-b3c8-09fc3d0ce4b2",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "463196d7-54f9-47c4-830a-f3ef8208cab0"
        },
        "item": {
          "id": "a37b845e-b128-45af-b852-ee9b850d27f8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9ec64deb-5767-4e9b-b344-0b0bc66c20bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d16fac8-c8f0-4892-b8d1-c4485b9474f5",
        "cursor": {
          "ref": "9eb6ca88-9654-4fdf-8be6-bc8d7f63ecf8",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5807f4f2-44bd-4c2f-8e33-4ba3b9c4337c"
        },
        "item": {
          "id": "9d16fac8-c8f0-4892-b8d1-c4485b9474f5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "dd6a918d-5882-48bc-83bc-e787e4939cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75136475-1681-4a48-aaf3-334211c6acd5",
        "cursor": {
          "ref": "c27d50d3-8e3d-4238-a008-d7ba5263b5f7",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2ef9e03b-31e2-4d2f-bf7e-0bfcff06ffc8"
        },
        "item": {
          "id": "75136475-1681-4a48-aaf3-334211c6acd5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "95e23880-c681-4a2b-8058-136f9423f144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed77a6a7-5546-4d5c-a4ed-d8d4daef7cc5",
        "cursor": {
          "ref": "47f1f958-5a1f-4b57-a528-c55938a1a572",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c4c0f06b-3021-44e2-98c5-dbecea36c909"
        },
        "item": {
          "id": "ed77a6a7-5546-4d5c-a4ed-d8d4daef7cc5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5fefe182-0861-4aac-a1b2-e8d106806873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419d8ed5-2e3c-486c-8ed4-a3be653a12b9",
        "cursor": {
          "ref": "2459b731-c964-4769-b178-49ee41e093c0",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "65d01a62-11c7-4e49-a36f-6ce154d45541"
        },
        "item": {
          "id": "419d8ed5-2e3c-486c-8ed4-a3be653a12b9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c327201f-add1-4033-9ddc-f80c9a9b3fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842a8d63-9f7f-4ff5-944a-7d46f23ce37c",
        "cursor": {
          "ref": "57458927-312e-4c39-8a3e-af60f4f90a7b",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "585cba53-0bc6-44ac-ab79-40a64f05fbe9"
        },
        "item": {
          "id": "842a8d63-9f7f-4ff5-944a-7d46f23ce37c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "60d06a1c-1282-44e9-8de7-ebc3976a694d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef7d86a-2bce-4027-a443-2ea9a1ea1480",
        "cursor": {
          "ref": "07ef55cc-2c06-427c-8078-98788a8a5ebd",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5d9f8ce1-3834-4f15-8514-f5a706d155a8"
        },
        "item": {
          "id": "eef7d86a-2bce-4027-a443-2ea9a1ea1480",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "853c99b0-6e78-469b-87c2-3d891bc58bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca2dd01-b54b-47e3-bd99-f2d5116f5ab3",
        "cursor": {
          "ref": "d02afe51-d5a1-4fca-b6f0-17b31d4e6f51",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "44df63ff-e7b3-46a8-8a9a-285321ba4c80"
        },
        "item": {
          "id": "7ca2dd01-b54b-47e3-bd99-f2d5116f5ab3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "509f938e-7d13-45b0-a5cb-e8ad63b85c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91229a9e-8e1e-4fcf-9c75-884fed98a590",
        "cursor": {
          "ref": "17e0322d-267b-43c6-9f24-67a34ee0cc33",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c5ae116e-2e97-481b-a79b-5c20aa5b18ea"
        },
        "item": {
          "id": "91229a9e-8e1e-4fcf-9c75-884fed98a590",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "471a0ca0-4557-4298-a2ee-c0a619b8323a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053bc7ff-c449-4e4a-92f3-73d329b51e09",
        "cursor": {
          "ref": "a284cde9-6934-4705-876e-ef78aecb1cdd",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "980eab3f-416e-46c4-b014-aa01edf8427c"
        },
        "item": {
          "id": "053bc7ff-c449-4e4a-92f3-73d329b51e09",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ffa0ad75-83b8-479a-8ca2-3c4e8dc1c7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f188421e-4f37-4af3-b85b-655f370a1f2e",
        "cursor": {
          "ref": "58274b6d-a53d-41ce-8cf7-3a0989bbf5f9",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e1a58f92-ca7f-4139-aaab-fa81f68fb2f7"
        },
        "item": {
          "id": "f188421e-4f37-4af3-b85b-655f370a1f2e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4bac6582-6e25-4fa4-bae7-761ba7067325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051b67bc-25ef-4a6c-a2b8-05ce2d65239f",
        "cursor": {
          "ref": "da94530e-7daa-4c34-897f-0519f8edf399",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "53ba814e-490b-4bba-b815-1236618ca673"
        },
        "item": {
          "id": "051b67bc-25ef-4a6c-a2b8-05ce2d65239f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5f5bab0b-5b44-440b-abff-97ba8a4f1e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4070d1-097c-47d1-ab15-bdb82acb8195",
        "cursor": {
          "ref": "00518068-64ad-4e07-bd2c-17d2b01c258f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "27eaba4b-1e9d-4253-bbe7-464fe5b425f2"
        },
        "item": {
          "id": "9d4070d1-097c-47d1-ab15-bdb82acb8195",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2fb8e86f-92a1-47cb-ae6c-470886d9f6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4301201c-d799-49d0-80cb-a5260ecef6d1",
        "cursor": {
          "ref": "422c4b90-630f-4206-8002-3c96f44c1606",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1e361a04-4483-41c1-a6b6-f1dd0320d915"
        },
        "item": {
          "id": "4301201c-d799-49d0-80cb-a5260ecef6d1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "58ddccc7-8ec2-4341-b534-a996ff5ddf44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc87a060-fae7-49ae-8779-624a95a7787d",
        "cursor": {
          "ref": "a0d6f04b-712e-4bda-a3a4-cc1162a9dd3b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "03929913-c07b-4de8-bfda-ab5cd611c0ab"
        },
        "item": {
          "id": "fc87a060-fae7-49ae-8779-624a95a7787d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ebab9d23-ee58-4887-83be-7da1615bdb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cefa94-81e9-448e-8f1b-88ddad1daf6a",
        "cursor": {
          "ref": "c7b2d61c-5362-48ba-a260-c167802d824f",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c286a78d-5a7b-4635-b37b-d1b1217f6b9c"
        },
        "item": {
          "id": "b4cefa94-81e9-448e-8f1b-88ddad1daf6a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "748882bb-aae8-4c29-a9b3-1b95be35c67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fc8d98-b997-42c3-a055-1dbd342e86a9",
        "cursor": {
          "ref": "d0655b95-f5d7-428f-a648-e86be0133ae4",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1b4a0f1e-59e7-45b9-9155-92764a01ae6e"
        },
        "item": {
          "id": "f7fc8d98-b997-42c3-a055-1dbd342e86a9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a1015c93-cedc-435b-8d47-5943402e6cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182b2a0c-690c-4782-866f-932e1c2e8228",
        "cursor": {
          "ref": "34f4a745-8e41-4dd0-92a6-5ce05d62a70d",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c812341a-206c-4f1c-837a-cdb62487be2d"
        },
        "item": {
          "id": "182b2a0c-690c-4782-866f-932e1c2e8228",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7762e12e-4f24-4388-b5c7-c6e64c6de04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5587595-f8f3-4082-ad99-e16675beedc2",
        "cursor": {
          "ref": "478e42f8-511a-4567-be91-b678f7913c3a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "10b90fdb-ca1d-45a8-b127-b4881906a146"
        },
        "item": {
          "id": "e5587595-f8f3-4082-ad99-e16675beedc2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ff09d539-9ed9-440d-be6c-6935fcf34d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8f9d19-c13b-4859-98b4-276bba49414a",
        "cursor": {
          "ref": "f0d04ffb-8654-43dd-9a69-c4bf7e27be8f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "cc7e3e28-9a27-49a6-a9a0-b39bda4a07a4"
        },
        "item": {
          "id": "8c8f9d19-c13b-4859-98b4-276bba49414a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f70cc47c-eff8-4339-b1ad-e7a61c64c183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09033339-39e8-4bb3-b00f-190c36e0e520",
        "cursor": {
          "ref": "d0c09821-d787-471d-9a66-4a50e73b3a48",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7697e9e7-9a33-4b50-aa7e-1171f73611fb"
        },
        "item": {
          "id": "09033339-39e8-4bb3-b00f-190c36e0e520",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ed411fb2-e27c-4669-b177-ddc133a64c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd84a04-f976-4e87-88c4-5b8a29d487b7",
        "cursor": {
          "ref": "31170786-c261-4833-90a5-5f49c01286bb",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7a7a229d-6c03-4290-8cf3-542558ae688c"
        },
        "item": {
          "id": "acd84a04-f976-4e87-88c4-5b8a29d487b7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e8a5a31e-3a0a-46c7-a33d-4de08d1f8e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efb6eb5-7ee3-4c45-a25c-ff2a576129b2",
        "cursor": {
          "ref": "bb36037c-36fa-4f6e-b208-420ba053b0c0",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5c99277d-7ba3-425a-be22-a680276e6c2d"
        },
        "item": {
          "id": "8efb6eb5-7ee3-4c45-a25c-ff2a576129b2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c8e5fd7e-5618-432f-8c82-dc36a34f7755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc48994-fcfa-4910-aff7-4b583ffe05b9",
        "cursor": {
          "ref": "f3e4d6f1-f866-4581-b079-b2882032e22e",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "99f6ab5d-21bc-4c08-b9ca-e6ebb6dc57f6"
        },
        "item": {
          "id": "7fc48994-fcfa-4910-aff7-4b583ffe05b9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9509ced3-11dc-4d94-ad6e-3fc7a54ff1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a05a41-732e-46d4-8cbb-a41062e2a1cd",
        "cursor": {
          "ref": "a1044b78-58e8-4d41-8823-8ef1f2ce712a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7f863cc4-d7b2-4062-9978-780912788681"
        },
        "item": {
          "id": "d0a05a41-732e-46d4-8cbb-a41062e2a1cd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3b0db405-335f-419e-9f1a-5135c4fc6973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9acb9e3-b246-4f95-be2d-8d17fe51c5ab",
        "cursor": {
          "ref": "ec0b68b6-06da-4ec7-8d01-25828219a390",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "446a960e-c702-4264-9a71-571acf78d131"
        },
        "item": {
          "id": "c9acb9e3-b246-4f95-be2d-8d17fe51c5ab",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6ba72f17-3346-4282-9511-796152410a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f81807d-51b0-4aba-a083-e1317cff4a69",
        "cursor": {
          "ref": "9a46dc3b-6471-42d9-b3e9-de54c1e2b894",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "71afc81e-b774-4521-9181-d17b24b1830d"
        },
        "item": {
          "id": "3f81807d-51b0-4aba-a083-e1317cff4a69",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8c6a084e-34fe-4e42-9363-64187b649cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5ff9d5-ee31-486d-af6b-fb638a55e1fd",
        "cursor": {
          "ref": "fe72da62-a62e-424d-8f9c-032ba2def112",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fcdb0702-cda5-4a38-8365-b9a7eb9ce083"
        },
        "item": {
          "id": "6c5ff9d5-ee31-486d-af6b-fb638a55e1fd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "be57e0ff-4da1-4d3e-a892-498f95ab0084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ead5af4-6426-4161-bdbf-26a2a0704daf",
        "cursor": {
          "ref": "5b9c2265-766a-42c2-95d7-0eec1cb2c051",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ca75726f-fe42-45de-9dd0-eca0b091eced"
        },
        "item": {
          "id": "7ead5af4-6426-4161-bdbf-26a2a0704daf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7e5b5a8e-f692-40d0-a5d2-7290233c5d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f895ba-d8bc-4ba6-ac78-d92e1fcb0763",
        "cursor": {
          "ref": "97b1deb4-9467-4e35-97b8-e4599ee2a7a7",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ccf25bd9-6c1c-4b8e-9f86-b364d29b1b61"
        },
        "item": {
          "id": "d7f895ba-d8bc-4ba6-ac78-d92e1fcb0763",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3d6776ba-4581-4c30-9d7b-e1c79fb90461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8492f89-85d5-45c1-a253-04e7a0b2b6bd",
        "cursor": {
          "ref": "fa330b8d-0a17-4671-8363-e29311822468",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8bf140a5-7fdf-4ab1-a0da-d1f600b733f5"
        },
        "item": {
          "id": "b8492f89-85d5-45c1-a253-04e7a0b2b6bd",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "60b6794e-8537-41de-89ed-58b9ab1ffffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fe2dc0-b5d1-4bd5-ba37-2e366abaacfd",
        "cursor": {
          "ref": "3e3f56c1-09ef-4cca-a729-9b194452601f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "130206b2-ee2b-4709-a98f-b4294b946129"
        },
        "item": {
          "id": "c0fe2dc0-b5d1-4bd5-ba37-2e366abaacfd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "186829d6-c564-4ffd-b8ec-f2390290b004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0c1e75-0315-4d77-9292-0626bb1268bf",
        "cursor": {
          "ref": "a1cdafb5-5652-4750-b75f-4ad1f38fc7a9",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2e460892-9e2e-42d7-8ab2-7d2c9faa4025"
        },
        "item": {
          "id": "2b0c1e75-0315-4d77-9292-0626bb1268bf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bae687fe-200b-4967-8738-6fbdacd8f0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36176ca4-e857-49ec-9b20-b0cc94de206d",
        "cursor": {
          "ref": "ea6438b8-4411-4f8f-bc6c-7092dd1e748e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c3b7fb91-9234-4be2-ac1d-214e51acf3ab"
        },
        "item": {
          "id": "36176ca4-e857-49ec-9b20-b0cc94de206d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "46ff2985-faeb-49a9-834b-7794f52dc56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270036e6-e5b0-43b4-af5a-f9c93dd37cb2",
        "cursor": {
          "ref": "4e159df0-b23c-4223-8e37-899ca402d118",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ca78de05-2d54-4552-a03a-259fa12fd054"
        },
        "item": {
          "id": "270036e6-e5b0-43b4-af5a-f9c93dd37cb2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8f88c3d2-55f3-4f43-82e4-9b798a2af19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a932940-7ae6-4d26-a051-d31399fd27b0",
        "cursor": {
          "ref": "4329af2e-8b67-4dea-85cb-3270f4548d4b",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "182f0662-57c5-4232-ae0d-251ba2c86795"
        },
        "item": {
          "id": "8a932940-7ae6-4d26-a051-d31399fd27b0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1f95bf1d-b5e6-4c98-92ac-4dc4be18b163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e83dd6-8f71-4b32-995a-2df75828641a",
        "cursor": {
          "ref": "1c669f8e-6a82-4154-b15a-eec4153c76ca",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d7db3f2e-f4a5-4646-958d-edc27800a024"
        },
        "item": {
          "id": "a6e83dd6-8f71-4b32-995a-2df75828641a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "78c66bdd-6f54-44d4-afbd-97293a3f8d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09008ad-416a-4aaf-9750-b6e3b031fce0",
        "cursor": {
          "ref": "d1bce053-ebbc-4c06-9727-2ec391062d9a",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f1e30fb1-180b-4764-9c57-d63fc09fc713"
        },
        "item": {
          "id": "a09008ad-416a-4aaf-9750-b6e3b031fce0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6c7f2fb7-1aa8-4607-8f89-ebb286ed40da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b5e36d-98bd-4e5b-9d2f-b8ccfbedfbf8",
        "cursor": {
          "ref": "f794bdc2-0336-4961-9057-80758d34ddc7",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e9fc383e-2389-40cf-8a98-40a436921089"
        },
        "item": {
          "id": "76b5e36d-98bd-4e5b-9d2f-b8ccfbedfbf8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8313221a-a09c-4b2f-81da-c4af767e6096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6888dec9-3a89-4612-87dd-2470940ef1a2",
        "cursor": {
          "ref": "9eca46d4-0c8b-4b48-b6c3-edee902fc744",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "99837c82-2f52-4719-965d-ef01f188f949"
        },
        "item": {
          "id": "6888dec9-3a89-4612-87dd-2470940ef1a2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a39d89d5-6c22-4d82-904c-f2c1c552c9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8ef112-5272-4db8-8f65-ec44b23c9f08",
        "cursor": {
          "ref": "fbdad33f-a649-4c08-af52-9ec50cec9ea6",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2d2a9ec7-efc4-4a57-bffd-5a4ef9e70add"
        },
        "item": {
          "id": "5c8ef112-5272-4db8-8f65-ec44b23c9f08",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c4629509-5101-4522-b421-81478e01046e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9951fa75-2445-4a54-9c9e-26ec77b8e8c4",
        "cursor": {
          "ref": "c7c2a4fe-8f3d-4cc4-8db4-2c3666853178",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "694b14b8-8889-4b6a-8b37-8ef5c3795c9e"
        },
        "item": {
          "id": "9951fa75-2445-4a54-9c9e-26ec77b8e8c4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "517f7ce6-94c4-4630-acce-b0be257db43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afb6184-2c23-48d1-8578-fbb2ec766169",
        "cursor": {
          "ref": "ae820846-6561-476f-9de3-696ebf215d2b",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d5c69ded-c209-41cf-a6a7-ccf1808b4473"
        },
        "item": {
          "id": "0afb6184-2c23-48d1-8578-fbb2ec766169",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "65c3cd2e-af85-4b3f-afab-9aef81885e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5704bb44-7c1a-4851-904d-8be903ea710c",
        "cursor": {
          "ref": "12718841-0c8c-42a0-ab01-d8c6ef41e400",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ed641171-1982-49a7-83ae-b70982d2c0e2"
        },
        "item": {
          "id": "5704bb44-7c1a-4851-904d-8be903ea710c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9d2638cf-9857-4b9b-9485-9b18fb39a524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7cad85-7b1f-4022-a725-6399f85dda05",
        "cursor": {
          "ref": "211df675-4751-46eb-8193-ae3c2da5611c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "72283cd7-b3a8-4a95-90f4-f599d96ebfed"
        },
        "item": {
          "id": "2c7cad85-7b1f-4022-a725-6399f85dda05",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4db2b611-1f80-4c0c-b929-b43ac182e01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32020c56-b422-4457-ac4a-98d8b5d026f0",
        "cursor": {
          "ref": "10c955fd-f107-44a1-8c89-4c9f2c418b42",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "8f700008-e171-4786-b49f-b6f4ca9aab82"
        },
        "item": {
          "id": "32020c56-b422-4457-ac4a-98d8b5d026f0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c077db9e-4d18-4bae-9ffe-2502bd918d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309efad9-f3f3-405a-a7d3-caba1e9636de",
        "cursor": {
          "ref": "a5976c2d-c2df-4f1d-84e7-c7bb68777716",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "997be72d-65f5-462b-bcf7-e4014a5c44ad"
        },
        "item": {
          "id": "309efad9-f3f3-405a-a7d3-caba1e9636de",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d13d2cdf-f2ed-4465-a0ee-6aca0eea3a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7bf6f7-6e59-4eb3-816c-41e58553a263",
        "cursor": {
          "ref": "a09e8c00-0439-4616-94ed-466554aac587",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "259b6a1d-53c1-4ae2-9ef5-7e5351e34612"
        },
        "item": {
          "id": "cc7bf6f7-6e59-4eb3-816c-41e58553a263",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "272017da-48eb-4c49-a0be-4b05cf34ef1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7705fc31-64b5-4270-8acb-a22c98ca2bdd",
        "cursor": {
          "ref": "ecccdc66-66a3-4ce5-98bd-c824cd827132",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "feae2a63-a8b1-4c59-9269-31214afcc2f3"
        },
        "item": {
          "id": "7705fc31-64b5-4270-8acb-a22c98ca2bdd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "27dbad16-af44-4c19-8766-be5c0766ba36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98d39d7-83aa-4d2e-9400-969e2355345a",
        "cursor": {
          "ref": "92a63584-47d4-414c-aaf6-eeaafa3f2195",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b4e4305e-eb43-4e8a-bc51-27bd94b08706"
        },
        "item": {
          "id": "f98d39d7-83aa-4d2e-9400-969e2355345a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "acc0d85f-c2c9-47b5-9bf6-299b1d6da375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc78299c-5908-4fa8-9dee-47ded1f04d43",
        "cursor": {
          "ref": "04b64098-2e76-4f89-a173-f16d84f20246",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a2751f88-7ff7-48ce-884f-70e9a09a338d"
        },
        "item": {
          "id": "fc78299c-5908-4fa8-9dee-47ded1f04d43",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "45eb4894-7d2f-4eab-871f-acd31cf376e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781dfecd-6d48-487f-b0df-b49483ebab9d",
        "cursor": {
          "ref": "c9f48aab-8f76-4183-a81d-8111f4f47363",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e06ea422-7362-4bc8-9f34-4b99aee220e5"
        },
        "item": {
          "id": "781dfecd-6d48-487f-b0df-b49483ebab9d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "15ceef79-48f2-494a-b0e5-6fa3278f0820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a567e2-a022-4c88-8350-a0f3e466dc70",
        "cursor": {
          "ref": "3b1b2d10-d459-4ece-b4bf-c721a61ade40",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "468daa6a-047b-40e2-b983-8225c8a925e4"
        },
        "item": {
          "id": "92a567e2-a022-4c88-8350-a0f3e466dc70",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b0c33878-981d-4c26-a69e-93a396cbd82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7722be64-34ba-4e25-8598-630ed85cba88",
        "cursor": {
          "ref": "8a3a2eb1-a941-430e-b140-11e627c7e8af",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0a77b05b-4d3e-4ad1-943d-0bb7b5c0cdd4"
        },
        "item": {
          "id": "7722be64-34ba-4e25-8598-630ed85cba88",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7d19f60d-84e7-4197-87ef-6f4874d69192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c820548-cfb7-4691-b1e8-da1f44fbd38f",
        "cursor": {
          "ref": "13e97e6c-f8fd-4b5f-83ac-1b3d0a97bbc9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6f52ec30-b74e-440e-ba68-87dcfd28ecee"
        },
        "item": {
          "id": "5c820548-cfb7-4691-b1e8-da1f44fbd38f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "edc29a86-2f98-49a3-a882-3def764095ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9dfcd0-baf0-44cb-8048-2ac95702138a",
        "cursor": {
          "ref": "da24ff98-afad-4595-a370-0e4667224bc8",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e44b769b-fc05-44c9-848d-fa6fbcd8f5fb"
        },
        "item": {
          "id": "8c9dfcd0-baf0-44cb-8048-2ac95702138a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f582686e-8294-45e3-ae7f-73749c43f615",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da540163-f737-429c-8279-08c785a85975",
        "cursor": {
          "ref": "9c032767-ea3c-46d4-a029-e066e7a8d299",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "45860655-16d5-4884-ac2a-3b647de285a0"
        },
        "item": {
          "id": "da540163-f737-429c-8279-08c785a85975",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9c032dbb-3e8b-4444-987c-b3a64b968167",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4850638-67ca-431c-a099-093aae88251f",
        "cursor": {
          "ref": "34c0c9d0-4384-480f-96b7-294fbcf23750",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "27b26665-4606-44de-a3e1-cb81ce61065b"
        },
        "item": {
          "id": "f4850638-67ca-431c-a099-093aae88251f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "57be2782-a29b-4794-a823-9a2048095641",
          "status": "OK",
          "code": 200,
          "responseTime": 3260,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6057866-a08c-46c9-8a9c-cdc8eace3af6",
        "cursor": {
          "ref": "87a190a5-8f46-4cb6-8db0-7ea457a91181",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "91f22c46-8056-42c2-ab59-f74d615aa121"
        },
        "item": {
          "id": "c6057866-a08c-46c9-8a9c-cdc8eace3af6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3a9cdc3a-387b-4e3f-a66e-1fa8ee0e4d94",
          "status": "OK",
          "code": 200,
          "responseTime": 2686,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7421d8b8-1543-4e8f-8863-dff31fa8a098",
        "cursor": {
          "ref": "3be4573b-e8a9-4446-b885-e57fa09bbadf",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cb6381e9-aef2-4b40-9f9c-7fc4ef5216c2"
        },
        "item": {
          "id": "7421d8b8-1543-4e8f-8863-dff31fa8a098",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4b9aaa7a-6ef0-4ad9-ab2b-a4a6631455c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7421d8b8-1543-4e8f-8863-dff31fa8a098",
        "cursor": {
          "ref": "3be4573b-e8a9-4446-b885-e57fa09bbadf",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cb6381e9-aef2-4b40-9f9c-7fc4ef5216c2"
        },
        "item": {
          "id": "7421d8b8-1543-4e8f-8863-dff31fa8a098",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4b9aaa7a-6ef0-4ad9-ab2b-a4a6631455c8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50022796-23ba-49a2-a099-60ac1f5196f6",
        "cursor": {
          "ref": "31a29cd0-92b5-4adb-a6be-719af53757a1",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3f429b4d-4a3a-4652-9925-a43ba75963dc"
        },
        "item": {
          "id": "50022796-23ba-49a2-a099-60ac1f5196f6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "08bac780-08cd-48c2-b519-61e9a427d27b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f829ba54-022b-49e9-beca-31dbeb6b6745",
        "cursor": {
          "ref": "fd730c7c-4ec8-4935-85d5-a857af1befeb",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e51e688c-4077-4d85-85dc-74dd7800904e"
        },
        "item": {
          "id": "f829ba54-022b-49e9-beca-31dbeb6b6745",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bae81ee8-84b0-45af-9493-16683c4faea5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 177,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}