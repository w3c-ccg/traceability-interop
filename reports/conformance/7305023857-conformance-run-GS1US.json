{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "67bc6719-5d94-482e-bf21-9969dae04eb7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "636a63c7-c3cb-4131-8a5d-d9fc05121a12",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "94003ccd-dde2-4f0f-bc07-3de6f58a7d3e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "678b921b-0a7e-4c09-b6c2-24fb8316f521"
                }
              }
            ]
          },
          {
            "id": "3b4c905e-29f1-4fdd-b15f-4919c6d78d5a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ccc940f1-408b-42ee-84e8-f9705e340b30",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "43f840ac-38c1-4f29-acec-98ef5269b156"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ea9abef5-e88f-4ab6-a5b4-42b58e0fb0b9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "158271a7-4a0e-4bed-92bb-df845da8667e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a57fff88-4a3f-406f-acb7-0573d467fcb2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e6069bc-323e-49a9-84f7-86b219513de1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80eb8cfd-a3bc-40fe-b724-5994eab78b36"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed2730b8-dd21-4dcb-9321-e5df5baf6189",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "45f61211-45cf-4701-9499-4865728770ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "89016c34-b6e8-4485-9499-78fcff9bccdf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ab9dfca-e2b9-4434-974b-51e0482145fa"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9a442a1-df97-40f5-ac5b-830a2802cf19",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2ae50922-0e57-4f04-ae7f-e89b8095b772"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84436796-9e87-4325-8a62-3ca2efc1b11a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14930067-01d6-4df9-b357-8c41c497f765"
            }
          }
        ]
      },
      {
        "id": "b6bd3fff-52e2-4c23-8c55-d977f5c356b7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "be5a3b7a-472a-486a-8b10-1cc1666a3f65",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d952ce64-d82d-4ce3-8d16-2d169aca0f59",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5286fd52-329e-41c2-9fe5-e30ca540d2c6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53af7dc2-2e5c-4201-b480-3734fac5b6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7752b4e4-331f-4c63-a2de-19c75d4ebd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443c2e14-6f97-42d5-9b6f-ba8af2eaacd6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a140f8e1-3655-497b-946f-6357a2169241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4b9d1ce-f999-4fa4-bafa-11296ed817d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6feded3-4275-4fc2-acb9-ee63da4b55c6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f842857-fd3f-4c60-92a6-41bcd60ec440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8117b36f-6f18-4ec1-ae2e-3f2e3217c841"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c430928c-0219-4bb5-a8d1-36d8e4d373ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6fa5da8f-3bc0-4ab2-9be1-60294290786e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc18f212-5d5e-41b2-a9bc-397593e7fcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdad5198-6f19-44e1-b86f-d4a57ac5d5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695f7519-0290-4123-a2f9-3b992320ffd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd275f76-95b4-4b8f-8c57-7f75795884d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dc36cd8d-1b24-4d7a-98c8-899e8fc44df3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "29569c85-d261-4d26-ba49-48def5297ba6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7de8337b-c17f-4a95-8fca-30ac14aa77fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a07618c6-3caa-401d-9a90-7051884838b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c3194e0-b179-486c-a027-c0cfa4837d3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bc5f7e1d-a795-42f2-9d34-90a3ee9ebe43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2191c07a-3754-4d46-a53e-785fb4693440",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7d0f6d6-afa9-4c14-8e84-e5a127ed499d"
            }
          }
        ]
      },
      {
        "id": "43addd05-5361-42fd-9250-44d76e301f0a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fbe6aca7-0110-4043-a76f-64248e0dd938",
            "name": "Negative Testing",
            "item": [
              {
                "id": "245d4397-7d40-43c7-98d0-d4e2820b63fc",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "56b5ddbb-aa66-4700-9842-43d78d72cc73",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a10d047-36cd-438e-b408-42a474b54f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb2a969-1513-4c21-8875-ed362d1aa74d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc31629-a315-4ff3-a6e3-8863170344ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ee0d9dd-02dd-41ab-8453-4bfe8da81553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca0aa55-697b-4f6a-940d-4fd2cb985348",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e61f8d8-5c34-439f-92c3-1621a6e9a4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0388e26e-c8cd-459d-9d80-c2af972b860b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41efab4a-ffc0-446d-8791-08d2c8d543c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa0f448f-e607-403c-928f-2a4a6f59c1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13383db-2eff-4353-9520-469dbc84dd49",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622c018f-9b98-4335-800f-e02279a2ea67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548b780f-8b00-4829-bbfe-21ebed711437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fe9d5a-f8de-4206-a54f-6b85da86afd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e84af938-f684-4853-be04-7f316e43fe20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b490f795-c843-42e6-83fd-95ecde572242",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bb6106-8cbd-4a1b-936b-d1f4d9c2b864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e947a1ab-8a00-4afe-938e-545cba17a686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdba096-f81f-4fd4-9360-8e4315b463b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68701cf9-a5eb-4807-aa32-d55bdc207c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a8c86b-e932-4ce4-bc5f-d5be61a5ca2b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee17919b-94fa-4c7b-9634-449053ff4197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e22775c-8673-46b4-8e8c-be7be6e4333f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7832fab4-3d82-4cea-8f5b-dd56733ea38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2df9080-f542-4171-b781-238e43c1f3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df82d790-f65a-45b7-9400-a9b35557490f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fa24bd-35d9-464a-91df-542461b807c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd94bcd-18ff-40aa-95dc-da0c3b70c8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f069d63-3f37-4e9b-beae-a1c53514ec89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad40819f-4a62-4c42-9816-7209f8ee230b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4236769-8920-4d56-a4e8-2833227f4bae",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef8e9f7-4423-45b4-8e11-9c7ae55bfce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ae38ac-4765-431d-9106-666b9191996e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763630e0-01cd-4a6c-807f-ef508a8e3ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fe11614-0445-4490-945b-7292fe4588f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce105a4-5ea9-47cb-97b0-5dd28c720ffe",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d094f22-73a8-47b9-84b7-2791b117bb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a6377e-952d-41e7-9fcc-234c267de5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c00b5d6-cf32-427e-b18b-03b5507c272a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "795b6cad-c67a-48f0-b845-feff3b7148ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4bd496-33d8-45c4-b0f1-ded9e2de04d4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaac5e8b-7347-40f0-a7f1-9856ebfa8fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e066d79f-2099-4833-b224-f806b2f059e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d26364-13fb-4fbe-a057-5a5f522529d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daa621e8-7dca-4304-8dfb-7c52c0f8f228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d2244f-12c3-4741-a158-c768ab7503ba",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a25b2f1-fc29-462c-aa26-b1b0c7df21b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9087d09c-2f1a-42e0-9d68-f04d40ba827c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b5e47f-f2ae-448a-9f76-d61d411a1355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d2bb7d1-6ea1-429b-bf9e-3b68692a29ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b286fc2-d32a-40ed-ac4d-60443659e3fa",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2efd39-8f24-4b05-8245-083efdcce957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a63208-b047-471c-899c-d283686286f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417e756f-f221-4986-aeee-1bfdc548fcc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a40c54f-d525-4729-b4b1-e59409f909f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7d320d-f263-4aa8-a064-94b0aa6a364d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4046fc6-a1f5-4bb9-952a-a145b8abebf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a38460e-fce0-4bbe-97e8-072f7b8f4d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724eec74-e6c0-4d53-9ec2-470646a7f7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6edf4277-b0ad-4321-88b5-6e28d03058c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b6e205-09a0-4411-a520-a25250b177e1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c21fa1-404f-4d1c-b597-ce4fb071fd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c61836-4e5d-4f85-ae36-6576c1d84ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc6515c-0ca0-407f-bf88-a0b98123a17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17987c19-45bd-44fe-82e9-4ed4b39635c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01911a12-d858-445c-ab92-7cd6f8151633",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff8a40d-76f1-405a-91b9-37f96090830e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f748b15b-d885-4a55-b558-58a0e64badbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c35736-7f5e-4943-b04e-cbac6283a444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c684c5ea-d910-4c12-954c-8be1b900f473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7134040-29de-49db-bb6b-9d261e11a58c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf80012-5255-48cf-b764-c59bad7c3dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08daa2b0-77b3-47ac-8970-a5733e17cf77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c977a58-f594-4e1c-8117-50bab3f5124f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d3b306b-2033-4f1f-afba-cdd0c589440d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7db624-0da1-4762-9039-4ecc008c431a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f49a89-2449-43ab-8f36-a71d9e1a59db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97de608-a29d-40ff-b913-569f34b728a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8fb27d-c179-408e-bea5-5b32a2ac2252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7976b2c7-f32f-4fae-b1e9-2b3588c12b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff4bb9c-ae68-45c9-8216-c1d00f5eac84",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22daf643-3693-4f55-b072-45305da7bf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211ab317-db02-4b4e-9688-b8985de7ccac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18231b21-f32a-49af-8ce3-c85eff65b1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d228e175-5b53-47bc-ad74-8ffbb2254b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22eea073-3c34-45d7-b15d-5eaf08b0ab32",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa30838-5b05-42d2-bcdb-b454523f6afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6697cd86-f8e5-4a91-bd90-afb4a47e2f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487a014f-e90d-474e-ac5d-0ebbf59ad3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "692a6fc3-3f4d-444b-9841-aa558fe083f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c30bb6-95a2-4479-a915-698bb78fffce",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1c459b-6786-454a-9e6b-b6627074e244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3495af4c-72e4-4a5e-88b3-eeb3f28dd47c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5026245-83c3-4978-b8d5-59f1ebad5d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5716ba-eb48-4687-b9d6-c5475acbdbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78343cc4-585c-429c-b0b1-24af1dcfc8cf",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc2ee98-2392-4732-9e80-f403d41f202f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f263c55-ae95-4563-b80c-f988dedd1fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddfee71-e827-411f-b12b-8ee01b293f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "247112e1-cb9c-4cfa-87ea-cc3aa8789eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c824cb-8fe7-48ec-a35c-48ea01a47670",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705c45fc-9946-494c-ae96-f1ee10af7276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06064fd7-c306-44c1-9ff5-f6ac91b317b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbea892-3dda-459e-b328-b15a115e0e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "106a3056-ad97-449c-945e-aca40436c80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968c7190-d409-4592-a8b7-8b728bc775bd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a356e626-cd0c-4173-8ba0-59cb57fbb8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fc2a8e-24ac-4760-a3a1-2922d599ad98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d00f389-445d-4799-94a4-dc220d43b61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0599ca-ef79-459d-a0a2-4a18aff99b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439e6c0b-4eb6-42f4-bf50-db4d717b7fe1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df4eacf-e4bc-41e0-aaf0-fddd2acd5001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2ef06d-c15c-4292-a30e-310332efac85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2e6a9d-e8ac-4b45-af7f-61b13b2b019b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9d601f-6ce0-440c-9e54-fb6ccac3dd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05dba5c3-cf39-4f25-9238-573aa0cfa842",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4d5160-b470-4f1d-a9ec-8ea6db0c7041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa30f0c8-f948-4d1c-b264-217a6d3b8685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28eb53d7-45d7-4945-9a75-9185a57d058b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4715076d-cf50-494f-b53f-d2636352f299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1f38ad-c105-4f15-8dab-e4aa4195f4c8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96dd1be3-9ea3-43f0-88af-29315cadeeb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd67b2d-8622-4a00-8523-f146ea27fc7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc85bd31-02ba-40ed-92a2-257caa724c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64619b41-0fac-4846-9fc2-af7d0a348106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29342d1e-7c29-455a-8871-89c876663b10",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5b1129-bdc9-438b-a9e6-c4ef334b105c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaea7ac0-e6a0-4782-8044-3b98d1ec76c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c14082-d49a-4e54-8881-47392581b950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d862cfd5-81ce-4160-9706-c7e47f386526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0173de53-3598-4bda-9b07-c6d0dd02b8eb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f99783e-97b2-474d-b0a4-b3591b7f9689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04d2118-4203-48cd-8245-dede9123ab10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99f2032-1f0d-4098-812b-744a7fdeabaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "021fa467-270a-485c-84ff-1df863507cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbb227e-fe4d-491a-b408-1b45167e83dd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c73691-5cf1-4944-8fe9-d6b549033ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14700dc4-7a23-477c-848f-563aa257cf21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ac2fbf-6f80-449b-a491-9d5382b5a6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c0dfa3-46ee-4dfe-945b-5a25ef732ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb35e67-5c4b-4a7f-a788-03916e2d421c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50304aaa-4962-4f6d-a1bc-d7cbe7127b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd784e2-2152-4d87-b65e-968693db7eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a244c0-2e05-4f2d-8234-0e2db78ecb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd8dc8d-20f6-4e72-adc7-7647aff0203a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5399f9-87da-48cc-89ba-b633091c7220",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe525df-0140-4c79-9396-cf7838b4c911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c954ffc-0ecc-402d-8b7b-ba567b72884f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03d3bb6-06c1-4785-9579-0b26548cfa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "62764882-94a7-4d28-9342-1f38dda3a2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e4153c-bced-4950-a83d-e49ff5603212",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd313ca5-3eee-47d1-9302-2156c687c7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd0e293-c04e-44f2-bbc4-1214f8e57639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576575c9-08d1-4a4f-9a2b-9c97548e0fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5261c407-655d-47fb-9307-9e2248a0f519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb33751-f05a-4bf3-8dc1-29678cf97328",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ca6dc3-32b3-4434-b662-ea462799e459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d3ef0d-3fd0-4f43-8223-369e36aca048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fd6ffb-af1b-49c5-89e6-6bb7cd96332a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "274715a1-0691-4131-a23d-3531f35ddd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75976e17-1452-4bb4-b177-fbcb3e85f2e9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03202f21-f2e4-4e53-8db1-31eed580bf7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6cdc9b-6e19-456a-b4b5-5270911b702c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5038b3-ada9-41d9-bd36-8e999e674da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3af5cc6e-54e2-48bd-9624-3e5c712b56f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de8a3e1-375d-42c4-a6da-3d80582cc36a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f88fe2c-476e-4ac1-9cf3-f7c31a7402d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4d71d2-16a6-4ec9-8d0b-1a556fb2c600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2725c00-eb97-4196-a25e-c71e10ed4350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08b6cf3c-37cb-42e8-80af-7c9bff8be1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c5b4c2-96ef-472b-a73f-513575a2f78c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98be6f14-8ab0-4f9e-b4e0-120b041654ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c3db76-abae-4477-8973-612395415ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be01cd41-3f51-42b3-b8c0-88da60634964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d746ce36-fea8-4a60-bda1-a99c11206b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bce2d5-5b36-4d12-b828-a58cd78da3e7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc82b85-9e1e-4e19-b4e6-0cd8ea224b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "100bec91-19cc-4639-ace8-989fc1a4416e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1f2a62-ab1c-43ad-b0ce-e1f52a9232a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b123810e-b4a2-4cf1-8970-facf0251ca03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efcf26b-d1dd-4c2f-b8c9-f028357d34fe",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866cc4d3-f915-40ed-b047-685e9d3feacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6bf57f-0bc6-4484-b502-1ac2ef3c389b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75dfa03a-b1c0-4c2b-b06f-51c5b969e30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15d7a944-218c-4406-9607-b4cbfec81ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d28ef6-b416-4d44-8fb2-583aef27ae19",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c47f356-6186-4da8-995b-ff31dff1966b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fbb410f-631d-4dd1-946e-b1c24ec5fcd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f15b7a1-7844-44a6-af4e-6e1e777e649c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb28f88b-2696-42bb-b05f-59a4e21fdd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978663b8-2275-47be-bfac-ec16735a57fc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3962278c-566f-4f05-9783-94ebc83dd5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30873c8a-f3b0-459d-8131-d15305f0360c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9275ebbc-8bf7-4211-8c0f-c3911afe13a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd896893-6d46-4da3-977b-729cae32c633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92494839-82bf-408b-b3a7-30ea6eedc78f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0304cfd3-567a-4e53-994c-fd17f32f965c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7257e18-c2f5-476c-a945-cac1a4d94765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75e75fa-d59c-4b7c-8d6f-ad627002e005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "26748d72-c9bc-4e19-ab8f-14edb166c6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5348fdb3-6e63-4584-9457-c6622c4e5a44",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fec5dc-48cf-4aab-9b4f-63cd0b82d422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304c822f-7116-402b-9780-f5c147609663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2d5e08-334d-42eb-b3c1-2f334ed12a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c621655-5e3e-47b9-889d-0495aafacd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb959d2-3915-48c2-9148-c88f4a7c6ac2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f206720d-ef27-4843-a580-32e9d7c21541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a70036-96b2-4f4b-8a6e-82597e5aacae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f217ad9-21d9-4a3e-ae81-151faaf75ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2ba806-4490-4d6a-a9e9-377f7f1697f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7489f546-c17e-4bf9-9127-0ce7a1d829c2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bc2cab-57eb-4a5b-ba79-8a941e9eb205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5606aa62-7863-4f2d-9d02-b02f0a28ec82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68baf2f-423f-4443-aa83-bbd51a4282ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b51fc0d-b616-403e-b6be-66c6ea2be56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82df7169-ae9f-4b89-85e2-62168d843300",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95adc222-018b-45bc-8015-6a30fee3a2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d1a390-1377-4fbb-8464-04be75c1ab5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2463e6-7375-40a7-ae49-1cb547b7695a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6985c822-2802-4414-a282-fc0df44232d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21143699-63e6-4694-b91f-1282b57641cf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9ddf86-0d42-4c2d-be45-5245dd9cb88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c1857c-4ee2-43a0-9788-7ee397601346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1156b3f1-1cdd-4dbc-8f7c-e8f167f44ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "387cbf4d-cde9-475d-b999-b3ec22a218a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91d76ca-60d8-447e-92e2-f1b34cec8c79",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a50d25-ab51-4e4e-aa85-aada07f110c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8beff3a9-6150-4712-9a51-773abab0f341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae189b7-821b-4296-b187-e88c2a24e51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62268329-b788-4aad-9c29-d63918cb73d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dec6762-6a83-47c2-94ab-db6682a1c160",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513b8da3-a1bf-49cc-9db3-b3fa8cce6d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20487478-cbb7-4892-8de4-b88b79398ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b382e1-0ee7-41c8-a54e-d24542fa7058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff34b523-368b-4b48-818a-cd49048993fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cc8486-e421-4dd1-b1d1-51c6391a7dfe",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1dc1bb-ac27-4952-ac4e-671c12273e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49536e31-440c-4f5f-bdb5-29e19af54def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ab7321-1f34-487f-b869-ba6b462d6311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8717b23-0bd5-412c-9330-035b6ec81f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33d21f4-6a8e-44c6-9520-6273f9eee944",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0016ef6d-6cea-465f-8e32-f90cf34fa5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09523bbd-17e4-41c6-9147-499e4dd54ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a14bc7-12b4-4eaa-a2c7-31eb28f02286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b15d639-17ca-4338-9916-b7b706093f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932cfe35-2169-4fa7-9c84-95d425817cdf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3570f5-ff19-44b1-bc81-b4a638f30009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b1e685-a84d-4269-8e32-497e686132cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2953c4c0-4f33-4ee5-89b9-839ad027a6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81f4417d-15d2-475f-acce-6b508d4e64f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc48e7b-aaa3-41fd-be6d-809e6dc6cfef",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3a12ba-c87f-49b7-bdb5-74013a1c1ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bb88f1-ec12-4b87-9cc7-e286833e61b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b494bb-a64d-4df9-8279-0d441771f232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d75f4e0f-8e4d-4a52-b451-3e22d87ac96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d00265-7343-427c-8c71-ae19f2fbb400",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4c81b7-6777-4b5e-ae4f-0414173a9751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177153be-5e32-45e7-9609-13277c7d940c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ab9b8c-47fd-4b13-a008-88961b6d972a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "417f0cb8-9cb0-45b7-8f10-67121b7025d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26871c14-f81a-4f29-9c88-228d1a60c53d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09383063-6ed2-4174-9f81-33a59924e39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03668729-774a-4641-9bd8-b46588b840be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33feb3f9-0bcd-4297-9965-3f447def3366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "014380e4-4409-4001-aca3-0860cb340577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c6c80d-a18c-4b83-8237-f77351095eee",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884b2d35-5f6d-4029-bf3b-e503e564eb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95a1836-1390-4a78-ad4d-e531253cf834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db11d0c-6bd6-458e-97c6-9121d5da20d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7291961-a0bb-4b80-9e61-5747991b7708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428d2c22-7997-4068-82fc-2cc6502a5193",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65a93fd-3347-4551-a00f-7c12b78ec2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feaec76b-2074-4044-a8b2-a0f82defa0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9c2e8d-e136-4bbf-a1b4-d6f14d07660e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4dc293-d129-4964-bbbe-6c75da98872d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e414007-19c9-47bc-ba5e-23ca3a93b375",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521c7aad-f7df-4ba3-8ed4-1aaca69c96b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2123766c-6c58-4f43-8d48-9679cf233e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db472f1f-978d-431a-92fa-27671b9fd4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2c8334-3c1a-4b7a-84d1-fc61f0c79eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f2bae7-0afa-4d54-bf80-65127db437e6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d862b9c-7b91-4459-832f-b8e8733ee722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34bcb9bd-33f6-4980-8280-2577d8f17491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e103d284-96af-48e7-85c2-9112b8b823cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6424b246-dc63-4c9c-8d3c-2c2e9611325d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9656622c-69fc-45ae-b816-b5afd70c499f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b64ec3-6e71-48c5-9633-9a2efa4ae858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9476253-136d-4021-bb9f-0514d639914c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154f0411-7d21-43a5-8606-2e8617f1e2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2136a710-185b-45c6-a46d-eeda1fa89bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c7fa25-a446-4460-9eb0-2f815d049e1f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb49451-8fb7-4ec0-9a3d-7117badcd443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499b0da8-3dac-4999-aa20-e09c0e9cfae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938f5ab1-a037-4118-8455-c9cd61e0ec00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0c2823-f9bb-474e-a365-171a7b94c447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c7c6a7-216c-481a-bc0b-dd3b5bc40275",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e93f70-6a61-435d-9f80-6da862c38858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5668654f-5f99-49ff-bd09-1782117f1858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5694a1fe-6a2e-40fb-9f80-c8ad3633066e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9273ff06-55f1-48cd-9686-60d1adc895d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844bba0c-9a47-4c47-8cf7-b837c32db23c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417570d3-9818-4af9-a9ab-64e41a151f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d3acfe-0842-4663-9c86-d04122e5d831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147294a4-0f03-498e-90da-359994eef822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccba5b5f-d890-4486-9499-0c6559a30e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540e81f4-7756-417f-afba-4ebbfe59ec71",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe6edf0-03d9-4857-99d5-d063285f1dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa0c01b-9505-4bd8-9e3f-5952de58e0a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6563f1be-6693-4a7a-ab1d-5c978d58da89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7e97ed-b11b-46c2-acc0-2aff33b5ae84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9738d4-7d35-4d16-a5a8-03c890bd6324",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7255e94d-7e0f-45da-8379-c723d571d51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cea6b13-ae5c-496c-b9a1-e44caa87e522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4cc357-4ff0-46f3-9a5d-3a48784e564c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0009b985-ccfb-4cc8-8403-9910a2f08cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65aba4f1-6edd-41c6-922a-ae17c4787c3b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80da50bb-5dde-4833-9329-d28ad39a4009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d18fa9-7028-4a11-a15e-b7c837b57a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2e5ce1-6f4c-4233-b87a-188907d05837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0383021-0df3-4ccc-9262-187f1c53b4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58180f1f-35e1-4c70-ad3e-96b49b3e1961",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee99294d-a879-4e54-9a4f-3d1e3e3ef215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31181b2d-34b4-4284-918c-0cf88ef94156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c171d01b-e986-4f1c-b3bb-a16918beb435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c624ace2-1ead-41d4-8320-caaf1e23f0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9909bb-785d-4509-985b-1bce69e3af35",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd02303c-acfc-49b9-b658-c072631c555a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b224b50-61ab-447c-8c7a-9025d1740b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d265311-f0ff-4ad3-a68f-d34049103fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7231f014-141c-4d77-bd5a-251f660d66fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd16889-0cc3-40a5-af1a-6c4f5c924d6c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4860cded-2848-4ac4-8a53-836d00329668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6db495-7293-44a2-98db-90f5f33d2b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba6e527-29c6-48c4-9147-b7ad14eb2be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1822965-f7c8-451a-8636-12eb56653752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1542eb1b-6cbc-485e-89a3-9bc3415475a7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810266ee-a00e-4378-8dfc-363c756ebe1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae08b13-e2f3-4522-902e-281ea5e915e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c9d473-f882-49f4-9faf-3898105c8825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c2d1cd-e47e-459f-9195-d9accfeb8e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bca8f8c-f28e-40a8-83be-b02678ed1dd7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e249b0-bcfb-41f9-b80b-27b742c6fb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df94d92-4498-4406-8129-6bb12f5568b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4317da5c-cfd5-48d0-a387-8d0ccf6f6cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0f9f9c-4ccd-402d-b2fd-bb532d1acd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633a67b3-fb47-49f7-922c-348a62d095d3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68799ec-2cae-4b00-8948-fb23dabc0c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6d6221-6bc0-41c7-9245-ebdf7a9d2fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9177eca9-d480-4775-b12e-85b1b4a09c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30110a31-100f-4396-9783-658aa5a45e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34607eb-015b-46b3-a1ff-4106425466d1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecec183f-7d07-4a98-b84e-35898f7553a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707cc50f-36cc-426e-b110-ddb2f53bb398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68a1083-2645-4878-9e39-0942ec932f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc8957a-12ec-4e1b-b909-66ac01a33dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23f4ab8-e472-4eca-96e7-a20d0bae38ee",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b2b0f6-0dba-4093-aac0-16ed36d2271a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86ebf5a-6c29-44ab-ba6f-ab1f730d965f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab196a9-7271-463d-bdda-308e2e400963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0b4dc3-9f04-4a3e-98a6-0f8cae2c4bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f26b8c-0a43-4485-8240-6ee38bbf487c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c3f8ba-5d4b-4d49-9b2e-f13d3d5d7d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d3140b-18b3-4347-8165-1fe23cbae7f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a667320b-5e54-4522-8788-c7adc65143ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c386024-12f5-45fb-9a81-f02226b6aa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083ce999-9228-48f6-8b46-5a41b1523ecb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf5c3b2-288d-46aa-9ced-de0b44668c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "605227ec-0043-4a31-9777-e59a76c51a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026f6dc7-c002-4bfc-935b-b90157cda3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1581ea7a-4511-47f3-b3b7-356f1552b8a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5432022d-00a4-4923-a7e4-c3dc6c912aea",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5d718b-adf8-4880-ac57-cec85d6620fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4481a22-2fd1-480a-8eae-18dc41be06e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75254fdd-e682-49d2-9945-d41a64bdc9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c64e409f-286f-4363-acbc-cbb34d21c032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b6444f-75bf-442c-9165-7d3ddfd57d20",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10883efd-5bc4-4c85-b916-23ce58983faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba8ea2b-e51d-46fe-b7fe-ab1bf93ee430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf3d30d-f6a6-43be-ad86-b67305be98c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5dadf54-3cfc-41a4-884a-dfdb22327712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2506794-39ec-4f87-8e70-4396ee3ea851",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083b3b27-4b56-4236-84af-f9177d7bbcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9316954c-2fa6-4fc6-8302-87aa623590db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55cd630-81bb-4f95-966a-c71b0e2af9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c3a985-f65f-4502-8b59-1dc0d8fdac3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c92de1-71cd-4f4d-8c56-d93b17e9c853",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d11564-fb24-48ad-adbd-d6a81b7a3c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bbb1ced-cdeb-49bf-add8-61416c8320ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abcf8b8-5b48-4691-b15c-3a67afa8f665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab0638e-5a8a-421f-a5ba-c22386cebe3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fee4855-c97e-4773-9392-ab832279af46",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f613fac-bf30-4ce7-bc4f-0e61f63d2bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc406ff-91a6-48cb-8b2d-f9e514cf726b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea14b3f-7ac1-4d74-8944-77171e69aa44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "de287334-ad89-4ca4-984d-0fe79d97c8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2be674-004b-400d-b4aa-f376ea72b054",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec885c12-f0db-49dc-90d7-da877f5b78b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b40f30-15a6-46d2-8783-87b00bd70af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f109d837-c3a9-4026-84eb-551ced4575af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd7e27d-7eef-45d0-9dde-d79aa4e2c178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a921ced3-e8a7-4f5f-93a6-980c09841639",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cd61d3-f372-4366-8fb1-1ac19caa86fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82dfa07f-aa00-407d-ba9c-7c18a71da03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6feee2ea-595e-4555-b823-773a13d926fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8615f129-b576-4db3-92a9-7b9a80dddf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfca7893-2495-47ae-9f3e-bb7a5853fb88",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde9f32c-9bcb-403c-8e69-83a76baf7463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bfd8072-9d44-411e-babe-b0693362ef52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7075fb9b-e4e1-4ff9-8c36-1e8f06562a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95ee2b2d-860c-44a1-b375-1a64b5348439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594cd34e-45d5-480e-a645-1972ea725b22",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6fbfd4-ed3e-46f9-8392-3712a100666f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0b3060-9e38-4cfa-b510-3594a5fb8a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb226960-e7c5-4db7-994e-cf61970bc550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64ebbe8d-b10b-46ed-9309-e7f8c66c7ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4fcc6b-e24c-4061-b540-9b21dcec863c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58de8aba-b804-4970-b8ef-bc5019403ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e262a6f8-4256-4c73-8c38-33a1816a6851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345089d0-4ff9-4b47-89aa-0ac9056ee3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dcfc530-69ae-4209-b90e-a390528a271b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476c42eb-4fc7-42fd-b469-0f2d8d8e7cbd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222cc11f-59a2-4c0f-9c37-2612cbcf88b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14438cd9-93b6-48b8-8a6e-51234e266124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c4657c-f5b5-44f5-b885-0823eded0cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9229dc-ac1a-440a-bdb7-3f9abffcbc8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5bbc43f-b44e-406a-9914-fc8f83128ec4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a119746a-2250-4207-a0f6-d9d1b72f6c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e35e496-85b7-471e-8e52-86bbb9fad25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95060fe4-51a7-404d-9681-5911e1fca289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b38fb1-0842-41f3-9ac3-253f2f400c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdbcc9e-d22c-4693-82c5-41dd72b5612b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8d0ca0-e238-4fdf-83d8-f859ad872ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf3ec04-dd94-4459-b280-efe8c9d2716f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c261a0-dc99-4637-9a73-caabb4fbd65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "871c265a-a820-4fd8-84a3-3523a7dec361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7104b8-cbf2-40a9-ae41-1e9fbc1bd12a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee23f4f-d99b-4ec7-aacd-2af0ff80df7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23fe937-c95b-4935-8086-594370149998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b974e8e9-7a44-4b4e-81f5-22b63fa76bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f39a39fb-69b3-41df-9db6-38005990ccc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ced264-5b12-4159-b383-a09bcf612b8e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5586894f-09f5-4765-9b4e-8bbee95e148a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebba7fb3-160e-4a4c-aa64-f71894e976f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052c3015-0d87-4e97-ae7c-47240c435bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e48b5dc0-db97-4d4b-b34b-4b190f085b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ce13ae-d30f-4c90-8ea6-ed74e7698c12",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823a5630-d8a3-44f5-bb63-d20ff8e9376b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c165df5-c464-41dd-abbc-342b7aad8295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab6c507-cfb4-4d8b-b5ca-3909f24a96ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d547c921-f359-4204-92f3-f94642b5c2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b61079-c210-4b7b-980c-e1ffa674598d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58ee218-ca88-4e49-b8ba-735151342c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9967f892-eb43-4df9-8dd1-8067ea29f258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58bbfb8-c085-4209-85d3-c8fd02e7b00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d16070a-8c06-42ec-a8ba-9bd080f6a3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb098b84-8e12-4776-aac8-bc30bf513179",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe58b646-66b6-492c-8ba7-e75e8d78698e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0bcb8e20-d224-4dd7-9a76-cb84bbd0817e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825a6d08-7123-4cab-b16c-f55af845ee8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "94e03218-3d2d-41d8-94fa-6a56388a611d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de2a0d6e-7cca-40af-93e6-fa58b3cf2c35",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ce05899-8d06-42c6-b053-86be3b5b1e11",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7306283-688a-4ecc-99f2-51adbf2bf2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29d116d5-926e-4f96-8840-7ccf948dc0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cd10c1-204b-46ed-972e-2692f17b4951",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97181c61-6f66-4820-b404-690c622a6b1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45a79c03-70c4-4ded-9593-7c1f10822c7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "369227d3-1e4d-440e-a1a2-79efcc5d6604"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37e22372-3717-4345-867e-50943cc60b06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a4e6e04-0af1-46cf-80e0-241ccb70699a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c133b8f3-d775-4e3b-9da1-1cb30f43bd03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49d16f5b-1cdb-4e8f-a133-03f64757edcf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1958b554-bf01-4cb0-87f7-6a3efebccc0b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80902890-fc00-44a6-bc07-219d766c9004"
                }
              }
            ]
          },
          {
            "id": "4b86cde8-71d2-4171-90a9-5fb87598924e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "92b02560-443d-4ec3-be30-2eb1e3cdc52e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6e978fbe-68d2-42ca-8f46-b2e4f8508c67",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f1e53a-8df8-4d17-ba75-2b74094b283a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fa913fec-8fc8-4bcf-b2e0-e695b84727b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf1847d-7bc5-4904-a017-bdcfcdc63c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c93caf-9157-4a1d-beae-dd10c6e75c58"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7f8726a0-bcd4-4fa4-a0eb-ea9f61fd79fd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78c771b4-ceb3-4b29-8132-4540be84f8c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df2a12b1-e35f-4a01-8a3f-53b8993de669"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "750c1e77-ca02-4aa2-9736-8c0842d3d315",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3236c051-8a4b-49f8-849c-2687e993ae93"
                    }
                  }
                ]
              },
              {
                "id": "e81fdebd-da8c-4ab9-b3fd-aeab9680dbef",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82f7fb2c-fb53-4f8b-898e-3862556a743b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b2c9a3a-1d27-44be-8989-09e3cb522c85"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6a012c7-2750-4d47-aeee-6be247286ebb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d4341d4b-e0ff-4047-8fa8-99d22e0c1bcf"
                    }
                  }
                ]
              },
              {
                "id": "8ba65c62-cefe-4f2b-8196-877f6605d868",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7365f94d-d99b-49cc-9f32-0a0d9528a119",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65144126-2c10-4a20-bd5b-3eb8180a6272"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fb5d666-9385-4037-88fb-f808d53df176",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "869198d0-0f0a-4c6a-9712-85365136bd95"
                    }
                  }
                ]
              },
              {
                "id": "719587c2-7c01-4b59-a8cf-06e1a658d74b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4fc6853-86d5-497f-9fff-109981da8ee7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "273250de-30eb-43f4-8f69-949f8025eadc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8db338d9-eda3-4c35-91bc-847496691bd9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6b9470aa-d16b-452b-9332-0c2c083ec8b3"
                    }
                  }
                ]
              },
              {
                "id": "403f549a-bc2d-4bf0-b81d-8df641640794",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdba5ec6-a3ae-4591-9caf-bc02342b6785",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1de3ed7-24bd-4201-bcab-e7cdf25a08aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e789d9b9-31d8-4987-baaa-e5207f65c55d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "905a6a02-3e3b-4374-bb52-a475a1f7da4e"
                    }
                  }
                ]
              },
              {
                "id": "032bb4a1-1d7d-4f4d-882b-4e3d0f7e493f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d37dbad7-380e-4c17-9ddf-209063c8b473",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02d19c8b-bc82-42f3-8892-3daec384f0a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a953b42-1eb8-4ec6-9063-c0945aeaa00f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f128658a-7f13-457b-bbcc-f17037402e99"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f5d04fa-8881-4e7b-adc5-ae8e10ee8db9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b2cc3c13-8385-4c4b-8950-0dc6d1a20b02"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "af4bb8f2-14bb-4dc5-8e50-4f595e19c7f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d34dd80f-ff18-4e43-adb7-40ab5871feae"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70b1c54c-56b0-4603-ba0d-7069f9d6dd78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "aca83a43-5684-4a35-8637-2024474ebc84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "900788e8-7bf8-4a07-9ff4-0550151fa2f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "286ff394-4fe7-4ac5-8d4f-0411d3434e2c"
            }
          }
        ]
      },
      {
        "id": "90ba4805-cd30-4812-97c8-e3a59ff77c8f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6d40bed4-92ec-47f6-80da-771f376cae62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d6596ce-f09e-4db9-896e-09960c8efe41",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66993688-3794-4279-a9c3-11cc14894715",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fecfb3-c9e2-47d9-91b4-8d3577844ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079f9486-7d36-429b-93fc-e8204a023109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945a8334-fc67-42f7-9135-a5706d94c617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "829b6aa3-0be6-49bc-8b0f-08dfc7f0dea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5448467e-71d1-4093-a7c5-27db5c784478",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1276323-aba5-4ab8-a17e-4dd7a86919d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af3ed18-53d7-4c4c-bd33-90f8e0b127ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee40f4b2-d721-464e-aba9-a9e446cc80e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5276f2a1-232f-43e7-91cf-c22b005cb6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51261df6-d934-4402-ba36-c26d8d075d1a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ec0552-8bfb-4114-b200-e3b0f977fc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648a31a5-80c8-4eb6-958e-d7d18536a04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9a0fde-2cb0-41b9-bc11-9808d7144f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c170e5b-d5ac-4ed7-882c-7475db288618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334f0355-eba3-4a4c-b408-1795f007054a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ead31c-92a3-46c7-8010-f90fdec1b66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95601ef-db46-4e43-b7d3-93f909dc5585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e992ce0-314b-4498-ae59-e9786201ff4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0de93076-b87e-4cec-96fa-abe0632fdd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33678894-1c84-468c-81bf-5d9548ef2421",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5346c2-339d-4e11-980e-3cdb7b7e59e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096d9882-8ee3-48ab-aca3-f4daff96c072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f690525-3fe1-44f7-86c6-a9783a778955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dba84de-dc1f-4e7b-a02f-9ebf1bdcdc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4a4c1a-dfa8-4366-acd1-64a7d95b8b5c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed1d10b-6746-4729-8981-8a954fc008c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9acaca4-26f9-43e5-aaf3-a38e51804d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bf610b-88cb-421c-929f-a451a30b4c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8450fec-df57-4777-81fe-aeea4d7d7fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab344dbf-8354-4fef-88f6-e84b73b67aea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8144e45-9b64-4773-be95-0b7edde26d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6f5cf1-ddd1-48ec-99cd-1a16cad1efd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586e8c66-d247-4a96-ab45-ce265e5f9d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "688778e2-3bbe-46fd-9767-b7a274cbc8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4f91a5-c188-44ce-b0c6-938b6a4418ec",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb2e78b-bceb-4c43-b0d9-0da53829e45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6128de-0826-41b1-bce3-8b852525d302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b90ab7-18d8-4157-9320-06dd04c2e18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46ff8d31-677c-4b85-83c1-eb8c2907733d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f188a4c2-5ead-4ecb-98b0-6a0b57394022",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8be475-c18d-4f57-b6ef-e989c13f6ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f72931-19e3-4b22-b9f7-d163a89642bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14713ac-5c2b-441a-a3ef-6605965024df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6234aebb-87e8-4c28-b601-99c80617e4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1a0db7-0e4e-48f3-a796-3ef0e8c46a58",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04443e05-ee5d-468b-91d0-e35d0d4bd794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152e2171-1cdc-47f6-8264-515880e65a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39734791-eab1-4654-b349-0d86348925ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a26a3d2f-5c3c-4ede-af9b-993ced68c316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e257766c-ea16-4d8d-83e5-da43f29b8f94",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ee7ddb-e666-4da6-8f89-3116ff7b5cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83df22e9-18ff-4689-b23e-aefdd96f905c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115bcdd1-8af3-4b6e-8c1b-a4605daf5a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "33c9e174-6a23-4a84-8096-4dd075beeb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93163276-8026-40fb-892d-177489370607",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fcec4c-c895-4f77-a67e-c9f96741a5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe464eaa-3380-4f06-aa9f-678826719cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e12f94-27b4-45b5-b494-c157a47b3401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da1b098d-da8c-436b-bd75-ac77968fab1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786be6bf-f1f7-454f-b6db-9a42d47e1fd0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac81c49-bc79-47e9-b98f-ac005de08c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980db3a7-a00c-47a2-a67d-82f2a7e2580f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5155190-8bdd-4601-9024-e3c8a645f794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9347b46c-3134-4e71-a977-95972c6e28bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e1ecbd-b785-4188-90fa-d6630d0ac7dd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70aaed5b-84bd-47f7-9039-ebd353c848e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4319167d-7886-4c02-9337-9640626e97f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ed8aa0-3c83-4fef-b86d-865e152b051c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "352e75ab-1b30-4216-97e1-3ed96412c598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d4cfe4-67ba-4154-8015-c3718da969dc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d412e59c-c3cd-4082-9c56-956a1d30d8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cabc13e6-3e85-4007-bc98-14b6236a070a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc25ad8e-7bb6-4eb3-a618-a22986b69eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ae65f5-1baf-4b47-ba06-617479f62563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa66fc3-b279-400d-81c2-7798c798b9b9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb548f2-9e10-49ea-9882-9aa0cec18ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bd7acd-785f-4574-907c-d5b642eaa111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b0c5c8-4898-4b12-9f27-3b8972e532d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "18f515a1-fcce-4ced-a0a5-10b3b65595e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7ad1cf-4e92-4fb0-a784-b384a56441bf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9d1818-77e5-4ce6-8d96-d425a42088cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a79b622-58b0-4b4a-a69f-a5ed2d5572f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2ad86f-d0cc-4408-8880-c7d0d4397022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "581d1b93-713d-4bef-871e-78f63187b01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1249e317-7172-4fba-899c-121e18a25d00",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed101f16-ac2a-49b9-9940-6743825ff46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e4aed8-bed1-4660-b683-ef8fecce6e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4baa644-4fbc-4280-8d54-cfe58e2e25c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e413a9cd-e4dc-4e0b-952a-03479f5fcc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425a1047-647e-4a23-b90f-8f33caf13495",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1fbe4e-30b5-4317-b695-d778d0a7dda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a3de1a-9762-4779-b1a8-13a20bfb5bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a4cb17-23f5-4621-b882-7e150f5deab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca92b7c-a5e8-49be-9ee1-38c53571d335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36869c08-356b-42a7-8f10-e657667d1dc0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf4ca61-7f58-440a-904e-b1571123da49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df06fe62-36f2-4a5a-b300-186974a4f708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab5d75f-9a93-4337-b6c5-ee26ea26582b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64237039-82d4-4188-b827-beb19ffb902c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06d966c-bcf9-4ce0-a034-9f433736085e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67585fd6-f719-4965-ba02-47de1e56d727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5e6c1d-fcb5-41fc-a22f-f1add6f92c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e85149-44d7-4d8e-a798-ef261fc62e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec09027-9bdc-4571-98cd-5597e61798ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2aa48b-4fb3-4f67-ba08-40c3db60bf43",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d2e4ab-8661-41b6-9a5a-b5bf513fe98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b89dee-1a6e-4aef-886f-704056be69e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bda0459-111d-4cbd-97ca-f43df0b79727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "398ab7da-c3c7-438f-8f66-918c758ecf6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbccd196-7e0b-45a8-8b58-a30173e14cf6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dcfd33-aeac-4f56-b962-e664668bed8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a8f5a02-f5f4-469e-9a25-4dbe51f1bceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dc2d73-1985-4c82-8909-a1420b139128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "814efc82-0334-455d-a2f8-642bdd80ff47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f86330-67c6-44f8-ae5c-65d2b9ee9ed0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ee50c2-4feb-4689-b7bb-f04777e311df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7134fa-02ad-4b42-8598-439d99fbf850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6330a4-1089-4064-8734-82439a0d70ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68eaad94-5c5f-48f9-9fdd-bf3041766b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1158135d-a845-42ba-b5c7-4fc016c3e2d2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59a0d9b-aa87-4035-85da-07dddd57dfbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a68bcc-3878-430f-818c-c5c0db0a36e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b82885b-e355-4e9a-8de3-cd3feece9dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95799e24-4945-4759-b6b2-8479f11e15cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32aea54a-7b61-4a46-b741-686520a95b4c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b200da48-447d-43c3-9710-5fc04ce435a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485688e0-451d-4296-91b2-379a659a5a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3509e2de-bab7-4ca4-a028-8d6ab8a3b067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7f85ed-91ab-40ae-b7c2-09c724f0b405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2952b5d6-acf9-43dd-a36f-d535b5188761",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae59e174-0a5e-4ccd-be6e-13a3699a63f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797c67d1-61a5-4836-a211-47f1517d2e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b0455f-b399-4c54-a374-dd483a18b2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "614bd1c6-f3c4-4bd3-b626-1a11dde038c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da95e8af-cec3-4dc8-9db9-7b2022c227b5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b84a7d5-74c5-4693-ab6c-2b7374d57490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a95f89c-d2b2-467e-a134-61e813788a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f32878-8606-41ff-8571-96c1fca17874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb33092f-b302-4bd8-bf58-d1f561994346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85339599-1ebd-4185-9da2-ce26d4a93f68",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668eb538-0ca6-4a58-898e-493a2a9c209d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c0aa5b-40a9-49f2-a92a-1ed26cca9f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600d6619-802a-438e-a33b-fc65373b17c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d69d5c30-cf53-4992-884f-266d5182f644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817fdb0c-dfc0-4674-a335-2533dce3125d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07c01ea-16d2-49d2-a9f6-7f723db65870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894cddfe-8cb8-4eb9-aabe-0581153a29c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446c141e-7ed0-4d3b-84c5-626339d17dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d752847-85ff-43db-a9d4-ead35edb54ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f590b06-194e-46ae-9022-671edb678f13",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbe24ac-8e10-46c3-b6e3-fc51a9505ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d388b1-7579-4238-8ccd-4a85f222c210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0941d91c-6c54-417e-b00c-e9e736f22523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9292658d-303f-4919-a4c5-04472864ed5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7305312c-e127-4dee-adfb-c8bc961dd90a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac0f4d5-7f97-4c00-9114-36b101edafc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4fe2d58-d32d-48e2-a980-010a09d88dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076abe38-838e-4632-af58-797fa292cafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "398edef6-2a9a-4a3a-95ac-9561356445ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4fdf7771-9f08-41a2-849d-8e3807721693",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6becb021-7c49-48d9-a8a1-4d475fcbf7cb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639e4e03-dde0-47be-8096-4e1796166cda",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea7e101-954e-4a23-94bd-be24902faf23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5483799f-54ed-41af-bd7c-fa7d4ffe3ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cf1db0d-d16a-4559-85fa-7cd5766b2e66"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3222f50f-d6ff-4c55-ad27-989fdd22aed3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3967e8e-2095-416d-a679-ffa3f637e33b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99d14eed-ae3c-4415-9285-1697ba1500bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97912417-0905-405d-aa7e-b05331a21847"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4b87f1b-023b-4946-b7b5-c426f7d3ba97",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b2097daf-53e6-4f38-a64a-3761a98cf7f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "adbfe453-f307-4aee-bfbd-21104fc7fb4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7669606a-3056-4f06-b114-2655cf87b68b"
            }
          }
        ]
      },
      {
        "id": "4257f232-df39-4002-b51f-06656f944461",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3280cf8f-d787-48ef-abf4-b7ba81850fe6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52c2b724-9265-4296-8cbd-75f5f8fd4628",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3cffe690-8416-4c0a-a134-f6eb8846db00",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b69dbe-6a32-4c5d-a2eb-4599bd497908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d965b78-fea4-401c-a300-09701f09aba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a506a32-b01c-4426-982f-d76af1f83112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1fa8705-9da9-459c-a827-577e41375cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1943ee3c-2292-45ea-a0b1-9c2e6e816a77",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7aea6a-e3ec-42b5-b30c-11e9eab7dbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6f59db-a4bc-402f-8596-60c7bae4d4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55dd298-2109-42f4-b846-15b579c86a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "79fb0eff-4211-4d9f-a0af-8204214664aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096f66fe-15a5-4a60-bb0a-ac5f30191dde",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bef0bda-3d04-4de9-aebe-ac1d16ba03cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a6e5e8-a0a8-4de4-90aa-734f51e9a3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104bb279-457f-4013-9093-bc498debd27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc9a7a9-4f00-4ab7-9e7b-94b46c23fc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786909dd-fa0b-4a51-bd3e-47c5bd4dbd93",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b175b8cc-020f-4e5c-bf9a-23bd4409b4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c058041a-62fe-4895-ae53-f8ab9dde4907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a60e3d6-0338-45f7-96cb-c99915a1c720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1d28e3-c521-49d3-8413-bf2438a29ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cbb01b-c2d2-466d-b8f7-4ce7f6cf046e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1c6d22-44c3-4589-a94a-f6e57245ae3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "034499e2-6e09-4e4b-a774-d6805fe045ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0253887c-468f-4e3d-be44-4855fdb897f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1fd7555-7880-4736-b69c-d95f68790dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4b2c2c-47cb-4200-a3d1-881054e9f954",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fa3485-c40d-4cc1-b8b5-f36faceba317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a33fa9-ab09-4c40-925a-ed9746e7bfca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ea1dc9-ecd7-4fe3-a26c-ea1bfa28b421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce019aae-1b74-423f-8757-b13262aa69e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a93be9-0911-47e1-b3b6-8c06ec801b70",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bf2369-66c0-44e0-b950-b06d011ec6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece62b15-2f77-4a70-94d7-e826c3cd1b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5dfe8e6-7a09-4eeb-ab65-2dccbbfeaa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca5b729-0cb3-4224-a58b-f07f89080092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3641b4af-1b07-482a-8cd2-a941483a9a73",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04353982-bd5b-46c3-ac0a-08723132f132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323bc45b-a3e1-42ad-a2d5-e25a32a30b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ff7363-9f1f-419d-9c96-f9716dc60a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7f2a6e-3dbf-4b25-a9eb-f3c9ab2458df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d10cf6b-1086-423f-a88f-1ce92e4fbaba",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca4785d-19fd-41ef-a9ea-9d00deacc7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6276f19-bf0e-40cd-a900-a059cbc775bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05da0f0-e332-45f3-b4ba-b1612d9e022e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d215858-9bc0-4b9d-ad03-193f58dd4d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c0a8fd-388f-43bf-82cf-e06ba817e1c3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779ba42f-4169-4314-ab40-84c02313739e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356679b1-7594-4307-aaa2-2f7bc6a61579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796f7d12-97b6-40fe-8304-9016a67cdd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11b9c003-2243-4cfa-9bd7-c0d0a94b469e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3c0d84-523b-4e6e-84e4-7a270b0a6477",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b059d5a-04cd-4af7-bcc9-2fb31aec78c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d171b5-ebdc-4b9a-aac9-b4ab55eba30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d43492-1a2e-4872-8f93-91e919fda71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3f88f832-e401-4305-8a1c-1d1cd48022cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8576684-1fb1-4507-abf9-d8a2881d9af6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2290f33f-c723-4415-8d95-0e0fe15e6e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c940b19d-7af4-4616-9f68-25d1a80ced57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc178c2-c552-445d-b29b-60641b316abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9111a13-c996-419f-9ecf-5db9507d9d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486cc999-8800-430f-b836-1ffd46522216",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d63a28-1a97-46cd-90f9-98c2ef002f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f266a7-b611-41fd-a08a-47fdea6b71b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22e979b-6cfd-499d-9450-2cb88c57d1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7566bb27-b3df-4d53-905f-6d0be1aa9ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0ef17d-b7f9-4a01-8e93-b98e025db99f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701ba1e2-b965-4148-b275-7ba1f63d72ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c990f9-e49f-41ff-989e-d474e8fae246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5ad60e-4636-486f-a296-fadea44d70b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4154cef-a5d5-40a9-b607-93ec97fe346b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70dc7a2-c1c8-40ac-a6ec-aa2d250fb793",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34059a6-8d65-4d52-a0fc-2c6ebd7b522a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70cb72f-205a-42fe-8ea8-1148b5e87020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7640aa-798d-420a-af95-bca1c1f1939c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "633efb91-a044-428d-a20d-26fb798731cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2825788b-5466-4a94-9f0a-ea1e16bf763b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38f3c9f-2945-486d-a347-4b1d8bad7602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f2dc7c-33cd-4fe8-819f-a722ef217cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbad8a30-bce8-4fe2-ad7c-b1a034e2cad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "88130767-da16-4caf-8173-950d1c1d38c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d37f9a-dcf2-4bf9-8bf9-509578816c48",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c486790-d98d-4b49-9bc8-7c5fe00a6cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5501171-80be-495e-a22d-87832cb9c05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0933eaef-14cc-41d2-b154-11264b657170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5edbe5dd-d849-4f92-bcf1-41f77885ecbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bc449c-dd72-4504-8d82-e5e297ef3cb0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba271fd-dbde-4c44-a9e7-abca04a63b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18185ea-27a8-44cb-a6e5-f6f4e230bc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48622ed-6a3a-476e-836a-ce9fd874041f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1349a3-213b-441a-b698-46a8177a2d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79cae22-e6b2-4953-b511-c4b26aab3489",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f03b97-b70e-42be-9577-77d3b4ff3010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c3eadf-f7d4-4f84-bc95-5db5409e9dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c427206-91bd-45a2-8e55-9e6cf2919cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb08ada6-a188-4d3b-b598-329606a3c279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d6b241-e1be-4b88-8018-94a91622fc93",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096dad11-b6c3-4237-b7ef-2d753002ed55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab726b3-759b-4ff9-a529-8560bb0211d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c5ca7b-9c40-4134-885a-1ecf970bf736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3d477f-4a78-4949-9ca9-704a9c942872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21110e91-f7ef-4a68-919d-08443ca6200f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9728f5-01ed-4329-b667-0f865bd007a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bc2020-e04f-4c99-b803-8050887e5a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8359c50-2bbb-4898-9e52-495310de20a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f02c43b-840c-409f-a94a-8ca52192e3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f9839e-eccb-410d-a5d1-3dbf5021b02c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db5175a-6367-482f-b04c-0b837e091c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece1884a-ecba-4b1c-b96a-58ad7470181f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf2493b-6b54-45b9-b227-01ba20999a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32fb619d-300d-4e2d-9dae-d6d1dde9d099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e0c2c9-ff58-4349-b5e9-b232c9ce655c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f7e25b-82b6-4add-abeb-f8ef42cc7837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb778544-9113-4048-af32-a0fa12c7406d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea3aedf-46b7-4ea8-a2af-803410c8c4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b19f9d9-e97a-4290-8890-cdb845afce49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197a57b2-14cf-4dd4-a601-3b6e2d2eeac1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1e8ea1-c56c-4874-a5c0-361547f17b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ca9055-6837-4e78-8876-23c977aafe88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "524330d3-840b-4057-b790-4ad8761d8689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b339b42-688f-43e6-99e0-71f5c57d1028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeca5617-cb5b-4430-8abb-be83db518b62",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11ea3ff-5846-4334-a863-5522f7b41089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fda661f-6bb6-4858-8ec4-a689f74902a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c596cc-f4c9-4bf9-853f-931c1e6f3275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef623905-5fee-4ff5-8468-d7b743f43aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bc531d-c3f9-460c-86f7-0e9a46d311e4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b987de9d-fcf9-4380-bde8-9d665f110a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed51e341-f7b6-4f71-a65e-a00d91417fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f570cfff-9401-470d-823c-388e54dee7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26132f24-22a2-418c-9d26-10b9fad52e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcef58c0-89f4-41c2-8efa-3d978dbb77c3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bb123f-2e90-4da7-a3d6-5fd2f973409d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6b1f82-13c3-4a43-830b-169c3636e208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24c67a2-ea32-4dd0-a3c0-bfff7c50eb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "028efc02-0ab7-4a26-921c-ce2c0be1ef8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f369c0e-fa84-4707-b11b-d6118d82a1cc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd42649-2d1b-4def-91e1-212c4a937915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862e5594-4a7c-409f-af0b-898e61a0be7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6b8f46-8afa-4928-8f99-44bc3adfa448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd46f21-8eaf-43d9-8868-f23cf9a6356a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca14458-7b12-43ac-9ed8-deeaf703b8e3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496c0c7c-7c5c-4b33-94fa-c615d18c58ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a758f940-10ee-4ce3-b431-8e517d41a4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112c7819-035d-4aa9-a298-4a44c1e4b23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48c1e9c3-3f54-4011-b1c0-ebc5d7a34f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8771df-da53-4375-a4c7-7a22a8c3b458",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80e07dc-1ca8-47c9-97fd-0acf647f828a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a9b664-8b6f-4a9c-a763-0fc3bdfb7fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1162d056-1a12-404d-95e1-94d86a4fc1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "518afc58-1ee2-4190-be51-9b9eec18e5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a70db0d-299a-4b1d-8e80-9e5cb74167ce",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c4bb15-d52e-4c73-a48c-faa313202460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80840bcd-7834-4fe6-8602-56fce1381e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff36a8f-0cdd-4333-b4fe-e6e170057714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d6def9-8f47-4905-9066-30e48568920f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6387e40-9d93-4738-9995-3d65eb351663",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ccd3e5-4abc-427a-b83a-65b8ae77e475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05952c88-4a6d-4723-84a6-06a115fba6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf08a68-09ef-4140-9b4d-40426f54479b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82393195-7e1f-447d-b631-555bb086f177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31032b4-78ca-4f00-8788-12015007d71a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1312e9-9e72-4c83-abf4-52c3b2c35a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92b695f-24a7-498f-aa8a-5f9937a3d83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28cccfb-92d5-436f-8562-0eb6d814a113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd450bf-2d82-487a-b040-1802d6097155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e379f75e-14fe-472f-a051-46a1fcecc096",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5061d755-1a4c-4b54-8d9c-02c5fdf48171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243b87b3-688c-49f4-a202-d709c008db15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bf46f8-9159-4012-882a-14710d0caf1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60575852-fb31-4676-a533-d79d98c18dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41658c7-2532-4f73-b0ab-4eac6a0d2e3b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e549aca-bda0-42ce-b1e8-d2c903829ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726c0bef-6bfe-4425-8e33-6cbfabd9c06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4090ab-575e-4e57-a6d7-b58aa59a654c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ab6218-a828-45b0-a4d8-ff63c07e1498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc45aeb1-2d3b-4e31-a305-ab8d56b6787b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d833c1-1820-46fa-9802-2f7d39aad494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153633ad-408a-4978-ad8d-97358a066d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4077c3-089f-4c85-b24e-cddf25ae2a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b11ab4-2237-4a9b-bc2b-69a8736ee868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a219d8-db75-4160-964f-ad81ae8ce7e8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148a7935-2153-4228-9779-15fc842d844f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4fc442-a842-433d-9cf8-c8b8eea8e7dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274a25f6-847e-461a-905a-e023bd3607c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5067c5c6-5158-4a5d-bae8-65f213849877"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca650093-903c-4736-b24f-20db1af88e14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09b2d767-dc8e-48c5-a241-87e91f91d6d3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640c4ca1-f7d0-4223-8808-b3dcd9d223af",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f220f138-7923-4796-bbd7-cbb5812c286c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82426850-265f-498a-80f7-34db0f4bc54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1951b84b-2dcf-459e-8be6-c85954fbed90"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb8a822d-61ad-4a12-ae0b-f096f8187865",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "818ae95b-4573-40b1-aecb-059c66627bb9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bedc7119-0237-41f8-a41a-ed2d9de37161",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48407aa4-a661-43f7-b7a9-742c21bf8d32"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df7e9661-a9bd-4257-8a27-697d7e5c5b38",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7e4e0e20-c27e-46dd-9263-e41f8ccc2af0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "005e974f-b0f7-4b6d-9929-416f473ef2db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "854e7d95-90c4-4970-be8b-a5ce68e24dc4"
            }
          }
        ]
      },
      {
        "id": "eea9a0e4-adf9-49b0-a9da-3160bbf93740",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3f3b848f-250d-4505-9f82-421d26c7b526",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78791050-c79a-4e00-94f0-cc7e17dda0c9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0d6973ac-665a-4b81-9ce1-8e0ad6df3858",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf664e09-9746-4d93-9edf-b49e7481cf1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900d1f3c-d573-479a-bb57-27fd194dd7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2088877-dfbd-4a7e-9fa7-e15a9728da03",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fac8d80-b1c9-43bd-9c23-b14acf6819a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef923c82-5fcf-46ce-ab7d-7349798bd796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a101558-b582-4315-8abe-da8b408eda83",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafd3875-240c-4777-a891-0310e036edf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7c002c-0263-4092-800e-83075e9ac3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6561c0-278d-46ae-8c74-b610f33e24eb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2bf398-6544-4efc-8fa0-d3858313afa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88182f0b-c950-4c9c-b443-7f1a4f4529f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d8971a-22b9-4b75-addb-8a4285ba8bde",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ebf2bd-9422-4d43-88b3-653c88a6674c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650250a5-2260-491b-8070-c2270c4b969c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40551712-ea1c-43e1-ac9b-badfa8f299f5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b88385-2e39-4157-aa1e-04784909acbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b6524f-e4f7-449d-994e-9e14adb524b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea19336-b817-4a44-81af-dcedf10cca7c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c2d7b8-f7a2-4d7a-820a-c8fc4d1db49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f271810-6ce6-4f9d-9b92-7648bbb1af3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "690a51a5-4327-4723-a7a5-7b464f568c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ffa89e-5e3b-4aec-b512-333894e18fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a03a18-b0c2-430c-9fb6-609e923da71b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7887f688-a884-42bb-b965-32af719eeabc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9ba9838-8688-4fca-bbc1-938af7e822ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b77792-dcb3-42d7-92b3-cd6d30b1ec3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ff02e91-1e2b-498e-9be9-0ee3e41a31d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5852d17f-0e93-4c96-9099-94dfbd462fec",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe9d587-c2f0-4488-813c-694c28bf9139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cca554c7-471a-4669-8bbb-39e8001e7282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f012cc9-113d-40d3-a53b-7c8c23c0dc54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03604561-61d6-4db4-af2c-b425b9d9ab27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0433cfe4-105f-438d-99cf-1f1f2312852e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442b61b7-5639-417b-a2c2-e8f733baf27a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63cee671-1c9c-4067-9478-596400e48f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ded527-4f10-4a70-8820-2f1fa9ea349e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8674eb66-db8d-4332-aab8-d2da47f30e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12dca14-4e63-47fa-bf0e-d5fb5217b532",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091d5bb8-4430-45ac-9292-598d085f9fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50bc498-0aed-4f21-bd09-4ff258a19641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836f5599-8afd-4723-a07c-9bdfb1547451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94db5ea7-98a2-4967-92a1-6e4fcf1a1f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a94d578-33f4-4f32-87b2-07b954649bc7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30421aa3-85fb-4a11-b0af-56738c868efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4c5135-54c2-47e1-b98f-f6b64a55299d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1222a3b2-9058-4161-9f6f-3459a9a790e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad934a34-1f0f-4782-a90c-1ead27d6fcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f590d4-a4ab-436c-86a7-d0ed79a5fa07",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee7ffbc-3543-4c45-89a9-4a79284246d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d71ccc1-f324-41bd-beda-e5044bcc0555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d3c6b0-fb60-49f1-8aad-e6db67aac7b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10cd47f4-2d8c-4bb3-ae4a-0f3c5bfab759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782332a1-366e-4d10-b738-46843189d7fa",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e1f6f6-74b9-4224-be27-2f49cc2930fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cdbf2a4-0801-4be0-9fb2-1d054b7206b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6526e4-ae74-497b-ae2d-d1e8cd7094d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8e11da-94ac-4b1d-a3ea-18759368c90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6921a238-fd6c-4eaa-97bc-84137a4ea277",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d352f0-6397-4df9-82d9-0b50331e1b28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fea63927-dd6c-46e7-be61-fa80cbeb0f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06486fc-c9b5-46ed-a89a-3a5f6a713bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbebdf0-3e86-401f-b1e0-5bd6b379baf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf7d14b-890b-4584-9254-293575ae7dc1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550e93ef-b0ff-4d9a-bc2c-306024e095d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e20045-00db-4f19-8d23-ab219f3fbd9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5525ba-4d3b-42be-8f13-bfced0e42a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752f826f-596e-4467-8449-60ac9c760f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be6d56f-c90a-44e2-b62e-c6719f4f99fd",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1cc788-04fb-4a4a-9faa-bfd595eee748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bf0773-721e-4e04-8f66-04a246bf8956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620abb2b-7fa7-4ca7-9895-e51d6ed6c4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7971ee8-325b-4d00-ab77-5148ea4da793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294ad77e-1d1c-4066-893f-7eb271165a26",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bd293d-a25e-4e06-a5a2-60d0906500b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a12308-9bc4-4029-802a-50eec8e92e0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8050a9dc-f83d-4b7b-ab73-2e9cf81c379a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7346ce-5aca-4e3e-998b-9b557a0afb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e404a5-9c5b-461c-8a77-89eac2b75e4e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107ab6e7-56fd-450c-8c3e-6f1b639696d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935f0998-baeb-41b5-a7e4-63652ac49635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac053bd1-b9ff-46ba-ad40-e683dcb5ca3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b25831-33c9-4aeb-8d9e-8a1908a71010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f114c1-ec99-439c-abf1-39b77670cf28",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cad52fe-3aaf-4b49-a4d1-f41f96903800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb99dbda-9a92-48bb-a4a3-c6a66e1733b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec12be2-3ed5-46a1-b176-fde7896f2e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbac2456-5bba-46d7-bc29-0476abb21941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec50b547-3d9b-4821-8a6f-bb11415b81ff",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc5443d-5405-4a12-94ca-60e0d4f7ab4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7ac77a-b726-44b4-87b1-2273902d8682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5025ad95-771f-4700-8536-0877a91b6f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c640be-d29e-48d0-aa96-5b911bd9d1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d142f3-02cc-4e2e-81b2-1836d61d6b09",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a384a894-947e-4766-bc6d-6e0fc4b3ee52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89feb5f2-5b3e-4549-8138-1742b6289ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8ebdc6-3856-4cca-9c97-26a59cc210e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769abb6d-32b0-43f0-a316-406a60cb66b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae7f7df-111f-4dbd-afef-e320ad3db5e4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9beec9-9183-487b-9533-f771136db80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989515f0-b492-4219-83ef-8b17ff6134e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01f48e1-fc56-4d18-aff1-bac6a0bf0857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1820fa4a-2647-4b7d-ae3c-99fd7edefcca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a78945-1bb7-448a-83de-5c30db6a04b5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a54696d-7d89-4521-b869-f998795aadf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8d77006-d11b-4782-b166-2e19e120bdb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b680d71c-ab3d-4c9b-9e80-776a7a9c8c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a71b83-5c88-44e4-869e-cd915119a2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339f1e67-04c2-4f9d-beb7-bdfb624aa04e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444d380c-ba68-4a62-9d1e-2403c13f1890",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "393de630-8896-43f8-abce-e47ef9c90261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e60d1e1-f669-4c75-be94-7f53ffec71b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f42868c-5de7-4015-a612-84a7ecd22eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b893b5d8-2b94-4e2b-9bfe-9120a0bdd152",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009afa6e-a2fd-41ba-be3e-6680858f641f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "587c127b-b696-4d43-9c76-9d3af3e730de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4a527a-a43a-4dd3-bea9-589579c065a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22db3e9-14c9-4392-b680-c694188cc800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578bdd66-280c-49ab-a6f6-b74204d411f5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fecdc6-b922-4b36-8ad0-8e777c5a374d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27253808-b5ca-4a0d-8b4e-e0f2013a4251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7a2f4d-f9fd-4ea9-8b3f-a4611e4e402c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735f5f6a-f0a9-4394-8b88-f3bdd65a8e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88e6286-fe00-4a15-bff1-04fc009192de",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab1c42d-bd15-435f-bcd7-aedf2d899523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32db6919-4f48-4cb1-a80d-284f60c04125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba244a6-da32-4fca-bbe2-ccaf5effcabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90c790c-5e1d-42fe-95e6-10073baa2230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d9b68b-7452-429b-8148-e5d0c6228de3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527ea657-b7ce-4568-9f90-c182b1e5d993",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53d02d4c-72c1-4736-94ec-67f0d8aeea7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23884dd5-68d7-49b8-aab9-1c818985ecdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9de3bdc-9eb6-463e-bdae-3b7a328792ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99916cd-2fa7-4704-ba5d-eb39b7372187",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8bbe81-8a2d-4c58-abd6-0d5e7cef5c91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16bb2964-b46b-447e-90e9-2e1f2ff198ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db13861-3631-420e-86c4-45ad8ca38050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b42aa7-5e7c-4f1b-baa3-6795f2f20c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ee8eb6-4963-4643-9f28-79e90250c6c0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32101d7a-baf3-4484-98d0-f36380e44307",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4e26360-6e68-4f69-ab30-3b94dacb1a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6a8a3e-0f14-4dc8-a401-7272984a0d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efb0317-246f-4ad0-afa3-fc81f00cf0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26890d1a-a8a6-4114-ae27-ec5fdf1100d1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e792acb-0449-4ad8-9183-a162c401ef41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "116fc116-2ea8-465b-a6a0-e52365719634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd0370a-2b59-4539-baee-1c3bb09e7619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11634c47-4005-4f7d-a898-0cb4811b3d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22b79f4-ab5d-4c8e-ae6f-cc6f4581f152",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bd7a1d-3b0b-4a11-a0ea-a3339a558afe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40c19010-5fde-4791-ab52-bfa5dc05a219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df8b3ed-ede3-4c76-905e-2e40f501f814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612c3d0e-ec61-4e03-b377-64b254fac76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed4d48a-99ef-4a18-8a20-79df53070118",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca18de9-5457-4e24-a988-11f71158e53a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8d66fa6-33bc-4219-ab81-fb6259a827c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51bd6ab-cc8d-43c9-9b05-1d2fcfaace61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa4c180-5297-4510-96f8-85bb0da32e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586634d5-7381-498c-a753-2f6d2f83d2be",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6daf1e3f-7041-47a4-b752-abe0c041a9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ca9013-2c5e-4663-b18a-2d4fd74ee843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "993268a3-6bec-4598-baa6-af0d8ba9578e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3ac3ec-cc85-4f42-8da5-7a1b3c66c800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55e199f-22be-413a-905f-98c6f4602f15",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6581ad-0edb-4a2f-9206-5b983f9530a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effbe055-6b93-42f6-9679-3a9986bc213f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc62e28d-2c91-4fac-8002-f8786a3ab129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f74f72-7b39-4ae2-ac4f-d34647971c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4cb4c5-fd25-400a-8a7e-8e4113323a6d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f00ee7-0d76-4a77-841a-9f525ac80889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19326cda-5c35-4b31-bfef-2721d6c31a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c30950c-f6d7-4beb-b1cb-442dad3895c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d083df60-f60c-432e-b803-922b5a2a6f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf36839-9a26-4705-b319-c5421a78c046",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad68f023-aaeb-46b4-ab46-9f619f665aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2394cd-ae19-49e9-826e-83ea52055b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935bc8ed-0397-49d3-b188-94486aa9ac11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c01baa-8c63-4376-b7c9-e9653f9201b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8387d75-33fd-4c26-9ac9-176febc1e1cc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a35490a-eb50-40b3-bf63-11530ec72ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d6dd11-7bb1-4c3d-9df2-2e93e68acc28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03234ecc-b43f-4c80-8baf-f06f4af3330a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23f4975-1aeb-487f-a0e7-be3fb29bf10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84450a8-d5d1-4c30-a607-3f9b8370e176",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c78e69f-0995-47b8-87b5-8b15f9ee6538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2cb7341-9005-4164-9cd7-10fe7e75efba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fdc3b8-0165-46d6-be59-7e3612edd9bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f6e75c-620c-4211-ada0-4650ea258287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7a35dd-7e41-4da6-815a-4f656513031a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2602850-6f42-48b4-ae04-90c2126e1344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831a9d9c-a2a5-4184-a283-6da3292a8b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "550077e4-000b-4baf-b10f-b76b4b0665f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d2bde9-9738-460c-aed5-ae5c3501673c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04da4fdb-6029-4eb8-a9dc-3029ffcc8b71",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853ead8e-0dee-4f70-b480-b5cf1a89330a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8415cd59-0310-4a81-8b95-fd70e3bc0a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34470cd7-924f-496b-94d6-f9c488cbbe5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13561abd-fdb2-4833-8504-e15d3dec60c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cfd95b-5ba4-4982-8c41-ef82d4419522",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9455268c-1400-4c71-89dc-9bf38c2ccc89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a1e453-2138-417c-bfbe-179a081a41d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9899e693-d8b4-4813-9e50-95af9f1b5935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a25431-f415-48dc-8396-f0930c62d7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09877029-44e2-4a1d-be75-07f3f13ede19",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c707d20-1d98-452c-9112-93cf60b2171d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a99b59f-aaf4-4df1-a3ee-7dd669b03084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a24dbe5-bbb0-4441-88d2-dbc77db8b4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1ceee4-b946-48e5-a0a0-ec9dfb4779d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a143ef55-0db9-4e34-aafa-6141e3decd93",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0fef4b-2dcc-4feb-9592-8547ec5aeac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114d0704-7583-4574-bc58-6d5db3c4a1a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66224c0d-fa4f-44d0-950d-997b6277bdb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f766a2d-6095-4f83-a5b5-5b2e39359e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29487400-27f9-4171-84bf-4e70eb81e934",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbada47e-9e95-4f4a-a4ae-0830f73d3c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b48722c-f935-45db-a6b1-a34ef2d5c835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86696db-bb00-4248-986f-ad4cfd0fdd47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9229966-1316-4613-a319-ffc51f41c859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e58eb6c-2b7d-410d-8bde-ac791688e375",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acb6f69-846c-4946-bc4e-1eb65832a3c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ccc9a26-ac26-4afa-a72b-a8f6ff80a2d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db07ee0-30d7-490f-9c41-4ac74bae92ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4061dcc7-d27f-4ef7-9473-2cd8522c5b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b976d424-389d-42fe-9c4b-58063368c616",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6148e8-f620-48ac-a719-1b5a1bc005de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f52b2ec-cf51-4e24-9dea-5d04fbef9ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd210f31-e4fd-4ed7-b3ea-8a36f2cfafe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b683aa0a-d694-44c8-9fa8-88fa444117eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f18e775-ac78-4795-abe1-332f4512b72c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032d74c7-86ae-4a11-8355-d1c8151f8eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00856437-5e52-4d47-9f40-7e58b6a65fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c52a171-cd4c-426c-b377-e71f387821c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f577a36-6867-4d6e-962c-5ffbbf33c6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9cc399-95c3-4002-80ba-2d9bcf14c839",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac07c174-8db3-4d6a-a8ff-fb9f2bc9f87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a1fdf0-5f3b-4e68-ad55-75a0cc48fb8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb59b3b-8545-4687-aaf6-d42ed8945856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9741128-a5ce-4a07-9a35-b3207931e1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b562575a-fe85-43ae-a7df-5775cd86e9d8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9009624-b49e-4e03-bfde-0a5431c2306e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b8b237-acad-4c0f-b118-c075fb224f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5503039-bd51-46ed-8e76-7461479036d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d737f95-6e64-4be6-8d85-7b1966ab22ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4012e3d-f6a3-47ef-a208-a985c762ba91",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a369c91-1e46-4e87-810f-9e325c9c6f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a301f7d2-aac1-4daf-b6fd-f3a12e268054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fdc0f7-4359-45f2-8362-64b6c48593a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9b7b92-0cf8-49eb-a908-6e4fa188db57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f782c8e-1f28-4e56-bcb9-f7777e0000ff",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9f571d-ae83-47a0-8691-4d7ccd97bd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4648586d-9941-41c8-bc36-68b56196876b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87be88a-6ed4-4bdd-8979-fd7653bd2fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f95737-2c6b-442c-864a-10044e206fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6600431-7a07-4479-98c8-f71eacda566d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51728a4-90ed-4f16-b462-07ac4bbf2b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2335c5-e396-44b7-a3ab-a3b505f2829f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19a2d91-5534-4731-890d-065ee26c7fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9666e7b5-c40d-4d72-b7f5-c84bbf51ec29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703dddde-b3b3-403d-ae61-23941a9798c1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5532a9-f2b2-41f6-8165-3a82c9d6c159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc918145-17cf-473e-9f4b-72aa46f604cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f263a1f4-13b3-42fe-927e-8cdd4b5ca530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4657cc8e-c98e-4913-b2d1-fb5236e29bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e923a79-457e-4a09-be90-12382a7598a7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6897d7d0-d483-41ca-b56b-dc98043155a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92558e3f-a101-4375-9d63-caad011b516b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba77d39-2e1f-4b64-a682-f3b6134e7560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539c13ff-1b4e-4bcb-8fc5-d84958f6b8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ad454c-45dc-4280-ba8a-a9d48b9fae19",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38755773-a968-4b4e-b2f8-8a2da2d2d7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7790e3b4-11ad-4618-8a44-6b455d43be1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1e5cdb-da31-4f9b-8f86-167ae14ca67c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b8c000-16fc-4261-8097-a57ba658affd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddd79fb-55af-4560-8056-4cae88a502d7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d27fb8-f9ca-4cc4-9ddd-a8466ccf4c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48952bce-c4d7-4be4-981f-5eba9c6f6f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e15976-2e5d-4737-868d-1485aa398722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b6df29-d7a7-474f-a1c3-14be9230b957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b828c9d-3015-4fec-9a27-cd84333a8a66",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5015c4-3a7a-49a0-b589-115f59baa17b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fd6c4f-43ec-478c-86cf-b934130ca603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33e17d0-9e4b-4fe9-ac8c-02b3e35ceabd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f8eb6f-1203-4a3b-8c67-0cbec2b1cdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e10ba6-59af-4101-8d57-d534eda42db1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07212cd-b32f-4c58-b65a-ffbc937b400a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4afac7-ea89-4dee-af7e-f8ef9a4b05ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945b8612-79f9-4f48-b323-060e4a32462a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c37cdd-e071-48cd-a074-8ca4bf004061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace07cf5-814e-4a07-a29b-66cdcca61126",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ea74b9-8ab6-43a1-8fb1-4c1623dbf4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5410e76b-a2e9-412b-8586-7ff306b67cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29badcf2-ccab-4dc3-967f-a8a32c4013f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b199436-85ea-4546-b45d-7af5f9aca98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3478d7dd-5ba5-4134-b17c-e28f298e3e09",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a997e49-d116-42ca-bc59-d83a85bdc1c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f36d5ee-9db0-4390-a13a-87fbadda0856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866ec9ca-c345-491f-bf48-6a388211ecfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29485465-32a6-481d-a6ad-abac493f77a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99eb9f7c-b4bf-483f-b2b8-65088d1f0b48",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01dcb5da-b1c2-4925-a19f-fe1eee1f4eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2598eb-d981-4813-9a2c-f37eae0206cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0f2400-022f-47a3-90e7-2977b21faaf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076efc0a-0a5b-4749-a6eb-08c1a739f059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b2f2c2-a43e-43c7-9955-cbc6fb936888",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10667b8-7ea8-4fba-bc9b-803a91284087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e867992a-adf7-450f-9d88-a3c850c5a6de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8563e6-e46e-4df3-87eb-b7bad10945a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fbff0d5-7240-40fb-92be-1a93ac82f185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b601add-5753-48a5-a27a-b6dd2d905985",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced0309e-f116-4f52-9d67-0a10bbe084a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bce65c23-6fc8-4b62-b720-a68ac3364b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a32fecd-1d07-421f-9eb0-4ad39c997a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784b7028-9578-4a18-9b46-c3bb640cd874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07e1f63-7b2b-4ea7-9c00-618ba54a2a59",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc6274e-6b8b-400f-adfa-05cb8fe17fd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f198b04c-92ca-40a4-bbc8-5424f2b8079f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a994fb1-9e15-4ebd-ab8b-74dea19c867f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca97f5f-0e21-4a10-9fdf-1139ffc752a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5060c705-2cfc-49a3-84e3-5daff71ceb33",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39df7bee-18ab-4397-b38b-645f860390e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae69bcb7-4bee-49bc-af9f-8876da1cfebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43e3ed1-aff6-4242-938d-8dc52db4e359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf73bc30-86a8-410e-8d6a-5d2e29eaebef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d927e3-3ffa-49a8-b306-a36d4f9bd325",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666eb096-1d25-43a7-825a-d7ce601fb446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f55ebe86-d3c5-4562-abf8-4ea0ad685bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d0693c-4f1f-41dd-bd50-107eaf277cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6812826d-f0b4-4263-826e-6db48194aeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b962f78e-6314-4e31-9f1f-c130df5848dc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83368afd-a426-4cd8-8bb6-1199abe97ac4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c75d9b6a-12c8-4c49-bb3b-e907f4aa4596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713cb761-98b0-4125-a087-38e0840bcd99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a048dfcb-a1f2-40c1-a689-ee7102821d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9a2aaa-4fad-40ad-bf8e-a79253a7d59e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddcbdb4-ba01-4236-b52b-544c18e8e3d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59549039-03e3-42f2-8feb-183198210b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6229af6f-f682-4434-ae60-6cf74560dee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7095acc0-a1e0-4e95-8bf7-945d31bba32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094f1847-5dcb-4fc5-a9d2-a8d025acca5f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746c5290-104f-4087-9a5d-0aa57c0befa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e39f71f2-2aed-4d55-81b8-07931888c3ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261665c2-461f-4bf4-a66a-8b8f62ef3076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848ce68d-dada-4015-b2a3-dc9e8963dc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd6bd2c-ef4e-441c-a477-1f529843b3ea",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c093d44-e0d9-42ed-bb3e-797596fff977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee62125b-7182-40d5-bc3e-ccedffc94992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3210573a-279e-4742-a989-e8f89727ecbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86cb03a-f473-4313-8ff3-372e7220b4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04a2d7a-3dfc-4779-9699-3200ba9fbac6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f08743-473a-4b32-be7a-dea26b7b3784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c9692f1-3155-428b-8d0b-f8bee4da87b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9a8d0d-25f7-48f6-b7f5-92ef2d3da03c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50b14da-a949-4808-9215-c1652ab925db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0882f5-e8d9-429e-b37f-a8943e8721f8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5a0c81-3ac2-4c56-8a0c-c380f19b1f37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89627edc-ec97-44b1-9a2a-f802aa412973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a8a864-f8da-47a7-a8f1-c4620a38b3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4122e4fd-3b1c-4dd7-9d40-675bbf45bc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6002fe-6459-458a-a725-760ec40a4028",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c32699-235e-40df-b0ca-31baefed1a73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "934f58e4-e011-46e1-bbb7-462292a1d62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6e934d-81dc-4199-af18-74bcd659f45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c661f57-d15e-49a4-833c-1d01b52cd9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085e1f40-4ac4-415f-bed7-8ae9eb1048c9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ea860d-f555-43c4-ae96-f08fe5100ae5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04421633-5260-4ab6-be3a-c0668154b2cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0907cad2-f955-4154-a0d8-a5077649540b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2d27ce-adae-452b-a12c-4912674ae5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7323d48-e2e1-4e40-ba45-2b914d352fd3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8331ed-17d4-4e00-b7a9-07c8a053cf9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9363d77c-6206-4337-9f7e-bfb996764863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc89f324-b3e0-412d-92ac-569fc21b0fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0abf770-3d94-40c3-98c2-47cad5adc119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21018dbe-6d4c-49a9-907a-525c9e4edccb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea0767e-6fe8-4673-b847-9a7a1f71931b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1013961a-912f-454c-af8c-e375e9e5745c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9678af2d-53d3-49a6-b91a-06d1317ec895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f7ece8-4a4a-409d-8424-71194a73f9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952b4fce-f13b-4c90-99e7-44707a665ad2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d1d917-7fb3-4b6e-867c-eb49d36c4ee8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea201ca1-0290-46f7-afe8-238b87ca264f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a59a25-6b0e-49e0-99b9-d1638c7c7337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896aabcc-2485-4380-9c97-b56d59ae2f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea25945d-92f7-4ac2-a393-3dbca9c0246d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffc5a98-56bf-4c85-8760-1e3d130452fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34739b32-47c2-4272-af9f-1bba2e6a803b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e44cc1-435f-4e48-8b4d-96f1c4170ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab65a027-d3df-4eac-a5b5-7faeafde4b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b53ebfb-fc32-49ec-8303-49004aaafd82",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19dda833-2412-4a23-bc40-6c4bc0931322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d033991-940f-4049-b8bb-cb99d88f617c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363d24e9-9cf0-4d2c-9d10-b53bc16ad65c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a449611e-44af-4121-b84c-84f10cc88060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f79803-a4ae-4c26-a53a-ffd80e6a440c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b8fceb-2fd4-4aec-bd08-b7fc84491d56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "664f3189-cb8c-4f44-bece-ce45d94abf8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c46b41-3c31-4403-9171-e21084727d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0af1fce-7b4e-4236-8311-88a0ae2768a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce37655-c444-4a6e-bcf8-79cd4a54df51",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84797344-4349-4b0e-bad6-3b7a30bcdca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "614831c8-8251-4b78-8bb7-67d0573c0346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79655810-d494-419e-9ec5-c5f61551545f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9a01b3-c819-4c56-a2f4-f0b9b0d1f164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82c352a-4ad7-4b9a-a227-47d0077410d9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e07a8c-c3dc-419e-abcb-db2eca980972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae38dd61-0edc-4fb1-b96b-749246e824eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede863d4-7e84-48c1-9fc3-b8ad526522f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8e7b2c-6d01-451f-ad4a-3b127f16ad41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f10f44-2e36-4bbc-9331-b16e270bd1ab",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b9a54c-7098-4283-b776-0f3b9cc6927a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35cace80-ab53-451c-8bb5-65462e830259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea84df57-cadb-46e7-9f0e-fba698c28c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e180da32-b212-4a1f-98bb-d637ce56b82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877938c9-0d21-488a-affd-fba8e95cd8aa",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb18c760-2a90-40a4-a7a0-6e90783336a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5511ff64-b041-4728-807d-932cd4e3aed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a8da82-ca6e-478d-89ae-945ed7b473ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512da078-def1-4867-95c3-dd5371e77b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8fc4f1-b0ef-4eaa-a28d-1507c1073bad",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d62d55-b445-4ea6-949c-cbd3a0cdada1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f2a7145-c978-4a6b-b7b9-2d864cd4869a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc14361-6cd2-49d7-accf-2c40f59d5e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21758ac8-cad2-4c62-aab3-f567f222ad18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a4babc-ab65-4c67-b937-c41b501683de",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339b73ac-71cb-4b3b-bf20-0e3b90ad6ade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ddf62a5-b732-4a12-815d-381768250870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d78a6a-6fe7-4dc4-8911-c0f087812b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2b8a6a-3a20-4f8e-b6fa-554e14877ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed142826-f74e-491e-a52b-19a4c01d4e4e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d396f15-e5d5-41ad-af6b-ff9691b9fece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c26bafc-ab28-41c2-b2d6-7488b3869399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4b86d7-f352-4ef3-8d37-5b67a19d2c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "148591cd-b574-422c-b9ef-21009824e8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8abe66-2e6c-4ffe-9b65-08fe9c63f361",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d7c1bf-5709-476b-ab94-aa68e2bbd4e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41ae4e86-dece-40a1-9cd8-1a258b881122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde569fc-a59d-47fe-bd53-494bd2ff247d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7029e4ed-8be4-4bfe-9cc2-42d7c3f618e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a824db80-2482-4ca2-8f37-ce48047a42f4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41052be6-f151-4880-bad9-33bf2a35d0cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c0994a7-fa02-4bba-9e42-1702926349f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7267be1f-9c07-4e98-b424-b53ba3d1bc25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d3058d-de28-4f85-9ba6-931a5a7b275e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512bbc82-2659-4d7c-b704-e1b32eec997c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea901cb-1755-4dea-b223-1da1e266ccb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aa2f603-8fc6-42f5-a066-a56b96abe0c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d31d4e-69d3-46f6-b45e-739e13d99387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ce34aa-594d-4b20-9350-4ced3d4ab993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d9d5e3-66c1-4f22-bc92-958a451d6998",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3d60c8-e6b5-49a1-aa31-f7cc643acd17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edd75836-79a2-4b32-9031-e631a1325718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fa44ab-4d23-44ee-a3cf-0d58ecf6a238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee494ce-adb8-4664-8224-2960e030984c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec86703a-31ad-4981-aae3-ac9b6174eac0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127b726e-e6a3-489c-9be4-5df746d9d2b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d8b6f21-0eae-44c6-bebc-0d85a0122c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afb47bb-bdd1-4591-9c41-521d21232ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f17008b-0138-4abc-a346-389e69c213c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f676963-e53d-4a06-bc80-92e84c7c058d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807eacca-75fa-46b5-90a2-9b36ff2d8f26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9aa01ea-a8c9-40cd-8e4b-f273e6625de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f70c73-2cf1-4ac7-9cb8-7f1e73457040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854c49d7-3d62-49f2-ba7a-8052ccff2044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1141de8-404e-4de2-8f40-bd01b7931a23",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18643eb6-6eb3-4df9-81f9-750c6599fa2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9520be8d-02f9-4246-869b-81467a8cfe8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a14ad1-8d30-4a90-98f0-451f2b8e27b5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654eb10f-0c20-400e-aefb-2ee9d1d87ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8269ff62-b80e-443b-a696-e845ccab442d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18cab16-b827-4f81-af33-8b92a90cdace",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2b20bbf-0a05-42e8-8e0e-005e704753ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef71516d-7780-4ab6-9c61-9c04f6f74e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7dd7d3-3e2b-43dc-be46-15f35692d440"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "722aea49-951a-4b7e-9e18-ac05806022f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9af9190-b37c-4bc6-8d85-d6edc215bb19"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94417c80-b4e9-4f1e-bede-1babb0911f89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e31bc918-4231-4158-aa9a-12eaba0fd7cf"
                    }
                  }
                ]
              },
              {
                "id": "19f0311d-3e7c-44fe-a938-410b04954171",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3706c58a-5255-4820-b880-2960a5adb424",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee85b355-78d3-4586-a1e1-2b8b98e4c46b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "db7e95ce-ecf5-47d9-a502-96325e817b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4aa7ed-8379-4bc0-8d04-3aaee88e1a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acda1342-a5cb-40dd-adbd-9bd9efc9dd7a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86a3a340-df61-4c0a-9406-678ad3d2fa94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c077507-39be-43b5-95b6-d9bd159474cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f91d4d07-3b8c-4cf8-a2c4-2f185d67480d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa458cef-ac5d-448e-902d-61593c9fa826"
                    }
                  }
                ]
              },
              {
                "id": "7efca9ca-5512-4a31-9741-048d1040f4fd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7298f375-d807-415b-94ba-86508985e7b3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321f2952-0dee-4058-a39f-1cbd69454f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "12c3d2be-408a-4d41-a86c-16316ab1581e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa55812e-42d8-4616-a237-cb4d9a45bdb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680f2a67-9574-4341-95c5-f54c0422b995"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b72fb49b-f070-4181-810e-35601927ae55",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ce5d184-7cd4-4ae8-972f-519cc76a6306",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffa07e36-a9c4-4a4c-a973-b7e15466a177",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b8c22ddd-9367-492e-acf9-6c056ff4004a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20aec1da-4efb-4037-99de-d4d92e3b91f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60c9ea6e-2390-44a8-936c-4b3ea3dd4f3a"
                    }
                  }
                ]
              },
              {
                "id": "587ce7cd-5c07-4bd0-a256-1fa9c85f0413",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a931668-cce1-4cd4-aab4-0ce4e0bcaa2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5f47aa08-3533-4b50-96c0-6fe8c80d7537"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d010e72-f4b8-48bf-b3d7-a7b840cb7e5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f7f7fe3-04af-4c28-81b4-048643b9587f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19811c7a-4e7f-434e-a21e-88711c3400d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "db49784d-79e7-46d9-a888-1fefa26c1170"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f0bbce1-3f25-4bcd-9665-d2b2a64a0af8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14aa4a69-259d-474c-bbed-4bed5700800f"
            }
          }
        ]
      },
      {
        "id": "8d0e8dc4-0d35-4757-a567-5bde206019ae",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a7f30de1-0051-4601-8aa7-06ac007606bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "286ee52c-3bbf-4b1a-8f8b-003812e57875",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae4b53cd-c6ad-4650-a63e-c2bf84d0bec0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a40542-9a76-4589-87d4-0682ab3bcdee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dffc91b5-5a24-4bb6-b62d-a60eced69830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3e5f65-b47d-47c1-86af-80275f64215c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f83e154-2624-4eb5-adb6-05f57c596301"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05752266-8305-44f1-98fb-f0353c337859",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8d06025-d89d-4927-ba3a-fc9845205a35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e626284f-b446-4eef-b0ff-def10f6ebb6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d21b820-7718-4eec-bd1c-44ab2710d607"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7aaeb988-0d66-43c1-8d9e-ef513f9257be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6628448d-e8d0-4670-b3c5-6014e824bfa8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a69181b7-3d4e-4433-b480-dfec35b14f47",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6eb640f1-f9d3-440e-91ea-ab0a644968d6"
            }
          }
        ]
      },
      {
        "id": "00def077-ae82-4b6c-8b99-fa772096fe6b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5d99201e-8751-4f1e-918b-53bd40e715a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28e0bf3a-c19e-4897-b401-5228a182439c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9329f065-cd45-48c3-a2c4-bd022b0d49ef",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d828ad-3c70-43a9-a454-e2e34396d55f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bd50287-9c48-4aff-8531-a7fc6a128aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4fd415-f0c6-498b-a985-4d4105b8cd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5251a703-15a4-4f96-a875-f0657418765f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a3de6fb-1c57-48e9-a956-7addb280205a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00c9c4bb-37c5-4671-aaf4-bbc011f4e113"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad2b2774-d2c6-4dbb-a1b3-b02bf76a670f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94a90f30-d609-4ba7-b242-ce0a1fab5a15"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a7544b7-cca5-4872-9d31-2c2ee23c5a48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fad716ae-9f44-4188-aa98-be3c7bf108f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "063e7cca-9dab-44cc-a5e1-cd56ae61506a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a1a3454-9fe4-4917-93d6-3b16fd5b8eee"
            }
          }
        ]
      },
      {
        "id": "7a3a9b6e-1be0-48b0-b3fd-72374900f0b9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cd214a23-6060-4d8e-be02-b210dc664a46",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2191d84b-6232-4cf8-9502-aff785a06de2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b74a8ab-4f45-41bc-bc73-8ce1e6799b5b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5473d6c2-5aa9-4cd0-8b81-4ac9162a0388",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "879581cd-4eee-4cdb-9461-4308590800f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1b3999-dcba-4fe4-af8c-23b452747a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f8c7c86-5c08-47b5-bdc3-d0a313936e02"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa9271cc-86b1-4efe-a1be-7f3a2e943486",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b7d9a27-11b8-4eda-81e9-bcc5ec822862"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bc4ebf9-4222-4391-a518-d2c6b22c2e97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "143df4dc-1abe-4c2e-bb39-1c586722c6f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4bc0a898-e08c-4d64-98b7-007df740ff79",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ffa0efc4-5a63-43d6-8b0c-cda0d3a7c3da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85d81a04-e1f8-4ed8-9b3b-98338678e068",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4566bac7-d6ca-4ea7-9662-5bd04ab667e8"
            }
          }
        ]
      },
      {
        "id": "dd842b85-bead-479c-9fd6-86b409b316d1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "673eb4c5-a192-4003-80a1-1567b7c62f87",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b441375a-ba48-4849-b7c2-26cfeda1e442",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bfcaa845-0d16-4805-9721-e9ea77c21da1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ff47b54-d549-4b07-84e5-5766687bd625",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eca77c7a-7d47-474b-a90e-5ae634c28366",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 90.69824561403509,
      "responseMin": 10,
      "responseMax": 9137,
      "responseSd": 575.18019159559,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703291630825,
      "completed": 1703291665755
    },
    "executions": [
      {
        "id": "636a63c7-c3cb-4131-8a5d-d9fc05121a12",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "dfff8ff8-af16-4799-8c11-0940ecec90eb",
          "httpRequestId": "ed961172-0103-43d1-950c-ddb94b6c451a"
        },
        "item": {
          "id": "636a63c7-c3cb-4131-8a5d-d9fc05121a12",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "30a991e1-0aa9-46e3-bf53-f85e0519e451",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "3b4c905e-29f1-4fdd-b15f-4919c6d78d5a",
        "cursor": {
          "ref": "e5b27638-1d02-49a0-b642-7541cc5e5d40",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "58a5b677-1398-4071-b913-b4367feafd8b"
        },
        "item": {
          "id": "3b4c905e-29f1-4fdd-b15f-4919c6d78d5a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "70585b7d-a9d3-41a8-b551-09482e851fde",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "a57fff88-4a3f-406f-acb7-0573d467fcb2",
        "cursor": {
          "ref": "830be1d9-aac9-43ac-b800-277e00987cdd",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2834adca-e64f-41ba-9f8a-b8048735b008"
        },
        "item": {
          "id": "a57fff88-4a3f-406f-acb7-0573d467fcb2",
          "name": "did_json"
        },
        "response": {
          "id": "22776741-6ec7-44f2-90bf-cbb6381ac89a",
          "status": "OK",
          "code": 200,
          "responseTime": 307,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5286fd52-329e-41c2-9fe5-e30ca540d2c6",
        "cursor": {
          "ref": "a806bf7d-64e5-4842-ad62-5a239789721e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1fba4c45-8fcc-44ea-8738-06c1a67cdd64"
        },
        "item": {
          "id": "5286fd52-329e-41c2-9fe5-e30ca540d2c6",
          "name": "did:invalid"
        },
        "response": {
          "id": "be3a8440-84aa-4193-829d-6e2d11a01a3e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 584,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5286fd52-329e-41c2-9fe5-e30ca540d2c6",
        "cursor": {
          "ref": "a806bf7d-64e5-4842-ad62-5a239789721e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1fba4c45-8fcc-44ea-8738-06c1a67cdd64"
        },
        "item": {
          "id": "5286fd52-329e-41c2-9fe5-e30ca540d2c6",
          "name": "did:invalid"
        },
        "response": {
          "id": "be3a8440-84aa-4193-829d-6e2d11a01a3e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 584,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443c2e14-6f97-42d5-9b6f-ba8af2eaacd6",
        "cursor": {
          "ref": "c06b75a6-3cda-4652-93cb-f01bb3f4605e",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2f96fb77-e0d7-4dcc-baac-e5ee4b9357a5"
        },
        "item": {
          "id": "443c2e14-6f97-42d5-9b6f-ba8af2eaacd6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9ec4886d-d05b-4059-9184-de13669af5ad",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6feded3-4275-4fc2-acb9-ee63da4b55c6",
        "cursor": {
          "ref": "e4fb9ef5-6e0c-459d-b7d0-57deb89a6747",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "beb8f00e-50e9-42c6-af66-347442fe2cff"
        },
        "item": {
          "id": "c6feded3-4275-4fc2-acb9-ee63da4b55c6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "dffeddfe-b6b5-45ee-8f5f-4559610d51f3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa5da8f-3bc0-4ab2-9be1-60294290786e",
        "cursor": {
          "ref": "e24f56b6-a85b-44c4-b0da-2944be7e8a84",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "51e09517-b25e-438b-a09d-b3e572eb2c73"
        },
        "item": {
          "id": "6fa5da8f-3bc0-4ab2-9be1-60294290786e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c6b3f0cc-16e0-40f8-ab6d-83a8f67a0f6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29569c85-d261-4d26-ba49-48def5297ba6",
        "cursor": {
          "ref": "77a6004a-9ba0-4d06-8d5f-5c67df70203f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "aa256350-bbe8-4a45-9024-69f2cc2e2a36"
        },
        "item": {
          "id": "29569c85-d261-4d26-ba49-48def5297ba6",
          "name": "identifiers"
        },
        "response": {
          "id": "ccd7bcf6-5860-4bea-a0f6-0702d95766fa",
          "status": "OK",
          "code": 200,
          "responseTime": 36,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b5ddbb-aa66-4700-9842-43d78d72cc73",
        "cursor": {
          "ref": "d67a95c0-6c5c-4015-bed5-f661bbdda612",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cc1d0710-a26a-45d6-bab7-02a734ad206b"
        },
        "item": {
          "id": "56b5ddbb-aa66-4700-9842-43d78d72cc73",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9561babf-9c81-4567-8db3-cc4cc2a8e83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca0aa55-697b-4f6a-940d-4fd2cb985348",
        "cursor": {
          "ref": "240ed0c0-904b-4171-aa56-e39bea33464d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "829664ce-2cfc-4a30-b904-dc6562c9076d"
        },
        "item": {
          "id": "1ca0aa55-697b-4f6a-940d-4fd2cb985348",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ce5bc865-55c8-426d-a76b-a309fbbf45eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13383db-2eff-4353-9520-469dbc84dd49",
        "cursor": {
          "ref": "075f4978-a4d4-43aa-a6e7-7cf650e4d3a4",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1ff2a5b2-9731-402c-89e3-16dbbac89af6"
        },
        "item": {
          "id": "a13383db-2eff-4353-9520-469dbc84dd49",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "db2076cd-11df-41c6-a5f4-70ddbd2d5bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b490f795-c843-42e6-83fd-95ecde572242",
        "cursor": {
          "ref": "0fe98071-302b-4c4d-84fa-ca0f8496c030",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "db10aa2c-5e2d-4ab5-a7fc-c8f1b8115fde"
        },
        "item": {
          "id": "b490f795-c843-42e6-83fd-95ecde572242",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1bd5d91b-ee68-4792-82a9-629a55e90742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a8c86b-e932-4ce4-bc5f-d5be61a5ca2b",
        "cursor": {
          "ref": "53010d46-1298-491f-b7a5-2e31d7f290b0",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a2f00372-9e9d-49ae-abd7-df14c7a8ef1f"
        },
        "item": {
          "id": "46a8c86b-e932-4ce4-bc5f-d5be61a5ca2b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3972ab40-51ea-47ef-b56f-f37f1c251a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df82d790-f65a-45b7-9400-a9b35557490f",
        "cursor": {
          "ref": "863490e3-f5ed-4bd6-8994-4c6ca14f96f7",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d53e578d-2190-4abc-a04d-9a6f9732a129"
        },
        "item": {
          "id": "df82d790-f65a-45b7-9400-a9b35557490f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "777193cd-029a-4539-bc40-fabbfc09cbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4236769-8920-4d56-a4e8-2833227f4bae",
        "cursor": {
          "ref": "bd5fa843-9c27-47d8-a9fd-02bf826f7935",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0eec7aa6-e70f-4577-88f2-a1735bcf74ca"
        },
        "item": {
          "id": "f4236769-8920-4d56-a4e8-2833227f4bae",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "38575b35-1907-4c93-bf18-8593cda4f281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce105a4-5ea9-47cb-97b0-5dd28c720ffe",
        "cursor": {
          "ref": "61313074-c4a2-4b9d-aaa4-12209b7a4969",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "636c41ef-70e1-42e7-84e8-40d5cc609111"
        },
        "item": {
          "id": "9ce105a4-5ea9-47cb-97b0-5dd28c720ffe",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "961ec280-9fb1-4513-bd41-45a8d019bd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4bd496-33d8-45c4-b0f1-ded9e2de04d4",
        "cursor": {
          "ref": "ae26ff29-5d75-484a-bbb3-0439777dc44d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "df52e4a0-cab5-4d51-a5c9-20750fe78f32"
        },
        "item": {
          "id": "5f4bd496-33d8-45c4-b0f1-ded9e2de04d4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2880792f-406e-4f47-9cc0-5ec748142486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d2244f-12c3-4741-a158-c768ab7503ba",
        "cursor": {
          "ref": "e7b4db43-7b3c-46fa-98f0-68f70a143589",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "aec26294-1edc-4279-8145-ce612f1e2b00"
        },
        "item": {
          "id": "a1d2244f-12c3-4741-a158-c768ab7503ba",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0a480ad3-737e-45f4-af41-25cff1853e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b286fc2-d32a-40ed-ac4d-60443659e3fa",
        "cursor": {
          "ref": "cbda57ed-4917-4221-a49a-0e2337c5dad6",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cf190734-bb7f-4635-a225-7dc392c7f12d"
        },
        "item": {
          "id": "9b286fc2-d32a-40ed-ac4d-60443659e3fa",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b1f66b6c-2f83-4cfb-b367-f2a72b1d82ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7d320d-f263-4aa8-a064-94b0aa6a364d",
        "cursor": {
          "ref": "f6695785-2f3a-455f-bfb7-5477b75bdec8",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "124834e1-7098-4ae7-a557-03203e026b96"
        },
        "item": {
          "id": "7a7d320d-f263-4aa8-a064-94b0aa6a364d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b2e52a7c-c1f5-407d-9299-b17e0b344779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b6e205-09a0-4411-a520-a25250b177e1",
        "cursor": {
          "ref": "0412e88b-18b4-44ba-b1bd-7c6e8977dce7",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ae1e789b-e481-4b52-b713-9094f511eae3"
        },
        "item": {
          "id": "80b6e205-09a0-4411-a520-a25250b177e1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c121c5f6-994a-41f9-a837-b3df29106263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01911a12-d858-445c-ab92-7cd6f8151633",
        "cursor": {
          "ref": "b58f786f-c8a5-47fe-b0b8-9ce88de847d4",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b80d4bea-48ec-49db-b577-924facf5c242"
        },
        "item": {
          "id": "01911a12-d858-445c-ab92-7cd6f8151633",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2055bebe-167f-4e99-96f5-bd3e73392efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7134040-29de-49db-bb6b-9d261e11a58c",
        "cursor": {
          "ref": "ad95637a-d196-4f14-b0f3-fa51a6a0b067",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "da73e5b0-8e6e-40d8-a50a-c2df220db642"
        },
        "item": {
          "id": "b7134040-29de-49db-bb6b-9d261e11a58c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f13cb473-d0f4-45f7-9300-edef10c5aa09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7db624-0da1-4762-9039-4ecc008c431a",
        "cursor": {
          "ref": "202a5a82-06c9-4d6d-8d74-ee03e360e555",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "de06f90f-b860-4cd7-86d4-30b387b45de8"
        },
        "item": {
          "id": "1d7db624-0da1-4762-9039-4ecc008c431a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9e8a4b74-5987-42fa-b262-1e8a84e5a2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff4bb9c-ae68-45c9-8216-c1d00f5eac84",
        "cursor": {
          "ref": "99545680-48a8-4e20-9fba-9370ea0ebd8d",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ceaedbdf-6d82-4916-9bd1-81f829ba4518"
        },
        "item": {
          "id": "6ff4bb9c-ae68-45c9-8216-c1d00f5eac84",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "46a58155-404b-4f6b-b4ba-a1fef05a27e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22eea073-3c34-45d7-b15d-5eaf08b0ab32",
        "cursor": {
          "ref": "48c8b293-7771-4b8f-9dec-9131d2aeb3bb",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "170c7754-ea91-4e79-ad1f-178be90b0ddf"
        },
        "item": {
          "id": "22eea073-3c34-45d7-b15d-5eaf08b0ab32",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9fba199a-47c2-4919-aec9-296fcbad6425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c30bb6-95a2-4479-a915-698bb78fffce",
        "cursor": {
          "ref": "64e8d365-b745-4c80-adec-854a592620fc",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e9f5269d-df91-4339-8b87-34cbed4e18da"
        },
        "item": {
          "id": "56c30bb6-95a2-4479-a915-698bb78fffce",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "72d5f071-7bcc-4a51-bb90-f8de5838a40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78343cc4-585c-429c-b0b1-24af1dcfc8cf",
        "cursor": {
          "ref": "aff11589-8be8-4ff2-8ce3-2f3934b90a8e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c6720673-2290-4bfd-b44d-d963d3fdd32b"
        },
        "item": {
          "id": "78343cc4-585c-429c-b0b1-24af1dcfc8cf",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "895cda40-60e9-4ea8-b975-27b959041240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c824cb-8fe7-48ec-a35c-48ea01a47670",
        "cursor": {
          "ref": "ca1e9c5d-cd3c-4bf0-b76e-62199f9d8074",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6427aaba-a365-4ff9-aef3-8bdc17cad345"
        },
        "item": {
          "id": "e1c824cb-8fe7-48ec-a35c-48ea01a47670",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3092f039-e17f-4ca7-88f0-628c54bc442e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968c7190-d409-4592-a8b7-8b728bc775bd",
        "cursor": {
          "ref": "b183fabb-4d4a-4eae-97a9-a89532b3ec78",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1c73da07-9d31-4705-aac9-85cbcfef5837"
        },
        "item": {
          "id": "968c7190-d409-4592-a8b7-8b728bc775bd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e78b88a5-9b22-4a1a-a2bb-4389d1eab860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439e6c0b-4eb6-42f4-bf50-db4d717b7fe1",
        "cursor": {
          "ref": "a94993da-26da-4dfd-8fb6-7151953789fc",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6ee3e23d-e7a2-4eae-87b6-93cd12963a67"
        },
        "item": {
          "id": "439e6c0b-4eb6-42f4-bf50-db4d717b7fe1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "247f0bc2-7cd5-4196-9c58-4b137f96bab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05dba5c3-cf39-4f25-9238-573aa0cfa842",
        "cursor": {
          "ref": "02152221-2910-4ee0-8929-6b2bc814e8a3",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "52c53e58-ca69-4d4b-bf9a-a1dd9338b7f0"
        },
        "item": {
          "id": "05dba5c3-cf39-4f25-9238-573aa0cfa842",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1d9e312d-c4e9-4bc9-a3a2-a42a197aba70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1f38ad-c105-4f15-8dab-e4aa4195f4c8",
        "cursor": {
          "ref": "13614ed7-9916-4f7f-b756-30197464a964",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8f175d4f-30ce-4f4e-81ee-54389e6e4eda"
        },
        "item": {
          "id": "4d1f38ad-c105-4f15-8dab-e4aa4195f4c8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "418e92c9-95f3-45b6-8716-44afff6d67e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29342d1e-7c29-455a-8871-89c876663b10",
        "cursor": {
          "ref": "2a6b7907-f46b-4e99-9024-f17de71b28aa",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c3c454ce-2a45-4791-8fc2-d9b49fbd7252"
        },
        "item": {
          "id": "29342d1e-7c29-455a-8871-89c876663b10",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f262d8d0-5646-4842-b456-4a94cdff16bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0173de53-3598-4bda-9b07-c6d0dd02b8eb",
        "cursor": {
          "ref": "2b65efbd-b78b-4265-93b2-f2624f126a50",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9ebfa3bc-da04-4d63-a343-9f3852aa0ee3"
        },
        "item": {
          "id": "0173de53-3598-4bda-9b07-c6d0dd02b8eb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9477e8c1-1d29-4943-a168-773c6daba84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbb227e-fe4d-491a-b408-1b45167e83dd",
        "cursor": {
          "ref": "85b8414c-1a9e-43f1-94a0-111b565413fe",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5be65975-2219-4de5-98ea-3703d0a55c94"
        },
        "item": {
          "id": "8cbb227e-fe4d-491a-b408-1b45167e83dd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1a51f978-9d35-4587-9404-133a0e27a515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb35e67-5c4b-4a7f-a788-03916e2d421c",
        "cursor": {
          "ref": "e9378fde-c582-4723-a2a1-6866e359f33b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5314e198-8f4e-4ac6-a2bf-796e2898afbd"
        },
        "item": {
          "id": "aeb35e67-5c4b-4a7f-a788-03916e2d421c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "87d9f55c-6783-4757-88d2-ffc7751bb02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5399f9-87da-48cc-89ba-b633091c7220",
        "cursor": {
          "ref": "633ebd8a-31b1-49e5-9c07-7e99c565dab7",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "334517a9-fb50-40fe-99e8-91f834922af0"
        },
        "item": {
          "id": "ae5399f9-87da-48cc-89ba-b633091c7220",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "90f597cf-baae-462f-8a8c-89fb7c89db22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e4153c-bced-4950-a83d-e49ff5603212",
        "cursor": {
          "ref": "77c4c087-1695-4293-ac36-175095d21750",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "edbd8f4f-7542-4c66-9cc4-702b5a1da8cf"
        },
        "item": {
          "id": "f0e4153c-bced-4950-a83d-e49ff5603212",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f34ae315-d09d-46f7-b0fd-04dd4a52e2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb33751-f05a-4bf3-8dc1-29678cf97328",
        "cursor": {
          "ref": "c24f80c3-ffb2-4a26-a768-571c15be5a62",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a8cf2aea-8bd1-437b-9b9f-bcec3e54b3a0"
        },
        "item": {
          "id": "3bb33751-f05a-4bf3-8dc1-29678cf97328",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c360f9a9-ff91-4175-b358-d43ca94dbcbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75976e17-1452-4bb4-b177-fbcb3e85f2e9",
        "cursor": {
          "ref": "beaace3c-0348-4b01-a389-49b16076a256",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "777449d3-da09-4c8d-8ec0-00d0e7366813"
        },
        "item": {
          "id": "75976e17-1452-4bb4-b177-fbcb3e85f2e9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8a86bfe6-2f0b-4790-8108-ebc7303ef4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de8a3e1-375d-42c4-a6da-3d80582cc36a",
        "cursor": {
          "ref": "c4a6ad1d-daeb-476d-a61e-a3d7260a856d",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b36097af-3b93-44d6-aa69-968237f16045"
        },
        "item": {
          "id": "1de8a3e1-375d-42c4-a6da-3d80582cc36a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ca5923ef-b659-463d-a015-4514b85628fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c5b4c2-96ef-472b-a73f-513575a2f78c",
        "cursor": {
          "ref": "cc9926e7-f52f-43eb-9f38-b4e65eedda02",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "69a7d549-1fdb-4bc8-9181-4b83a761a558"
        },
        "item": {
          "id": "33c5b4c2-96ef-472b-a73f-513575a2f78c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d7f63078-65ec-48b1-ab80-df22b7acbdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bce2d5-5b36-4d12-b828-a58cd78da3e7",
        "cursor": {
          "ref": "feb6f9f1-187c-4390-ad08-27090945029a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2435242b-3488-4162-885f-23403af6612a"
        },
        "item": {
          "id": "c5bce2d5-5b36-4d12-b828-a58cd78da3e7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a56afdb4-40dc-4a42-be5d-711a7b0d14fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efcf26b-d1dd-4c2f-b8c9-f028357d34fe",
        "cursor": {
          "ref": "208a2a10-c135-4d1e-81b2-f015562bb19a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3ec2d193-44b4-4966-97c1-ca7401f56726"
        },
        "item": {
          "id": "2efcf26b-d1dd-4c2f-b8c9-f028357d34fe",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a2d82551-a1e8-45e7-9cec-53c6917e05d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d28ef6-b416-4d44-8fb2-583aef27ae19",
        "cursor": {
          "ref": "1e01156f-df8e-4f6e-8481-269eec0e03a3",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6a70eb0d-40cb-48d7-a3ab-2116d55c1fa6"
        },
        "item": {
          "id": "54d28ef6-b416-4d44-8fb2-583aef27ae19",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3ab45462-dc6d-49b7-8480-47221f4378fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978663b8-2275-47be-bfac-ec16735a57fc",
        "cursor": {
          "ref": "435985ab-df9e-43ad-8910-c73904ac8991",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dd7b8332-35d5-4fb9-a832-11b27db4e629"
        },
        "item": {
          "id": "978663b8-2275-47be-bfac-ec16735a57fc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b43abca2-65cb-4386-a448-2f9d6f311343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 181,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92494839-82bf-408b-b3a7-30ea6eedc78f",
        "cursor": {
          "ref": "b869ceee-78ba-4c93-97dc-96c65d870ab3",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a55ff39e-c4dc-41f8-b3b8-e90e7b9d4f38"
        },
        "item": {
          "id": "92494839-82bf-408b-b3a7-30ea6eedc78f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2e339fe2-71d6-4e60-ac43-cf9977859ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5348fdb3-6e63-4584-9457-c6622c4e5a44",
        "cursor": {
          "ref": "73b2a3f7-407d-4401-946e-6583e18dcb28",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1357104c-ce09-4ab2-9cc9-ddd384ea720d"
        },
        "item": {
          "id": "5348fdb3-6e63-4584-9457-c6622c4e5a44",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fae02909-a052-414e-a0b5-802fbe28553f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb959d2-3915-48c2-9148-c88f4a7c6ac2",
        "cursor": {
          "ref": "e98526c2-22dd-475c-9534-00adc2b1fe8b",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "593b0eee-359b-4c43-b610-bc74aafd7fba"
        },
        "item": {
          "id": "6cb959d2-3915-48c2-9148-c88f4a7c6ac2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b61f6787-8f1f-471f-b8a2-aa0990b52393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7489f546-c17e-4bf9-9127-0ce7a1d829c2",
        "cursor": {
          "ref": "89d92d2c-1fb0-49fe-b020-0c30dca62e14",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d5a320d1-9525-44ab-9bb7-09f8db78f7cc"
        },
        "item": {
          "id": "7489f546-c17e-4bf9-9127-0ce7a1d829c2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "978ed46e-f82c-464a-a0c8-85c1ec37cd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82df7169-ae9f-4b89-85e2-62168d843300",
        "cursor": {
          "ref": "cc3509f5-0cc8-4aba-afd5-f50edba65367",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9573ee74-8efa-47cb-8b05-400bc08a94b0"
        },
        "item": {
          "id": "82df7169-ae9f-4b89-85e2-62168d843300",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "30927af4-6376-4a12-8ec3-b5911969654b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21143699-63e6-4694-b91f-1282b57641cf",
        "cursor": {
          "ref": "d86d5e3a-d2fc-4887-938e-71110fd8ba33",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "799280de-b66c-4288-82fc-c9c5eaae7967"
        },
        "item": {
          "id": "21143699-63e6-4694-b91f-1282b57641cf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3db75139-b265-4958-af8f-bdb4c1baac39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91d76ca-60d8-447e-92e2-f1b34cec8c79",
        "cursor": {
          "ref": "ab6b442d-e1d2-48ed-b811-65ee67b21b45",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5c742abb-cbf5-48bd-8974-12acbeb8c35f"
        },
        "item": {
          "id": "d91d76ca-60d8-447e-92e2-f1b34cec8c79",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5f4d165b-d368-4a71-8513-b3c3514c91ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dec6762-6a83-47c2-94ab-db6682a1c160",
        "cursor": {
          "ref": "1e4ddcd6-8382-4bdd-91af-1f274b2a7dc5",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "652146ad-dc25-4af4-97ae-f78f0a28f582"
        },
        "item": {
          "id": "0dec6762-6a83-47c2-94ab-db6682a1c160",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "73385479-cdd8-4d5c-a05f-8e28be35aaf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cc8486-e421-4dd1-b1d1-51c6391a7dfe",
        "cursor": {
          "ref": "ce3f2847-70ef-424d-88ba-ab7f5f0ad90c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "574605d2-a51d-446a-8133-13ad150547cf"
        },
        "item": {
          "id": "98cc8486-e421-4dd1-b1d1-51c6391a7dfe",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "be1dc392-2644-4f18-a7a7-f92ce251a7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33d21f4-6a8e-44c6-9520-6273f9eee944",
        "cursor": {
          "ref": "28c0672b-d35c-4b1f-b33f-3c0fd3fb204b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e88b520c-c78a-4a59-85cd-d12b0df7c127"
        },
        "item": {
          "id": "b33d21f4-6a8e-44c6-9520-6273f9eee944",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "455857e1-adf0-423d-a14f-60d7db01cb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932cfe35-2169-4fa7-9c84-95d425817cdf",
        "cursor": {
          "ref": "4c0daa86-7d22-4234-b40c-e6234ca3b4b7",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "db1aa0c1-8ae5-4804-8569-67f7123ef3c7"
        },
        "item": {
          "id": "932cfe35-2169-4fa7-9c84-95d425817cdf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "59702677-c8fe-472a-858e-df916538ce57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc48e7b-aaa3-41fd-be6d-809e6dc6cfef",
        "cursor": {
          "ref": "543eaf27-67ab-4f14-8db4-c884bf7813bf",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2c653366-d712-4477-9d00-853cbc97bc99"
        },
        "item": {
          "id": "9cc48e7b-aaa3-41fd-be6d-809e6dc6cfef",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5cda38d1-dbe4-4d4e-945a-659096535b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d00265-7343-427c-8c71-ae19f2fbb400",
        "cursor": {
          "ref": "16b862f8-5bcc-44fe-9ad0-092d4872a46a",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e2591ed0-d06e-4adf-9e0c-2bda12616c78"
        },
        "item": {
          "id": "47d00265-7343-427c-8c71-ae19f2fbb400",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d9bc2057-7d98-4145-9887-b461185cb3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26871c14-f81a-4f29-9c88-228d1a60c53d",
        "cursor": {
          "ref": "0b2c400b-f248-484a-b88c-479c73c3c7c6",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "69da8587-fb0d-4023-9935-7332a0b9e93f"
        },
        "item": {
          "id": "26871c14-f81a-4f29-9c88-228d1a60c53d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "131703e1-b19e-4f0f-a9fe-21fb790bdab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c6c80d-a18c-4b83-8237-f77351095eee",
        "cursor": {
          "ref": "e4cde787-d84b-498c-95ec-78fe236a66d9",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "30d93821-2302-47c9-bd0a-03bb459367a0"
        },
        "item": {
          "id": "33c6c80d-a18c-4b83-8237-f77351095eee",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "24d848eb-ef78-48ad-b9f1-185c9f4aa92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428d2c22-7997-4068-82fc-2cc6502a5193",
        "cursor": {
          "ref": "9dff0528-62af-474d-bfba-2d089d06b7ad",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8c6a7f6e-5eb2-44c9-abe7-6db9efe1cf59"
        },
        "item": {
          "id": "428d2c22-7997-4068-82fc-2cc6502a5193",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "af792026-7eeb-4260-aea1-f77eeebf6f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e414007-19c9-47bc-ba5e-23ca3a93b375",
        "cursor": {
          "ref": "cd87a737-bcfd-4374-87ac-0b46090ff378",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "349398fd-4884-4aa9-ab46-145135951d13"
        },
        "item": {
          "id": "3e414007-19c9-47bc-ba5e-23ca3a93b375",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e6ccf76f-220e-4b6b-8338-9fb2e4fd1846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f2bae7-0afa-4d54-bf80-65127db437e6",
        "cursor": {
          "ref": "6081207e-43c6-4d7f-b135-9adf74cf0b77",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a6f29c53-ef5c-4ec3-833c-ea9c834c473b"
        },
        "item": {
          "id": "67f2bae7-0afa-4d54-bf80-65127db437e6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cca7ba94-a20e-4a3e-8675-b6b2559c829d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9656622c-69fc-45ae-b816-b5afd70c499f",
        "cursor": {
          "ref": "abbd6f83-fc2e-4f58-ba58-37f2c5dee4a2",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "43beb210-d8a2-46ab-a1c3-e515bbaef041"
        },
        "item": {
          "id": "9656622c-69fc-45ae-b816-b5afd70c499f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "09864d8c-bbee-4ddb-9ddb-aca66e2ddec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c7fa25-a446-4460-9eb0-2f815d049e1f",
        "cursor": {
          "ref": "7895e1b6-2a77-4191-967c-460895656ab6",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4b106dcc-b066-4ff4-8e99-22eaba8cea13"
        },
        "item": {
          "id": "e3c7fa25-a446-4460-9eb0-2f815d049e1f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8cf71bcf-c9f6-409b-b13f-c0177c489aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c7c6a7-216c-481a-bc0b-dd3b5bc40275",
        "cursor": {
          "ref": "3f20fc2f-bb83-47e0-96d8-2647709c28e7",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "14e9e7d7-a758-4a2f-ba6d-5a44846a1b49"
        },
        "item": {
          "id": "53c7c6a7-216c-481a-bc0b-dd3b5bc40275",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e2607167-2e65-43f0-bded-1a89947ad979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844bba0c-9a47-4c47-8cf7-b837c32db23c",
        "cursor": {
          "ref": "f046bccc-1b61-4031-b0a9-55305d878252",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f66181bf-9551-4903-aee5-809acd52967d"
        },
        "item": {
          "id": "844bba0c-9a47-4c47-8cf7-b837c32db23c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bf25f9f5-37d3-4b60-8981-d37f811ba256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540e81f4-7756-417f-afba-4ebbfe59ec71",
        "cursor": {
          "ref": "5b2c7dfc-535f-4802-b7ae-1787e163f7fb",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "90718d81-aadf-43a1-8bc3-266fbd587ba9"
        },
        "item": {
          "id": "540e81f4-7756-417f-afba-4ebbfe59ec71",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7d5a3c5b-f942-4ee1-9862-b0fe14b242c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9738d4-7d35-4d16-a5a8-03c890bd6324",
        "cursor": {
          "ref": "00e6f922-d05c-4079-91b3-0fb3628db65b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "640dd6e5-97a7-4952-b1d6-27e5c6777bc0"
        },
        "item": {
          "id": "4b9738d4-7d35-4d16-a5a8-03c890bd6324",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "becf54bf-e184-4e98-ba65-dffb7ecaab9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65aba4f1-6edd-41c6-922a-ae17c4787c3b",
        "cursor": {
          "ref": "d0f56006-ca99-46c5-810c-3bbda0ee473d",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0fa064bc-21b1-4a77-9f49-3d25977452ef"
        },
        "item": {
          "id": "65aba4f1-6edd-41c6-922a-ae17c4787c3b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "97369db6-e693-464d-a461-6e8a44bc60d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58180f1f-35e1-4c70-ad3e-96b49b3e1961",
        "cursor": {
          "ref": "f9af7de0-fa03-45a5-a62b-93cff8acb9b1",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e4eae6ea-4c31-4363-806a-3e44629fbb79"
        },
        "item": {
          "id": "58180f1f-35e1-4c70-ad3e-96b49b3e1961",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8031a0cd-f528-4f94-91d3-89309841cc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9909bb-785d-4509-985b-1bce69e3af35",
        "cursor": {
          "ref": "b6758eef-e153-44f0-bc4e-cfcc70fee04f",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "62b3c563-5aa4-4025-ad94-a7905163a42f"
        },
        "item": {
          "id": "dd9909bb-785d-4509-985b-1bce69e3af35",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "68942f16-9ce3-4a40-9855-3049e727e8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd16889-0cc3-40a5-af1a-6c4f5c924d6c",
        "cursor": {
          "ref": "c1922f32-f755-4752-8570-880b87101533",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "467926f5-153f-423a-95ee-31b0e0b26b02"
        },
        "item": {
          "id": "7fd16889-0cc3-40a5-af1a-6c4f5c924d6c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d7413079-b380-4c20-a113-e041ce169271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1542eb1b-6cbc-485e-89a3-9bc3415475a7",
        "cursor": {
          "ref": "d5b2e569-6836-4096-856a-719204fcab13",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "86d4f764-7068-4ebb-a31e-180f1b4bf809"
        },
        "item": {
          "id": "1542eb1b-6cbc-485e-89a3-9bc3415475a7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "22f058c0-4cb4-4f55-9223-f023bfb120ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bca8f8c-f28e-40a8-83be-b02678ed1dd7",
        "cursor": {
          "ref": "dba83708-d59e-47ed-a895-4a4c58435fe9",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "18e5cedd-e568-46be-9f8b-11dd57ba2489"
        },
        "item": {
          "id": "2bca8f8c-f28e-40a8-83be-b02678ed1dd7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cc2c9aca-4606-4f27-937a-ebef6606ff4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633a67b3-fb47-49f7-922c-348a62d095d3",
        "cursor": {
          "ref": "63c8963f-7827-4d2f-aa0c-f71c59afdb1c",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "69276816-efaf-4420-a821-289dce1c5a15"
        },
        "item": {
          "id": "633a67b3-fb47-49f7-922c-348a62d095d3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "91ffa955-e3d4-47dd-8f8c-e4238547df28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34607eb-015b-46b3-a1ff-4106425466d1",
        "cursor": {
          "ref": "3cbb1c54-a45f-4d22-97db-7e40b1255fdf",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f992ab72-8a2e-4f01-9d2d-b2b2a5ef1e44"
        },
        "item": {
          "id": "b34607eb-015b-46b3-a1ff-4106425466d1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f1e52e07-aa02-4da5-aa3a-38cb8f159be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23f4ab8-e472-4eca-96e7-a20d0bae38ee",
        "cursor": {
          "ref": "730d7c7e-f850-4947-855b-9ad871892cfd",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "900e381d-4fab-4b1f-a6d6-ea3d38d91b3e"
        },
        "item": {
          "id": "d23f4ab8-e472-4eca-96e7-a20d0bae38ee",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "81754ef3-3348-4ca8-86ec-1f472e985f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f26b8c-0a43-4485-8240-6ee38bbf487c",
        "cursor": {
          "ref": "217966d4-ad2f-41e0-8572-9e331de58130",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e927c655-b5d6-424a-a827-1fa5cdf950e7"
        },
        "item": {
          "id": "b9f26b8c-0a43-4485-8240-6ee38bbf487c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b3d27637-858e-4c67-8d2d-d228453c7a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083ce999-9228-48f6-8b46-5a41b1523ecb",
        "cursor": {
          "ref": "7726f978-84c4-46da-87ad-c49c4ec556ed",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bb2313a4-377f-4cba-983c-5d1eadaa985e"
        },
        "item": {
          "id": "083ce999-9228-48f6-8b46-5a41b1523ecb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "615c5b37-7809-4044-8e59-1627d5ed2d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5432022d-00a4-4923-a7e4-c3dc6c912aea",
        "cursor": {
          "ref": "f42303fc-fd4b-4142-a297-4c64661b130c",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "00f0a18c-88c6-44a5-9d6c-c71e6a38858a"
        },
        "item": {
          "id": "5432022d-00a4-4923-a7e4-c3dc6c912aea",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "10c2c53d-30ea-47db-8fd9-64583a04e5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b6444f-75bf-442c-9165-7d3ddfd57d20",
        "cursor": {
          "ref": "401ada11-05ec-4b19-8ee6-65373a6e4c84",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "50642bcd-8755-4261-b37e-90a0d4700b32"
        },
        "item": {
          "id": "47b6444f-75bf-442c-9165-7d3ddfd57d20",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "045450b5-3af3-41b7-84ec-3eea2146b34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2506794-39ec-4f87-8e70-4396ee3ea851",
        "cursor": {
          "ref": "acfb8fea-10d4-43be-b7af-667a1bab67b9",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f385aef2-db3b-4b1d-a5df-796e0698467f"
        },
        "item": {
          "id": "e2506794-39ec-4f87-8e70-4396ee3ea851",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "112cf36e-43b5-4438-b2aa-6b69a68ac471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c92de1-71cd-4f4d-8c56-d93b17e9c853",
        "cursor": {
          "ref": "f87fbfa8-0fe7-4114-9ff0-ad8207e59c67",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7eaa521c-d972-4d5c-83b9-2c9797e0da9d"
        },
        "item": {
          "id": "18c92de1-71cd-4f4d-8c56-d93b17e9c853",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "58a9bd49-fd8c-4032-befc-7e548f8dc782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fee4855-c97e-4773-9392-ab832279af46",
        "cursor": {
          "ref": "b659681e-1999-4ffb-8a33-31695ce54f08",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "eb5b4b12-2ff2-4efc-84b7-86593c6cac12"
        },
        "item": {
          "id": "0fee4855-c97e-4773-9392-ab832279af46",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4805312d-d5f2-4936-b594-8deb82754896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2be674-004b-400d-b4aa-f376ea72b054",
        "cursor": {
          "ref": "be9a3b80-7fbb-43c2-82bd-096b0bbf1917",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6f8e98b3-6a8a-4f00-93b7-60fa07af05f2"
        },
        "item": {
          "id": "8c2be674-004b-400d-b4aa-f376ea72b054",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ffb09e8b-9d93-4394-867f-cdca535fe3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a921ced3-e8a7-4f5f-93a6-980c09841639",
        "cursor": {
          "ref": "4e8721d0-a199-4038-bcef-3852ffe8fa82",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f8105db0-f493-4206-b0fb-656a97e11d83"
        },
        "item": {
          "id": "a921ced3-e8a7-4f5f-93a6-980c09841639",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5ba00351-c281-49dd-8b1b-410717bd8742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfca7893-2495-47ae-9f3e-bb7a5853fb88",
        "cursor": {
          "ref": "707379a7-fa16-4547-bd90-3332b976c56d",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2b4b3461-97ba-4762-8433-a41f90d4c421"
        },
        "item": {
          "id": "cfca7893-2495-47ae-9f3e-bb7a5853fb88",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4f991348-573b-4b0e-8d7a-4d0e2e3055eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594cd34e-45d5-480e-a645-1972ea725b22",
        "cursor": {
          "ref": "948b1cc8-0f36-4058-9d48-5710784604c7",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "36ebfb96-aa64-46eb-8554-f8dffd69511c"
        },
        "item": {
          "id": "594cd34e-45d5-480e-a645-1972ea725b22",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b92fcb9a-5596-4822-a2d4-e02f36bf0e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4fcc6b-e24c-4061-b540-9b21dcec863c",
        "cursor": {
          "ref": "99d74faa-c525-417c-87f8-fcef3a21a487",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3b8f5cb1-7609-402a-96b3-610ee2989100"
        },
        "item": {
          "id": "ed4fcc6b-e24c-4061-b540-9b21dcec863c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fa40a5ca-15b1-40f4-8c7c-947356368dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476c42eb-4fc7-42fd-b469-0f2d8d8e7cbd",
        "cursor": {
          "ref": "f1c79bbc-e581-4e40-8ff2-7fe008108adb",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4f4e2a98-85a5-46b5-b041-6317b04a51db"
        },
        "item": {
          "id": "476c42eb-4fc7-42fd-b469-0f2d8d8e7cbd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0b671c00-7ffe-4f94-b533-0be4fff4be56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bbc43f-b44e-406a-9914-fc8f83128ec4",
        "cursor": {
          "ref": "e626c461-ddb9-4223-bd5f-5b6314565c0a",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "730a2215-5a47-4ca8-9240-4112916d2bd8"
        },
        "item": {
          "id": "f5bbc43f-b44e-406a-9914-fc8f83128ec4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ad117f17-7f77-4d7b-b475-5c647a82226b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdbcc9e-d22c-4693-82c5-41dd72b5612b",
        "cursor": {
          "ref": "c0ff272d-b6ff-4a9d-91af-833085387c4d",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7cc59c1f-4c5d-4281-b543-b8d63b2a130a"
        },
        "item": {
          "id": "fbdbcc9e-d22c-4693-82c5-41dd72b5612b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "42d0a1f4-aa0e-475a-a3a1-4783082ecacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7104b8-cbf2-40a9-ae41-1e9fbc1bd12a",
        "cursor": {
          "ref": "aa190d01-c29f-43e0-9505-4fa57aee834e",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3faa629e-e5f6-4d92-8f8a-fddb0f9f503f"
        },
        "item": {
          "id": "bb7104b8-cbf2-40a9-ae41-1e9fbc1bd12a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ba11745b-261d-4f8e-977a-a2577fcf6c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ced264-5b12-4159-b383-a09bcf612b8e",
        "cursor": {
          "ref": "a51fdc52-a578-4715-aa6e-36c0c10ac376",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b58913bd-4049-4b68-a414-e258c5bef2fe"
        },
        "item": {
          "id": "55ced264-5b12-4159-b383-a09bcf612b8e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cbde8c9a-80ed-479d-9bf3-c7126091a9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ce13ae-d30f-4c90-8ea6-ed74e7698c12",
        "cursor": {
          "ref": "31a34a34-de92-4545-bd21-783520bbfc3d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2ef767a3-8287-4ff8-a0a5-f19c5646244d"
        },
        "item": {
          "id": "28ce13ae-d30f-4c90-8ea6-ed74e7698c12",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "00e2ef6f-cc04-4b0b-8da2-0be3e49ab5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b61079-c210-4b7b-980c-e1ffa674598d",
        "cursor": {
          "ref": "0a33d668-fd84-4790-af86-cd66a5b5805a",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d5b1f144-3952-412d-8760-f785a87484b7"
        },
        "item": {
          "id": "48b61079-c210-4b7b-980c-e1ffa674598d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2bf83fd2-6200-4ece-8a03-4f03d7acce08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb098b84-8e12-4776-aac8-bc30bf513179",
        "cursor": {
          "ref": "9616816b-e062-4359-b799-62f28f2f4dde",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c4d02eb4-58f0-4b24-8d82-5b4be85586f8"
        },
        "item": {
          "id": "fb098b84-8e12-4776-aac8-bc30bf513179",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8d047b51-c340-4332-bd33-f854ab8503a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce05899-8d06-42c6-b053-86be3b5b1e11",
        "cursor": {
          "ref": "ec4526be-755e-4ba6-8366-e7c83f94b73f",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "848a591d-0ecb-4f8d-8d77-c4fa22286451"
        },
        "item": {
          "id": "2ce05899-8d06-42c6-b053-86be3b5b1e11",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "86ffa000-6846-4e6a-9cee-d8670cc2631b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e978fbe-68d2-42ca-8f46-b2e4f8508c67",
        "cursor": {
          "ref": "a59f0f7e-ae32-4d4c-a43d-436b8765b59b",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "75376401-f2f6-4574-b92b-44035386ae30"
        },
        "item": {
          "id": "6e978fbe-68d2-42ca-8f46-b2e4f8508c67",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "22fd955d-7ea9-4e9b-84d2-7bb924c60e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "7f8726a0-bcd4-4fa4-a0eb-ea9f61fd79fd",
        "cursor": {
          "ref": "ee8db116-8e3c-4b1a-a079-d637c8eb44e2",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "31157748-0b2d-4e3c-9265-17d1eca45dcf"
        },
        "item": {
          "id": "7f8726a0-bcd4-4fa4-a0eb-ea9f61fd79fd",
          "name": "credentials_issue"
        },
        "response": {
          "id": "977c58f6-7bb3-4ad7-a980-a8ce8e49809b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e81fdebd-da8c-4ab9-b3fd-aeab9680dbef",
        "cursor": {
          "ref": "0a3133c2-d0df-4d59-8611-57520f148661",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "facfc851-517f-4baa-bfeb-d21b1148d20c"
        },
        "item": {
          "id": "e81fdebd-da8c-4ab9-b3fd-aeab9680dbef",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "aca2909c-40de-44af-8f22-4b6a5478e495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8ba65c62-cefe-4f2b-8196-877f6605d868",
        "cursor": {
          "ref": "a65e53d0-4b34-4147-a896-f4c436bb315e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3a9a30d1-9061-4b3a-b118-5f89e5b51112"
        },
        "item": {
          "id": "8ba65c62-cefe-4f2b-8196-877f6605d868",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "11ec90ad-05e7-48fe-83e4-c2567cb3a386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "719587c2-7c01-4b59-a8cf-06e1a658d74b",
        "cursor": {
          "ref": "8c25ea81-8f2f-4ed5-a84a-0296889e4baa",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c15eab19-b12e-4c23-93ec-211fcfb70f77"
        },
        "item": {
          "id": "719587c2-7c01-4b59-a8cf-06e1a658d74b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a43078af-336f-4615-9b9f-80ff10861479",
          "status": "Created",
          "code": 201,
          "responseTime": 9137,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "403f549a-bc2d-4bf0-b81d-8df641640794",
        "cursor": {
          "ref": "20240702-dc82-486b-bd6a-a4248c4f3d9d",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1503cc6d-4400-4dae-8f56-7debd1ef49d4"
        },
        "item": {
          "id": "403f549a-bc2d-4bf0-b81d-8df641640794",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9f08c0a9-56a3-4c1e-b38c-145aa52ed05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "032bb4a1-1d7d-4f4d-882b-4e3d0f7e493f",
        "cursor": {
          "ref": "113deade-5376-4401-880f-8413a81a024c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1eaf8e32-a88d-42d6-be64-ca603d77bc53"
        },
        "item": {
          "id": "032bb4a1-1d7d-4f4d-882b-4e3d0f7e493f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e3ffbf12-8a5c-4c09-a294-d3f7dbc62c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "66993688-3794-4279-a9c3-11cc14894715",
        "cursor": {
          "ref": "9a1d7d80-e1f4-4718-a5af-85b88c3afe4a",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "602cdf73-ef7d-4ae2-a1ba-4994c008cdc5"
        },
        "item": {
          "id": "66993688-3794-4279-a9c3-11cc14894715",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e9434334-152e-4f17-8f6c-9571d42903bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5448467e-71d1-4093-a7c5-27db5c784478",
        "cursor": {
          "ref": "5262d220-cd08-437a-ae4c-c6af02e1da60",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0c4ba0e0-6572-419f-8808-1a42030e3c8c"
        },
        "item": {
          "id": "5448467e-71d1-4093-a7c5-27db5c784478",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4a67ee2f-17c4-4209-98d3-c220106cbdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51261df6-d934-4402-ba36-c26d8d075d1a",
        "cursor": {
          "ref": "d648d488-0b41-43e2-97d8-d23f01e70c6e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a226f263-c729-428b-8e10-89d95f7573b4"
        },
        "item": {
          "id": "51261df6-d934-4402-ba36-c26d8d075d1a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7d745fb0-48f4-46b9-856d-698ff43d0a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334f0355-eba3-4a4c-b408-1795f007054a",
        "cursor": {
          "ref": "928b343e-b066-4961-b73a-5472771a798a",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0d398363-13c3-4cc5-8b42-fd5f49473e66"
        },
        "item": {
          "id": "334f0355-eba3-4a4c-b408-1795f007054a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a1e64066-0cc9-4c50-9313-f3bf2e77ca35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33678894-1c84-468c-81bf-5d9548ef2421",
        "cursor": {
          "ref": "130f879f-89c2-4ca2-b3e1-0d8b33b063b8",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "74621afa-b7cd-4213-b0f0-b77cbf774bbe"
        },
        "item": {
          "id": "33678894-1c84-468c-81bf-5d9548ef2421",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "919575df-1a78-44e3-8ff0-550f66bb0a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4a4c1a-dfa8-4366-acd1-64a7d95b8b5c",
        "cursor": {
          "ref": "c716be95-8e30-4f1e-b0da-cf1547c94d61",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "524f4a6e-ef7b-4d21-9933-c610479bf613"
        },
        "item": {
          "id": "4e4a4c1a-dfa8-4366-acd1-64a7d95b8b5c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "96ee0651-78fc-4753-bb1f-bb238a01e988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab344dbf-8354-4fef-88f6-e84b73b67aea",
        "cursor": {
          "ref": "ce39fd18-c028-4d35-8329-c78d752bfc28",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "38ac848c-9518-40d0-9de3-9e6e9759240d"
        },
        "item": {
          "id": "ab344dbf-8354-4fef-88f6-e84b73b67aea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7437cfed-4124-4e83-913a-0c3d2ae23960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4f91a5-c188-44ce-b0c6-938b6a4418ec",
        "cursor": {
          "ref": "a46cb1c8-1663-4a83-b94c-57f9e20b5203",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dd3b23d8-85ee-47f1-81f9-4c62b9a8ce81"
        },
        "item": {
          "id": "9b4f91a5-c188-44ce-b0c6-938b6a4418ec",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "26c8910a-822e-4db2-92d5-532ae99e929d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f188a4c2-5ead-4ecb-98b0-6a0b57394022",
        "cursor": {
          "ref": "113e33a4-b6ac-43a5-9a77-190985e25ba9",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3c0f7b58-6b3d-4368-9196-4a7f8b7124fd"
        },
        "item": {
          "id": "f188a4c2-5ead-4ecb-98b0-6a0b57394022",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d867c747-0958-4dba-95cb-6764d7c6a608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1a0db7-0e4e-48f3-a796-3ef0e8c46a58",
        "cursor": {
          "ref": "586a82ff-33f1-4364-8036-f4743f4f4d9f",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fcc67dbe-46f8-43bb-a8fc-4ea75bbfb5dd"
        },
        "item": {
          "id": "4e1a0db7-0e4e-48f3-a796-3ef0e8c46a58",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e8b9b0a3-5e36-4acb-aa43-d4ca91b1bff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e257766c-ea16-4d8d-83e5-da43f29b8f94",
        "cursor": {
          "ref": "55f9309d-91f7-40c6-b082-12f48cc922d6",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2ae0aecb-8aed-44c5-bbf1-f3b0f3c62d58"
        },
        "item": {
          "id": "e257766c-ea16-4d8d-83e5-da43f29b8f94",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3e9f863e-5246-4e93-b6f0-25d75f75b035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93163276-8026-40fb-892d-177489370607",
        "cursor": {
          "ref": "0d4ba19e-45cf-41f5-8a49-2a5147ce157d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3c8fbf57-1ffa-4085-a4c8-08ee98161dfe"
        },
        "item": {
          "id": "93163276-8026-40fb-892d-177489370607",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "29467cb6-4991-4101-a768-66ada5319ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786be6bf-f1f7-454f-b6db-9a42d47e1fd0",
        "cursor": {
          "ref": "3aced084-129c-44ea-af3f-071d51fd838e",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "59dd03bc-e739-4d52-829a-5a21f871ffff"
        },
        "item": {
          "id": "786be6bf-f1f7-454f-b6db-9a42d47e1fd0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "560604d9-11d7-499f-8b6b-ad9164f9868f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e1ecbd-b785-4188-90fa-d6630d0ac7dd",
        "cursor": {
          "ref": "9333cb09-8eeb-4b21-8cc7-a33d8b94df10",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4b59a956-ca07-4806-9137-6ca21fa64160"
        },
        "item": {
          "id": "96e1ecbd-b785-4188-90fa-d6630d0ac7dd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4fac558d-8f49-47fa-911d-2699b1ef8201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d4cfe4-67ba-4154-8015-c3718da969dc",
        "cursor": {
          "ref": "baad37f1-8690-4365-a083-0fc28279740e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0d0e93bc-2235-42cc-bae4-f55d971e12ba"
        },
        "item": {
          "id": "a1d4cfe4-67ba-4154-8015-c3718da969dc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "65091135-db2d-4d37-a2d8-f9d70038e89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa66fc3-b279-400d-81c2-7798c798b9b9",
        "cursor": {
          "ref": "a5ca9397-4b00-4a79-b776-c973ab2f71ca",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "05707273-d061-462c-97af-9fea967c2ff3"
        },
        "item": {
          "id": "0aa66fc3-b279-400d-81c2-7798c798b9b9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "50d15962-d7e1-4f58-aa5f-4a7041c245f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7ad1cf-4e92-4fb0-a784-b384a56441bf",
        "cursor": {
          "ref": "28393b5d-2948-44a6-8180-c7aae19585e7",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7b787e35-1a23-47b0-95e7-1c0f3e4658c9"
        },
        "item": {
          "id": "2b7ad1cf-4e92-4fb0-a784-b384a56441bf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "67bb4812-7259-4f9d-a2ff-5ed3756d6a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1249e317-7172-4fba-899c-121e18a25d00",
        "cursor": {
          "ref": "11524b79-c683-4c70-8c04-fc8cd9766a50",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "18b5465a-a6f3-4abd-82e5-d9c43225b8aa"
        },
        "item": {
          "id": "1249e317-7172-4fba-899c-121e18a25d00",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d861315c-eaed-44e3-8efa-46c71d19cd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425a1047-647e-4a23-b90f-8f33caf13495",
        "cursor": {
          "ref": "708f7ab2-829b-48e5-a2bd-b16059c3eee5",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2475a3e6-3ea2-4e92-9810-8ddabd0d4abd"
        },
        "item": {
          "id": "425a1047-647e-4a23-b90f-8f33caf13495",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "83a1398c-8532-41aa-a79b-3b3f00ec6333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36869c08-356b-42a7-8f10-e657667d1dc0",
        "cursor": {
          "ref": "5848e1d6-dda7-4c08-8999-4d2949847ebd",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "44d1de5a-0510-4a55-8a14-0d2ab4b9d4eb"
        },
        "item": {
          "id": "36869c08-356b-42a7-8f10-e657667d1dc0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2cfb447c-f569-4c58-8873-2440353b5fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06d966c-bcf9-4ce0-a034-9f433736085e",
        "cursor": {
          "ref": "b2541016-73a8-4068-9a9a-4d4d721b0124",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a8dd002a-0361-4fe4-8322-e3bd722da56a"
        },
        "item": {
          "id": "d06d966c-bcf9-4ce0-a034-9f433736085e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e8a638b8-067b-4bcd-b481-da26d233c9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2aa48b-4fb3-4f67-ba08-40c3db60bf43",
        "cursor": {
          "ref": "eecc0c7f-4ba8-4049-81cb-8871066ac217",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "78f3735a-1f02-415d-a8cd-e0d873436117"
        },
        "item": {
          "id": "ef2aa48b-4fb3-4f67-ba08-40c3db60bf43",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "45506293-437e-421c-9028-11ab7ed32e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbccd196-7e0b-45a8-8b58-a30173e14cf6",
        "cursor": {
          "ref": "8f3a4e58-c99a-43cb-95cb-97daf9d94144",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2ce33e04-475e-4621-bfb1-ac774784c4b6"
        },
        "item": {
          "id": "dbccd196-7e0b-45a8-8b58-a30173e14cf6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cdf7e425-d598-4cca-937b-0cf019c9aaf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f86330-67c6-44f8-ae5c-65d2b9ee9ed0",
        "cursor": {
          "ref": "b6214835-e924-4796-be7e-d4a7e58dbc08",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d9fe755f-2aaf-4fde-8829-75853e53fbe4"
        },
        "item": {
          "id": "c1f86330-67c6-44f8-ae5c-65d2b9ee9ed0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "da01b171-4b53-4870-8e79-d63295263594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 178,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1158135d-a845-42ba-b5c7-4fc016c3e2d2",
        "cursor": {
          "ref": "eb15cb87-4f7d-4be0-b39e-ff672b51d198",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b4eb4c83-f1e6-47b7-850b-edc9570ff269"
        },
        "item": {
          "id": "1158135d-a845-42ba-b5c7-4fc016c3e2d2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "deef7875-bf18-4a6a-b10d-dedcddf94856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32aea54a-7b61-4a46-b741-686520a95b4c",
        "cursor": {
          "ref": "eea60a5c-1b54-4b3d-bf5c-0b2c29517440",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a7a3540f-6346-4d55-ab10-d62d118a41f7"
        },
        "item": {
          "id": "32aea54a-7b61-4a46-b741-686520a95b4c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5954d965-4133-43f8-b4ee-dabe9db6edb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2952b5d6-acf9-43dd-a36f-d535b5188761",
        "cursor": {
          "ref": "e139df18-586e-4fb1-9211-52193d402485",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3b9e56cf-5315-47dc-9cd8-5a85bd131d12"
        },
        "item": {
          "id": "2952b5d6-acf9-43dd-a36f-d535b5188761",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8a64a85d-dbc9-40a6-acb5-ef1075851bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da95e8af-cec3-4dc8-9db9-7b2022c227b5",
        "cursor": {
          "ref": "f393a462-fd13-473b-96a1-1a1fe95fe369",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cdb661f2-9c06-4839-8792-510b2e8f6f65"
        },
        "item": {
          "id": "da95e8af-cec3-4dc8-9db9-7b2022c227b5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8489e74c-9f4f-4aa6-a6cd-673d1b21fc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85339599-1ebd-4185-9da2-ce26d4a93f68",
        "cursor": {
          "ref": "79e4422f-4fa7-4650-b8cb-575504e1fa0f",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a9b31a8f-0ba2-42fa-ab5e-9e83583a184d"
        },
        "item": {
          "id": "85339599-1ebd-4185-9da2-ce26d4a93f68",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "15611a20-4490-414a-836e-437268fc158a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817fdb0c-dfc0-4674-a335-2533dce3125d",
        "cursor": {
          "ref": "cb11b42e-a884-404d-995e-2af906af214c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f1c28f9d-f06d-4434-b7b4-810fff88cecd"
        },
        "item": {
          "id": "817fdb0c-dfc0-4674-a335-2533dce3125d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5ed4b111-859b-4600-a70e-5646150ddfa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f590b06-194e-46ae-9022-671edb678f13",
        "cursor": {
          "ref": "b9941450-8831-42ca-9e7f-087cd73f25b4",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8f5f7760-211c-4a94-ab75-831ac6dba210"
        },
        "item": {
          "id": "1f590b06-194e-46ae-9022-671edb678f13",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "02962c11-82b5-4715-ace3-6e793a3aeb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7305312c-e127-4dee-adfb-c8bc961dd90a",
        "cursor": {
          "ref": "7ecfe8ad-a2cb-44ab-bab2-4b878f46b1c0",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "068b8e65-12a3-49b8-bcad-ff10be9a8c0f"
        },
        "item": {
          "id": "7305312c-e127-4dee-adfb-c8bc961dd90a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0ec7caab-ada9-4405-a457-93b326b6e54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6becb021-7c49-48d9-a8a1-4d475fcbf7cb",
        "cursor": {
          "ref": "c4e3791a-f71f-407c-a4c7-721888c2e2c5",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5c704874-7c30-485f-aff9-37630956dc1a"
        },
        "item": {
          "id": "6becb021-7c49-48d9-a8a1-4d475fcbf7cb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "993a2584-7abf-429c-8ba2-b8576c69d33b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cffe690-8416-4c0a-a134-f6eb8846db00",
        "cursor": {
          "ref": "28f0d673-bd6e-4506-9d40-73b98b73c018",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "17bbe4e3-cf60-49b6-b98f-1033caac99aa"
        },
        "item": {
          "id": "3cffe690-8416-4c0a-a134-f6eb8846db00",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d9d8067a-c0b4-4159-98fa-b7d2a64d5bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1943ee3c-2292-45ea-a0b1-9c2e6e816a77",
        "cursor": {
          "ref": "c3c382ea-15eb-4fa0-8046-58c517a9f526",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "487b2dcd-5e86-430c-832b-620412e0078c"
        },
        "item": {
          "id": "1943ee3c-2292-45ea-a0b1-9c2e6e816a77",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "97396739-e0ed-4cdf-8d37-e60433d3b3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096f66fe-15a5-4a60-bb0a-ac5f30191dde",
        "cursor": {
          "ref": "f29050b9-5173-4b71-a59c-be9fa2a878cd",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "07425127-5e81-4038-9617-c36a72121acc"
        },
        "item": {
          "id": "096f66fe-15a5-4a60-bb0a-ac5f30191dde",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a860e8fc-ea8b-48f6-93e3-6b1c2488e255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786909dd-fa0b-4a51-bd3e-47c5bd4dbd93",
        "cursor": {
          "ref": "8e1c6071-0818-4631-b52a-81b1d7e50d1a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "90fcce90-81b2-47e0-ad97-d1978c201149"
        },
        "item": {
          "id": "786909dd-fa0b-4a51-bd3e-47c5bd4dbd93",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0a8791c1-535f-43bb-9601-8ffdeb29c3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cbb01b-c2d2-466d-b8f7-4ce7f6cf046e",
        "cursor": {
          "ref": "ec511d5b-302b-4981-b047-5d046b5ed7c0",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9923f228-5d22-4828-bed2-8c3fef260e01"
        },
        "item": {
          "id": "87cbb01b-c2d2-466d-b8f7-4ce7f6cf046e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7321fedc-0003-41fd-9431-546dd0610c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4b2c2c-47cb-4200-a3d1-881054e9f954",
        "cursor": {
          "ref": "33e0a04e-abd7-4b21-986f-ea4678403f80",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4f45e27e-d118-4deb-a7bb-4e7e95e161d4"
        },
        "item": {
          "id": "9b4b2c2c-47cb-4200-a3d1-881054e9f954",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "af3dd263-ee58-4694-b59c-0daa73ab18dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a93be9-0911-47e1-b3b6-8c06ec801b70",
        "cursor": {
          "ref": "914bab29-cad1-4fdb-bc49-3f932e835c4f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "163d445c-f622-41b7-97fc-bb9b6c8eee69"
        },
        "item": {
          "id": "77a93be9-0911-47e1-b3b6-8c06ec801b70",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ba254fa5-b8bb-4d76-8e89-64432df4525f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3641b4af-1b07-482a-8cd2-a941483a9a73",
        "cursor": {
          "ref": "fad16659-870c-4f31-8114-2851a541b13d",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e8e79bf4-8a24-4866-8a9a-e9c1edbfaafe"
        },
        "item": {
          "id": "3641b4af-1b07-482a-8cd2-a941483a9a73",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3b94724a-e227-4d9e-87de-ba0389c84480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d10cf6b-1086-423f-a88f-1ce92e4fbaba",
        "cursor": {
          "ref": "81e0e109-585c-4fb5-bd9c-e86c7c605613",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f2c0701e-7e58-439e-8720-a6e69dbf17b4"
        },
        "item": {
          "id": "9d10cf6b-1086-423f-a88f-1ce92e4fbaba",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "57cf224e-e46f-4989-8259-87d65b4203a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c0a8fd-388f-43bf-82cf-e06ba817e1c3",
        "cursor": {
          "ref": "45f52ae2-8d34-4deb-8cad-d502d8477feb",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ed8dab9d-0dd9-43d8-90a5-45eb26151a9b"
        },
        "item": {
          "id": "98c0a8fd-388f-43bf-82cf-e06ba817e1c3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6ebe48df-0a8f-46ca-bde1-a1b1109edfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3c0d84-523b-4e6e-84e4-7a270b0a6477",
        "cursor": {
          "ref": "a8775f9f-247d-45e5-9f31-2328a84aa117",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d2cc34d4-66ec-4441-a38f-558c2b729364"
        },
        "item": {
          "id": "3d3c0d84-523b-4e6e-84e4-7a270b0a6477",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d2d57f0e-3337-4eaa-9a23-9d832ed45e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8576684-1fb1-4507-abf9-d8a2881d9af6",
        "cursor": {
          "ref": "3c6b62ce-ad0a-4600-8f3a-f10ea62c9ce6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d8dced2b-2946-441b-9a83-3cd65d8d9798"
        },
        "item": {
          "id": "f8576684-1fb1-4507-abf9-d8a2881d9af6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "74ae00bf-4711-4d31-8869-f2da115889e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486cc999-8800-430f-b836-1ffd46522216",
        "cursor": {
          "ref": "2f99bfba-d8a6-4b60-89ef-65fd23d2bd56",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a9f6d024-e104-4438-90b0-1b783746c9d5"
        },
        "item": {
          "id": "486cc999-8800-430f-b836-1ffd46522216",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "77b26857-38f3-4112-89b3-3a5b40b58175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0ef17d-b7f9-4a01-8e93-b98e025db99f",
        "cursor": {
          "ref": "a46716f5-3902-4350-9a3c-7462bafdf0c5",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ee19724e-3486-4947-a9ad-cfcb41b0dadc"
        },
        "item": {
          "id": "1b0ef17d-b7f9-4a01-8e93-b98e025db99f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1b29e1c7-9943-47fc-b494-8966fdde924b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70dc7a2-c1c8-40ac-a6ec-aa2d250fb793",
        "cursor": {
          "ref": "605084e3-ffe0-4d7b-ba1a-1f1b46fe58ce",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "48ef08ed-75f6-4d9f-96a1-911c4491ef20"
        },
        "item": {
          "id": "b70dc7a2-c1c8-40ac-a6ec-aa2d250fb793",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9e5ec620-937a-47b0-aa47-c88c3e3bc70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2825788b-5466-4a94-9f0a-ea1e16bf763b",
        "cursor": {
          "ref": "68eaaf1f-06d3-42ea-b804-240f4b6132d9",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "00180e9f-8032-4bb8-8387-3ae5d83c4af5"
        },
        "item": {
          "id": "2825788b-5466-4a94-9f0a-ea1e16bf763b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dc76d10d-da5e-4030-937a-89a8c855fd37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d37f9a-dcf2-4bf9-8bf9-509578816c48",
        "cursor": {
          "ref": "004121a9-e8ce-4561-917a-0fda14397390",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cbd8545c-3715-411f-b833-a829b6fd6f45"
        },
        "item": {
          "id": "07d37f9a-dcf2-4bf9-8bf9-509578816c48",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "025c3754-ed5f-4168-b089-e967d548113a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bc449c-dd72-4504-8d82-e5e297ef3cb0",
        "cursor": {
          "ref": "a5704520-c3f7-4b04-9c53-f81450c4011f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a6c46e7c-3806-4d54-8ddf-320bbefd0426"
        },
        "item": {
          "id": "65bc449c-dd72-4504-8d82-e5e297ef3cb0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "eaba9255-f294-47f3-9dd5-29fb78c101ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79cae22-e6b2-4953-b511-c4b26aab3489",
        "cursor": {
          "ref": "1648bf19-8be8-48bf-bc3e-f6d64a068ea2",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c7d85dbd-96e0-4ed4-a4ef-afdc2e91fe8a"
        },
        "item": {
          "id": "c79cae22-e6b2-4953-b511-c4b26aab3489",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e3ce5586-f2c7-45c6-a40e-22390ffa178e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d6b241-e1be-4b88-8018-94a91622fc93",
        "cursor": {
          "ref": "955a6219-6bfd-4c04-8165-e28b2d36db02",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9995ed0d-df24-470e-a0df-b756ec55e3a3"
        },
        "item": {
          "id": "75d6b241-e1be-4b88-8018-94a91622fc93",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8899443e-83ac-4a9a-a40b-91b18464cd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21110e91-f7ef-4a68-919d-08443ca6200f",
        "cursor": {
          "ref": "f249fb94-8da6-46b8-be53-97c0fff2eec3",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "880b7494-daa1-4218-8413-0f9ebccfc82b"
        },
        "item": {
          "id": "21110e91-f7ef-4a68-919d-08443ca6200f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8daaa636-f936-4a0b-ba1d-5f42df38f384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f9839e-eccb-410d-a5d1-3dbf5021b02c",
        "cursor": {
          "ref": "8b27e947-fbdd-400d-8161-416846a289ee",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "87ef0308-e3ff-47a1-bc8b-68d594521740"
        },
        "item": {
          "id": "13f9839e-eccb-410d-a5d1-3dbf5021b02c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bd987bc8-88f5-4065-8660-f197baebdd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e0c2c9-ff58-4349-b5e9-b232c9ce655c",
        "cursor": {
          "ref": "51abc01a-612a-428e-ba18-15c44687aad8",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d54421b6-afe4-4996-83ec-ade0e4c0467a"
        },
        "item": {
          "id": "e3e0c2c9-ff58-4349-b5e9-b232c9ce655c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "29f2bd0b-1b17-45a9-b615-138107913f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197a57b2-14cf-4dd4-a601-3b6e2d2eeac1",
        "cursor": {
          "ref": "c15f79ec-72e6-49f8-9ec1-62165c08d76a",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b9146b61-612a-417c-b691-5b190c3aaec5"
        },
        "item": {
          "id": "197a57b2-14cf-4dd4-a601-3b6e2d2eeac1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1f9c97f1-25de-446e-a2cb-d862ed7c5834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeca5617-cb5b-4430-8abb-be83db518b62",
        "cursor": {
          "ref": "02549051-c245-4ad6-a5f3-01a7eebf2fe5",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2afa3315-91b0-41e7-943f-f087ee63ad19"
        },
        "item": {
          "id": "aeca5617-cb5b-4430-8abb-be83db518b62",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a7076c22-17ba-467d-8301-623987abaa3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bc531d-c3f9-460c-86f7-0e9a46d311e4",
        "cursor": {
          "ref": "51e3f90f-c02e-48a7-8259-056a8f605914",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "eec7cb4f-742b-4c89-8a0b-8c3257ea6ffa"
        },
        "item": {
          "id": "22bc531d-c3f9-460c-86f7-0e9a46d311e4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "22911fcb-37c0-4a0b-ad74-71dbe052a9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcef58c0-89f4-41c2-8efa-3d978dbb77c3",
        "cursor": {
          "ref": "fad498b6-f733-4113-9bbd-2f0b19edfbde",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a047e1b3-efaa-4e97-bb44-4dfb7b02c9ba"
        },
        "item": {
          "id": "fcef58c0-89f4-41c2-8efa-3d978dbb77c3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "77601a22-a87d-4043-a8b4-3661d9a73dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f369c0e-fa84-4707-b11b-d6118d82a1cc",
        "cursor": {
          "ref": "c49962de-a474-4575-b697-3bcc5a73fbd7",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d5cd494f-8db3-4465-bdc0-f8a719785019"
        },
        "item": {
          "id": "5f369c0e-fa84-4707-b11b-d6118d82a1cc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d6a49afc-def2-418d-b26b-482df8a9766c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca14458-7b12-43ac-9ed8-deeaf703b8e3",
        "cursor": {
          "ref": "5602c9cb-a61f-4c18-b019-cd324decabde",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e95b3369-fc2e-41e8-9653-8698b8a069d3"
        },
        "item": {
          "id": "0ca14458-7b12-43ac-9ed8-deeaf703b8e3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0605c857-53a4-4775-840e-a756afe28dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8771df-da53-4375-a4c7-7a22a8c3b458",
        "cursor": {
          "ref": "4a5807c9-1c10-4a58-b490-6f6618403c7b",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d0236ff4-86e4-4a67-addf-1a3867b714ce"
        },
        "item": {
          "id": "6c8771df-da53-4375-a4c7-7a22a8c3b458",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4d52e37e-ed55-4f8b-9c66-ebf6b7c89b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a70db0d-299a-4b1d-8e80-9e5cb74167ce",
        "cursor": {
          "ref": "328336a6-9865-41c0-87d6-92828cebbdf4",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5e5295b5-5eb7-4f21-9e99-1addceca9487"
        },
        "item": {
          "id": "3a70db0d-299a-4b1d-8e80-9e5cb74167ce",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6c1023a3-7b25-4a0c-ba9d-765aa6424cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6387e40-9d93-4738-9995-3d65eb351663",
        "cursor": {
          "ref": "231d9f5d-fdb8-46a1-9a74-fa433153a8b1",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d1d163d9-deec-4a3d-a741-00f0a13b7dfa"
        },
        "item": {
          "id": "f6387e40-9d93-4738-9995-3d65eb351663",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4b492d12-b2bf-42ab-954e-cb2d65c4d7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31032b4-78ca-4f00-8788-12015007d71a",
        "cursor": {
          "ref": "0c60551b-bedf-42b2-a0c7-7d58dd8091c8",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9d43402d-bb5c-41da-85a4-c439ae203d0b"
        },
        "item": {
          "id": "f31032b4-78ca-4f00-8788-12015007d71a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f4a0aa67-9179-4447-a2ed-81f52b199a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e379f75e-14fe-472f-a051-46a1fcecc096",
        "cursor": {
          "ref": "66aee063-6f0d-4827-8ac2-22a69b6a1feb",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6714d931-1e44-4bfe-855b-e39c56f6adf7"
        },
        "item": {
          "id": "e379f75e-14fe-472f-a051-46a1fcecc096",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "34b596c3-aecb-42ab-8df0-8cc40cc3a25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41658c7-2532-4f73-b0ab-4eac6a0d2e3b",
        "cursor": {
          "ref": "da37094a-5c9a-491a-b93f-720107cf7051",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b2bde101-9bad-40dc-b71b-0a2f0098c09d"
        },
        "item": {
          "id": "b41658c7-2532-4f73-b0ab-4eac6a0d2e3b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "98c9027e-0a1e-4903-8e74-166d6d3add5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc45aeb1-2d3b-4e31-a305-ab8d56b6787b",
        "cursor": {
          "ref": "c33aee87-319b-47a1-9532-d346809095d5",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "06b8f850-fa8d-4bf4-b9a8-8b91e972b29d"
        },
        "item": {
          "id": "dc45aeb1-2d3b-4e31-a305-ab8d56b6787b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ec6e14b6-1630-42ab-95db-4a3a82ed44c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a219d8-db75-4160-964f-ad81ae8ce7e8",
        "cursor": {
          "ref": "d3137545-1fdf-424c-84e8-f0bc85bca77c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4ba8bfa1-432e-495f-aea5-703341755464"
        },
        "item": {
          "id": "60a219d8-db75-4160-964f-ad81ae8ce7e8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5444e887-671a-4ce0-8eed-b2af2a1eccd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b2d767-dc8e-48c5-a241-87e91f91d6d3",
        "cursor": {
          "ref": "358600c6-0d90-4667-8c5e-0b96f2365f5c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8bfde5ad-7e1b-4cd6-858c-7d3825a3e93c"
        },
        "item": {
          "id": "09b2d767-dc8e-48c5-a241-87e91f91d6d3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3ddc9be3-71db-4be1-9e77-6736ddf11e58",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6973ac-665a-4b81-9ce1-8e0ad6df3858",
        "cursor": {
          "ref": "08b0b11d-a6de-47c8-ad17-28ffc00fa089",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4ec3722c-13f3-4792-9a83-f230ff410024"
        },
        "item": {
          "id": "0d6973ac-665a-4b81-9ce1-8e0ad6df3858",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "26385977-3457-4946-bfb3-733112b8d5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2088877-dfbd-4a7e-9fa7-e15a9728da03",
        "cursor": {
          "ref": "f54a858e-00c3-4d57-9697-a87d13d0c06c",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9bc644ab-7a05-4118-a076-d280a187fa9c"
        },
        "item": {
          "id": "b2088877-dfbd-4a7e-9fa7-e15a9728da03",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "701985d1-b2f2-426b-b201-5836b4b66aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a101558-b582-4315-8abe-da8b408eda83",
        "cursor": {
          "ref": "3060ed6a-0792-448f-afee-75496be13fbf",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c43b275a-d4a1-4f03-9021-aa103d239871"
        },
        "item": {
          "id": "5a101558-b582-4315-8abe-da8b408eda83",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "022e134b-784f-4dfa-bb07-6e067ea40c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6561c0-278d-46ae-8c74-b610f33e24eb",
        "cursor": {
          "ref": "8dade8e5-fc10-40ca-81ba-5792776fe2d1",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "133778a9-f301-4d35-b86e-a19da0b68ee9"
        },
        "item": {
          "id": "0e6561c0-278d-46ae-8c74-b610f33e24eb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7303d405-5be2-4fae-8d91-7519e337856c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d8971a-22b9-4b75-addb-8a4285ba8bde",
        "cursor": {
          "ref": "b2b49ba6-738a-4f38-bb68-c7bf20709e44",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "49bc6151-9a38-416d-932b-09d727ed7725"
        },
        "item": {
          "id": "50d8971a-22b9-4b75-addb-8a4285ba8bde",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "65165245-f175-4800-8adf-f3687f1dd800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40551712-ea1c-43e1-ac9b-badfa8f299f5",
        "cursor": {
          "ref": "1d23cb95-5eb9-4d40-8f5c-44937bce16b9",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "57f5b281-0589-455c-bdb8-e66f04f5c20e"
        },
        "item": {
          "id": "40551712-ea1c-43e1-ac9b-badfa8f299f5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "77483298-5f80-43d7-a46c-1c43acc333c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea19336-b817-4a44-81af-dcedf10cca7c",
        "cursor": {
          "ref": "f9348b44-f6fb-47ac-a0f5-77b9d00da7af",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "81569d5a-a08f-4701-b541-5bd6983786b6"
        },
        "item": {
          "id": "eea19336-b817-4a44-81af-dcedf10cca7c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d018ecd5-c3a5-4cae-a009-2d3c1d15913d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a03a18-b0c2-430c-9fb6-609e923da71b",
        "cursor": {
          "ref": "d36069c4-1c59-4d72-84eb-edfa2f26e582",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4681b6e6-f1dc-4655-93ba-aea163fcc505"
        },
        "item": {
          "id": "93a03a18-b0c2-430c-9fb6-609e923da71b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bd993446-2bb5-4c19-aa75-4dc55ca79f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5852d17f-0e93-4c96-9099-94dfbd462fec",
        "cursor": {
          "ref": "040b51b4-fe62-4542-9793-52009e607f59",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a28c0552-6d40-4414-82c0-36769f8844d0"
        },
        "item": {
          "id": "5852d17f-0e93-4c96-9099-94dfbd462fec",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2db4cb4c-bf2b-49d1-b20f-c4204ec7bc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0433cfe4-105f-438d-99cf-1f1f2312852e",
        "cursor": {
          "ref": "cdd44ff6-8f37-4d46-8844-aa7ee02dfc32",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9258b71d-1557-4278-b558-c50e530e7c8d"
        },
        "item": {
          "id": "0433cfe4-105f-438d-99cf-1f1f2312852e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "607aa9e1-9fba-4f3e-83ec-536af3c54125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12dca14-4e63-47fa-bf0e-d5fb5217b532",
        "cursor": {
          "ref": "45dd208e-ca46-4c2f-8837-19e8e01e4349",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d6128c61-b728-430b-a00d-e924f6e0eea0"
        },
        "item": {
          "id": "f12dca14-4e63-47fa-bf0e-d5fb5217b532",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "14385b86-b7e8-4de7-9699-5cf27ff0cfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a94d578-33f4-4f32-87b2-07b954649bc7",
        "cursor": {
          "ref": "badc9051-86be-4585-b7c1-eedaf8c24405",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ffb8d927-7dff-49ea-9219-4c75e03bf9b7"
        },
        "item": {
          "id": "3a94d578-33f4-4f32-87b2-07b954649bc7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "491a5eb0-0b0a-44f9-9736-ffe69619897d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f590d4-a4ab-436c-86a7-d0ed79a5fa07",
        "cursor": {
          "ref": "494ae64b-2677-4c62-86e3-88b0f038e128",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "39ee74b5-49dc-42e7-a8a3-b1b32edd0d3a"
        },
        "item": {
          "id": "79f590d4-a4ab-436c-86a7-d0ed79a5fa07",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3651a2b8-6c02-4385-bf4c-260f87cc39d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782332a1-366e-4d10-b738-46843189d7fa",
        "cursor": {
          "ref": "7ccdac86-6e6b-41b2-a6a4-b1967d77842c",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "98995d38-75e0-4569-a289-8a8c36fcb115"
        },
        "item": {
          "id": "782332a1-366e-4d10-b738-46843189d7fa",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "df5541ae-ab79-4648-8ce0-2f2189ce57f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6921a238-fd6c-4eaa-97bc-84137a4ea277",
        "cursor": {
          "ref": "20e9952f-2959-4833-b024-229b138364fa",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "edd5f5f7-519e-490b-899e-9e8543168ca0"
        },
        "item": {
          "id": "6921a238-fd6c-4eaa-97bc-84137a4ea277",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "30bdb9f3-864d-4d50-8149-89ea681b3710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf7d14b-890b-4584-9254-293575ae7dc1",
        "cursor": {
          "ref": "2caf377d-1f99-456d-a418-6d0a7ae0231e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6bf20579-12e5-472e-b2d7-b58bdf36261d"
        },
        "item": {
          "id": "0cf7d14b-890b-4584-9254-293575ae7dc1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "15201247-93f2-4485-89db-675a3e8f9c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be6d56f-c90a-44e2-b62e-c6719f4f99fd",
        "cursor": {
          "ref": "3b56a1ae-90e3-40c2-8763-3c7bf9a6471c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "911295d9-aa1a-4e42-8992-559252ee91bb"
        },
        "item": {
          "id": "3be6d56f-c90a-44e2-b62e-c6719f4f99fd",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f7c933bb-2e2a-4ba4-8a29-8a7e857a6dea",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "294ad77e-1d1c-4066-893f-7eb271165a26",
        "cursor": {
          "ref": "f3ba3601-6240-4cb3-a0a4-3cc0e341b037",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3096d6dc-cc4b-45cf-b38c-856c87a3edab"
        },
        "item": {
          "id": "294ad77e-1d1c-4066-893f-7eb271165a26",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9883924b-def3-4ca4-9e03-37ebf0bef9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e404a5-9c5b-461c-8a77-89eac2b75e4e",
        "cursor": {
          "ref": "4b975f40-583b-42ee-ae5f-c810f840f0ae",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1a8d2747-7995-46b5-b061-f4feaa033472"
        },
        "item": {
          "id": "a3e404a5-9c5b-461c-8a77-89eac2b75e4e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "dad7cfcb-9f21-4594-a6fc-f4a923005bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f114c1-ec99-439c-abf1-39b77670cf28",
        "cursor": {
          "ref": "eaa09f38-b3fb-4bf3-8933-a9bc54ab5a28",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "081bf2b9-90e3-464c-abf7-cdfacfd233f6"
        },
        "item": {
          "id": "87f114c1-ec99-439c-abf1-39b77670cf28",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3792abf4-c45f-4c52-9278-4d37781426e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec50b547-3d9b-4821-8a6f-bb11415b81ff",
        "cursor": {
          "ref": "590d28f4-3e58-427d-a452-3f721c64c141",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "26e48189-9547-43e5-9371-ba36af70237c"
        },
        "item": {
          "id": "ec50b547-3d9b-4821-8a6f-bb11415b81ff",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a213786a-db0a-4043-a3b8-85c5effcefec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d142f3-02cc-4e2e-81b2-1836d61d6b09",
        "cursor": {
          "ref": "6b9abad5-6f52-461e-b8b2-949ebe25bfd3",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6ac4d811-e590-42cf-b517-4ffa2492962e"
        },
        "item": {
          "id": "c3d142f3-02cc-4e2e-81b2-1836d61d6b09",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3b6a8a8d-c8d0-4bc6-ae37-fe14bd3f7e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae7f7df-111f-4dbd-afef-e320ad3db5e4",
        "cursor": {
          "ref": "19cd2ce1-2f96-47f9-89c9-294cc140cfc7",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "17ca5e2b-669b-4505-8f1d-ecd9ebf0b640"
        },
        "item": {
          "id": "0ae7f7df-111f-4dbd-afef-e320ad3db5e4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8b81dc07-ad2e-4b6f-8f13-e667c5656342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a78945-1bb7-448a-83de-5c30db6a04b5",
        "cursor": {
          "ref": "995284fb-359e-4224-871e-519c9c5c53ad",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ec8d3b39-7b02-45a8-9a34-7f01aef6e9b8"
        },
        "item": {
          "id": "e3a78945-1bb7-448a-83de-5c30db6a04b5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fc641b82-c07d-4cf8-a419-3e3885d47976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339f1e67-04c2-4f9d-beb7-bdfb624aa04e",
        "cursor": {
          "ref": "f281e500-e1df-4ca4-861c-3ba926a2eec4",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c8bdebee-b0df-4e26-a5d2-ba4419923fe0"
        },
        "item": {
          "id": "339f1e67-04c2-4f9d-beb7-bdfb624aa04e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "151879a9-bab6-4296-8e73-0534a3a09fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b893b5d8-2b94-4e2b-9bfe-9120a0bdd152",
        "cursor": {
          "ref": "d1e5f732-b0c3-4251-9a25-5df6df0cc251",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c82006a0-2902-4f7b-9e72-1c990d89bafb"
        },
        "item": {
          "id": "b893b5d8-2b94-4e2b-9bfe-9120a0bdd152",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f53fb163-87a1-45d5-a436-2154d9b4e199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578bdd66-280c-49ab-a6f6-b74204d411f5",
        "cursor": {
          "ref": "5cf8c11c-3392-4579-8e90-e3cad8acb008",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "faba8bf1-2fda-4cc6-bb69-df6947a0bf14"
        },
        "item": {
          "id": "578bdd66-280c-49ab-a6f6-b74204d411f5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d5abcf20-16e3-4b40-a740-2af4baac1c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88e6286-fe00-4a15-bff1-04fc009192de",
        "cursor": {
          "ref": "1505a0f8-1b7b-4655-b6d0-1acb938b2897",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2769b3b7-f690-4934-a262-8fbcd1f6d98a"
        },
        "item": {
          "id": "a88e6286-fe00-4a15-bff1-04fc009192de",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "40b10a06-bd8e-4ed9-9b8d-b8ee0342040e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d9b68b-7452-429b-8148-e5d0c6228de3",
        "cursor": {
          "ref": "f984ed1a-0f14-411f-83a3-ebfaee07f442",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "34e3680b-42dc-453a-adc6-ea08ab0eb2ff"
        },
        "item": {
          "id": "08d9b68b-7452-429b-8148-e5d0c6228de3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e65ba010-c97d-4b29-9214-9287fc7f64cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99916cd-2fa7-4704-ba5d-eb39b7372187",
        "cursor": {
          "ref": "4edae8c7-1d72-4c45-b7f9-0220ca869d75",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5fe8deb5-b6e1-442f-8f39-7b440508da75"
        },
        "item": {
          "id": "e99916cd-2fa7-4704-ba5d-eb39b7372187",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a9302754-a624-421f-b430-9388ec28369a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ee8eb6-4963-4643-9f28-79e90250c6c0",
        "cursor": {
          "ref": "953765c9-b833-4094-97fb-54000a67e30e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "963dacb9-2a2f-4d9b-b97f-3f4478476103"
        },
        "item": {
          "id": "07ee8eb6-4963-4643-9f28-79e90250c6c0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "26e9f897-32d2-4b1d-874b-d93d962e33ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26890d1a-a8a6-4114-ae27-ec5fdf1100d1",
        "cursor": {
          "ref": "4f927f8b-3203-4b63-a310-9090128bb518",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "294e4af6-f83b-4ca3-ac2b-cf1c5a0247e4"
        },
        "item": {
          "id": "26890d1a-a8a6-4114-ae27-ec5fdf1100d1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3af40f99-e582-4c3b-8da6-2afd904d4427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22b79f4-ab5d-4c8e-ae6f-cc6f4581f152",
        "cursor": {
          "ref": "ed60be5f-bfab-44ce-b1ba-324404e554bd",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c2c63953-b89c-45e3-9bcc-34c69f91d9e0"
        },
        "item": {
          "id": "d22b79f4-ab5d-4c8e-ae6f-cc6f4581f152",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4b40f052-8f53-48d1-8688-f2a96d7623b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed4d48a-99ef-4a18-8a20-79df53070118",
        "cursor": {
          "ref": "e8c3a8ed-b567-485a-909b-432724fa79a4",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "08e92ac8-5795-4f6f-ad30-c40e0998e4a7"
        },
        "item": {
          "id": "3ed4d48a-99ef-4a18-8a20-79df53070118",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9ef2c85f-73b6-4c40-bd47-dccdebadd6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586634d5-7381-498c-a753-2f6d2f83d2be",
        "cursor": {
          "ref": "77f6d92a-ed8d-4b1b-a097-ebc1e1ae2258",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fc02be58-835a-4a1f-a892-2fa847b9dfb9"
        },
        "item": {
          "id": "586634d5-7381-498c-a753-2f6d2f83d2be",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d716c632-e57e-4c53-a15a-a9850faac57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55e199f-22be-413a-905f-98c6f4602f15",
        "cursor": {
          "ref": "8ed9ffb2-a821-4705-bc4c-f0abae6e9bb7",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5b74713b-053a-413e-aeb5-33eb2b291c65"
        },
        "item": {
          "id": "a55e199f-22be-413a-905f-98c6f4602f15",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "70c59ba8-e877-4604-872f-c55409a48879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4cb4c5-fd25-400a-8a7e-8e4113323a6d",
        "cursor": {
          "ref": "ccc2c5b3-2e52-4275-a129-ce1524f8ac9e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6e9e4b47-18bf-45b3-9a1f-b66821f208d1"
        },
        "item": {
          "id": "ac4cb4c5-fd25-400a-8a7e-8e4113323a6d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "12e49b24-234e-4516-a573-76e080fd436b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf36839-9a26-4705-b319-c5421a78c046",
        "cursor": {
          "ref": "8239dadd-b068-477f-bf2f-afecfd0b4eb3",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "12ba7eb9-888b-48c7-a9d9-c2c8719fdeb0"
        },
        "item": {
          "id": "dbf36839-9a26-4705-b319-c5421a78c046",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e564179b-bac4-4c61-ad5f-09e20720f93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8387d75-33fd-4c26-9ac9-176febc1e1cc",
        "cursor": {
          "ref": "78831609-7986-4e7a-b971-c0db3a2ceb0d",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c0fb071c-c571-4783-93c3-66d4a0c0fcef"
        },
        "item": {
          "id": "e8387d75-33fd-4c26-9ac9-176febc1e1cc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "141002c1-9452-4a31-a348-2c08040f2918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84450a8-d5d1-4c30-a607-3f9b8370e176",
        "cursor": {
          "ref": "8994e9c0-b4e5-4032-9841-b4958e7f42b2",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d6bd7c19-84c0-4621-8a54-6a9a70e99daa"
        },
        "item": {
          "id": "d84450a8-d5d1-4c30-a607-3f9b8370e176",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "22d3b7de-d460-4af3-9fd9-4ec87432c388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7a35dd-7e41-4da6-815a-4f656513031a",
        "cursor": {
          "ref": "cf5db733-da5f-465c-a477-6d95084a8174",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7b1fe00e-2b9e-46fa-806b-b5983e94d047"
        },
        "item": {
          "id": "7d7a35dd-7e41-4da6-815a-4f656513031a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "107c8bd9-6547-46d1-92ec-ece0c17adbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04da4fdb-6029-4eb8-a9dc-3029ffcc8b71",
        "cursor": {
          "ref": "b2eb0ec6-0269-4d31-a5c1-65cff20e8a5b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5987540e-c28b-44f9-a7be-c3951e8dccdf"
        },
        "item": {
          "id": "04da4fdb-6029-4eb8-a9dc-3029ffcc8b71",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "93380003-e1ea-4950-96f5-27c304f942f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cfd95b-5ba4-4982-8c41-ef82d4419522",
        "cursor": {
          "ref": "6801be27-5723-47e4-8c7a-c1ba7081c88f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2ae102c9-3b52-4565-8a78-b7698f9eca1f"
        },
        "item": {
          "id": "f5cfd95b-5ba4-4982-8c41-ef82d4419522",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a3a493ff-08d2-42be-904b-03714a64f1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09877029-44e2-4a1d-be75-07f3f13ede19",
        "cursor": {
          "ref": "a5599a6b-1a30-4a5b-b7a2-a55f72d11ef2",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6c5dc810-b669-452c-b58c-6d8bc16bd955"
        },
        "item": {
          "id": "09877029-44e2-4a1d-be75-07f3f13ede19",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1f381d3f-aa49-4ff4-ade4-08ce887c2310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a143ef55-0db9-4e34-aafa-6141e3decd93",
        "cursor": {
          "ref": "fbd2dd2a-c260-4c77-9efc-a59223f5e86d",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a2591e0c-1da2-4bef-87b9-0fed79bc40a1"
        },
        "item": {
          "id": "a143ef55-0db9-4e34-aafa-6141e3decd93",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "53eac23d-1227-4f72-8059-70f96a31f48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29487400-27f9-4171-84bf-4e70eb81e934",
        "cursor": {
          "ref": "88633c98-f9aa-4b60-8223-9455e4cc2cb5",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "93a94352-2cdf-4985-b7ea-79c4336ec4e5"
        },
        "item": {
          "id": "29487400-27f9-4171-84bf-4e70eb81e934",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "617b3219-1ed6-4069-ad41-c60d05b5ba1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e58eb6c-2b7d-410d-8bde-ac791688e375",
        "cursor": {
          "ref": "d551f8be-8394-4f03-b060-83d06672e556",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "20439599-b018-44ac-8b90-3aeaaefaaf6b"
        },
        "item": {
          "id": "0e58eb6c-2b7d-410d-8bde-ac791688e375",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "138b3ee1-f5e3-4732-a6e2-3704af33ff38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b976d424-389d-42fe-9c4b-58063368c616",
        "cursor": {
          "ref": "84f47d02-af8e-4025-ad16-b37c8e8c70cd",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cacd47b7-625a-44c4-be68-b3fcf3f213f4"
        },
        "item": {
          "id": "b976d424-389d-42fe-9c4b-58063368c616",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "46d0cef0-5fce-43e9-a349-4baa55987be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f18e775-ac78-4795-abe1-332f4512b72c",
        "cursor": {
          "ref": "74fa34d1-84be-477e-ac03-88c36c00df30",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "73d29805-cc13-48d5-905b-7abcad08e9fa"
        },
        "item": {
          "id": "0f18e775-ac78-4795-abe1-332f4512b72c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ef606a8f-a7d1-41e9-a200-6168c6513a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9cc399-95c3-4002-80ba-2d9bcf14c839",
        "cursor": {
          "ref": "ffd0caa3-e25f-42e2-a6d8-73a20849ce60",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "77c3669e-9034-4feb-9456-6874fd613a61"
        },
        "item": {
          "id": "5a9cc399-95c3-4002-80ba-2d9bcf14c839",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ae1e745d-87e8-4d5c-9a84-df297f4c610c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b562575a-fe85-43ae-a7df-5775cd86e9d8",
        "cursor": {
          "ref": "183bf05c-d71b-4b7b-b5ed-91529c82b622",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "02a74311-212d-4d1d-bf52-a45897ee6c82"
        },
        "item": {
          "id": "b562575a-fe85-43ae-a7df-5775cd86e9d8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4cdf0752-1296-46fd-aec9-5861ba3e93c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4012e3d-f6a3-47ef-a208-a985c762ba91",
        "cursor": {
          "ref": "a39421c9-47d8-46a3-a24c-7baa00f46ec5",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c164daf0-577a-414d-8ac0-33f956499650"
        },
        "item": {
          "id": "b4012e3d-f6a3-47ef-a208-a985c762ba91",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6464ffff-f3c6-4460-b7c0-35947a0cb44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f782c8e-1f28-4e56-bcb9-f7777e0000ff",
        "cursor": {
          "ref": "2cf208e6-85b3-4d1e-98ee-ec5fd171d4bc",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bd7cc641-134d-46b2-9c12-9b8500c4d8c7"
        },
        "item": {
          "id": "8f782c8e-1f28-4e56-bcb9-f7777e0000ff",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e4b0cff3-8ccb-4e0f-974c-1bb72c1f4423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6600431-7a07-4479-98c8-f71eacda566d",
        "cursor": {
          "ref": "406d8a95-1d0a-46f5-9948-d2f6d6dafc66",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "62eafbaa-cd69-4dc8-8b11-a3582b376908"
        },
        "item": {
          "id": "c6600431-7a07-4479-98c8-f71eacda566d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2a48f4a8-1bfa-4237-98a9-c93e280f2849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703dddde-b3b3-403d-ae61-23941a9798c1",
        "cursor": {
          "ref": "8709967d-99b6-4e5c-8b75-b48e4f805ae5",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2a6ad4f7-6720-465d-ab27-a5399cc83c0e"
        },
        "item": {
          "id": "703dddde-b3b3-403d-ae61-23941a9798c1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "80d6d867-1d3b-4040-b6a7-c70089f4f2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e923a79-457e-4a09-be90-12382a7598a7",
        "cursor": {
          "ref": "8fbf3cf8-6dff-4485-ac48-0dbb41fc6655",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4fdbbc18-75a8-42af-9fd0-1198968ced5c"
        },
        "item": {
          "id": "1e923a79-457e-4a09-be90-12382a7598a7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "74626835-f684-4e36-a836-812175f0a8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ad454c-45dc-4280-ba8a-a9d48b9fae19",
        "cursor": {
          "ref": "47143b8f-9bd8-4690-befa-c5304c47c107",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e59fe4a4-829f-43d0-a676-183f99a819ec"
        },
        "item": {
          "id": "10ad454c-45dc-4280-ba8a-a9d48b9fae19",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "aa04732a-1a8f-41c3-975b-ab7232690d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddd79fb-55af-4560-8056-4cae88a502d7",
        "cursor": {
          "ref": "feebaf63-13f4-4b97-8429-54ca95ed44ca",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "048e9c22-7f6a-4b0d-a9bc-dffd5b37633e"
        },
        "item": {
          "id": "4ddd79fb-55af-4560-8056-4cae88a502d7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5834f139-8b0f-4213-95bd-36c22213989d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b828c9d-3015-4fec-9a27-cd84333a8a66",
        "cursor": {
          "ref": "db018d13-1f0d-4980-a3d3-0293435a87f3",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "da8cc2ed-e735-491f-aba1-1aa96a4c3d7a"
        },
        "item": {
          "id": "4b828c9d-3015-4fec-9a27-cd84333a8a66",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2144004d-995c-4ef3-bf79-c7a6b2e5de25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e10ba6-59af-4101-8d57-d534eda42db1",
        "cursor": {
          "ref": "c3eee41d-5f27-4fbd-ab56-55bffa406bfa",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9e9721ee-6109-49ec-a8b9-07363fdcbf95"
        },
        "item": {
          "id": "36e10ba6-59af-4101-8d57-d534eda42db1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "165776dc-0fc6-46c6-a572-c648eb50246b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace07cf5-814e-4a07-a29b-66cdcca61126",
        "cursor": {
          "ref": "2a85f08e-6671-4ab0-8268-2eeb2ddef27e",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b48dcb8a-3fe5-4315-9ac4-1388dfc05588"
        },
        "item": {
          "id": "ace07cf5-814e-4a07-a29b-66cdcca61126",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4b9e8b80-1354-4473-8bcc-5fec50d77ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3478d7dd-5ba5-4134-b17c-e28f298e3e09",
        "cursor": {
          "ref": "948a08cb-0c6e-48e2-80b4-f79cfd1b5420",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a469f5a0-1ea9-40a1-919a-53f6d337a4f3"
        },
        "item": {
          "id": "3478d7dd-5ba5-4134-b17c-e28f298e3e09",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b08a54cb-4f12-4f96-b795-e99b59cb2828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99eb9f7c-b4bf-483f-b2b8-65088d1f0b48",
        "cursor": {
          "ref": "b4e18f8b-0ff4-4580-a139-d5200214a19e",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3c70dab9-97cd-4802-8da0-79018a0145b7"
        },
        "item": {
          "id": "99eb9f7c-b4bf-483f-b2b8-65088d1f0b48",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "534e2fba-ce4f-48df-9bf1-a7026a3001c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b2f2c2-a43e-43c7-9955-cbc6fb936888",
        "cursor": {
          "ref": "b133c1a5-609d-419f-8e13-3890ed4ed4c3",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fed52692-6564-4d8a-9044-eb84f68de4f5"
        },
        "item": {
          "id": "a1b2f2c2-a43e-43c7-9955-cbc6fb936888",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0ab753f9-e446-4c02-9e7f-bf5e3b059723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b601add-5753-48a5-a27a-b6dd2d905985",
        "cursor": {
          "ref": "e850c7c4-043b-44b4-b4db-95ba747b1388",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "50a920aa-b213-4a16-a09a-23d78de9c1c4"
        },
        "item": {
          "id": "5b601add-5753-48a5-a27a-b6dd2d905985",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e517f189-3d52-43d9-980a-4f1376a11f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07e1f63-7b2b-4ea7-9c00-618ba54a2a59",
        "cursor": {
          "ref": "b7d3bc9c-fbca-4727-bc4f-4682973accaf",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1d36ec8b-bad4-44bd-9041-5fab41797684"
        },
        "item": {
          "id": "e07e1f63-7b2b-4ea7-9c00-618ba54a2a59",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bb882a2c-eca1-4bd1-be57-4f6f4488f9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5060c705-2cfc-49a3-84e3-5daff71ceb33",
        "cursor": {
          "ref": "69fc2657-849a-4f32-a4e4-af56ed86ce80",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "09563109-9b5c-44dd-95b9-ac9e04569b7e"
        },
        "item": {
          "id": "5060c705-2cfc-49a3-84e3-5daff71ceb33",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ac889aaf-b0d8-4992-9473-e493b9a032d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d927e3-3ffa-49a8-b306-a36d4f9bd325",
        "cursor": {
          "ref": "218e8abb-ed67-47ba-9311-dfe41d20ec91",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "46b34ec9-042b-4163-86e7-02f911806eda"
        },
        "item": {
          "id": "b0d927e3-3ffa-49a8-b306-a36d4f9bd325",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "067900f2-f46f-4146-9857-c15ca75ada8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b962f78e-6314-4e31-9f1f-c130df5848dc",
        "cursor": {
          "ref": "7c3eae37-e16e-49c1-9bce-08eb05f301ca",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4516333f-c700-458c-87e9-3d78088bd328"
        },
        "item": {
          "id": "b962f78e-6314-4e31-9f1f-c130df5848dc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "324d00f7-bdf3-40ca-a9c2-cc3cb81a2cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9a2aaa-4fad-40ad-bf8e-a79253a7d59e",
        "cursor": {
          "ref": "1ba7187e-71e0-4979-b4a3-041a2bb90e33",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c45a7ac4-e46a-4055-9bf5-6b49a68209b6"
        },
        "item": {
          "id": "fc9a2aaa-4fad-40ad-bf8e-a79253a7d59e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e2c4a662-8f4a-43d3-afb3-4ad0ae80f72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094f1847-5dcb-4fc5-a9d2-a8d025acca5f",
        "cursor": {
          "ref": "2941b99c-b8cf-4ee2-b43b-880cd483cc71",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e1fcc975-2a01-420f-8f4e-9b2611f9c614"
        },
        "item": {
          "id": "094f1847-5dcb-4fc5-a9d2-a8d025acca5f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "84fa7b20-0b0e-4a5a-94fa-5cb724c3412b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd6bd2c-ef4e-441c-a477-1f529843b3ea",
        "cursor": {
          "ref": "aec3bcac-2075-4801-8a70-2d16b75e24ac",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7aba0a1c-cce3-4c5b-a258-0cb147bf9556"
        },
        "item": {
          "id": "1fd6bd2c-ef4e-441c-a477-1f529843b3ea",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1fea67a4-85b0-47be-942d-4ceac8b8fd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04a2d7a-3dfc-4779-9699-3200ba9fbac6",
        "cursor": {
          "ref": "e61db8ee-ae97-4cd9-a5a0-e54ada529a9a",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "10566adb-d47c-4a76-8bc6-ad2d152d27b0"
        },
        "item": {
          "id": "b04a2d7a-3dfc-4779-9699-3200ba9fbac6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f2fad4e8-942c-4255-8198-cf538b5bc3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0882f5-e8d9-429e-b37f-a8943e8721f8",
        "cursor": {
          "ref": "d239b057-35e8-4f7f-a1b6-d45145f01562",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8ae65cba-ea17-4ff2-9026-1b314f6da278"
        },
        "item": {
          "id": "9d0882f5-e8d9-429e-b37f-a8943e8721f8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2a933df6-7d75-48e7-ae94-e6e633a03347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6002fe-6459-458a-a725-760ec40a4028",
        "cursor": {
          "ref": "fc46b62e-4cc3-43d3-9075-dac4f23e85e9",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e9737319-b399-40dc-9103-39f0bf9fd790"
        },
        "item": {
          "id": "1c6002fe-6459-458a-a725-760ec40a4028",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2c330c62-10b0-41cf-954f-003f29c84574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085e1f40-4ac4-415f-bed7-8ae9eb1048c9",
        "cursor": {
          "ref": "737267df-ebaa-4338-8083-8a55fb436593",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b3f595dc-4508-4a14-93e2-182bc457b2fd"
        },
        "item": {
          "id": "085e1f40-4ac4-415f-bed7-8ae9eb1048c9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ac240653-626c-4fe0-9344-25abd6e44757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7323d48-e2e1-4e40-ba45-2b914d352fd3",
        "cursor": {
          "ref": "96237725-aed8-4307-9ff4-75d86fa22cf5",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "217433cd-1024-4e05-8e3d-162bfd8482eb"
        },
        "item": {
          "id": "e7323d48-e2e1-4e40-ba45-2b914d352fd3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9fdfdca3-3e47-48f3-b5ae-629b3a5aeac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21018dbe-6d4c-49a9-907a-525c9e4edccb",
        "cursor": {
          "ref": "e89a75c8-6e9f-4727-87e8-4eff47745fa6",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "98455e21-713d-4b5d-bd9d-41fc78d66a7b"
        },
        "item": {
          "id": "21018dbe-6d4c-49a9-907a-525c9e4edccb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "041a9687-feb6-43fa-bacd-57a117c8ad97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952b4fce-f13b-4c90-99e7-44707a665ad2",
        "cursor": {
          "ref": "826f884c-8e57-4eb6-ab0e-62fedfa92611",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "545005b4-fa73-4590-b56a-55ed0cb5cec7"
        },
        "item": {
          "id": "952b4fce-f13b-4c90-99e7-44707a665ad2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "31e9ba02-f9be-4628-a534-078e0683846d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea25945d-92f7-4ac2-a393-3dbca9c0246d",
        "cursor": {
          "ref": "232d1980-ebb3-4955-a9b6-3e7a4313480f",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "df6accee-5d83-4053-84a3-2af2fcc2f1dd"
        },
        "item": {
          "id": "ea25945d-92f7-4ac2-a393-3dbca9c0246d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "81141fca-9edf-41a7-971e-0ce88ca56c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b53ebfb-fc32-49ec-8303-49004aaafd82",
        "cursor": {
          "ref": "e1c12286-5f24-4653-9fdf-693a3afa5b09",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3f8cbbab-5a87-4fd6-9536-27307c3153d7"
        },
        "item": {
          "id": "4b53ebfb-fc32-49ec-8303-49004aaafd82",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6ed57836-f9ab-4dd3-b820-5d588a866c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f79803-a4ae-4c26-a53a-ffd80e6a440c",
        "cursor": {
          "ref": "695193c0-a73b-4b8a-aedc-10378cd78432",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5a3e80f5-ffce-467b-aeaf-26a26505f2dd"
        },
        "item": {
          "id": "58f79803-a4ae-4c26-a53a-ffd80e6a440c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c41c69d5-e0c2-4d63-90b6-259844321209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce37655-c444-4a6e-bcf8-79cd4a54df51",
        "cursor": {
          "ref": "25fceeb5-249f-4f84-b173-217666bb47db",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d3183333-d0a4-4b2c-8952-72ab0d4b77d2"
        },
        "item": {
          "id": "9ce37655-c444-4a6e-bcf8-79cd4a54df51",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d92f3bc6-c4f9-4064-88a7-eb34ed0399c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82c352a-4ad7-4b9a-a227-47d0077410d9",
        "cursor": {
          "ref": "71e0b93c-a769-4f9d-b719-7921765eeb71",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "dde02257-b07e-4ce3-bb0a-1476886fba0f"
        },
        "item": {
          "id": "a82c352a-4ad7-4b9a-a227-47d0077410d9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4380890d-371b-4768-abf4-16b33a546e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f10f44-2e36-4bbc-9331-b16e270bd1ab",
        "cursor": {
          "ref": "2e7b63a4-3dbe-4d38-9a88-696a19cb0ad2",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "924f088d-9fdd-442c-8593-3d85032e21c5"
        },
        "item": {
          "id": "10f10f44-2e36-4bbc-9331-b16e270bd1ab",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c136d8a9-740a-4ba0-a3bd-5fe344c3104d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877938c9-0d21-488a-affd-fba8e95cd8aa",
        "cursor": {
          "ref": "3c4be39d-f009-4034-8734-e500e165f12e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8548b063-cbe0-488d-9192-4507ef8c890a"
        },
        "item": {
          "id": "877938c9-0d21-488a-affd-fba8e95cd8aa",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "60c12f97-2673-40bd-a095-fc5993a74381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8fc4f1-b0ef-4eaa-a28d-1507c1073bad",
        "cursor": {
          "ref": "e6788ef5-e2a7-46cf-a4a2-acbd71721c17",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4d4e4e53-9e8f-4bf0-9d00-59250d87efd8"
        },
        "item": {
          "id": "be8fc4f1-b0ef-4eaa-a28d-1507c1073bad",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2a6ebdd6-44ad-485c-a3ca-3e3d4a0ad08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a4babc-ab65-4c67-b937-c41b501683de",
        "cursor": {
          "ref": "3601bb36-2e9b-4ce9-a0b8-ca0dd1f43906",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b727d116-4c38-46b2-8872-539a017e2355"
        },
        "item": {
          "id": "d4a4babc-ab65-4c67-b937-c41b501683de",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "70fe8ece-642a-4511-801c-84f799c1978c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed142826-f74e-491e-a52b-19a4c01d4e4e",
        "cursor": {
          "ref": "ccd16d5f-1f15-49cd-a1c7-7b21690fded6",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0cd415ae-1616-4f17-9198-bd0d20e17818"
        },
        "item": {
          "id": "ed142826-f74e-491e-a52b-19a4c01d4e4e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5c40f87b-9f2b-4398-9bdc-d87754667a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8abe66-2e6c-4ffe-9b65-08fe9c63f361",
        "cursor": {
          "ref": "a98db029-d6d2-4575-879f-aad7a8a7d429",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "030c6ad4-29f7-429f-b648-018620924b87"
        },
        "item": {
          "id": "6c8abe66-2e6c-4ffe-9b65-08fe9c63f361",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "51195617-d175-4cc8-8b19-1a7d4d4e0ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a824db80-2482-4ca2-8f37-ce48047a42f4",
        "cursor": {
          "ref": "c80728f2-350b-4be5-993a-9c802fe9138c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "788d8a4b-6f17-4ebf-9440-d8553a9ffcef"
        },
        "item": {
          "id": "a824db80-2482-4ca2-8f37-ce48047a42f4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5d3914f2-cc90-41d2-ba34-b4cc1df12e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512bbc82-2659-4d7c-b704-e1b32eec997c",
        "cursor": {
          "ref": "d8a560f7-a437-4bcd-8e40-37c062ab8989",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "63921d1d-0864-48de-bca9-bce400825035"
        },
        "item": {
          "id": "512bbc82-2659-4d7c-b704-e1b32eec997c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "29e5e962-cdfd-4b35-8ed6-f0cdf449f9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d9d5e3-66c1-4f22-bc92-958a451d6998",
        "cursor": {
          "ref": "432083f6-606a-4855-a575-c2089e737c5a",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7e962702-a05e-4585-ac0c-b688bbf28226"
        },
        "item": {
          "id": "65d9d5e3-66c1-4f22-bc92-958a451d6998",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1b966cac-6448-43a2-98a4-2018d336de84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec86703a-31ad-4981-aae3-ac9b6174eac0",
        "cursor": {
          "ref": "334617db-452c-48ae-8560-b5aff6d27b47",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8e41d90b-4836-409d-b592-f01507d8250a"
        },
        "item": {
          "id": "ec86703a-31ad-4981-aae3-ac9b6174eac0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "996b77cb-d846-4fb7-ad0f-5679422168ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f676963-e53d-4a06-bc80-92e84c7c058d",
        "cursor": {
          "ref": "39aa8b34-adbd-4549-9c6f-f0c6c25a6947",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "bcea0bb8-3c69-402a-8ed0-d61842bd1ae2"
        },
        "item": {
          "id": "8f676963-e53d-4a06-bc80-92e84c7c058d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e77a927f-99f4-44ef-a423-5ee1bf0f5692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1141de8-404e-4de2-8f40-bd01b7931a23",
        "cursor": {
          "ref": "35db6573-4f9a-416f-a391-7364095272bc",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2ce4b94d-cac5-4164-bf4c-49fcb1381224"
        },
        "item": {
          "id": "b1141de8-404e-4de2-8f40-bd01b7931a23",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cda10b70-5700-483b-8e1c-b2641bb5cddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8269ff62-b80e-443b-a696-e845ccab442d",
        "cursor": {
          "ref": "f5877a53-a2d9-4d13-88d2-a8c27648f899",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "88949f56-5ff9-414c-857d-720b1a8116ea"
        },
        "item": {
          "id": "8269ff62-b80e-443b-a696-e845ccab442d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b2f0e60c-c6f3-48fa-8685-ac13f8eeae6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3706c58a-5255-4820-b880-2960a5adb424",
        "cursor": {
          "ref": "84f64017-afed-4fd4-a9b3-8e7d24579117",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8923e5d8-2bc2-43ae-8343-dcc1ba133f26"
        },
        "item": {
          "id": "3706c58a-5255-4820-b880-2960a5adb424",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8e02a525-ab1f-47f4-b2a1-7f60253e5e26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7298f375-d807-415b-94ba-86508985e7b3",
        "cursor": {
          "ref": "813f0acd-e642-4033-bf9d-f60648ee6ffe",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9eb610a4-99d2-471e-8864-a0482ad749f5"
        },
        "item": {
          "id": "7298f375-d807-415b-94ba-86508985e7b3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a0027aef-bc9d-480b-ac1c-2b7dbe22d13d",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce5d184-7cd4-4ae8-972f-519cc76a6306",
        "cursor": {
          "ref": "bb421a2a-43dc-4d2b-a1ff-1a8022c12c69",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ec079029-a8d2-4280-a0ed-2f4900580924"
        },
        "item": {
          "id": "9ce5d184-7cd4-4ae8-972f-519cc76a6306",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f6dccdb3-662a-42f4-bc20-61c90aa9c4b0",
          "status": "OK",
          "code": 200,
          "responseTime": 2562,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "587ce7cd-5c07-4bd0-a256-1fa9c85f0413",
        "cursor": {
          "ref": "155b9b77-18ef-4f02-871c-bc1a52dee3b2",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e48d9793-0b74-47c6-8c5e-178fce7f276a"
        },
        "item": {
          "id": "587ce7cd-5c07-4bd0-a256-1fa9c85f0413",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "841e0205-754e-4d7d-8eaf-ee73669f0285",
          "status": "OK",
          "code": 200,
          "responseTime": 2202,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4b53cd-c6ad-4650-a63e-c2bf84d0bec0",
        "cursor": {
          "ref": "2b966851-669d-46c7-b39c-95bd852655e4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7bc6a820-f65f-4594-afb6-27b346ae0eb1"
        },
        "item": {
          "id": "ae4b53cd-c6ad-4650-a63e-c2bf84d0bec0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "adc15a27-e923-4af6-84b7-018ce8ead7d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4b53cd-c6ad-4650-a63e-c2bf84d0bec0",
        "cursor": {
          "ref": "2b966851-669d-46c7-b39c-95bd852655e4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7bc6a820-f65f-4594-afb6-27b346ae0eb1"
        },
        "item": {
          "id": "ae4b53cd-c6ad-4650-a63e-c2bf84d0bec0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "adc15a27-e923-4af6-84b7-018ce8ead7d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9329f065-cd45-48c3-a2c4-bd022b0d49ef",
        "cursor": {
          "ref": "41205b5d-f2b8-4272-bbc5-04f6bbf4847e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "47f942ea-fdc4-4280-bb8f-14fb326f61e1"
        },
        "item": {
          "id": "9329f065-cd45-48c3-a2c4-bd022b0d49ef",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9f374847-3987-4fd4-8cd8-f8f95d383f9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b74a8ab-4f45-41bc-bc73-8ce1e6799b5b",
        "cursor": {
          "ref": "d3e079e8-1812-4b9c-a522-b10325321f77",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "73307439-e88b-47c1-8022-8804a9a4a327"
        },
        "item": {
          "id": "2b74a8ab-4f45-41bc-bc73-8ce1e6799b5b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1661ab6f-d3f1-4071-9356-8542aa62c131",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}