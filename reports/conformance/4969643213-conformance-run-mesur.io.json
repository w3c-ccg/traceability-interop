{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8f279eb0-c714-4e00-bb02-cfb01876aa7a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "80671f44-13d6-413c-b457-64d587928c72",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1f34458f-8cd6-4613-a9d5-26d46890f883",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "83afd06f-77aa-4f81-9dc6-ba0ed81f5925"
                }
              }
            ]
          },
          {
            "id": "ad3e098f-1781-4180-913f-361386221cb5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff9196ab-70a1-47fb-aa61-69f0225d8355",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e2954fa9-3d60-4d5b-955e-d6c46832fcfa"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3c953dbc-b280-4972-9c89-51eb5016e0be",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8ed95151-4eec-4f11-86be-c51b8c4a7ce5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fb5fe655-4810-4694-95a6-5e43e09e516b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6569c959-fa31-4f2f-ad18-b8bc0c2eb367",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96e4392c-ad76-4adf-aac6-50369fd31fcf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3010c2b0-5e34-4473-ac20-bfd98c2d24fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cda320d1-f1b3-4934-b920-99bd7bd77619"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e9e02276-6eb3-44da-a52d-b2422c491fa8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4931b7b1-360f-4c0c-bc87-9ef05f73b6cc"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "37c94e3f-0ad2-4596-9b13-f08784e18a9a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8df8039a-a88a-4f75-a0e9-e6d526067023"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2924e013-e0b9-4252-9937-049ed2094fbe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82340951-7c07-4426-bab3-8109a99da632"
            }
          }
        ]
      },
      {
        "id": "5be1e705-a794-49ba-be69-954ff296d412",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6688d68e-ee41-4283-a47b-d6e9b2d84e03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99b66f00-3146-485f-bd5f-066dfef95c69",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1e3c25d4-4c20-4c48-a679-5792877da664",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbb65a7-9c92-4cb0-9f52-be55aa966117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd377c63-de31-41d2-a688-0b2ba730297b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cd5809-069e-4920-bb82-92adcc673939",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bcc7cf-c02c-4529-8f3a-aa46a05c516d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae5a5cef-89bf-4473-a185-d2bf8533c1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d148d3b9-2d24-47e3-bffa-5f5e2277cdf4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41eabf8-33df-4a09-9c9e-9c8134d4a422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19e6bb9a-b628-4f06-8154-abce98fa7d40"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a022c6b3-8825-4be3-9ead-5e75a8199011",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f86612b-9e09-4218-9776-274e6190d726",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1b2c2f-c449-4cd0-8663-22554e1f6133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19e937c4-86bc-4b08-a440-88146965aed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d1f7db-f5f6-45ec-9738-ba6d4640b96d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc3665c2-dda7-4c4d-951b-01882a1aea1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2ebf61-c227-4333-a823-2c4a44651b07",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92270442-9de9-4c08-91a2-4eb3aa982175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03b3c237-a78e-4880-9465-da4b424543d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac887263-c3c7-4f40-a1ff-f1088a46a74e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "ba7ec27f-a20f-41d2-9764-89e4f2fa8968"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2acd3ae1-17ab-44ee-8727-5a435cdd6393",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c480db0a-7db6-43fc-a837-95c138d515f2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c73981fa-c07a-460a-be47-ba86562d1306",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e8afe44f-6204-4a4d-9215-c56dac21604c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "406dd21b-32fb-41f8-aa1c-88a261cef7a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "48c7f9f6-a558-428a-8c36-6e8d473b288d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ebda7f1-8dfc-4140-97d6-a9ab39fd58d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac7ba758-ce26-40f7-9ff9-43fc42fa1613"
            }
          }
        ]
      },
      {
        "id": "42a66f2d-eec2-411f-aacd-28b230c16eb4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8cef07f9-6e7a-42fb-aea2-16411bd73310",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dabbdc1d-2795-48a2-b02d-7bc3d98c4bd3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8d64c89d-603f-41c4-b880-6b2b0d0246cd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7717a63d-25ab-4dfe-89d6-1c4274733507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551cce5b-fbf6-4fe0-841d-ed15759aec4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb922dc-465f-439e-b7c2-5e59b555b890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "007f2265-f5b3-4c6c-a56d-f7f94fe386fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb7c110-35ac-4075-b64c-23d319cab811",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba63e18a-7d60-40e6-ae16-eaf6f73b04b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad46174a-9b45-4659-a933-4918603da346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e40cb3d-d89e-462d-a815-e0141aa15287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c49b1029-800a-4d69-9a96-aa2e6dc1bfe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1c0bf8-43cd-4b88-8fad-428cecea6ed3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d77f82-f756-4c91-8332-1670d09d77d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4693cec9-a441-4e40-8a31-9ecd5ea32730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e1da90-89d1-40ce-b908-7dd79a7508c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b2d4150-aa37-45eb-a874-95197c92d9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c757793a-95b7-428c-ab4b-dd541d631f51",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b43a6ee-1f4e-4608-ad9d-467cf27caf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832f27f3-0b94-4ab4-b2b9-c994521f0080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda2a562-2039-4071-bf84-1d9658ac452d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86b054cc-c4b1-47a7-a4b4-1b6f6e0c2b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834a6715-00ce-4097-9af5-d18540e5c3d7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9cf86d-4a7e-4275-9ebd-086ae13fd471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908e35bd-a0b0-44fa-aea8-e7a182379a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7f8fe0-3d6a-43cd-9963-3f819d633bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0db9dfe3-0250-4a28-ba00-8d990601ad78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d986fc44-dd2f-4998-a02a-bfccb05a9ca2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c5215d-1a19-4122-8e48-505b3f796cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcec90e-9d6b-45df-ac78-7ee07094f2a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da52b145-fe95-47cd-bd21-f805e97d053f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b64b39c6-1ce0-4f30-9b15-f43fe84a9185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7133b698-5780-48a3-b013-5ee6e1e1c8db",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c88381-f557-427d-bdce-7f984aa1814f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a50fe35-d49a-4705-9967-6c4cca17b825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620a33df-73aa-4593-9133-e7a2851ea545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a5cf93e-d6a7-4741-9a54-e8816e2a4bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616003c6-1a2d-4e44-84f8-8d0558c01bbb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f826069b-1f04-4a73-9d6f-80424e6c0cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54880a0c-96cb-43b4-bd95-2cc6d5bc1698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68269733-cc59-42f0-99d8-a34f1e40ec33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6ccdef6-5feb-4852-9d65-909bfa2bf582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005a3412-ec5f-49fb-ab12-09a66d0ec61a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4d6c20-9803-470e-9baf-3f56d1237eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ad60c4-d3d9-4a90-839e-3973fa3569f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b26c19-46eb-4aec-af71-122f2f5d4a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dee0a4cb-f576-43ff-a647-76b7cdf17081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10edbc8-ebab-46d0-bec9-38a2a2ca592b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e57185-42e9-4945-9075-a4b3dfe36101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d74dc04-84da-4913-9923-8eb2d06fc399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef90755-f8eb-4ee0-a917-2e0e7ca3972e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17a07e17-750e-41dd-906f-16536f07456a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd2922c-7e53-4678-9132-ea1c2b6ac89d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d3b5cc-1ae9-45b5-927b-8292bd62974d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd20052-c603-4d0e-a6a5-3c8a0b0ed728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e0b7b2-90ca-49b0-84db-a21504020fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7792ea8b-f9ee-4f92-ac7c-8a33205877c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc27f5e6-b2ee-49b3-a83d-35392b9f2d1e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4837de-37d1-476b-9313-cd9e60214b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e321fb-c7fa-4734-9271-d44430a151d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1354543-ce4a-46f7-b676-80981129c184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8eb8fea1-7dc0-4041-9711-784357b6156f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac439092-a833-4828-8a92-c76bd2b82098",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e13f46b-1a8e-4b7e-b329-af78bd8b682f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1005c48-6e1b-43dc-b60e-0763a6792960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebf54f7-fc79-43a1-9fcc-b1e7eb7552f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b012bbd-ff19-40a0-a784-c195e34ad5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5d4a3d-c59b-4809-81ca-e7fbe691316b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abc53cc-a750-4f7f-bfd6-03f27ad65d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216cf02f-831b-447e-ae79-32fe1c209c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16218e4b-bfe7-4f90-a4d1-e29937be6feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "771fd379-509e-4667-9468-8fc8db40437b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d683513b-5e2b-4f5a-967d-4c5c84101330",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887b2939-6ddb-42bd-9401-61cd373bc02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cb242f-4b5b-4b90-9721-bb6ddf791f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642fe830-d783-4c33-9362-72e06e2dc09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bc17a0c-7849-409a-8ed2-2b7d497b87c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafb4aa2-2d65-4db4-9680-5cd819c6fca7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f39070-9df4-40e9-b6a4-769ca13baad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65d6aa5-ebd1-4a80-b5d7-6248ba211919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d0f9f1-1bfe-4878-bd15-839e4f03710b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7f92ed7-4ee6-4f95-a070-4bfc4146f3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e9f931-e69c-40b9-a3f1-07a241e85473",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564c53f6-c5bd-4dd6-8837-fce9df2ce653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e58858-524e-43d9-ac07-07ed1d1f3b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8343a527-0fa6-4f7b-85a6-2701d7cbd0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eaba9fd0-39ac-4428-86a6-f0bc2773ca41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a0f83c-c670-4eb4-a58a-c58304fb5e45",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c8f5b6-c38f-4a66-8dae-03e09223e734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c33aafd-d576-4131-aee2-50c209537c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb10c01-0877-4dcd-b73e-019303aaccba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "44f4bf6d-3028-4ec6-9d3c-c9afe748a41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842deb1a-6567-441c-be36-463f286a91ee",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6f5b4f-5695-42ab-8ffd-6e293b5a35fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba25a237-74ab-4e9f-8753-c5211783631e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3fa44b-b089-45ff-82e4-e7d0e1d36dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f20daa-3b43-4916-b000-37a40217e93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e1451e-fc42-444f-bb07-96545de268c1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "facf3f25-6075-4f16-87ff-f8aceade7289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f0359c-fb1f-4c1a-a477-9062c1dcfe17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ada7751-a2d1-40e1-a8f8-767962dcbb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f991eef6-3c66-404a-8353-ac5fb41cadd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce00809c-73ec-44eb-93db-d60058354577",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d645028e-77e9-4bfd-869f-9e6eff06d990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2515aa-bd57-42f7-82cf-350d70d4b443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c70761-14e7-4246-b42a-06ec48cce5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9ae0dd-732f-47b7-8e96-56a509d1ce39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5070362-480d-4b78-9cc5-8f1533c26083",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5222b24-f378-4127-999a-a1ad06329861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc931ca-6a44-4097-96ef-61b7e3cf452f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295b534d-e8fc-4283-b4a2-166277aea917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3c8112-ee00-4d95-b685-597d7e124cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3356cb-ae16-4bfd-87ba-a1c4774c1787",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c293816-7386-4369-9e36-9e8c231f7a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8fda28-7bcf-4f9f-b342-fa52056d14e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b581c1e2-f0ef-40ac-a1da-f061d3a6e408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab551253-8648-45b4-9d30-0b1c9116c8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb17df53-64a6-4b79-bf28-d0a3cb343ba6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a3e83c-941c-4899-9158-2db792f056ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ff970a-1071-4b88-aefa-3ffddbe6abdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ea3c9e-f0a4-4a2b-8a7e-2659a39cf9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "69731b64-c9c0-41cc-8e73-821d9a9c4553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508477b7-0999-4b14-8234-7f989631f6c1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99dadcaf-ff0a-4a58-9ce2-dd7d54e685b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b751cb8b-b7f0-4ab2-89cc-45308c781260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f654e6f-c806-440f-aafd-bad5688429c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "483ae8dc-7297-440d-9605-e0741652485a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76921d95-3e21-446b-8d4b-1b7d04f05a60",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34e1bee-d26e-47d5-8bd3-360771a52f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f9e397-eee7-44dd-8a9a-1c49567ef66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59539d38-c9a3-47e9-9247-a47f78a1c8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b71e382d-ab87-4f11-8dff-6c43c662867b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfcaea3-61ae-47a5-8bba-833a3a06daad",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c009d09-8dbe-49e5-a9ac-152164c46352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f414d24a-2a71-4b08-9cce-3c2cf5ea6221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c550ef-c11f-4721-9fdf-1514a31c2961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f967cf19-6882-4e80-95ff-cef28bb86bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72a33b1-449d-442d-a7c1-8e2054f20f4c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5bf6f4-b15c-446a-81eb-71f7da5e8b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fed5bf-df67-41bc-b42e-06897cd99f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305d0532-5079-4aab-bea6-2829b6e7f77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "180405c0-8b09-4bd9-a11c-01c9ac58c303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b742d250-5389-4683-a69f-49361b77a81d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1daf31b-6db4-4688-ac22-4676d0476601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9470c80-3442-48d5-9da7-27e2b0a6aa21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e4482a-602e-4b21-9df0-6abb34f69bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9f04cc-d012-427f-8058-52ee58be5dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08782eed-545a-491d-a164-9f73126a78af",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cd7d56-07ac-4b17-99e7-f4c90c99cd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8eeb7a0-b152-4a05-8a2c-7d6e5987b72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d540223-db1e-476b-be1a-5847b6549c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1034803-cafd-4760-8b50-ec82a8de60bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ccda568-0b2c-4458-ba30-4e521057a99a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3624ba27-7bd5-4999-9fc2-df58d9234387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8733f64f-c0fa-4577-82d4-773cb0f4465e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714f876f-ceca-4322-912d-4d7ef3cc6df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e1d383-f404-47eb-82d3-6cec4137e3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74369b8c-b940-4fea-be81-271a5101f2a2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8b27cd-3722-443d-baea-daedbcbb892e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1af7ef5-712f-4f7e-9aec-9bb3e03fbb2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fd682c-070f-45a4-8200-2d7587ba7cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e50784b5-c227-44e3-a961-7ef255cef749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de45b96-e6c0-48b8-a99c-8b6493c0b19f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bfd8cf-f9f0-40d6-ac3c-db54b88f8088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4148682d-175a-480d-8abc-4d47b8f6519c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08c8c53-03d6-4449-bea5-56e55e6a7664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfebec07-70b3-4852-aa35-0a059739c473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42612f6-5a92-4821-b359-614165f87448",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bb2488-1939-4184-a4d5-2d021e0b25a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14aba165-4ed4-49a8-9d3a-9048640067e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf1fa99-b4d8-4a24-b6cc-75247ba5696d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b63083b-acbf-40e5-9dee-575acbe58366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cbb27e-0648-4c9c-be8e-a3094696fda6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea802c85-6e62-4c28-bc6d-797b35c9b770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338f5a6a-b063-4796-ab38-ab41df63e520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c69624-176e-4766-b719-821f6bf8d043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "afc8d4b3-3b80-4888-bd80-00343426c063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f95e07-9d71-415f-ae25-ff009d7bb3de",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb18066d-0f62-4420-ab41-7a93c6e3ceb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3b95815-202d-4e92-912c-d245200cfe74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21cd7c96-f02b-45dc-bd30-3773d5da2456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28fda546-0b77-4b4a-b9c4-c4f12eb85c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ab9218-2f54-4ebc-b9a9-e1e0dd086300",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2187af31-f820-4cc1-bcfe-0a39f22c137c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27bfafd-6905-4866-acf9-6b1df708c6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0aa0ca-1525-4a5d-865a-9b46de8f6e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "769ce753-cb1f-4dae-b1e8-09fc4a68a44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2541ad0a-a71a-4a69-9af3-edbf231664cd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee96a96-75a6-47a7-825a-7c74a52589a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07918eec-ef6f-48ce-9f64-37f16dde9521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319e158d-d1a1-40fb-88f1-c89805a18f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "03c51798-190c-4185-a9dd-29eb55583d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac7db08-8aca-4790-93a0-2903fc28417b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cb7a7b-f426-4fd5-93f3-04fff50086db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e48a673-5e60-4268-a2f3-273630fb5b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da4ad7a-ddb2-40e2-9a27-c4721c976180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a029e335-f2e9-4b76-be95-13699cae86e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d631e8c0-7a2f-48de-a2c9-e432debec566",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0978d19d-9d84-4e88-86a3-20afdb52f8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95d1010-7462-41be-b21e-10bab0132731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f1d2c6-52d8-447b-ba7a-820fe48bbe69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4d3850-248c-4e38-852f-b4a690b47c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eef0932-583a-438b-a263-283e8a8bd0db",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340ba530-598c-4b42-a436-ae771408b38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6006d77-1f85-4f9e-a426-b56d9e3aaeda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a143ff96-0b28-45fe-a298-8951d1570480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "920fe04f-1b3c-46b4-a55c-76a106ac6c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e5ccf2-cea6-432f-9171-da162ece4228",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacf6a34-a108-4f83-9e86-89a93a844a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c107e9f2-6caf-411f-ab9c-9ce70e2383d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8a40cf-f26b-4a84-9c4c-4170d6368f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0e01cbc6-eb8e-49c6-a302-f06fecb15e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5acc990-3059-4c57-b1b2-969c0b04a645",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50940ee-29d4-4e79-92ad-a1b437a27c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995a4751-fe20-410d-9074-460436141a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066473b2-ebae-4a17-a702-64c92bbdfb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "31e93b72-7b2a-473a-a0dc-ee89a9aac4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7496026-b049-4018-bccd-20ff0e347ea1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8294ac-29fb-42d6-8459-4f905bbc04b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adaf16a1-8dc5-4028-95a3-14b363989329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfd9771-4fb9-4c5e-b0ff-236dafa8a021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "868fe91a-4c3b-4d71-8b7c-bb06be452797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98579de6-315d-4717-8aad-dcb7456f37c2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a809eba9-91e9-4f80-8700-610a6f9bbd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c417318-1135-4308-a87a-b67608a5528d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0e1545-fc39-41d0-ad37-f1738a50c21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1756988d-8969-4a92-97fc-614feaa04908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2d59b9-174e-4c45-a113-aa3c012c1384",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b487efd-368f-44ac-8b7b-27826f71321d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13cd8fe5-a2c5-467c-b91c-77cd511a356a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53ea698-8434-4eda-b1e9-27ced1f871d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "440b9cfd-989f-4ca1-a876-a0c70411b5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9afb1d5-a2fd-4e19-a012-93f47a1513d1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c95174-8e51-4c8a-b985-ca9571f96625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ad5962-596a-4d23-a912-a3bea0dc2283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ee3ff2-4065-4826-8fff-896cce8ea48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ab23cf-8a22-4a92-bdf3-605d84f0deb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7c74d9-970b-457e-b8b2-1746d4efe756",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fb8d5c-9097-4ad6-83a5-f46a38ecf631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984f2f70-ae87-472b-b7e8-20e16f57c6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb105d4f-329a-4189-812e-e94469e6c11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "856a058b-d4c1-417e-bbf5-2bdcd4727778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734d82a3-1386-4c60-b9eb-a35c7ec80224",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950308f1-98cf-480b-a360-c13560730510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49953858-dc27-4b1b-ad86-1c8f2add1c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3eaa18-fe05-4b5f-837d-2f5b0e5257c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d665c40b-7cf9-4bd1-921d-b33d67695cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b028f653-2935-413c-b890-61cb58ed5445",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca67ffa-74c5-4f95-850a-56bf13f40ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a1a3111-2cf8-43f5-b6de-b9a7f138f3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d609d70-d003-4a65-ad7d-b7784824cac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b7afb6-c38f-4e60-a43b-5ad7fbcbac07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284fe7e9-39d6-44a4-8997-352913c81694",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f23a66b-d6bb-463c-b79c-f5464baf1ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0503f50e-c110-4bec-8e97-09730a1d5adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e86a371-707c-45f8-96cc-be6656836186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc6e1e5-6b44-43f8-aec6-22acb400e71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf99559-c161-4032-abde-8854991ec304",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce01fb40-ff93-4683-be29-f92a66179c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4ab16c-0776-423c-8a1f-1a27df5a0449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58736d58-a31a-4b97-b2cb-05729d97fe01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "82bc6906-4fc7-489a-beee-1d0bf3213a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9516c4-2b56-4fbd-8777-e24fcd8d193f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b948ff-f34c-49c1-9d06-cf6b6e4e836e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de4b355-acb4-4450-9849-ce32d2a0c6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd65dadf-f9d7-4ae8-9aaf-088d5b72cd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "407d018d-54d2-4259-859d-9e45e5623a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31a1602-305e-44fe-8c61-2b1423512181",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be08bd05-6774-4ebd-8867-ed86993d2a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58c5587-00e1-4c0b-a145-89be8fd3b16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9354b92-1056-4234-b4e0-101aa22b785d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a57d85a8-bc9b-4567-8903-246488cf7205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7061b893-d9c0-4fa4-9813-bc76fb15a63d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f460d126-d1ce-4531-a68d-4a4832c17e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f464bd3-98df-4869-b5bd-3ad55a2f937d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c0a44b-3902-44e5-a6d1-20ca8018e0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c38dcff-202e-40cb-979f-0d6a8fb2acb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71d4c02-6b0a-4715-b3a9-9e5b0d30ad96",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f982f7f4-7e46-48e4-8548-3d41660e1b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b2a301-b460-4667-9034-39b1e40f01b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abc9342-3173-402b-aa92-3560dd1cb8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4a6ac9-cde1-4269-8339-2b8416c8b2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9a7e35-dcbe-4599-8083-21275ebacf92",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e96d9ff-9ed2-4b95-8f85-dc6ea38e4e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef61169-30a4-449b-9ee8-104f3ccd190d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fb60e3-603e-46ef-9f02-bb2fea04f144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f2aeada-9c16-46db-828e-9ea3748c633b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44708b76-9a06-4bf1-a62d-f92ab722c5c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02cf32c-8cd7-4a2e-bdc5-67bc8c0727e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e848103-c1f8-472d-9886-8343e6a48ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adcd8c5-f228-466b-a401-81ea1a2970c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b7cff24-0608-4934-897f-4e8b62f84134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f72f111-cfd3-48a2-abc0-6cb3236ef06e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f094fee1-31c9-4e75-95f3-4144c1a2bd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1b93c7-f8e9-4003-a13e-ed0d05b4bed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f3cf40-4cb5-44c9-a559-0890cd315790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0de9c7ab-aaf7-4c50-b125-fa203e285764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa100e0-1eda-4f6d-8b53-0d3839726b25",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8283d7-49dc-4dea-a437-ee3189e9403a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3629f9-eabc-4f1e-a379-c169b57f10ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c415f18a-076d-4e7c-a705-0b457fd82307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "18d41913-d21d-43a1-9be8-2d937ff20cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080bd69a-d833-4cd6-9bd8-98ea576be973",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f5c0e3-33de-49a8-ace7-f48ccc1b35bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8a3b5b-742c-48d4-9c41-77f138a4b1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4ac238-4dfe-4bf4-91d1-dffef6e1b126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "df0e15bd-fac3-44c1-a4b1-d1acbbe1ec9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243ba3e6-6ec7-4c9c-ab30-0aff7afa04da",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b69a18d-32eb-4431-91fd-7f71882a12a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded66895-0fbe-4101-932d-b4b49ab7b9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210c79dd-63a8-4639-be6b-173fd299a3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a56a078-2e99-4738-975e-f39513e3f379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf641e0-1b78-4783-9ba9-99409be1daa6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be04338e-c007-4e52-889a-e1b3ad6fe968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77091c42-d9c9-4445-aed8-f368a8ffadc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581ef6ca-cb2d-4f08-b73d-d20d21241eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b411e67-56f6-4f0b-85f9-f68f6893c850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5517daf3-1f14-4428-a9d4-35744a53dce6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b756b44-8855-4cc2-8b27-22c482d679bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dae3ce3-449a-4e0d-82ae-daa2fc796c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38ba626-7e9f-4721-aea3-ef1827713a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26399666-8876-4c9b-9990-202f82c90fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d14ec8f-cd0c-40e7-a1e4-a786fba16981",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a77cc57-7f6e-45b5-8fd9-cfa52981512a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a149ee-9e2b-47b1-b503-c1221b7655ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5703b5-5fc0-4866-adc1-354dce33c6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c7799e-7271-4c94-85cf-c776b16aecd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b90592e-4e9a-48d9-b665-c3f1ff8d677e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc92ebbe-78da-479c-8cca-f4a77c684b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291500d8-2434-48f3-b2d7-09592e644a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe733b6a-a422-4031-9707-1d0414352c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c7b3488-4f7e-4f03-8ad3-806a45f5a5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58893b00-3dff-48cb-8151-8e8ca50cc513",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50615b27-ce0b-457d-9611-68b120ffc6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5dcfb1-395e-4e99-ba6f-cfd67e6bc210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903c7d0a-fb34-4739-a7d0-24fc99a7c837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff1fd5a-e9c0-4e6c-99a6-23670eae7300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c98aee7-7eea-44b9-91d0-7d2c5dc34ba2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df85009e-d23e-4b8a-b178-1946a1dab6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d265430f-e6c0-4065-be69-abdebac0c7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51502ecc-284f-4981-a260-19f5f0178384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0118c5a7-96b8-4ac7-910c-3d331a6d514d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c07d169-40c0-454f-bbde-f1be068d5f5c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c059868-e1e6-433c-b0a5-d4f9786eb47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c910f6f-cc93-4410-8ea3-0914b4d64070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ab4d5d-f56a-4a4d-af05-ba1986773ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd198f37-691b-4b16-b2b6-9ecda8049896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071b7f8b-7a05-4bfc-a652-b878f5aa6d5a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01124a41-3bb6-4196-9291-d19997387741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09dc44d8-e124-4a01-a7a3-712ea876f0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3de80e-7967-4fbf-97f0-d9ac7dc79667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "786381c8-fae4-41a1-9e83-5f81f1aafb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b2fa82-b66c-47ce-8497-eaa8b52afa52",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b0f45a-3ecd-44f0-adf5-bb7d3c5fd4f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25757dbf-d5e5-45ce-ad48-414085c87d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2660a8-d5d4-45c6-b3a7-37465d8680eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35377de8-a2e3-4f15-b1c4-eb4160f45ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddca9175-890c-422b-8327-6e63814da156",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6375ff9-f442-4c3a-ac52-3d7c762c133d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e2b5c6-9533-4f51-bfb4-5c176477a7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6297d35f-4548-450c-abb8-24bc0147a699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2083f9d-bfa4-49ff-813d-fa26f277c746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2499697f-5290-4798-b499-da668a8e2c64",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd85b51-1a39-47ea-8178-2fd73df4a5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11cad8c3-fd8a-49d1-b44e-62ced4930969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e83176d-c3d3-4837-9ff8-4358da2adc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa368e93-2e15-4fe7-84bc-c276218ea39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbfbec0-6269-4a98-bb7f-66ac0eb7337f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87e0c3c-2978-4519-a5b9-c14065c39463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81c0c49-665c-406b-86f3-7ca7e1218032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05502111-b0f4-4aaf-98cc-032edc495f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "532b154c-a973-4a94-b822-35a0375079a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeff6421-cfee-4d68-a28f-08306e479baa",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0536b88-1fb9-49e8-9a64-ac7af5db84b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab385d1-788e-4171-a60c-49db17acc5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a222e83e-5dba-4c24-afe7-67746d359eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01dc6cc2-b551-4c9f-b34d-1826c3ee9f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad6c183-65ee-498b-b87c-ee606524c169",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fde2142-622d-4521-8ed3-b518be1cc1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bb0847-f8b0-44dc-b0c8-5643b047bf7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da10cc8d-3b33-41f6-a412-a9bcaf1c7e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0192409e-7a55-48b4-9fbc-35d350ce6239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd92eeb-e228-4a7f-9c22-e5b0ae0fc42d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d2ea49-5a72-459f-97af-37da12b7fb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d16d01-f0b6-4afa-b53a-4441b0fc92fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114ef1ee-9286-4109-bd37-f3a584e3652b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d09aa01-4082-46c6-b647-94d59886bc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe4696f-52d5-4b19-8dd2-d3657be111a0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecd60aa-9f8f-4dee-89ca-c00462afe591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cff7336-723c-4191-bff6-fd60f2802456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b906a523-161d-4f73-8f11-c41d82a02be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "728f5cad-938f-44ce-b9c6-f9908821de7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2642820f-5b54-42f7-9527-8f31930b9942",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f186bc-f9a6-40e4-a14c-62d213f154cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2332fb2-c110-4b97-94e6-30d81052d8e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f17495-f923-440c-a598-da8c8f40ac70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8e553a-93c9-43bb-9b4c-8633068f32f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7cdeb0-8d86-4707-8ff8-510e94c3e201",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acd9ab0-ef18-42b7-bc99-68a8a7c93898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afff914-1f2e-4cec-b41e-14a2a656ad6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bafb49a-8e53-479a-8622-8c0f7cc0174f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28e81ac2-d415-429e-9d4d-9a37fb005589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9a499c-f3ec-42fc-8b54-8f2377e66151",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835523c8-deee-4582-ac88-05cf0fa614b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d15b50a-ca3c-4f4d-946d-be3f34c9bfa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd5bacc-19c1-477e-abc7-0078f06573cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0656716d-8035-4fd6-ad3a-50a73fe8586d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6647708-f05a-4670-ad2a-fb8f38472c26",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9617c994-d02e-4dc8-a8c2-b3efa67d21b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab54a6c2-7f74-4bd3-8625-7c3a119b77f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0840b26-bcfa-491e-ad91-5ac3df9f303b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "399b0327-02af-4ff2-8f20-78f07bfb88b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc65ef6-fd50-42a2-8b04-bed41f83738f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6769f8-9252-4f71-89ac-0bd682a1298f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f59f4744-4baf-4e0f-a39f-29bc8bcb02ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a1de6f-abbe-4a1b-b529-fa3020ed5c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9becc6c2-1d19-4d8f-922c-719eefffef5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace7abf3-3c1d-481a-b5e4-439cf63ceb33",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296a07f7-54ae-4c3a-b83b-303a9676f84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b778e6d-1f49-415c-9925-eba28f748a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a37651-ff14-4b26-8934-300c015833dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bdb4a2-5d4c-48a4-a161-4ffd3cdf00c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc2d81e-1816-469c-bf30-20dc9b438b7d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77925cd6-8551-40a2-82a3-3e9d8dce00a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41398de3-2a6b-49be-9d5a-409a93149f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f960f1c8-a8eb-4a1c-ae87-af51421dc450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "247a3226-8b1f-484b-ad94-978e8eafb49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943440bf-6fda-4604-b3f2-1858a2c17be0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31875e14-d410-4d58-9280-c61480088549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565a754e-abcf-43ab-a4d1-ca24284fdbe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c44bdc-cdf1-4221-bb27-c24dbbc1c24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15651d3f-70d2-4a05-8b66-83daf51179e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0932f8a9-34b8-416b-bfb6-3c5723778267",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef8c69f-49f7-43a5-a726-61794070e5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b568a28-2f6e-40cf-bec9-eb96eeac153d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ff47f1-0a99-4939-a2a9-8eafe0001ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b498499-236a-4c7f-ad2c-e16e81e72441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981aeea2-08a5-4170-a198-a10e11b90f95",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f18cca-24b4-4905-aaf3-5fbd71d49c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54f3408-d42a-4f43-8bb4-adc9434c0466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335afc75-690e-4c9a-bd8b-c2232243e1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "208fbfb8-8785-4aa2-bdb1-eab31f287433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709177f7-14d3-4c60-88eb-e6d57be5a61f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e051bac6-10fd-435c-8b0d-8965621945f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2aadc6-2963-4119-b200-1eefd1a099d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56d7c4d-6856-4a2f-a43e-8acf85d8f7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bec44785-7ac6-4d21-ace3-076c72b712eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2a14b4-d797-4568-963a-17e3cb41ed4c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b785c8-0480-44fe-b5cf-e4c0282a7ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d71e17-6f4a-44bd-875f-eeaf06646b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba78f221-36dc-4d69-b3b0-13a763356731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b80337bb-8cbb-4e58-b2e6-6f0e83afa1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705944e2-9c0c-4c09-ba13-cbf1a71a3152",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331802a3-7093-4aa2-9945-c7ecf33fae06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae122fc-76af-4089-a9ba-40bc17d90873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7fa5b5-235a-488a-bae2-18b2c0ec2abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a0618e-4663-4d67-aa1d-3c81d721e5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38de465e-4731-4eeb-a1b4-58025766afe5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e018726b-a326-4bb1-bdca-ea9cae417426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1599447b-8b7f-4da3-b8e4-080a9a498cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc47805-f9d5-4d0e-a33f-67112cd02e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1743c2fa-9f8a-407b-9a64-4f4a5a6d59fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8cfe56c6-8d8f-4087-a80b-e2e07bfbb7be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2cd605b5-1c7b-4839-98ae-6fcf9fe8d8c6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4907bf08-e1a3-4bc2-a0ef-7f8f957ff2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bb0af16-c136-4e59-a2ca-fc8d1631c360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5d273d-b9cb-4505-bff0-2651c1c16a07",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a6968ca-dbab-4ac5-a3de-cabebe884218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347e3580-d372-446d-9654-36f06c582d6f",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5c9a72-c968-47c7-9b97-8475a032814a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddc6d169-3ff4-4545-920c-5e71c935d1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c86fc2-9911-46b0-ba83-552804f43cb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57185549-88ad-4654-ba29-3f35b39c43e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f791d146-9c7d-46d0-abee-09bcca328c57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c09de706-1522-42a8-af1d-2a66549b9710"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7540f1d3-5faa-4a64-9082-49b32fde59af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e329d2b1-e22b-4c5f-8426-a92e7747c176"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8cf422e8-20ec-425a-9557-403ac4844723",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "13f5ac9e-6325-4f2c-85f0-8423121ea8aa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6fc9bd80-36ea-44b4-bb23-cfb5f2e0a47a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ea65d1b8-e471-4412-9e8a-3f16ade8d13d"
                }
              }
            ]
          },
          {
            "id": "fb10ff89-d0d9-4a9e-8966-60a3242973fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e599984a-692b-4e57-a357-8dc3f7e3a3f2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "081e4135-29cf-4955-8e3a-b7d40a96fa50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1c56d30-465a-4ac7-8a1d-ea698cd6214b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07f43a35-5682-47f3-8133-ea269cb5dee8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95366e69-f80b-4a9d-a505-35166e061ea1"
                    }
                  }
                ]
              },
              {
                "id": "c3cf615b-8012-41b9-b028-5bec6c3bf32a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97784ad5-bb6b-43c9-8b51-f60e81ea9e16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "656b6c79-326a-40d9-8499-f3a805c0d5e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7c612e3-8d38-44a1-b04b-d5b7bc14f861",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dea46cff-8fd8-477a-8ac7-8379cf24e0a6"
                    }
                  }
                ]
              },
              {
                "id": "d90ea6aa-6b96-473c-b742-8669ab028f79",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd0305b7-2a95-4779-98a0-ae9e50dbd6a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2678b994-6892-4dc3-971d-d3d8650000b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09dce099-f2ca-404c-94f2-95fcb1d2dbab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5ecbe004-a8d4-4054-be0a-c3b2b2706b48"
                    }
                  }
                ]
              },
              {
                "id": "42eac7c9-0741-4ad2-af44-43e90f700634",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26ec2b5f-6879-4f01-b4a9-47542364ab89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8f66330-14f1-42a1-8cdc-655372fc34ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "756b8d46-2e6e-4ee6-b610-0178f4448926",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "296a7653-1fa5-4eb8-910a-96094633d3be"
                    }
                  }
                ]
              },
              {
                "id": "eded7053-61b1-461a-b0a6-cc12fd8da476",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "111da7e7-7f56-472a-93a9-b993752c655a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d458bc93-b6fa-419f-a770-85e83f657495"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43ced66a-e093-4615-bf99-7b3fd709872e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f083e5d8-f392-4161-8c51-d136333f7ce9"
                    }
                  }
                ]
              },
              {
                "id": "75df8b32-c6d3-4761-a9f2-261ec7dc1bf7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd84e7a8-aca8-4591-97ab-7451fa3f147c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4fe4b22f-8c0a-473c-b4f2-3483a94c23ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d38535e-9e83-4d95-a0a9-b883f7809e0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "00a849f6-882a-4173-a56f-ad8d531e50af"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d414ac1b-bf03-4834-a956-1348414154a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a6e5701c-5f9a-46d7-a785-92162fe42117"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "381932af-b3ca-4544-80d1-4e8bf4eff59e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3264d3c2-ecf6-462b-a228-5bc2fb577c5c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61362dfb-0173-4231-bcf0-2dd44d70ee64",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fa2a96b8-8774-4651-9557-a106e588c1ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "328b830d-c8f4-4b56-b921-7435fccdd11f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0db65b8-1faa-45c9-bff5-13bdcd3ac7bd"
            }
          }
        ]
      },
      {
        "id": "14de9f71-4432-4d31-9588-c87dfcf69b09",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bfebdd60-41c1-4ce0-b393-1e776fd99a91",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d0957e9-7b65-4f3c-a98f-293431c643f0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e852b42-58b6-4ec4-88d0-4bb650432354",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d39c3c0-d8ac-414a-b825-2fcfe78c8ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63f129c-2c89-4364-bb5c-7b4e998f3416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8047cccb-53fe-4fd7-979a-995af57660c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "29d0e8fc-a677-4cf4-9e8c-cd6afd98e5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cc619d-3ba5-4195-9cc2-2a7ced6cfcea",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89635411-cb08-41d8-a21f-64df35f07b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8260d8-99de-44ac-ae0d-ac825a8b06a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84258717-ce1b-46a7-8a40-449e9ca3ab39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "233a55c8-1f8a-4d6b-9928-1ef19a40df7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86a050a-4447-42e3-a2c9-a2a20711eb4b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a96e6ec-6d76-4ea6-910e-2cde2e6765ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aecfc7d-50cd-42c0-ab3d-8e47fa17dc98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682fe18d-4a30-485d-9d39-1dc4891837e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "405dce2c-e0e6-4c1c-8d38-c63913a69c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81169293-7945-412e-bff9-b8fdd8ba3b99",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2a606d-f407-4a9e-a82c-7516ce20274b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d4895e-c3bc-437f-a7f3-2a3e99a9e6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28248093-4812-423d-9c96-a61ae3850241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "006233f6-59d4-42ba-8972-d275f44da1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e690fa-3a0a-4842-a094-a5147ca67216",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa58810-ba1d-42f2-925b-ca9e02556b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4e3526-16ce-4b4b-ad9d-a4f7082ea08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa45edc-d21e-412f-a8fa-a3ef50dedb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83991baa-989c-4f10-8533-09a980d892e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fb764b-88ad-4a18-977b-dbee5417d513",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0851552c-757d-4fda-9554-227d801e1aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85360d08-f1f3-48e0-8cd0-d7858c098e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9093fddd-832a-4287-b595-0f31c0915103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "945a0ddb-f1dd-4ebd-b996-f57c4f3e08b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cffa75-58c4-4c51-bf75-2715dd1492e5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b85f241-ec2d-4a0f-af80-c87061bd007d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7beb691a-15a3-4752-b0d5-87d5583bcf1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047b6859-e79d-430b-908b-74f3039cc9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "07275d8f-a577-4afd-b55a-90b860aae743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898033a4-5036-4e7a-af6e-2c6739fc8802",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876280b0-324f-4969-b9f8-c17db5ea9af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79df5e34-71e7-4309-8e24-d31fcba65214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc475b0-7088-4524-b8f0-25ea8a4c60aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d69464a-b632-4e44-b982-7509eb61d5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbf1ead-0629-4605-9f92-9e821af9f0d7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65582577-284f-48ac-9f44-9eee0997842e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99a1c39-8d81-4aae-a330-2cabf9b98c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eddb0dd-e9ab-4fbb-93e4-f903ae3190c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3dcb1bb-cc36-443e-bfbf-2217bc83160d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69fe938-bb0a-4e3c-b780-500f9e54cc20",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e1ad9c-ee3d-4120-a2a2-898dc99c211a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c518b40-302b-443d-a790-f4dde224e995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccf1280-c54c-4264-861d-337242326e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7da61cbf-6e4b-4884-a9ad-b3b01b67e069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b01aa9-a1af-4c38-95f5-aa1be2c94056",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0135ad07-e093-4fe6-985b-d16d0675da87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafa3bca-1da8-4c51-90d6-9f6644cbb0d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d0cab4-ce5a-4fc7-9a73-8d158b7dbe1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "54c304c7-911e-4193-ba86-c7efcb08301e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd692ce2-9d90-40b3-9a56-97186ba33576",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6514bc-4f3b-482e-925c-5616c703455f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539b25f1-c9d1-40b3-85fe-d01bf432a2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4735cc-e417-4d94-b071-8438e3ce7ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8502a63-07a8-4f22-87ab-9b3f4b4aa860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b493d76-53f5-4504-b72d-eaee73637a5d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9885d8ff-b287-41c6-a4fd-e75aea9af5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cc033f-6314-4f78-97cd-cfac9fde4912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bf2354-7c1b-450b-9891-388800fe0fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "54fe2e45-49b3-4e39-afe6-ffb8b81f1c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a7c35b-f94c-4c41-8dbc-e64a098bb2b0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06635507-00b7-4bcf-a3d6-acf0b41b9080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c27c33-4204-4be6-855a-9104bf84c436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1b317c-5e49-40c2-876d-344909384fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "85c3294f-d8f3-4c8d-8d69-bb6bcd0a7220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5397efe-0cd3-4a67-a0d6-def60bd1b4cc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81965b8c-a34b-4c34-bde0-2925c460e316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4af585c-a7a8-49e2-be1f-e9adca69b5a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c2cee7-fa3f-46e4-b1e4-0afe93b01ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "10db7bde-8ebf-49e3-b0ba-3765222c6875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c4cb33-dd34-4729-a3dd-c8933642b22e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3d4d12-b424-4163-beac-5da7ecc142d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822543df-ef03-43f9-a39d-151497194c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d76a35-6508-4d14-8f36-18979e02fb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bd63cf-d9b6-4490-aee0-b080ac7fb99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b778b622-2d66-4b95-a460-1a758ad59601",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1b3549-45b0-416d-a895-a85dd1376d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d0d2e6-ef70-4385-933e-bef1af703e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f46de8-d960-4a0d-810d-ddff66e539c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "67f8ae22-945b-4bad-9034-4c92243dda40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923265f6-b86c-4f44-8287-bdd90537a4ea",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9258e0c-5b67-423f-9d08-19a065d7c915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eed5d67-0ca8-43f3-adf9-0e60d595a517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee62ef35-7f3a-4135-b2f4-01e7a95908ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7628c908-9108-47f3-8179-b6770e9dc339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7827f7db-1caa-4da8-9b7c-d2acf2813821",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bcaa15-26b4-4d48-9140-3438cfc064d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e77dd01-4e37-431f-9511-5ba383919fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ead9cde-8141-48d9-aa1c-934af2093b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "651dda7c-0553-47e8-8b1b-066c1ca5ea11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd574523-130f-4e6e-a65b-24c938034846",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79d00f2-40d4-4f2b-ab12-6fa4d6c63ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736c8861-cad6-47f7-982b-415fa183f898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9816b3d0-0625-43dc-beac-7d338663d402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "871a7bfe-265c-4598-b30f-c837fd10a94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56028db5-6247-4ce0-9c4e-d7878377708e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39da7301-d7d6-4cda-8c41-fe90864dd063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6916834-f786-406d-8125-89666ec678bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd22b30-bdd2-409f-9c3f-475cf1b724a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f6820e-69a8-4178-8468-a527430efefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26025e3c-6246-4aa3-ae86-60bccf869f9b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157bd902-063f-4947-93bc-ff9b7e7b6e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63fcad5d-a674-4e9c-aff0-eee5badfb938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5093ea80-0f27-4296-9f43-bf66bc757c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af54cfb0-6dfd-4b77-a6ab-487ddefadd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2ba60d-a42d-491d-9663-083083121096",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8b96fe-4412-4650-905b-2b65e7de5ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415254d2-3ac5-4fcd-a5ab-4e2ad67d2274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea11e2f6-5309-486f-a33e-3fa0cd6931a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41800982-2f60-4524-8000-1307b41cfe1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57ba20a-4d84-4f2e-bcc7-6922e00a83c9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e70bdb0-b420-4222-92cf-8554c7b51091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad0d6c1-fa3d-45c4-bcdb-64dbf48331b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63499aa4-0957-4f62-9703-624c33ce0d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1052017-a745-42fd-94bc-71ce58696b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ade894d-e0de-4a8c-8d79-ac6b3efe6e3b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d5fb51-444e-41cf-80a6-eb50163bb621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a84379-5a55-4c25-a808-608b18964282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6d3428-40ed-4ae4-b1ae-6601b4e9efbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3cc4291-3b30-4018-a412-086ade59712a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94670bfe-72f1-40b3-95fb-40275d35ef90",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6cf826-1e84-4c20-85e3-1a8c819bc953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bede1c6-f86f-45e9-9785-c5c364dc0c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9521b030-de1e-42c1-b841-bf497751612f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54212e63-5305-4c1f-9ec9-872d874e09fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2143da3c-58e8-49e6-b351-9bb2c2c37b57",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cf1426-1356-4519-9698-184c4ef3244e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d109f6fd-de67-4995-b808-dd7236c10027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1652354-f3cf-46d2-8b92-5fc9c0a17634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98b2e070-5c1c-4a97-89fe-164594abed1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f91ddf-7c50-4072-94df-c0aaeab97a20",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf400b4-dc27-492d-a4b1-4c8455c92668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5136b251-63f8-4669-9b7c-7bc9216854c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc76f5c-3739-4ebd-a418-192448816f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05112c7f-7ac1-4fd4-8c9b-88e57124e79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78b7d47-72df-434e-a5fa-29ebd18d4e1a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1312201b-0c8f-4907-aa15-e83b96d08248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46fe0167-2d83-43fb-9367-3028e5fa232e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7843a995-9381-4b7d-a0a8-2d99a590e4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "901a6df9-1ea0-4b1d-a2de-1eab810feb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7632aa6-ae46-4e23-ae98-6233745c46fc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bcc624-be1c-4656-bf75-2dad512834f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d96d5e6-84b6-4fd1-a042-d51058a23782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4dd764-1927-464c-bb09-af56963da54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30715d96-d775-4d23-928e-f1e73f74f07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62d4e49-d4a0-42b6-be08-68599c56220c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aab6208-af47-4a90-907c-32efa144daca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbd1221-0d8f-4c70-866e-f17e4f5af947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aeedd39-fdc2-4f3a-aa92-33f77f9adda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bcf9afc-ed84-4c53-b447-7db9b410e556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27090a44-fee7-470d-9c4e-61b2bba97f5f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac4da77-e348-4cd9-b6bc-b05aad1449cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcd196d-90f3-47e1-9915-a3a744d3cce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a1aaa8-b2c5-44e1-a027-7ca326de0981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c851be96-e106-4c01-92e0-0593d52ea451"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed386329-d2a4-4b46-b620-d2c2db0afdd3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3c5356c-5e86-441f-9f05-2d92092e2e5e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa9b3e3-6f57-44d9-8b2b-77e906d01cbc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "53e8b7df-4566-4890-b9bf-7c1fb4c87e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c687bf8-b209-4eaf-9870-b791aa8f4887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db574d35-f3f2-41d5-ac4f-eae2b1a38a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e1b015-cf53-4334-afa9-c239365816f5",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e11f4e5-e6e7-4c1d-be57-ead7307ba46f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "60589ffe-9b63-4976-9d98-afc31dbdb7e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6126d2-4f86-4625-aa95-a03eaa95e3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58b05aff-9285-4fee-9323-83b19ed08d83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f94c3cb-e80b-4dc9-b57b-497966e88b9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4aaeba7-3afd-489c-881e-44108f3100d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bb2c4cb-59e0-458f-af1d-ff3894a014d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5221b009-26e0-49e6-b3ad-55a952663cab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db73503c-af13-4bbf-87e0-637b271d95b6",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6035f313-70be-4b55-9556-84b5f1edafe8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15a34ae6-890d-4fd3-9e6c-89c45714a786",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6385a6c-5e10-4982-a14f-35f17033870e"
            }
          }
        ]
      },
      {
        "id": "698bd4b7-39da-4218-b088-7e7c153ff50c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8cd9ac3a-4ec8-48ea-8826-75f5d715d341",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b26d5cf6-57e6-42d9-bb0b-77a1f3d2c857",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ef72e079-0d6c-49b4-92a5-3cd2489cab02",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e552e04-fcf9-4b06-b647-b4aceb4f862b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da51bee9-0455-4560-b3b8-eb13e26d89d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1224e682-4863-4045-b9ee-ca03605227ca",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173efac9-d3fc-4da4-af09-46c045e854da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2533914e-61c2-42bb-b4e0-d0f103a805b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9270db68-764d-4989-9789-d04ca583119f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d254dd-d560-47a3-87e3-ab4c43390a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff7351a-f044-44d4-9ded-814d69a20209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190e7e14-4aad-4ef9-81f3-e8ce79644773",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7dbcda-f9e7-465e-878e-78b24a599d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44e44e1-9b12-4f02-94ef-21b4b2a06097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce131827-3d64-49a8-8d47-f475b6403388",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f83e19-59d7-4e34-a59d-c2fb5d088753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4f6f39-aace-4368-8ae8-d2c25fd8f3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddffee87-e97b-4a98-9ff9-896ebf0c35d8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee1f25a-8649-4c98-92d5-691ad61fd999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab30060-1d22-49ba-b992-66cca07f8547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8d48d6-34ed-43b1-a4c3-e503e05bb7b9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9b41bc-0d4a-44ff-8491-5a6a2de105da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944e920d-33e8-4794-af8d-9c57e3f96db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21edb6a-64ec-4045-a58b-510d236be943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d264de6d-3461-4e3b-becd-f088f40e449c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfd9772-022c-4ff9-b747-79fe63dfe825",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1623482a-c1d3-41dc-b91b-2b81af40a3fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b704e72e-3d17-469e-9a74-52cacd73cdeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eea8c06-1ca0-4a21-bf72-1bf336ce368d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70da5574-8a3c-461c-8d3a-89e90cbf7bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0334be85-e481-42ad-8749-cd391dd85f7d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a68be4-5af9-464b-8e42-b210db1c428e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f8d9730-0fed-45cb-8dda-cb8aa9480635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff72ebb-169e-4607-a151-5108dff46da4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5775a59f-777f-4b59-bbd2-8465cd467117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be499d0-6cab-4338-b719-6aa2de4a2242",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8990437a-fcbc-40e9-a78e-9ad7f5a8a273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36340aff-b996-4998-bafa-1b166ad2636c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bcec90-1c85-4a63-8548-857c1bd88f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ca319a-0fee-41cc-a756-2c8f8aa414ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43576240-f26e-482e-a484-ca48d038c0d1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcd02bc-3d6b-4120-a72b-a268604e8c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e630b0-d1b0-43a3-bcfe-96ca4d74de25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0757bc5c-3f9d-48f5-acc4-4c9c0420c5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1884892a-6360-4910-9469-0fcd1272a0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f44bb2-e0d5-450e-a78e-3785b936b531",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22643f3e-10aa-4c05-8ecc-24e604b588b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfe211d-8cd3-4017-8cff-0f14dcdf299a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab1cb5f-a795-4475-a5f5-2ac4eeebca55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d86d47-a3ca-4a9f-b1af-51c13590aec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25359be6-3df4-4f43-a26a-b483541bb309",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349950f2-4717-4c57-b369-cdbce55ad677",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5abf70b6-395e-4fe0-bfe6-3645e9eb915f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c81046-63ca-456a-a8c6-964b06d581ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f094f55-a44e-41eb-bf61-3894597448c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7091b02f-93dc-48ff-9f5f-1f2047fc6f1b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857113fa-32a3-4f10-b55e-1467c3c8a0c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1442bd2e-3502-4eae-add9-c33c0dccb63c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ca7f87-f169-424e-9dfa-300b86438bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8bfe94-c9ac-445e-b417-86d5a3f6dbeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bd7fac-c408-4de8-80d3-93d256c2c9ea",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417b6c0d-c32a-4c07-bea4-9a96f71eb48d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ea18e6a-8ebe-4a1d-b212-911b8d5b3d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0b3ff6-5b2d-405a-9758-a243f50e299d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382b4c0c-9e4d-44d0-95f1-76f661650957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9851f1ba-071b-4b3b-8219-3d863a2b6c0c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efebc11-0ca2-439b-bce4-fe8fd8590eec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a834e46-7bd0-4a7e-95dc-d295bed36ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe67182-b0f6-4197-b30c-df58fca0fa64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97eba48-ef23-4589-b370-987b412441b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748a55a0-85a0-440a-8316-78db4d40b8ef",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b904cca-aab2-44b1-b71e-5b3297f11991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6ddacb-0584-4674-93bd-fdbff7537bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b96537-40e7-4846-8ac1-e54f98b980dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01b9d74-c65e-40bd-a0a1-8d5eb5f05909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445973c5-819b-4ba2-9feb-163d88b69b70",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2bd7f0-8c68-4c0c-88fc-a75f232a2885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67667867-347a-435e-ab23-9628f8149ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2e23b4-1628-4f8d-8716-27b4d1c94244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee500711-5b0d-4043-a891-29dcf7506387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28173cf7-dba7-4240-933a-61d6734cbd73",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2c1c89-3c1a-41be-9d1b-02e5b594859b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79dea4fe-6abf-4bad-b7a3-33be3d84f46a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbd7c7c-c050-452f-a2d9-b10c6086178b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f037697-ba34-4842-8eaa-1fb75e744e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b983fadf-d3c0-4e93-b7c7-cec66bbe2d08",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923ec691-54f7-4f46-b28a-f6f7b16985c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31faa89b-c92e-43f7-a359-9bf0bb48dbd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9908ca-485d-4d4b-9815-2bdd86a59786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7006228b-284c-4db7-b0e2-7ebc161e5748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1844ee-1ef3-4db9-bcd1-a42ad77ade3b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43aad0aa-a23e-45bc-a135-036163f0964c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c995bee3-185e-4ddb-b364-2549de12e225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f28db7-45f0-4464-816a-1adeb95642a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b659c776-804d-4cdf-b6d4-267d08e60b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7871395c-4882-4c96-aaf9-9d5f8f00c120",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e49114e-a23d-4337-a7c6-62fd3c794e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4eacc6-057a-4ddd-974c-8d7568c2bfba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5aa3d45-68e7-443f-9c16-2dd761c8f9a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20adfadc-17b0-4bdf-8fcc-20d538473daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd12e327-1814-4113-8497-80f5d02c5af4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4145fae9-b191-4ed6-a579-12403e646705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387c8164-f791-4648-ad7c-20badcbc4066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acda0cd-b45e-457f-bf4c-d789825b90fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35898974-185c-432b-a962-47963b4d6ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6cfab4-c5c0-46dd-bc72-ab68d8784da2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2167115c-02a6-4002-b4db-243313ecc132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "158d4fb7-ffcb-49e6-8a01-cfe15128b47b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b203da-6cf7-4b6a-8712-3c8bcf005f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f966236b-7d46-4acc-a588-06976d8840bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c4af71-cf5b-4b90-9dcb-9a6437e77f8f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08584e80-d9d1-4a1d-9400-7d4bc22b45b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "939bc9d1-4dd5-4f45-a450-e5be7106113c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce4ccc1-42d4-4d15-b3f2-79ab93e0808f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088698e6-e1e4-4acf-a07b-cbad34629606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a183e1-04c5-4223-89c1-a73074cca79a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc80c9b-930f-4b41-a83e-55fcfee6c59f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef869c7f-6a70-48ab-ae10-d0b79434349a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7821beb4-9264-4793-9d79-93e1af5847d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ebd75a-c778-4487-ab4c-667e513cbd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36a1aa3-32bc-4767-a5d9-df3167ac95bb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14f22f8-65ff-40a6-90c7-9264b02e7862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "683dd835-b984-4f6c-aee5-b21ffae134f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fa5a7d-2ec0-4173-b35b-bebca3ce01b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e870911-b36c-4609-888d-456dc9715297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcc779d-42fa-4b32-b6ac-8f6318377230",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd45c7b-b9ed-4fc2-8651-b323d0cbf463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b02a5d2-c062-46b0-bb47-d83ad9c63727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a08a8c-0179-418e-8bd1-a747a4a878ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d7d831-46fc-4856-b63e-3e4c54789b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8c0b4c-e55c-48d8-a347-8fe029842348",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2b383e-1ce9-4fea-8e8c-9bc9724ced4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c48041ba-2a94-4405-a8da-50567e195ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a2dcb5-ed21-4db2-b40a-a2b1d80fae09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a2a824-40c1-4b72-aa9e-891775998ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c03ffef-ab2c-4304-858b-9772008b4060",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05ae936-8890-4b70-a212-3f7bea50a2b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40157a57-5dfe-4224-85c1-17496712a19a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b87b89-52a1-46b1-b2c2-4674e369103b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65838369-a0a6-4758-bd71-bd9139d64075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8f3a30-3ac0-471b-ab88-37ed659c1be4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2a3bcd-8ac8-426d-810d-16f6eac843a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b20c35b-f466-4767-9fdf-adc457412ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d96f0c0-fe96-4e49-a445-faf85e96c2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120930dc-aba9-46cd-aee1-e0a56d73aabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad3c45a-40c3-4097-8c2d-247098dce13c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f97a306-3fee-4154-81d2-7a7b07826aa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a675fcb-06a2-429e-9e48-ff0208fefb0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d5d943-e62c-4c8d-877e-344bac35431f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9abf02-134a-421e-adc9-4e18623a2396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d7609b-dff0-406f-9888-2bc6dcd9e4dc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef79f0c-182a-4c5a-aea0-bc45f4f0fe27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2efcb2b9-1c7d-449b-bb1c-64e8b2361153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd03af71-5e20-4ffa-bacf-71b5610462e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6675fe2c-d4e3-44e6-bb12-d19307d5940d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9669218-f941-4da2-a7e8-838324238391",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8076e24e-3252-4cab-a8a8-f77aea13e862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7539f141-99d0-4cfe-8b31-f96b7cb66794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1b913d-e1c7-4edc-90af-3f44610acec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568f8a8e-c101-4d69-aafe-02f157f14091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbf90cd-f3a6-4d96-807d-8828fe4a1abd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66052d6-2634-4a92-a3c8-9a21da26a9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca091e56-cd1f-4abe-8356-b66a67a4cfe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b3a5bb-3fe9-42b6-8a07-538c0809fd62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7eef3d-df4f-41e0-9b13-a6938a2679b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebc6f1a-cac5-4871-bf5f-ec4169f9bbcc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29c161d-3b61-48ba-88ef-b677eaa1060f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e7ad64-3758-453e-85aa-1790de1921a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f661986b-7fc1-488e-8db5-a828ce091644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab40bc3-5f52-451f-8af8-30db631a4c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6cbc57c-09f2-4126-87c2-8e2f1a6e38bd",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6f879d-a05b-4d48-9957-08b1f34f4730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828119ab-1a93-47da-805f-41f6cb8dca2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f418cd-b36c-422a-b83b-185e0cb0773d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c17d115-5f00-4df5-9cec-cbbf70516d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2420b6-f6f5-4042-8312-506beda54a7b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8307c6-28b0-4b11-be5f-4890e45af5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d76499-a158-44e6-8c16-e811d2c03bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8294ba-1d41-457c-baec-350097534c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42051553-f9ff-43cf-bdc8-0fa3eb407b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfa8a2f-aec3-4289-bfb5-480d2ae40061",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458df2a7-22fd-4767-9d76-951f6ecd2453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9339bee6-cd32-46b6-b687-843ff11dc327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13f6c9c-0643-4ad1-832a-01788a69001a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d2cf57-c970-4328-8ba2-312b8e51cd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35e9855-0970-4260-afc3-226f65a9b9fb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436b5f3b-1bd6-4e0e-b2f3-d327ac9dd894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416c2758-aafb-4628-9c60-9870f8a067e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4774d1b1-24fd-42d5-8dfa-ef44c2c8847c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67882cd3-e4bb-41a3-b47f-2e21a416ee64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f2998e-6133-4a68-857a-c984fce025d8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535fb89d-187c-43bc-bcd8-be843b6ed68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab600b1-93f5-4b95-9235-0c63e5361623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6beec1-39d1-4f4f-9a31-c95622eacfd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3828277a-f323-4d90-98e6-5eaeec2e7520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a545f2-6eb5-4aca-84ed-60d603439c8d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df33f8bb-b7cb-4ffc-bb6a-d342d95e0b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2216424a-d870-447d-967a-fad56681b300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8459f417-0b2b-4357-b93f-ead1664b9e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b8849f-4fc2-4ec3-b492-aeaf0793edbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ad1dab-3851-418a-9c1b-bee2dfa9e52a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4ca76d-e9f2-40f8-8cdd-b00dec561f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78af648-f26a-4001-af8c-30f01805e43c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6e0f5f-57b9-47bd-a758-03f12932dc2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54ce4d1-59ef-4f0a-b686-f68b544b0e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fa3445-e612-477e-aa95-a49a76c4ac12",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcebcc3-3a5c-42e9-ab07-d3ac04d1908c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0f5d63-30fb-47ee-be7e-33a4b309ad3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4664bf3-c9b4-4747-9313-1b3825501032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335138c8-9f26-4e2e-8cd8-efabf9281453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2aacb54-3cfc-4e06-9464-082ea015a556",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998fbb96-4524-45fa-b79e-15dc3125902b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca6c7e9-b1f8-4cfc-b479-cdf4ad148a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e535937-9232-4ec4-a627-5ee457f9c936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9fb8693-53d1-4c24-ae93-323cf9a316d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d05fd5e-83a7-4db8-92d6-bdfcf173e7c2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6654ce4-5f9e-45b0-87b0-08e40d0a34f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6406350e-387e-46e0-a242-2e85ed5808f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2eeb98-035e-44fa-8cf1-008e9957e235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b192f24b-dce6-4343-8a21-3a90e423cae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f52c0e-c72e-4772-b2f2-cb54f43f0466",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c076c5-72bf-455d-9c4b-27844119f0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fbf9c5-0a5a-44dd-a98d-fc2f3cd2ff06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e8fb5e-c5c3-4955-aa91-bfa6322ff959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81ae3e1-27ad-4d6d-9312-ebb0397c42e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfed01c4-0b03-48d8-8510-8dc13768a5e7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1aee38-92dd-4dc1-bf10-e126e644611b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8cf0cd-f10f-4473-854d-af5ac4fa5b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc7a752-6569-4422-9f0b-4f717e7e6501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e62fa9-4e78-43f4-9aac-21866f7b7cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172bd5df-391c-4915-887c-f5919646b6fa",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e89cd70-4150-464d-8523-a96d1367a459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04a9262-8c17-4a96-8a7f-99d8c9766d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3b4d79-f253-437a-9d4b-37a2d5da9d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0229a246-9afc-40db-95f9-6a07bc3545df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbaa9c87-0104-4a12-adda-9aca0cdbc1be",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e3b9ef-3ac3-4881-84d6-9b9866ebce7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263f6e30-6580-48a1-87ff-d87d5e3fee9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "041a6a75-6e5c-4850-8ec4-03da27822dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a04789-7328-4a2d-a440-bbbfd46ec403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bddc3db-ba20-466d-ab70-4902b9326ed3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0c1fd1-d065-486f-adb0-d525b7f00776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33d34cc-449e-4098-b64a-1e5e98dda6f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca30ac2-a5b0-4c5c-99df-524d83b1cbc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0ce9fb1-c3ce-4623-be23-25d6c9dd5bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6dc8570-dc52-42fe-bd75-1c7d2e2f978d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af3f2c2-0c8a-4613-ab2b-ec9199d0423c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd53d63-6337-4190-92c1-1e2a2516d1b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799123fd-460b-415c-95db-30cd74922c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12dc8068-4488-4f88-b601-16db5dbefd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6b187c-3757-4b76-b1cb-d5a9f3fff8fd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d13b07e-572d-4b78-9cd3-df6e4c956e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16528560-eadb-4e3e-ac9c-0129c192d0fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c381d535-ffd6-4861-aa7a-632c7a2b1d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2407c2f3-89da-462f-9432-1a9bcc4207d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b6f207-d419-4d0f-8724-10778980100a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035547d2-62af-4082-96be-a2017c2b79d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead5c785-2faf-48d1-aeee-450c2cfe6828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40886973-8943-414e-b4b4-0aa49b669945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248c4e2e-09f1-4ab4-bf07-c4e0427e3154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7ab8e2-39be-4873-81bf-198a4bb53aa4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e60a8c-c389-48a8-bb31-361cb742bd2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605cfed6-acf5-405f-85fa-cc6e8d740035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b155452-9825-4a47-a97a-22ea91cea31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89408414-d612-407c-b7e5-3e4bc7a1b146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbd2f39-33d5-4406-9d7c-07f767526752",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec74e62-86d6-4fee-ba9e-fe6c4a4f4332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37835632-dcb7-49e1-be67-065a329998e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c9d00c-aada-4dd1-90ba-2ac2fa81c2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5d5651-33f5-4c64-a7cb-63e5f8c4ef3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2150454c-8443-4e95-8878-440e8665f007",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc691c5c-74a8-4c05-bd28-45305ab26a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef401a17-1d7e-48bd-9882-942605386d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f13ffd2-8d9d-403f-ac0d-332d2e57fe81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7cc34f4-9dc6-486b-be3f-a21fbbf42520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe91880-9be3-43e5-a569-1eaed5470382",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2274bd0-932c-46d2-9e11-0a34d5818190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa663f5a-8b94-4481-a8b9-99cfc7b284f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fa2892-445d-4e6c-9935-7f6f6e492ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97799bc1-d1fc-4728-af41-da62246db0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5b5423-60d8-46b4-b799-d38d86706034",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f373a45-9508-4614-843d-1c23966a431d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661b3149-abc0-4a1a-9c39-712222cf6321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b535c3ac-323d-4ad5-9de7-2082bf3602fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8848c8d9-1b8b-4df2-b320-3186c8299db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e5c850-0507-4caa-a8b1-665860eec892",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b5468f-8890-41ee-946e-14eb3597be9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b41a87-6040-4820-979b-3654abf30628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01560a1-ac20-4021-a754-1f120f94ea5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e8a239-5a31-425b-b87b-7f6baec2ff08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b1905a-3a72-4b3a-9ab5-a8c3410aa345",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22a9fbf-ed6b-4c3f-b681-dda3f4e3cb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c23a1b-b34f-4c08-ac0b-9ecd58d90475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004eb473-9391-4906-951d-f098b778e204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ef2a04-c005-4b87-912f-9f893f68f286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37412c1-498f-471d-8434-c2474d0a5ddd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b95ab6-af47-4851-83e9-02f9d3fecfc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9846cce1-c682-43df-ba35-592c42837106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ef3594-d722-43c9-9d7d-70128030edae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5b4d32-0546-4cb5-b777-14217b7ba5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8140798-c0ea-415b-a1b6-f9e9bfc45abe",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8281ca3-9a02-40e9-b2c2-2bbcab88f875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b95528-7c59-4a7a-bb44-cda3ba21ff53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97a8e47-063a-47d4-bd82-3d0a509a31b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea5b55b-3946-4dc1-8414-3bc76f642b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9c55b0-5c53-4321-893f-85c5d95fcbeb",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2309f6-3519-437e-9343-96099e5fd78b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "956a7e7b-84ab-49cb-9063-ece05ed760a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbf71cc-ab46-4193-a6aa-bb0a0bb85354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c87c96-691f-416b-b385-be7c93ebb75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50109a7-7efd-4b5f-9f05-e3867ab82971",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e4ddf8-4968-4dbe-b5c2-85f3aa3ae8c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47125ec8-2054-4e14-b1ac-a0e4c72d6f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea9ecf3-bd47-4c2f-9ae6-cf50d14f9702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c79953b-cf14-4adc-a854-7a96924833e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0edeef-cc7d-43ae-abcb-9eed80d46705",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81eb21ac-9baf-44ba-ac39-5daea3dc5d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5651a75e-2278-495e-9f73-a02dad204aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4db9b7-f2a2-4182-85f9-ac7cfc71e08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500687d5-e1ac-4d00-a75e-33a558218f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e61d249-c2ef-4d74-afe3-54ca28618ee0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44fc0d5-39b1-41aa-a669-b279761c1c26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b0f6671-39ac-4ef5-8a43-ad185a66da12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50de983b-ce58-4a07-85d9-3ea15d793d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0eb5609-9e53-4d3b-9e64-3adea687796c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4d3e73-c5eb-4c02-b38f-7051c45fc278",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb52a73b-8a4e-4b4a-8c21-2a4f6cc8e1f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b281f1a-900c-4b5f-a38e-9ef8c292b0ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "677352f6-ba73-422e-8aba-5b97e7493bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40064118-3e3a-47b8-a774-def9961537cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8146003b-dee1-44fc-8159-fe84745efa48",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c23e23-dbd0-4938-82a5-6c9f3afe9144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17406625-5673-408c-b40f-ac58d172ae5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e058ee-b3c2-40f6-acc2-1feb074814db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c74fa8c-39bd-4ee8-baea-e69fd2b86ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aff734a-8f31-48f3-8916-d05fa667d2fe",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab57172-2bad-4701-8b73-b17f3c100392",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45d974e8-d639-4b6c-b55b-539f3de88dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d1b1df-fd9a-4901-88a5-2009b43c0c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f03f81a-d14b-4f31-a5f4-35d02610f90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4dbba4-f038-4100-a8a4-45019ef5ca17",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cdc695-ed5d-4745-bb59-8d48f4cb49dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ecc2417-7ec4-4efc-bf8f-56ba53c3c4f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5900a92-cca9-48bc-b380-ce5dba422f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6dc5048-06e5-41ea-bd10-cd509fdfe85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e89c6d-d35d-4de0-8791-3e0a9dd64614",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2af67b-61ef-425d-8d1d-711e93a3bc05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f24489c6-9506-46c0-aa0d-fff2e2426a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bbdb6f-ba7a-4b1f-a77b-b6cbd817be7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87579c55-ca97-41f6-a61a-6902331b36b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c788ee94-0db8-4e87-817b-7a328b0af9b8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4b2084-545e-4ed9-8366-395c0830e2f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa6ff218-605b-4a44-bd3f-680197880ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9563d8b2-3f8c-4066-86e1-0062ccbdc2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac7a869-9912-45a1-825e-177b5f4441ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7ad9d0-3944-4512-a905-c53a4013907f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8dcbba-15a3-4fdf-b484-6725c4b92a74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "805b48eb-e3ad-4f15-b648-324e02bd7359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af216183-d6b1-48a2-b1ba-16941cd76179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a204b63-b415-4e37-891e-927d5f63bb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea7e2bc-bb25-4e17-9778-e5a38a4883f9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c7249d-c1be-4383-8cec-2f2c6c4bab54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23ac2a99-a40e-4316-93c6-213f0b59cde2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85df9132-857b-4257-a83e-42c171653d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69cb4c8-0c90-4989-aebf-bd175fc5de8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6522fa-5c62-402d-b482-bb03c7ab67b4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9027353-43b5-490c-b0e6-14a6fe9c693e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4858d788-1f60-44ba-a620-1e1e7affe1a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa6c7c1-ffa1-4c7d-bdcd-69b060ec869d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6528b9-af1b-407e-9e6e-270e9ea0afc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7996f14d-8a15-4a7f-8280-4a263cc823ae",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b51ff11-b416-4a52-bb07-1fbdc5b7c6b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fdfd789-39c1-4d7f-92cd-113871349750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b9d396-f893-4f3f-865a-e40e3a429f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019d0a9a-d255-4917-9c3a-63cdba05d4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f7ef8b-d8a4-40c8-a75d-3ec86f6ae935",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eead19b2-40d3-4e1f-8cec-96569470371b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b84f44a0-7599-49ab-8b23-a922e2590960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ebcd15-5e56-4e32-8db8-5411066d76a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7270372a-bfe6-4832-aa6f-3baa080075fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fa2baf-c3ab-4f60-b351-cc7f64a13299",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e15a674-f917-42b6-ab36-86d6f6b1f30b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44875ea9-a462-4ac9-b450-220ccf27527a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6887b9-599d-44e5-950c-144d7b19eab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b237eb3c-5671-4be7-9d2e-229c1c6a65a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6562270-6032-4d6a-8841-fd0bed161f7d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e4749a-2563-4c5f-aa5b-635ee61cfc65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e03a82ee-9359-4146-b201-43ed515539a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "215cd56d-5dfb-4a1b-916e-630658c7bb7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e74ae4-04d5-4db5-8f18-d155103f721d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213a5a80-810a-4220-9e47-5b9ca20ed05b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c204c2fb-da47-45ce-b04c-d111751e6c53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01a5350b-2c21-4c41-95da-4bb3d753ad77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62509f63-c6e5-4daf-b351-3d6c5a30385b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb34f5b-b079-4ea8-9c92-520d809ac380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8facaf2-68c9-4a31-95f0-16387f2736fc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4269dfc1-29dc-48f5-9db0-a18388779ab4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c7dea3f-7201-439c-b4ac-22ba403770fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16462d63-f660-42ed-9e88-86a0aa5fc9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c90414b-00f3-465a-9575-6e05d36e824c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9794b708-7c4a-4e4d-a2b0-c6894d2fc9d6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bf2ce5-742d-428f-821f-58f99c3fb163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7098922-3e60-44fb-8753-eb063480764f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea44783-e1c3-49d6-b68f-99ca94c1df73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8617f9bf-09f5-40f7-9853-7408d4e9c3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9534002-3370-4325-b1b0-b251fd787498",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2144dc3b-2b1d-4a1e-bc2f-7656e47b8b6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ab71597-0790-457b-9ce2-bc7d77201ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4924a024-aead-4f17-8c70-d0cd2954d153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2eb6c4a-b238-4a7f-9abc-a17fc9b0fd77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256e4d4c-860d-421f-9e85-d0f57b83128c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be7d062-14de-45d6-a11e-8dee68b482d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "849aa62e-371c-453b-b907-416d5171c701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19837adb-6eb1-4875-b4ab-14a8646c0bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046d59d9-0585-4fc0-b386-acd39118782e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0366fca-2af1-4b5c-a9b0-876fab98a413",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7852950-511e-441c-a9ec-e70887c3503d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c950bbb-5ecd-494e-bdec-ab15089eb424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b04701-74ce-4f29-ad51-a7fcc23cff47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "997df8fc-f4b7-4508-9793-040cac911693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72e4e1b-6f5d-4247-89e1-e53ebc2e9918",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a26ce4-a41e-43ae-b79b-6baa4b019557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0614b6d0-6b87-49f0-9f17-148d216c6597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23816acf-77b0-46ab-9e4c-f15eb1ab3ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3041a0aa-8bdf-4ddf-a827-e1cd5e05ea58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f96f18-ccb7-4714-a0b1-127cbdd68861",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44919932-6ad6-4c7b-8f9e-6e348149e16e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fca3dc48-6b46-4056-87ab-3c6176fdcf8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12fc970-be36-4604-a38b-345eb61834ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfa364e-35ee-4d6a-8411-67cc53f8700b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7155d3bd-04cc-4c5d-9b93-a9bf8ffaa25b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9e88e3-bd16-4dda-8fc1-c9b448f3b533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e6e7480-8d25-47f3-b64a-1b3e49ab2790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c028476-7995-4df4-beaa-583291d44bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc9a688-da06-4142-ae49-83feb298ded4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca51a5b9-43b3-48ea-8c93-93b3613f381e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268b98a9-bb37-4fda-b38f-a4955596c89a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd196c24-42f0-414c-ab05-794ab4a0c2cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23af0a55-f4d7-465c-8749-fd07196bba9e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f89ae2-11df-40fb-a24b-0f99997f19e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d95b697-ff5f-438b-a4dd-062f72f7e4d8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1a29d6-b4ea-4bd5-b387-240d9dc043d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e35f8425-d4b5-425f-88f0-2a0ba3b92247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bf9e20-276c-41f9-84f9-20c33009c9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8625121-07d9-4881-b2be-06bd98d36e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c201499-edef-4710-ab29-341c272ab1fb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5e486f-c9f0-4d2e-9298-c6f4ef5089e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b290bb3d-0d39-47cd-990d-3272d9179a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad10e92-0e7f-42db-945d-cb1dafd6a63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65eb342e-e220-43b4-a209-b5ddc3f44e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e8ef2a-5fc6-4af3-a89c-8db763baa83c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c30a55-8592-4492-8d25-47d49d957c9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33053447-d235-482a-bccd-d66c7726521a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ab275f-e3c0-4830-9843-b14650af3747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d35e82f6-e400-4ad5-9115-a9a76189edf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e40491-ae8d-4c01-bfca-207565504e06",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce18ee2-98a4-472b-b7e4-cd03eff75b9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ba52cd8-fd5c-4da8-a4a1-03d736fe6a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd54d43a-0e10-4ccd-8a4a-5425ea6001a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321c08ca-0016-4f5d-9ef1-dc96d48ed04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549fd9cc-85d2-4b0d-bf26-dc087bdaf70c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55c5bba-c709-4985-a8c9-d50d56286c8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "958128e0-9ca9-43a2-bf43-2d27237a3f0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96276ed-b87c-4e4a-b3f1-23b068d0f5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb51b439-849a-415c-bd9f-a44100823949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3375913-45e9-4b7f-a595-a88a29bf13e6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ebde2a-ab90-4537-8052-af24e58f122e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4c61dc5-910e-44b3-9e33-4041adbf3d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7b5fb5-49f9-4694-aef9-0c1b652c6c57",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1bd7999-ca61-4c31-a154-27745bfa86d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc793e62-1726-4ef7-a620-01493802899f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab20d55b-e97b-43a5-96e0-e06c5768a8af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee838388-3476-4311-8949-77c79e1c59ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ebcb3e-215e-49cb-8883-634cae175eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebbf902-1f58-4e02-bd21-5b2494f4023f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95e0bf2a-8dc0-4231-881f-4486952a5a66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dae204a-055b-4ca0-a6dc-9b36e6f2e1d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d12b1ebc-94fa-498d-ad73-37a6d1a87cfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6964e5b-5644-456c-81df-28e03e0e8668"
                    }
                  }
                ]
              },
              {
                "id": "071c6c0e-2b17-4830-80eb-e28a8509c5d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19885d30-d176-4e0e-8363-117845903d49",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f584abf-5b70-47ef-a1b1-c93323092369",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c7006919-38d4-4b1b-a187-74c7a00171f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7841db54-314b-411f-85fa-3c128e3f9467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3d72c99-8407-459e-ac9a-5db201a49b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3c4c5e-f62a-4ac9-bec8-713140555803",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4185560c-c54e-4d69-881c-395b79e95e11",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4bb916cc-fa47-407f-9a08-d64032e68b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc74aa3f-8184-4956-9853-300c6f57da88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da3fdd4d-6ffb-4631-8b34-5aa30822b602"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f01a832-eeb6-4b9e-9bb7-05cc36281941",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af042668-4fbc-42ca-ace2-10dd6890bc8d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17d6134d-ffff-4411-ae0f-43481cad895f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4aa90228-a13c-4ea6-a6f4-98d61d7d2871"
                    }
                  }
                ]
              },
              {
                "id": "569a8c5f-1fec-4d34-a427-535a0fc124d8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0f391e5a-9568-4810-b3ba-ad5dde4bdd8a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d40d74-207f-481f-9ff9-9776be4d7bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f337ae02-b404-41a6-9212-76b6eb68d4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44591989-49ca-4a2f-af9e-3e4081da4941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb47ead6-3a95-4582-b4f5-033951f1f9da"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "848bf3c6-f66c-4620-b6e9-09a161bde1cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "acc295bc-6d66-44d7-8490-9ddffc4eb086",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "395f58ff-4d5d-46e8-9f33-4605cd3bce56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b3e893cf-8108-4f2a-986d-66c0555f21f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "216e280a-8a46-49d1-bdba-7b360dd4eb14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b422711b-63bb-4050-af0b-fad151b1feea"
                    }
                  }
                ]
              },
              {
                "id": "424985fb-9ff6-40cc-aefa-637915da3a5f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30f99462-f787-46b5-93c8-ffd51e716f1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9f76fdfd-d857-4ccf-a96a-d943677656d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f408e5d-7948-49f4-a9e6-9c543d5ff6a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86971371-3414-4c9d-ac95-154e5ee94b6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca2a6be2-fb17-45db-ac92-b5dac2205fca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c02c74cd-d716-454a-8049-89cc1c4dfd32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ca9963c-4c67-43ad-ad00-1bae578e8504",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b295b73-db1e-4821-8c77-90dc96827135"
            }
          }
        ]
      },
      {
        "id": "87f8181f-698f-408a-a49f-09e01b45aa76",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c270061b-46e5-422f-883a-21eda74bcf8a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f93e9f8b-77dc-4152-b94f-13fc67b888a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10fbd7b5-58d6-44ed-b83d-4ae6b9222e6b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22a5a6f-12d9-4866-ac76-f62ab5d9d7ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9f74dc42-89d9-41e0-8758-477fe95138f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41cfce1-b82e-46ad-b234-e59610bb0e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "673c5bc9-f3b3-47a8-8a02-b3a2c037019b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bca58c-6543-46fe-a97b-034998ddcd35",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16edf70-7a89-4fd3-96c8-ee578e1252e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d9765c9d-8c71-4bd7-9571-f90c5951dfcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc505aa1-7cb3-44c4-a138-22025534666e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51dbbc0f-0662-4e00-92e6-8d841fedf9a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8981ec3d-1acb-483b-9651-af2205311cb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92eef8a4-2508-43f2-8370-4030d1144766"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c1877c0-0685-4ec5-8fd9-d7a424a544c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca4e8d9b-ed94-4fee-8b61-9651e9b559ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fabe859-1a48-473a-b1f3-4f6538102545",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "45745fbb-f628-4379-859d-b4d0051bae3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef94beb5-e317-4090-92aa-6bfadcebfcc5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63b96523-0b65-428d-80d8-356dc3dbba40"
            }
          }
        ]
      },
      {
        "id": "f639821a-c8c0-45bf-815c-1b77f5652eb4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "080b1c14-937e-4d23-9da1-6483d7ea2482",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ee08305-08b2-4079-9170-1a77800f728d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4791fafa-0a14-4fb3-8682-a1da7104f5af",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836cb6e5-0ff9-4e24-9646-57de953c09e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc4e7de1-80e5-4a5e-8129-145a7859d86a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2ccdb3-f97a-4b33-86cf-8978c2992f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c3749d9-599b-4680-91e7-c68b3424b24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ad5e07-5137-4836-9284-cae192613a36",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dff34a7-b4f8-4dca-85cd-b0182cdf997f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b596e70f-19d9-4ab9-8a44-bb483ecb6bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "398d5def-caf8-494a-860a-ebbf47f62ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7b867d4-1c11-4bd6-b0e9-027d86dba515"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4968ff3b-656d-4a67-ba5d-ae2cc49ef327",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6e09e8e-8816-4ed2-9403-c6f6cedec7c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1a11eef-47c6-4470-a444-04e4a94bf088",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8956cb99-d1c3-4f0a-87c0-aee940258fa3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "284ae065-44d2-4240-a52a-4a87bb896c8a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fb13358f-ab93-4e22-b24c-82f8276adadd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7010c8d-2411-4ade-8b1d-5f642b9d7182",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5018b15-ca58-470f-bcde-cff680e79dd1"
            }
          }
        ]
      },
      {
        "id": "8e90d84b-88cd-48a1-906d-c69268b80fbd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7a03353f-f392-441a-8af4-093f180aca0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca0ff52c-5d95-4191-8ff9-3a1bf98b59dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d58636f-892a-4608-9f3a-e3a789ed45a6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9516106d-f92e-408d-b7c0-1457f3e93d24",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25387d84-482a-4c9f-933c-d70dff060a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3aee88-190a-4f3f-a418-63381ff05c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35114039-9764-476e-b0f0-6afcce739435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462439a0-8b53-4135-b63b-62159f2616f0",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b75ec5-2528-43ca-9716-2ef46a5102ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "30f6efc1-dd76-4f67-8ca0-8c61f31cdb6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "952f0ac6-c9f8-4f96-b1f9-ba2456042970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e535bba8-a70a-461e-948f-9f97724cb810"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbba6bee-4d5e-4843-bde2-a17002ffc3c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6921d105-c362-4088-af49-9d73b2196858"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47c99b0c-1557-476b-b5ec-a7ea48a6c7bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "130e7c50-3032-45b8-9425-06c18fa7d127"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dffdcdc6-5c74-48ef-8834-bb36bd4ad033",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b2e00f87-8b6a-4ff6-8c99-d26f05c4b64e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46fc809e-559c-4833-a9c1-5f42d94fa97d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3feafb31-76cd-48e1-840f-c7edf417eb59"
            }
          }
        ]
      },
      {
        "id": "d3b152af-e025-4032-8e28-6b62c7317981",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9af3885e-b2c7-4ddb-adf3-6ae150bac05e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56c87dc2-c4c4-49ef-9d3a-73d54722b99c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9ee32e45-0223-424a-aada-e2df033aca31",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4f813a7-fb1a-46ca-981a-b7f92c619ea9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57314c62-dff0-41a8-85da-f17483a399c2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 41.98076923076922,
      "responseMin": 13,
      "responseMax": 481,
      "responseSd": 42.05540776743472,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684024738088,
      "completed": 1684024762625
    },
    "executions": [
      {
        "id": "80671f44-13d6-413c-b457-64d587928c72",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fc974acf-8ba6-4b8c-b983-8d159242144c",
          "httpRequestId": "acd6b46a-4a5f-46bb-94c7-b53751e7c633"
        },
        "item": {
          "id": "80671f44-13d6-413c-b457-64d587928c72",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "782235f9-9c39-4fbd-96a6-d5882d11d2c4",
          "status": "OK",
          "code": 200,
          "responseTime": 134,
          "responseSize": 0
        }
      },
      {
        "id": "ad3e098f-1781-4180-913f-361386221cb5",
        "cursor": {
          "ref": "c1aa4e8e-6c16-4cf1-bbae-b0241a5052a6",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d247fdb4-b29f-482f-82a5-d454db1050be"
        },
        "item": {
          "id": "ad3e098f-1781-4180-913f-361386221cb5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fd601698-5a47-49e3-8bea-d8c170b0228f",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "fb5fe655-4810-4694-95a6-5e43e09e516b",
        "cursor": {
          "ref": "6c350f18-ac31-4f14-9ffa-946ff9e31e94",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "87dfbc81-8487-42eb-a30a-e2ced59718b6"
        },
        "item": {
          "id": "fb5fe655-4810-4694-95a6-5e43e09e516b",
          "name": "did_json"
        },
        "response": {
          "id": "171f15a2-2552-486a-93fe-ef0633334e8c",
          "status": "OK",
          "code": 200,
          "responseTime": 138,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3c25d4-4c20-4c48-a679-5792877da664",
        "cursor": {
          "ref": "1f6748ad-af50-4264-999b-6da713a08337",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2fb8cecd-babb-446b-8559-38bd575a2e2b"
        },
        "item": {
          "id": "1e3c25d4-4c20-4c48-a679-5792877da664",
          "name": "did:invalid"
        },
        "response": {
          "id": "6845f9cb-05cd-4375-9e68-8188b14b961c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3c25d4-4c20-4c48-a679-5792877da664",
        "cursor": {
          "ref": "1f6748ad-af50-4264-999b-6da713a08337",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2fb8cecd-babb-446b-8559-38bd575a2e2b"
        },
        "item": {
          "id": "1e3c25d4-4c20-4c48-a679-5792877da664",
          "name": "did:invalid"
        },
        "response": {
          "id": "6845f9cb-05cd-4375-9e68-8188b14b961c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cd5809-069e-4920-bb82-92adcc673939",
        "cursor": {
          "ref": "bb8fb586-6145-47fe-b47d-1808750e1bc1",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f2f04c71-83cd-417f-ab4d-42cf04ff54a2"
        },
        "item": {
          "id": "38cd5809-069e-4920-bb82-92adcc673939",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5127d0c4-4eee-4156-9ca3-74690fe3b28c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 82,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d148d3b9-2d24-47e3-bffa-5f5e2277cdf4",
        "cursor": {
          "ref": "232e9d2e-9145-457b-985b-82fb3ee61c2c",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c18f692d-99ed-44fd-bc44-64073f6cc6c4"
        },
        "item": {
          "id": "d148d3b9-2d24-47e3-bffa-5f5e2277cdf4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "08f28abf-8a0e-47e5-b34c-6182c6da93ee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f86612b-9e09-4218-9776-274e6190d726",
        "cursor": {
          "ref": "0b50f211-81d9-4088-af0b-4721ae0aea58",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f38f7ec7-01c7-40a6-8b8e-fcc87406a64d"
        },
        "item": {
          "id": "0f86612b-9e09-4218-9776-274e6190d726",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d05391e5-497e-402d-8194-1bd765cb7c63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2ebf61-c227-4333-a823-2c4a44651b07",
        "cursor": {
          "ref": "a6770d28-f25a-4974-9891-e94644e2e840",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a880dd9c-441d-49b9-919c-9c39ef57e869"
        },
        "item": {
          "id": "3f2ebf61-c227-4333-a823-2c4a44651b07",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "21d3f9ec-31f3-4118-a676-7e7cd931b2cf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2ebf61-c227-4333-a823-2c4a44651b07",
        "cursor": {
          "ref": "a6770d28-f25a-4974-9891-e94644e2e840",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a880dd9c-441d-49b9-919c-9c39ef57e869"
        },
        "item": {
          "id": "3f2ebf61-c227-4333-a823-2c4a44651b07",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "21d3f9ec-31f3-4118-a676-7e7cd931b2cf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c480db0a-7db6-43fc-a837-95c138d515f2",
        "cursor": {
          "ref": "c9015d1b-6aa7-478b-be1c-2cbff0d86801",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9b516e6e-c1d5-468c-8c6f-ce7784c9040c"
        },
        "item": {
          "id": "c480db0a-7db6-43fc-a837-95c138d515f2",
          "name": "identifiers"
        },
        "response": {
          "id": "fe031090-c49e-4ad2-a0c1-c46324b52999",
          "status": "OK",
          "code": 200,
          "responseTime": 238,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d64c89d-603f-41c4-b880-6b2b0d0246cd",
        "cursor": {
          "ref": "5129cee8-45be-4f7b-88c3-daef13b4e362",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b53fdb80-bd79-4450-a012-3ccfe90b1a97"
        },
        "item": {
          "id": "8d64c89d-603f-41c4-b880-6b2b0d0246cd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2b72d253-75e5-4e03-9f78-70b81d8f7324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d64c89d-603f-41c4-b880-6b2b0d0246cd",
        "cursor": {
          "ref": "5129cee8-45be-4f7b-88c3-daef13b4e362",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b53fdb80-bd79-4450-a012-3ccfe90b1a97"
        },
        "item": {
          "id": "8d64c89d-603f-41c4-b880-6b2b0d0246cd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2b72d253-75e5-4e03-9f78-70b81d8f7324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb7c110-35ac-4075-b64c-23d319cab811",
        "cursor": {
          "ref": "b34c822d-9f9f-468e-a63f-2e2ac727fc79",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "69c80507-f9ae-4b23-9c3d-e2bac67b1a17"
        },
        "item": {
          "id": "9cb7c110-35ac-4075-b64c-23d319cab811",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "be6f8b47-9c86-4e0b-9446-1e53f1182a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1c0bf8-43cd-4b88-8fad-428cecea6ed3",
        "cursor": {
          "ref": "38a655b3-068e-418a-b8ae-2c5e5e620eca",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7648455c-ee16-47ca-8673-4ffa31a38bcc"
        },
        "item": {
          "id": "bb1c0bf8-43cd-4b88-8fad-428cecea6ed3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5adffe86-81c3-430b-88bd-bef55bdfe743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c757793a-95b7-428c-ab4b-dd541d631f51",
        "cursor": {
          "ref": "7da23387-fde4-4a84-9313-60e81e11ef8b",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d9d9071b-26c5-45bb-96ff-07ee52da57e8"
        },
        "item": {
          "id": "c757793a-95b7-428c-ab4b-dd541d631f51",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fd0717c8-bf21-4e41-99ba-3817c0cf2a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834a6715-00ce-4097-9af5-d18540e5c3d7",
        "cursor": {
          "ref": "f54d150d-5e82-418e-b92b-5d26cbfe17e1",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0cbe2509-1117-4f58-9013-35df7b40dc7c"
        },
        "item": {
          "id": "834a6715-00ce-4097-9af5-d18540e5c3d7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cd422605-369b-4b99-9555-f811522f7412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d986fc44-dd2f-4998-a02a-bfccb05a9ca2",
        "cursor": {
          "ref": "8599fd58-8ecc-44fb-b326-6ffff93c2a60",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1a358e72-a518-41ea-bb03-8dc7bca3a24f"
        },
        "item": {
          "id": "d986fc44-dd2f-4998-a02a-bfccb05a9ca2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b7dcc3b9-6d1c-4dcc-9ce7-9df66032cfe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7133b698-5780-48a3-b013-5ee6e1e1c8db",
        "cursor": {
          "ref": "4ad29004-9baa-47fe-b8b2-0fe0d0e6cfd3",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ec3d9ddb-ecea-49b2-9c14-46abcebf85f6"
        },
        "item": {
          "id": "7133b698-5780-48a3-b013-5ee6e1e1c8db",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f004b573-1f50-4c52-b51a-1ea08983fe44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616003c6-1a2d-4e44-84f8-8d0558c01bbb",
        "cursor": {
          "ref": "0ec8e85c-abac-44f2-ad1a-26ce98f9bfa5",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "95415da5-09c1-46dc-8bf8-fe722908ef59"
        },
        "item": {
          "id": "616003c6-1a2d-4e44-84f8-8d0558c01bbb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "453d969c-8bb7-4f2c-8543-8740911151f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005a3412-ec5f-49fb-ab12-09a66d0ec61a",
        "cursor": {
          "ref": "2e02bf8c-c9a5-4918-b6ff-806180f6f939",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "338d2834-b571-4e12-8505-291f427e78ef"
        },
        "item": {
          "id": "005a3412-ec5f-49fb-ab12-09a66d0ec61a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "16b6f15e-0cf5-45be-ae16-e04f59b846d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10edbc8-ebab-46d0-bec9-38a2a2ca592b",
        "cursor": {
          "ref": "f42defc1-6126-4a57-a320-56383f5d77e3",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9e772a98-707a-434c-859b-adc7d8178c64"
        },
        "item": {
          "id": "f10edbc8-ebab-46d0-bec9-38a2a2ca592b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "77ba7705-feb7-40b6-9a80-b9b8f97e6b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd2922c-7e53-4678-9132-ea1c2b6ac89d",
        "cursor": {
          "ref": "b78e4a62-479e-49b3-9e47-98cf39124dbb",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7b3ad126-c6b2-4842-8e9c-282c96d2e707"
        },
        "item": {
          "id": "dcd2922c-7e53-4678-9132-ea1c2b6ac89d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a9258e94-1d84-4756-b15a-30fb07faceba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc27f5e6-b2ee-49b3-a83d-35392b9f2d1e",
        "cursor": {
          "ref": "9b61f768-24f0-4798-8340-1464bcf622d7",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f9ee6741-93e6-4c62-b114-d64e92c09bb3"
        },
        "item": {
          "id": "dc27f5e6-b2ee-49b3-a83d-35392b9f2d1e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "026d3745-3f0a-41d0-aa4d-c26a5155565c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac439092-a833-4828-8a92-c76bd2b82098",
        "cursor": {
          "ref": "c199da62-ff84-475e-9e3b-b52a18568e52",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a2b6d0d9-a60a-41d2-8ca0-5de5a0ea0259"
        },
        "item": {
          "id": "ac439092-a833-4828-8a92-c76bd2b82098",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7e860c8d-7fd2-4de4-8f45-076d960e2867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5d4a3d-c59b-4809-81ca-e7fbe691316b",
        "cursor": {
          "ref": "d9ebe5fa-8ba2-477d-8de2-827dea729297",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6a570e1e-d4d3-440f-8cad-a1b41c114f12"
        },
        "item": {
          "id": "0d5d4a3d-c59b-4809-81ca-e7fbe691316b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4bb1d70d-56cb-498c-810a-545127e67887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d683513b-5e2b-4f5a-967d-4c5c84101330",
        "cursor": {
          "ref": "212735a1-0cb4-42a3-a1ea-cfa0783c2827",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e70d469b-c81a-4c4e-b5e5-ae9dd79b88ed"
        },
        "item": {
          "id": "d683513b-5e2b-4f5a-967d-4c5c84101330",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c0604a89-516f-4f09-bafd-f6988b575c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafb4aa2-2d65-4db4-9680-5cd819c6fca7",
        "cursor": {
          "ref": "5fad6fec-e011-43a1-b636-4021d5f742b4",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ad45c8ba-4b58-446f-a024-031f18074d17"
        },
        "item": {
          "id": "fafb4aa2-2d65-4db4-9680-5cd819c6fca7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "00b4a41d-c7f0-4272-8a60-8e7ccec1f1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e9f931-e69c-40b9-a3f1-07a241e85473",
        "cursor": {
          "ref": "9cf6f70d-ea0f-4a7c-bfca-60585ccc1b56",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4de0b4c5-72f4-4cd6-9942-dc714eb3a35d"
        },
        "item": {
          "id": "c3e9f931-e69c-40b9-a3f1-07a241e85473",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b2502d60-115b-4d37-ae31-9393ea6841fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a0f83c-c670-4eb4-a58a-c58304fb5e45",
        "cursor": {
          "ref": "0cb55517-cf9c-4046-bb0f-e4321cc44905",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "15370d48-4c81-4081-abd1-821dca96df2a"
        },
        "item": {
          "id": "96a0f83c-c670-4eb4-a58a-c58304fb5e45",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fd00ce76-e6e6-4a55-a0d1-321947155dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842deb1a-6567-441c-be36-463f286a91ee",
        "cursor": {
          "ref": "8413decb-4e8c-47f0-a7c3-7db029649076",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "357d1d55-1ab2-4276-ad85-bdf0d184d035"
        },
        "item": {
          "id": "842deb1a-6567-441c-be36-463f286a91ee",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "838234ee-6ecf-4a34-bed8-3e8fc8ecdf88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e1451e-fc42-444f-bb07-96545de268c1",
        "cursor": {
          "ref": "37e8a6b9-9c38-4dfb-be0b-c1124ff571c7",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "498496d1-ce4f-458c-b72b-161ff6bf5158"
        },
        "item": {
          "id": "90e1451e-fc42-444f-bb07-96545de268c1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f4d3c949-dd33-4f96-af07-8844c66becef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce00809c-73ec-44eb-93db-d60058354577",
        "cursor": {
          "ref": "f71cb626-3c5f-4a62-9c62-2ae65d1dffb0",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0d59d233-1d45-44d4-9a39-afdfbe7ad6ff"
        },
        "item": {
          "id": "ce00809c-73ec-44eb-93db-d60058354577",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8b9af22d-661a-4786-ba85-ae6309f2b344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5070362-480d-4b78-9cc5-8f1533c26083",
        "cursor": {
          "ref": "d889bfdf-a760-4e96-9a4b-ab5dc4347b25",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "15cd8321-16bb-4d56-9175-ef965ffdb60a"
        },
        "item": {
          "id": "d5070362-480d-4b78-9cc5-8f1533c26083",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "21d00d17-2127-473e-a2db-29bdc96bd360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3356cb-ae16-4bfd-87ba-a1c4774c1787",
        "cursor": {
          "ref": "62e2a54f-aab2-4fba-871a-ec556daf8dc0",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "63af097d-4888-42a8-9ca2-b996061e5f8e"
        },
        "item": {
          "id": "3c3356cb-ae16-4bfd-87ba-a1c4774c1787",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7c44efa6-6489-4ef2-af60-ea283bebd5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb17df53-64a6-4b79-bf28-d0a3cb343ba6",
        "cursor": {
          "ref": "9db9d72e-9b47-4de7-a5b9-5f5b596495a9",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "92a354b8-ec66-41ab-8442-519297c17222"
        },
        "item": {
          "id": "eb17df53-64a6-4b79-bf28-d0a3cb343ba6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a61e2a5c-ca9f-47e5-944c-d18accbadbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508477b7-0999-4b14-8234-7f989631f6c1",
        "cursor": {
          "ref": "bb3df217-93ce-40a3-a834-58d3a7cbb8d3",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2ff133ef-646b-41d5-a6b8-d09334b5ef0f"
        },
        "item": {
          "id": "508477b7-0999-4b14-8234-7f989631f6c1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1ab5c04a-127b-4498-bb25-0350a2c6388b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76921d95-3e21-446b-8d4b-1b7d04f05a60",
        "cursor": {
          "ref": "faaf403a-ab57-4689-9958-981c4e411e3a",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2f0a6aba-b2b7-4b5c-9ef5-9d63a8d254b5"
        },
        "item": {
          "id": "76921d95-3e21-446b-8d4b-1b7d04f05a60",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2c82d5b8-7cb1-4727-b9bd-03ccf06c7883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfcaea3-61ae-47a5-8bba-833a3a06daad",
        "cursor": {
          "ref": "6d534f55-e503-415e-bec4-cbdad5c2161c",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5a3920b9-975d-4f73-84ad-56df61dc510c"
        },
        "item": {
          "id": "0cfcaea3-61ae-47a5-8bba-833a3a06daad",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "89355ece-4e63-4cb7-9007-4fc332a78c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72a33b1-449d-442d-a7c1-8e2054f20f4c",
        "cursor": {
          "ref": "15ebfb05-40f2-4cba-8d91-b2806ab5e5cc",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "870e017e-c97f-48c7-8a77-6becdb4090b4"
        },
        "item": {
          "id": "b72a33b1-449d-442d-a7c1-8e2054f20f4c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2767b55f-9205-40a5-9fe4-760341d94fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b742d250-5389-4683-a69f-49361b77a81d",
        "cursor": {
          "ref": "19812935-aa62-46d5-a247-032d06cc0aee",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8ec4b8f4-5b2f-4783-b404-b3e9f9dffa7d"
        },
        "item": {
          "id": "b742d250-5389-4683-a69f-49361b77a81d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "271ad44e-c348-404e-a589-d9ff6c39b32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08782eed-545a-491d-a164-9f73126a78af",
        "cursor": {
          "ref": "01ff9091-eee1-4275-ba56-187c4107b880",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "16e50b73-03f9-4c58-b319-778d25fc0824"
        },
        "item": {
          "id": "08782eed-545a-491d-a164-9f73126a78af",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f080256b-c10d-4a34-878b-1801e0c6fd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccda568-0b2c-4458-ba30-4e521057a99a",
        "cursor": {
          "ref": "ad85c92b-2e20-43c2-b9ba-9c3d67ab5a8a",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5ff40dd8-af4a-431b-9f15-2453474d9d1f"
        },
        "item": {
          "id": "3ccda568-0b2c-4458-ba30-4e521057a99a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7f20b519-9476-428f-9490-cacf40f1a330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74369b8c-b940-4fea-be81-271a5101f2a2",
        "cursor": {
          "ref": "0fd27b72-7d6d-411f-8bcd-4f3e1cdb171c",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9462d17b-f7ec-4402-9f0c-0744cac08fb8"
        },
        "item": {
          "id": "74369b8c-b940-4fea-be81-271a5101f2a2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a44a18cf-e1ed-48f6-b021-fed6d21e7730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de45b96-e6c0-48b8-a99c-8b6493c0b19f",
        "cursor": {
          "ref": "113b3e3d-bfd8-4cd4-aeae-2d0b30ba75a4",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bcfe48a9-cfda-4058-9b17-a022c21e5409"
        },
        "item": {
          "id": "7de45b96-e6c0-48b8-a99c-8b6493c0b19f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f6a4420e-17b6-401d-afb0-47d93dadf6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42612f6-5a92-4821-b359-614165f87448",
        "cursor": {
          "ref": "31f36286-6256-4a0e-aa50-896182ab1c17",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4332b55c-c1f4-447b-aa58-2f1986373aef"
        },
        "item": {
          "id": "d42612f6-5a92-4821-b359-614165f87448",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a33c4471-ecf2-42fb-82a0-57621caf67fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cbb27e-0648-4c9c-be8e-a3094696fda6",
        "cursor": {
          "ref": "673e83d7-7f70-4535-b637-01faf5843250",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2243b85b-d9d7-4d3c-9151-e4ac1d71778f"
        },
        "item": {
          "id": "00cbb27e-0648-4c9c-be8e-a3094696fda6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3acc4b87-4618-45d5-a4f6-c1150fd82c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f95e07-9d71-415f-ae25-ff009d7bb3de",
        "cursor": {
          "ref": "30227cee-2cc6-4e0a-8174-890adae98c81",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7800405e-e127-4f89-94f5-11d72708d931"
        },
        "item": {
          "id": "c1f95e07-9d71-415f-ae25-ff009d7bb3de",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "22b8aeaa-a55b-4892-a2f6-d0663f131459",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ab9218-2f54-4ebc-b9a9-e1e0dd086300",
        "cursor": {
          "ref": "6fb68c4a-a646-4cb1-8b0a-6a315e91eea4",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3f31c9da-a020-4990-8742-d853de021300"
        },
        "item": {
          "id": "64ab9218-2f54-4ebc-b9a9-e1e0dd086300",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c21b8800-4eb8-4ee6-8f22-cd92ef2e2e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2541ad0a-a71a-4a69-9af3-edbf231664cd",
        "cursor": {
          "ref": "239d2710-bf4f-49ae-b6c1-459087555937",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "606ee2d5-8949-4c8f-9474-ff6a05c66acf"
        },
        "item": {
          "id": "2541ad0a-a71a-4a69-9af3-edbf231664cd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d5f6e13c-f18d-4a8c-808c-c79a9bdd9cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac7db08-8aca-4790-93a0-2903fc28417b",
        "cursor": {
          "ref": "5bd88389-c61e-4973-bb8d-408fe847978a",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "28abab47-6de9-4d38-8b17-427de623d333"
        },
        "item": {
          "id": "8ac7db08-8aca-4790-93a0-2903fc28417b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6773196f-a607-4cb2-a135-c2a6876aeb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d631e8c0-7a2f-48de-a2c9-e432debec566",
        "cursor": {
          "ref": "220baff9-6f15-428a-8dab-c129d41a4ebf",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "608ba944-aec5-477d-89a7-5f47d9af8ccd"
        },
        "item": {
          "id": "d631e8c0-7a2f-48de-a2c9-e432debec566",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "37584a8e-8501-468e-8327-2a5e9c92b460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eef0932-583a-438b-a263-283e8a8bd0db",
        "cursor": {
          "ref": "c15c55c2-0551-4c19-bfa1-4d055356869b",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ea95ce15-8348-4ed7-86ec-bbe9e8d6a391"
        },
        "item": {
          "id": "6eef0932-583a-438b-a263-283e8a8bd0db",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "91405899-bc41-427d-af49-b69633fe6573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e5ccf2-cea6-432f-9171-da162ece4228",
        "cursor": {
          "ref": "e218c5aa-a9c8-4945-975a-d46bc7a5c007",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d0fa9d57-68eb-4390-8a86-f533149d6ae6"
        },
        "item": {
          "id": "23e5ccf2-cea6-432f-9171-da162ece4228",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ba98cf1a-f4fb-4b2c-ad8d-b9c997e6724e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5acc990-3059-4c57-b1b2-969c0b04a645",
        "cursor": {
          "ref": "f7b48e9a-84fa-44a1-baeb-a273d049201e",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c4164123-7812-495d-8674-185897803bba"
        },
        "item": {
          "id": "c5acc990-3059-4c57-b1b2-969c0b04a645",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b84d4bf0-744c-44cc-a8c0-a7c55377fc7f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7496026-b049-4018-bccd-20ff0e347ea1",
        "cursor": {
          "ref": "9e877f76-9377-4971-af54-9bd879bb8dff",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "538445c4-fd50-4ff4-a979-0e1be6db449b"
        },
        "item": {
          "id": "b7496026-b049-4018-bccd-20ff0e347ea1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4cb67f56-161d-465d-8d06-3e5f0bb01fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98579de6-315d-4717-8aad-dcb7456f37c2",
        "cursor": {
          "ref": "83184f66-f635-4cd4-9ce4-d0a4a007541f",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "edf1b07c-2d6d-46ed-8bf6-8494cf07ce95"
        },
        "item": {
          "id": "98579de6-315d-4717-8aad-dcb7456f37c2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2debc62f-8b36-4a46-9a49-425d8f0347ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2d59b9-174e-4c45-a113-aa3c012c1384",
        "cursor": {
          "ref": "65d8b454-fa96-4c56-af6e-17ea3487d267",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "95a56342-a640-4e66-9177-8485d4825999"
        },
        "item": {
          "id": "2b2d59b9-174e-4c45-a113-aa3c012c1384",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f05d2e1f-77f3-4706-a8ef-5f10d66d0969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9afb1d5-a2fd-4e19-a012-93f47a1513d1",
        "cursor": {
          "ref": "2535d29f-1836-4afd-80ef-7bd5e5a5b4fe",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ee2ae83d-660d-483d-a299-474e5b6d6ea8"
        },
        "item": {
          "id": "c9afb1d5-a2fd-4e19-a012-93f47a1513d1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "81bef58f-e734-4dd7-a62f-e99e48a461f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7c74d9-970b-457e-b8b2-1746d4efe756",
        "cursor": {
          "ref": "a6f35e0e-4d6b-483f-8853-f7b0a42e0044",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e853d013-153d-4994-a75d-cd9a2005967d"
        },
        "item": {
          "id": "2f7c74d9-970b-457e-b8b2-1746d4efe756",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ce5bf8c4-4c95-4902-aa42-b37fff0e6d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734d82a3-1386-4c60-b9eb-a35c7ec80224",
        "cursor": {
          "ref": "0a0b7fb2-e5e1-4241-b71b-1b827513fe57",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "073ab38c-7f50-42d0-ae93-be64635a8f47"
        },
        "item": {
          "id": "734d82a3-1386-4c60-b9eb-a35c7ec80224",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "10158a4a-91cb-4eca-a7e1-63fd2503e00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b028f653-2935-413c-b890-61cb58ed5445",
        "cursor": {
          "ref": "90b42ecb-1352-4a6b-b275-d0bc6a958c99",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2c0dd9e0-ba27-4e43-b8e3-d9bc39ba4817"
        },
        "item": {
          "id": "b028f653-2935-413c-b890-61cb58ed5445",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "59f1c689-b964-4675-892a-6a3abf618bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284fe7e9-39d6-44a4-8997-352913c81694",
        "cursor": {
          "ref": "096f8de4-6033-49da-a05c-9ed9058c8f3b",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bcca67f2-d638-4cc0-9204-b3b6c6ba5cb2"
        },
        "item": {
          "id": "284fe7e9-39d6-44a4-8997-352913c81694",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "712d600e-12cb-413c-94af-d5a219ce0ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf99559-c161-4032-abde-8854991ec304",
        "cursor": {
          "ref": "c5a8fc83-695d-46ba-ab35-330e486533ce",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9cd2c863-6aab-4162-9d3e-1f72e2bf1a41"
        },
        "item": {
          "id": "bbf99559-c161-4032-abde-8854991ec304",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f96d9f47-f0b8-487f-a879-955e4c9e7b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9516c4-2b56-4fbd-8777-e24fcd8d193f",
        "cursor": {
          "ref": "b089ccf4-6f17-4394-8547-33a3534db0a5",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "893279dd-efdd-4b7f-b33f-b029e088ac44"
        },
        "item": {
          "id": "2a9516c4-2b56-4fbd-8777-e24fcd8d193f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "585873be-9a77-4b02-b2d2-a3b409d62391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31a1602-305e-44fe-8c61-2b1423512181",
        "cursor": {
          "ref": "4be5d3ce-c755-4526-b933-217c0d76794e",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "72bd8242-710c-45d4-91d7-afb8339a688e"
        },
        "item": {
          "id": "c31a1602-305e-44fe-8c61-2b1423512181",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "81a75e18-d1fb-45a6-97ae-bacb7c36b210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7061b893-d9c0-4fa4-9813-bc76fb15a63d",
        "cursor": {
          "ref": "c8e45a47-e9f8-4b77-b124-bbfba23ce705",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "81038c70-31e9-4b52-b54d-0597c5f53381"
        },
        "item": {
          "id": "7061b893-d9c0-4fa4-9813-bc76fb15a63d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b3691126-abd9-4035-8660-99167b436c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71d4c02-6b0a-4715-b3a9-9e5b0d30ad96",
        "cursor": {
          "ref": "6d83a1d1-1f44-4dbe-88cb-669eee2ef7ce",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8018df7b-8462-46a8-86fe-131333b76ff9"
        },
        "item": {
          "id": "f71d4c02-6b0a-4715-b3a9-9e5b0d30ad96",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "99669b72-c3fa-41b7-8e38-b111be6372e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9a7e35-dcbe-4599-8083-21275ebacf92",
        "cursor": {
          "ref": "7e8464fa-a480-47f5-85f5-63ffb20e055e",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "26c5bad1-fb1c-4822-9e75-b028ba4d958d"
        },
        "item": {
          "id": "ec9a7e35-dcbe-4599-8083-21275ebacf92",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ac815018-29e3-40b1-83c0-3d92bdeb65b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44708b76-9a06-4bf1-a62d-f92ab722c5c8",
        "cursor": {
          "ref": "b7553f7b-5b26-40bf-bd81-6992e38ee2c8",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3295c3a2-d558-461a-bf32-5560b84a2b35"
        },
        "item": {
          "id": "44708b76-9a06-4bf1-a62d-f92ab722c5c8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d9248b01-443c-4338-9b3e-a47667c29875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f72f111-cfd3-48a2-abc0-6cb3236ef06e",
        "cursor": {
          "ref": "f35db3a8-99fa-4233-9bc7-546fc4c4ae5b",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4150e3aa-7205-4887-964e-97713d3d5dad"
        },
        "item": {
          "id": "9f72f111-cfd3-48a2-abc0-6cb3236ef06e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4c10a0a4-4e8b-410c-8d17-5f8d9678c00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa100e0-1eda-4f6d-8b53-0d3839726b25",
        "cursor": {
          "ref": "1e0ba483-ae6f-4136-91be-542b921727ff",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fedb69e5-1c3f-4fb3-ab38-1fa5a80a8c06"
        },
        "item": {
          "id": "caa100e0-1eda-4f6d-8b53-0d3839726b25",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6577adcc-383a-42ce-bad1-52a84490eaf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080bd69a-d833-4cd6-9bd8-98ea576be973",
        "cursor": {
          "ref": "27f5252f-9c97-4e31-8453-c17b4256eb4c",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3b6f7a10-d9a1-43d6-b353-7778bf327e0d"
        },
        "item": {
          "id": "080bd69a-d833-4cd6-9bd8-98ea576be973",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "979072b4-23a5-4221-bad2-58eb966be193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243ba3e6-6ec7-4c9c-ab30-0aff7afa04da",
        "cursor": {
          "ref": "1f4a705f-621f-4b47-8ddf-546d3b9646ea",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "996ba556-9629-42c6-89a6-f7d0748f0d79"
        },
        "item": {
          "id": "243ba3e6-6ec7-4c9c-ab30-0aff7afa04da",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1f6f628d-9d88-4239-8143-60ffd90859f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf641e0-1b78-4783-9ba9-99409be1daa6",
        "cursor": {
          "ref": "2d590d8e-f02f-4094-9feb-808bdb43545f",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "12aadc81-6fc3-4da1-a684-9baefe592dfc"
        },
        "item": {
          "id": "acf641e0-1b78-4783-9ba9-99409be1daa6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e4e26d73-a4ee-4e08-8c0e-006220819a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5517daf3-1f14-4428-a9d4-35744a53dce6",
        "cursor": {
          "ref": "e495f995-eb7f-4442-bb7a-d81e3db1abe5",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "86980bd4-79d8-47ad-9680-5962459e1406"
        },
        "item": {
          "id": "5517daf3-1f14-4428-a9d4-35744a53dce6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d5696fcc-6580-4d2e-9db4-029787639331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d14ec8f-cd0c-40e7-a1e4-a786fba16981",
        "cursor": {
          "ref": "0e874741-ee2f-4f3e-b6b0-139a3d698d9c",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6d5d6d6a-2fff-4c15-a638-856e573be72e"
        },
        "item": {
          "id": "4d14ec8f-cd0c-40e7-a1e4-a786fba16981",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1f516329-34ed-4897-9fd6-6e088a760bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b90592e-4e9a-48d9-b665-c3f1ff8d677e",
        "cursor": {
          "ref": "eb799ac9-e66f-4209-a12d-806af812f533",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "79b2b383-83cc-45c4-8ec0-601051ccd706"
        },
        "item": {
          "id": "5b90592e-4e9a-48d9-b665-c3f1ff8d677e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3be8b035-66cd-4751-aaa2-1d09b4dcaeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58893b00-3dff-48cb-8151-8e8ca50cc513",
        "cursor": {
          "ref": "554d6255-b2d2-4fb1-ab4b-4e8f1655d90b",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "11e1f539-027d-4096-af79-a035e01daad5"
        },
        "item": {
          "id": "58893b00-3dff-48cb-8151-8e8ca50cc513",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4f954549-6702-4530-b43a-048b8543c444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c98aee7-7eea-44b9-91d0-7d2c5dc34ba2",
        "cursor": {
          "ref": "6ad7a5e6-29f2-49ea-8f68-45052fd51bbe",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "126cb8ad-95b0-4b7d-8247-d9ce8656129e"
        },
        "item": {
          "id": "7c98aee7-7eea-44b9-91d0-7d2c5dc34ba2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a56c3b3e-d26a-4bec-a575-a58280e76d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c07d169-40c0-454f-bbde-f1be068d5f5c",
        "cursor": {
          "ref": "30e42497-206c-4979-8850-0f0b0821c97b",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b0914dd0-ef09-4db2-b74e-bc0ab8690900"
        },
        "item": {
          "id": "3c07d169-40c0-454f-bbde-f1be068d5f5c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8197c016-c2a8-48b3-8c0c-badc32bb70f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071b7f8b-7a05-4bfc-a652-b878f5aa6d5a",
        "cursor": {
          "ref": "29fec603-42c1-4478-b9ba-3c1008a583ad",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "08d3c459-b2c4-4ff0-9bee-a70dcfe984c3"
        },
        "item": {
          "id": "071b7f8b-7a05-4bfc-a652-b878f5aa6d5a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "583dcff4-fc03-48fd-a362-845b0785bd4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b2fa82-b66c-47ce-8497-eaa8b52afa52",
        "cursor": {
          "ref": "a1b3bc92-623c-49c5-85d3-b77d8400ea97",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dd5e903a-b75c-4399-b20d-973afffe00c6"
        },
        "item": {
          "id": "78b2fa82-b66c-47ce-8497-eaa8b52afa52",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b740746a-0b00-4555-b963-4e48638d97ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddca9175-890c-422b-8327-6e63814da156",
        "cursor": {
          "ref": "df6614ca-f7c2-4d8e-b81a-bee1291db5aa",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dde966f0-8c94-4fc6-9d70-4281c25019e4"
        },
        "item": {
          "id": "ddca9175-890c-422b-8327-6e63814da156",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "30d4bda1-aaa6-4e02-8ea7-c57217ba78b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2499697f-5290-4798-b499-da668a8e2c64",
        "cursor": {
          "ref": "db00a3b5-f5c6-4671-9c46-ca9114100660",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8202b957-65b2-4189-bb4e-3bcb020370e6"
        },
        "item": {
          "id": "2499697f-5290-4798-b499-da668a8e2c64",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "59075953-155a-45f3-948c-9d987e66cc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbfbec0-6269-4a98-bb7f-66ac0eb7337f",
        "cursor": {
          "ref": "c5414919-4ab2-4550-aa4b-2aa074e077a5",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2a6bb027-bb58-4751-88de-ea4ee0108898"
        },
        "item": {
          "id": "8fbfbec0-6269-4a98-bb7f-66ac0eb7337f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "24defd96-b446-404e-917e-fb3354456a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeff6421-cfee-4d68-a28f-08306e479baa",
        "cursor": {
          "ref": "e7da87f6-bc88-4f67-a012-8624f5c742f9",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e78573cf-aaa4-4afb-bda8-a2fe2431b29a"
        },
        "item": {
          "id": "aeff6421-cfee-4d68-a28f-08306e479baa",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e801d91a-f936-40e5-a7ef-bfeb5e7ff467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad6c183-65ee-498b-b87c-ee606524c169",
        "cursor": {
          "ref": "bda5ab46-4b4d-4ed5-b27a-42e5f39ab33d",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "34530b0a-badb-4fde-aec2-d801cd22176b"
        },
        "item": {
          "id": "bad6c183-65ee-498b-b87c-ee606524c169",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1140b925-0e0f-4fd8-8cb9-1de951718031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd92eeb-e228-4a7f-9c22-e5b0ae0fc42d",
        "cursor": {
          "ref": "f73f03a6-98e3-4264-9dd5-11243f454cba",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a4b9c02d-be91-49c2-b768-6c5bbe27c561"
        },
        "item": {
          "id": "5cd92eeb-e228-4a7f-9c22-e5b0ae0fc42d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5d6a027b-dc58-4d0a-bcec-b14443e71350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe4696f-52d5-4b19-8dd2-d3657be111a0",
        "cursor": {
          "ref": "e788a5fd-5ba1-4f22-b1e1-dfe23e30d239",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "135f900a-c681-4ef6-936f-edbb420e3ef8"
        },
        "item": {
          "id": "afe4696f-52d5-4b19-8dd2-d3657be111a0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6c634ac4-1ca9-444c-869d-eaed82484663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2642820f-5b54-42f7-9527-8f31930b9942",
        "cursor": {
          "ref": "3ce1ddf8-e531-4347-8e03-1736b8d43766",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "22f2a01d-da75-4594-8183-f6fb2932a858"
        },
        "item": {
          "id": "2642820f-5b54-42f7-9527-8f31930b9942",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9f0cb062-29d4-41cc-8715-c3690552dd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7cdeb0-8d86-4707-8ff8-510e94c3e201",
        "cursor": {
          "ref": "1e690079-e9a6-493d-aa04-e596e3a90be5",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0feb8f28-36be-48bc-84ca-86c1222fe599"
        },
        "item": {
          "id": "ca7cdeb0-8d86-4707-8ff8-510e94c3e201",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fefc32cd-5db3-4afe-afb9-cef3bf8d6996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9a499c-f3ec-42fc-8b54-8f2377e66151",
        "cursor": {
          "ref": "f5188304-a863-464d-89b9-d92418718adf",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "52a99151-c69c-44b6-a075-83208fa2791c"
        },
        "item": {
          "id": "3a9a499c-f3ec-42fc-8b54-8f2377e66151",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7a6011fb-d4be-4cf4-b31a-8d2a044f9a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6647708-f05a-4670-ad2a-fb8f38472c26",
        "cursor": {
          "ref": "a67892b1-4d89-4a9c-891b-934e303f27a8",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a112f143-7bb1-4194-bf28-e7ac6bb3f739"
        },
        "item": {
          "id": "d6647708-f05a-4670-ad2a-fb8f38472c26",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0f4a750e-8021-48c0-9904-811eb13e840a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc65ef6-fd50-42a2-8b04-bed41f83738f",
        "cursor": {
          "ref": "9b4b5939-fb88-4852-b206-dfc8ad20413c",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0a9d45ca-3d49-4279-93a0-75c2414f3d95"
        },
        "item": {
          "id": "bbc65ef6-fd50-42a2-8b04-bed41f83738f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ded1bc23-a01d-4e7a-802b-4fc8263c95cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace7abf3-3c1d-481a-b5e4-439cf63ceb33",
        "cursor": {
          "ref": "a1cf3864-2c19-4695-9548-9a6d1bc121d0",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ab14e703-c6d4-4ae7-bd81-08a5502ac5db"
        },
        "item": {
          "id": "ace7abf3-3c1d-481a-b5e4-439cf63ceb33",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "99a1afe7-a4c3-4efb-8137-bd9b1bc20df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc2d81e-1816-469c-bf30-20dc9b438b7d",
        "cursor": {
          "ref": "fe044121-7d08-4daa-a766-454887356a39",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d8b468f2-3fee-4235-8ed9-425bdd95d9a9"
        },
        "item": {
          "id": "8dc2d81e-1816-469c-bf30-20dc9b438b7d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8491481f-68f6-4b16-b2ae-38e54a251eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943440bf-6fda-4604-b3f2-1858a2c17be0",
        "cursor": {
          "ref": "45c0fab2-5e66-43fd-8b02-c076f512d0a7",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ba4682a1-b7b0-4361-8c19-e87b915a4ba1"
        },
        "item": {
          "id": "943440bf-6fda-4604-b3f2-1858a2c17be0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4e0bf76d-9ef7-42e8-91a5-cd613baeda80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0932f8a9-34b8-416b-bfb6-3c5723778267",
        "cursor": {
          "ref": "8c747f0c-1a8f-4c0e-95da-34cbd50b8c2d",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "addbc536-32e2-4ad4-9a96-f9ad3585f689"
        },
        "item": {
          "id": "0932f8a9-34b8-416b-bfb6-3c5723778267",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "de43b6e7-8d5b-48ac-a2d1-3beb93b7d4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981aeea2-08a5-4170-a198-a10e11b90f95",
        "cursor": {
          "ref": "6e1f7c38-51da-4f66-a093-8a15ef5af1b9",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f3529fe1-4f40-46e6-a9d7-f11e1beac39d"
        },
        "item": {
          "id": "981aeea2-08a5-4170-a198-a10e11b90f95",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9833e3ce-e16d-4a17-9314-d1c524ffdaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709177f7-14d3-4c60-88eb-e6d57be5a61f",
        "cursor": {
          "ref": "abc296cd-c268-4e1e-9a06-6fbc3dc2405a",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ea950b56-2e88-43fb-a01b-fc24089e01ad"
        },
        "item": {
          "id": "709177f7-14d3-4c60-88eb-e6d57be5a61f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "82c91e06-21cb-4216-a08c-bd766c0e58e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2a14b4-d797-4568-963a-17e3cb41ed4c",
        "cursor": {
          "ref": "25cf1519-42f6-424d-8dd5-0175943d8425",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1b282c93-c95d-4c10-a086-d064c433ab8c"
        },
        "item": {
          "id": "ca2a14b4-d797-4568-963a-17e3cb41ed4c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "aa5ad0c8-912a-4ff6-a0eb-16a93a4f0c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705944e2-9c0c-4c09-ba13-cbf1a71a3152",
        "cursor": {
          "ref": "8853373b-4e58-417c-b2f7-88efe6c153bf",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "83cc9404-76ca-409c-b64e-6456eb6ece9c"
        },
        "item": {
          "id": "705944e2-9c0c-4c09-ba13-cbf1a71a3152",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bbe0dc67-98ad-4213-b480-d8439b01dbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38de465e-4731-4eeb-a1b4-58025766afe5",
        "cursor": {
          "ref": "ea015157-47da-4643-87a6-26b70e0ac9c5",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "30b31c9c-37a5-4f48-b72f-b0b8585bd373"
        },
        "item": {
          "id": "38de465e-4731-4eeb-a1b4-58025766afe5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cad78b5c-20f3-46a5-a4e8-373b45567144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd605b5-1c7b-4839-98ae-6fcf9fe8d8c6",
        "cursor": {
          "ref": "367adc2c-0402-4185-af3d-2cc34a0f18a7",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "41caa914-adb7-4911-b1da-219afa576179"
        },
        "item": {
          "id": "2cd605b5-1c7b-4839-98ae-6fcf9fe8d8c6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dc43d9a7-9a7b-4ac2-975f-54ba61537399",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347e3580-d372-446d-9654-36f06c582d6f",
        "cursor": {
          "ref": "4b59f979-2d17-4c5d-a1b8-bf76f995d83d",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6bd48ff8-5f40-4040-b1f7-a5a6c26f7ace"
        },
        "item": {
          "id": "347e3580-d372-446d-9654-36f06c582d6f",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "bbd26542-ed8e-4df1-b207-25bbb23e0ca4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 137,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e599984a-692b-4e57-a357-8dc3f7e3a3f2",
        "cursor": {
          "ref": "cd451e90-ba0a-46c0-98b1-575c222274d4",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cffda0f5-f0a8-49b2-8681-cdfc48dc9bb0"
        },
        "item": {
          "id": "e599984a-692b-4e57-a357-8dc3f7e3a3f2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "90330822-0a0e-43ab-a4d7-0c57bcb2eb81",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cf615b-8012-41b9-b028-5bec6c3bf32a",
        "cursor": {
          "ref": "2b80ad0e-8bdf-4375-b9dc-c3826deffbae",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "003102ce-cac7-44d5-98e5-f9491bbb0503"
        },
        "item": {
          "id": "c3cf615b-8012-41b9-b028-5bec6c3bf32a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ca721374-ad77-454e-bda5-4ec6f2c0aea2",
          "status": "Created",
          "code": 201,
          "responseTime": 70,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90ea6aa-6b96-473c-b742-8669ab028f79",
        "cursor": {
          "ref": "f5a4ba34-f4b6-408a-bbae-c1ec5089be3b",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6b955861-4580-4087-8d15-b777a20c1e93"
        },
        "item": {
          "id": "d90ea6aa-6b96-473c-b742-8669ab028f79",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8776fa70-507c-4ff2-8dcd-0dde3a0368c0",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "42eac7c9-0741-4ad2-af44-43e90f700634",
        "cursor": {
          "ref": "598a71a2-47c8-43d4-bbf9-333a987ce48d",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2a3df896-695c-4d3a-9b0e-7ad900efe093"
        },
        "item": {
          "id": "42eac7c9-0741-4ad2-af44-43e90f700634",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "79eef44c-cd04-403d-a104-799180506d29",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "eded7053-61b1-461a-b0a6-cc12fd8da476",
        "cursor": {
          "ref": "1a6228e3-9f23-4113-ab44-665ebcfa8914",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c1e710dc-1a9c-4d7f-88a8-e3d0d68dfb84"
        },
        "item": {
          "id": "eded7053-61b1-461a-b0a6-cc12fd8da476",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c93991e6-c9ff-4db3-a144-f37c7c308022",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "75df8b32-c6d3-4761-a9f2-261ec7dc1bf7",
        "cursor": {
          "ref": "8079342c-5876-4ae2-a5b4-82651008ea9f",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "13be873a-ec7b-46f8-8743-0d340ad9574a"
        },
        "item": {
          "id": "75df8b32-c6d3-4761-a9f2-261ec7dc1bf7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e2f30f52-5a0e-4dac-b0c0-2b73c8a3192f",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e852b42-58b6-4ec4-88d0-4bb650432354",
        "cursor": {
          "ref": "7721d73e-28a5-4357-84cb-a3d6a0d8e010",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "696eb92b-9a2b-40e6-91b3-f3fbcbcf8ca9"
        },
        "item": {
          "id": "8e852b42-58b6-4ec4-88d0-4bb650432354",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a823650c-a1db-4f5a-903e-b70601318193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e852b42-58b6-4ec4-88d0-4bb650432354",
        "cursor": {
          "ref": "7721d73e-28a5-4357-84cb-a3d6a0d8e010",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "696eb92b-9a2b-40e6-91b3-f3fbcbcf8ca9"
        },
        "item": {
          "id": "8e852b42-58b6-4ec4-88d0-4bb650432354",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a823650c-a1db-4f5a-903e-b70601318193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cc619d-3ba5-4195-9cc2-2a7ced6cfcea",
        "cursor": {
          "ref": "aca1659b-0548-4c56-88be-e1ea470b443e",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b8e741aa-1c6b-43ef-af46-a8d5400eb767"
        },
        "item": {
          "id": "28cc619d-3ba5-4195-9cc2-2a7ced6cfcea",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c7407054-6684-467f-b24b-cfb8c8534d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86a050a-4447-42e3-a2c9-a2a20711eb4b",
        "cursor": {
          "ref": "952a69c9-3f54-45c4-aa96-921b1303ae07",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9c98c1c6-1400-4e44-882d-45994662a75e"
        },
        "item": {
          "id": "a86a050a-4447-42e3-a2c9-a2a20711eb4b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f0ea0361-17ed-421a-8581-fd2f2c11aeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81169293-7945-412e-bff9-b8fdd8ba3b99",
        "cursor": {
          "ref": "e46c6486-a33c-4464-8e23-c3410f7d218d",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1e17b1c1-938d-4202-82e3-d4001a5da696"
        },
        "item": {
          "id": "81169293-7945-412e-bff9-b8fdd8ba3b99",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3b91c104-abe2-4e30-a66e-48c81b613320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e690fa-3a0a-4842-a094-a5147ca67216",
        "cursor": {
          "ref": "06d4461b-d31c-4bb8-9775-ca69e3c39430",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "057ff8f2-d363-4849-b2e2-2b956fe3757c"
        },
        "item": {
          "id": "73e690fa-3a0a-4842-a094-a5147ca67216",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7588c3df-2c65-4c44-bf5e-880a70a1b1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fb764b-88ad-4a18-977b-dbee5417d513",
        "cursor": {
          "ref": "6567c629-7b63-4885-a652-21ee087e773d",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "72817abe-4568-4685-816c-7d0aa0dd64b3"
        },
        "item": {
          "id": "97fb764b-88ad-4a18-977b-dbee5417d513",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "96141bc5-227a-425f-be68-733a7995d7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cffa75-58c4-4c51-bf75-2715dd1492e5",
        "cursor": {
          "ref": "ab92fb41-a6d1-4cad-980e-edb1fff29235",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b2f5bb71-bd72-46be-abc3-e3afa4467e4d"
        },
        "item": {
          "id": "89cffa75-58c4-4c51-bf75-2715dd1492e5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bcb32888-100c-4dee-b977-a8d7bfb63546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898033a4-5036-4e7a-af6e-2c6739fc8802",
        "cursor": {
          "ref": "36427406-ff4e-4c89-b8ae-a9ec6739bffd",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a4b2de2e-7c62-4369-b165-de1148bfc861"
        },
        "item": {
          "id": "898033a4-5036-4e7a-af6e-2c6739fc8802",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "55b9c6ed-0f22-4165-b784-a5a31a145b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbf1ead-0629-4605-9f92-9e821af9f0d7",
        "cursor": {
          "ref": "6f1d76af-5f33-4bfd-b3eb-0beb70f6b5b7",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "51dca1db-826e-46cd-8cba-249e1699f083"
        },
        "item": {
          "id": "9bbf1ead-0629-4605-9f92-9e821af9f0d7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1f84d9b0-881f-4523-9327-dd8d01ac2524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69fe938-bb0a-4e3c-b780-500f9e54cc20",
        "cursor": {
          "ref": "eb5580ad-7c4d-435c-afbc-980cd01e714d",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "857fd301-fdef-40e5-be2c-5578b45d04b3"
        },
        "item": {
          "id": "d69fe938-bb0a-4e3c-b780-500f9e54cc20",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5247686b-1918-405c-97ce-16d513870d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b01aa9-a1af-4c38-95f5-aa1be2c94056",
        "cursor": {
          "ref": "edcf55d1-4a56-409e-bd9b-4dd82804f59f",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ddad99fd-edd1-429c-827f-4c4df849b514"
        },
        "item": {
          "id": "d4b01aa9-a1af-4c38-95f5-aa1be2c94056",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7ae0cd12-3ead-451c-91f2-44ed0336dcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd692ce2-9d90-40b3-9a56-97186ba33576",
        "cursor": {
          "ref": "0d4bfa5f-41b9-4741-9498-d992c87fbf24",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1f7f9367-1637-4464-bb38-ffaecba518b1"
        },
        "item": {
          "id": "bd692ce2-9d90-40b3-9a56-97186ba33576",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b8d52959-8075-4baa-8f30-13ac2d4cf44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b493d76-53f5-4504-b72d-eaee73637a5d",
        "cursor": {
          "ref": "897037f1-66d0-4a58-8a48-1736760152cb",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c67ef8c6-b225-487a-884b-8228edbef363"
        },
        "item": {
          "id": "5b493d76-53f5-4504-b72d-eaee73637a5d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4906453f-504b-4e17-b101-18396a507d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a7c35b-f94c-4c41-8dbc-e64a098bb2b0",
        "cursor": {
          "ref": "ca3cd08c-2478-4864-88f2-906ef356deb3",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "83e2a7be-85f1-4cd5-abea-ab6bbe7b2287"
        },
        "item": {
          "id": "e4a7c35b-f94c-4c41-8dbc-e64a098bb2b0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bc3aea02-8c62-4790-9a08-417d012b6bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5397efe-0cd3-4a67-a0d6-def60bd1b4cc",
        "cursor": {
          "ref": "10f68c1f-24e6-4075-86b9-2be844b55a9f",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0ff9bc97-c577-4a9f-9c86-1854ddca45ee"
        },
        "item": {
          "id": "a5397efe-0cd3-4a67-a0d6-def60bd1b4cc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ffd915e1-13d1-4773-a662-89817817e210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c4cb33-dd34-4729-a3dd-c8933642b22e",
        "cursor": {
          "ref": "966f2ee2-285b-4719-95f8-7ace86f94010",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8ba6b780-c7f3-4daf-befa-31df7e9938e6"
        },
        "item": {
          "id": "88c4cb33-dd34-4729-a3dd-c8933642b22e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d290e71b-3ce1-4e72-8aa0-b8c77ee84244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b778b622-2d66-4b95-a460-1a758ad59601",
        "cursor": {
          "ref": "a2a73bbb-8a97-40d2-ad29-fa23c1f0ed39",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "31243081-2c71-4e9a-8654-d5e70f16ab9b"
        },
        "item": {
          "id": "b778b622-2d66-4b95-a460-1a758ad59601",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "52bcdfc5-276b-4b1f-a9a6-78dc9f7ada69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923265f6-b86c-4f44-8287-bdd90537a4ea",
        "cursor": {
          "ref": "c30e054a-6b77-41e2-a360-e89b1e2b8f5b",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c1c49f58-ba69-4177-a9d1-cff0a72cd7be"
        },
        "item": {
          "id": "923265f6-b86c-4f44-8287-bdd90537a4ea",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7ddddfd9-853d-40f2-ae11-282921c791c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7827f7db-1caa-4da8-9b7c-d2acf2813821",
        "cursor": {
          "ref": "74d045d5-241d-4cb4-b1bf-67dc82e040e9",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8a400df9-da8f-41f6-9ba7-2920fb431d17"
        },
        "item": {
          "id": "7827f7db-1caa-4da8-9b7c-d2acf2813821",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ad6b8e8c-af4e-448a-a848-4e45dbf1fc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd574523-130f-4e6e-a65b-24c938034846",
        "cursor": {
          "ref": "518cbfe2-ec8f-45e3-a882-643c70ad66b9",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4a4333a9-edec-42c4-9b4e-d9bffc5ddee5"
        },
        "item": {
          "id": "dd574523-130f-4e6e-a65b-24c938034846",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cb3edf8c-f1d6-485f-811f-d823731f1287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56028db5-6247-4ce0-9c4e-d7878377708e",
        "cursor": {
          "ref": "7e1b89f3-c732-43c2-a129-dc93e757ca02",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "639889ac-56fd-4f1c-abe0-e32317183873"
        },
        "item": {
          "id": "56028db5-6247-4ce0-9c4e-d7878377708e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "296e47a7-b95c-4d68-b19c-dbd3a6c176d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26025e3c-6246-4aa3-ae86-60bccf869f9b",
        "cursor": {
          "ref": "add2e4c2-1500-4b55-8829-14baff5053a4",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7d91a6d9-8bc0-4bd7-a7b9-a402eb4bfd53"
        },
        "item": {
          "id": "26025e3c-6246-4aa3-ae86-60bccf869f9b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "da6f0d1a-fb14-4c37-8e7a-e40e83494c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2ba60d-a42d-491d-9663-083083121096",
        "cursor": {
          "ref": "8e42d397-df6f-491d-b854-fe7c0c243a1a",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d4c9ca54-b6f8-4a32-bfaa-01de13951f3b"
        },
        "item": {
          "id": "5c2ba60d-a42d-491d-9663-083083121096",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c8450b11-bc20-4863-b08e-0d9ba258dcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57ba20a-4d84-4f2e-bcc7-6922e00a83c9",
        "cursor": {
          "ref": "e007887c-3f4e-404f-8a0b-e4875c8b05b8",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b5f97905-9100-4ed2-901c-c123e74b8efd"
        },
        "item": {
          "id": "f57ba20a-4d84-4f2e-bcc7-6922e00a83c9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "30356e06-5509-4d85-98d8-19c17fed1b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ade894d-e0de-4a8c-8d79-ac6b3efe6e3b",
        "cursor": {
          "ref": "9c23e920-8c3b-43a7-98a4-4400bb266428",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "26e34a39-0e95-4d38-8b1f-850df456047f"
        },
        "item": {
          "id": "8ade894d-e0de-4a8c-8d79-ac6b3efe6e3b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d0aa4ec8-9895-4f2a-ac5d-40b7ccc001d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94670bfe-72f1-40b3-95fb-40275d35ef90",
        "cursor": {
          "ref": "49f7c6cd-ac69-4fe4-a877-17628bd75c93",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ee766cc5-5be8-4e97-9c71-1ce9356d7e08"
        },
        "item": {
          "id": "94670bfe-72f1-40b3-95fb-40275d35ef90",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b2168195-7367-4628-bc83-c9ae7324262e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2143da3c-58e8-49e6-b351-9bb2c2c37b57",
        "cursor": {
          "ref": "d304e5b2-a136-431d-a996-0c8483fa25c8",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "16f3104d-6624-4895-8886-859b45bc93b7"
        },
        "item": {
          "id": "2143da3c-58e8-49e6-b351-9bb2c2c37b57",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "342e24bc-60c3-433d-8588-12a1e5ef95c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f91ddf-7c50-4072-94df-c0aaeab97a20",
        "cursor": {
          "ref": "b46a8a0e-2836-4942-827c-a23e47b70e1f",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d71d1d07-71d5-4ddd-bd99-3a7d8a147ff2"
        },
        "item": {
          "id": "05f91ddf-7c50-4072-94df-c0aaeab97a20",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4a12eba1-87b4-499a-8922-b94bba52269c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78b7d47-72df-434e-a5fa-29ebd18d4e1a",
        "cursor": {
          "ref": "e87fd945-3065-4a0e-adbf-76f01929710e",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e7aeefa2-5e2d-41e8-bd38-1166f4b0303f"
        },
        "item": {
          "id": "b78b7d47-72df-434e-a5fa-29ebd18d4e1a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6f790343-2b2d-4af4-998e-89ce6e225db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7632aa6-ae46-4e23-ae98-6233745c46fc",
        "cursor": {
          "ref": "8b0e5b05-49ec-4334-bb53-19d059dd4bd0",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "30e57464-8328-4243-a230-8a0b704ca874"
        },
        "item": {
          "id": "b7632aa6-ae46-4e23-ae98-6233745c46fc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "804cbfea-40f0-4a8b-a0a6-7ee7de1ea327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62d4e49-d4a0-42b6-be08-68599c56220c",
        "cursor": {
          "ref": "3e32c8ed-503e-43eb-91c6-a9f213bd5896",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b2b501cb-a1dc-4d90-b137-127a6ca20688"
        },
        "item": {
          "id": "b62d4e49-d4a0-42b6-be08-68599c56220c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "276d0d29-775d-4714-8125-9751c658ffdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27090a44-fee7-470d-9c4e-61b2bba97f5f",
        "cursor": {
          "ref": "48ce6f32-b50c-4d9b-9deb-8e895ad439f4",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7034cdbc-9c3c-4a8c-bf6b-50fddb34ca06"
        },
        "item": {
          "id": "27090a44-fee7-470d-9c4e-61b2bba97f5f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "75d230af-3eeb-43ee-97cb-e3740d742c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c5356c-5e86-441f-9f05-2d92092e2e5e",
        "cursor": {
          "ref": "9c177ab3-e497-4a54-9377-534de46e545d",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ef584e9c-9251-4e68-b964-0a18cb2bff54"
        },
        "item": {
          "id": "e3c5356c-5e86-441f-9f05-2d92092e2e5e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "50d03102-4bbe-433a-bc30-5d54af33c17c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e1b015-cf53-4334-afa9-c239365816f5",
        "cursor": {
          "ref": "ad40c0c2-e1be-4dc8-8054-687322ef6715",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "93d2b95c-6bf1-4190-87be-da2673ebddf0"
        },
        "item": {
          "id": "29e1b015-cf53-4334-afa9-c239365816f5",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "ede4acc3-3e35-4912-a44b-e6022ccd72f9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef72e079-0d6c-49b4-92a5-3cd2489cab02",
        "cursor": {
          "ref": "6bf87048-7ab7-4b96-9626-776207b35685",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "49065544-707c-4e31-80d4-c3d8f11e9eaa"
        },
        "item": {
          "id": "ef72e079-0d6c-49b4-92a5-3cd2489cab02",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e3ae7aba-407a-4ab5-87f5-e869559406ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef72e079-0d6c-49b4-92a5-3cd2489cab02",
        "cursor": {
          "ref": "6bf87048-7ab7-4b96-9626-776207b35685",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "49065544-707c-4e31-80d4-c3d8f11e9eaa"
        },
        "item": {
          "id": "ef72e079-0d6c-49b4-92a5-3cd2489cab02",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e3ae7aba-407a-4ab5-87f5-e869559406ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1224e682-4863-4045-b9ee-ca03605227ca",
        "cursor": {
          "ref": "f22ed593-07d7-4da7-98f0-ba010cef710e",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "36831b3c-3c43-408c-9933-3e39c6c4b563"
        },
        "item": {
          "id": "1224e682-4863-4045-b9ee-ca03605227ca",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "934f3d85-0eb7-48f6-b670-1a426ff1e3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9270db68-764d-4989-9789-d04ca583119f",
        "cursor": {
          "ref": "67364d57-9fe6-4d86-9d04-d39315eeb7cc",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e94d9167-48de-496a-8ded-cdb666d3f9d4"
        },
        "item": {
          "id": "9270db68-764d-4989-9789-d04ca583119f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ebb9a6c8-58b2-4945-8cb6-8b6d9a131ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190e7e14-4aad-4ef9-81f3-e8ce79644773",
        "cursor": {
          "ref": "5e7295b6-ee2f-4f01-9278-5fd7d24a8f0f",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5c083974-8d49-4ca8-883b-ff6592bccc7d"
        },
        "item": {
          "id": "190e7e14-4aad-4ef9-81f3-e8ce79644773",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6666b305-2179-4300-8cc2-8e8281637256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce131827-3d64-49a8-8d47-f475b6403388",
        "cursor": {
          "ref": "d08ea4f7-ea49-486d-9808-9825c7a62860",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "70a1b359-a05b-42f2-b306-2e1d263955e2"
        },
        "item": {
          "id": "ce131827-3d64-49a8-8d47-f475b6403388",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3c5cb028-0899-4300-a37a-867c1a8c89ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddffee87-e97b-4a98-9ff9-896ebf0c35d8",
        "cursor": {
          "ref": "9b72ffc8-7109-40f9-812d-1c64b48813c2",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "71586eec-7530-4845-948f-c1db379b6878"
        },
        "item": {
          "id": "ddffee87-e97b-4a98-9ff9-896ebf0c35d8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1ad68fa6-56b7-441b-9e1b-2de53eca361a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8d48d6-34ed-43b1-a4c3-e503e05bb7b9",
        "cursor": {
          "ref": "522c0e42-fdc1-4960-9b09-ce9638ab3956",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "14626524-356b-4fbd-974d-80b94ec4aa04"
        },
        "item": {
          "id": "0e8d48d6-34ed-43b1-a4c3-e503e05bb7b9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f3f94b76-fea9-4a87-9544-904d12b031fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfd9772-022c-4ff9-b747-79fe63dfe825",
        "cursor": {
          "ref": "58202374-57cb-4d1f-8d9a-2c8144468948",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8b57b834-4922-492b-845a-a1ed00bd0b43"
        },
        "item": {
          "id": "0bfd9772-022c-4ff9-b747-79fe63dfe825",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "56412ed8-b4a6-43f7-9445-72955543cf69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0334be85-e481-42ad-8749-cd391dd85f7d",
        "cursor": {
          "ref": "d077c0aa-d6fd-4434-9d93-4b4813f1fc29",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3a939a67-14d5-4c92-b723-eea9faf91123"
        },
        "item": {
          "id": "0334be85-e481-42ad-8749-cd391dd85f7d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "766dd66c-1cc9-4025-a5f8-c7f84a3fbe4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be499d0-6cab-4338-b719-6aa2de4a2242",
        "cursor": {
          "ref": "a1a319d6-2e03-41a0-8299-72c012b92463",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9a42ecbd-3eb4-4557-b81e-bdf7349f82ef"
        },
        "item": {
          "id": "8be499d0-6cab-4338-b719-6aa2de4a2242",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b2d42543-3064-4f38-b650-df6d1a68dc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43576240-f26e-482e-a484-ca48d038c0d1",
        "cursor": {
          "ref": "31fab344-aeb5-42e2-baf6-f74a65ec429c",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5625d765-6645-442a-80c5-f4375742a225"
        },
        "item": {
          "id": "43576240-f26e-482e-a484-ca48d038c0d1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "48fea5ff-34cc-44c2-8471-32b640654ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f44bb2-e0d5-450e-a78e-3785b936b531",
        "cursor": {
          "ref": "2b684da3-4e07-4fa9-8872-ab7c2ca960dd",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1230af7a-81b7-4b8b-9440-3959f60b4833"
        },
        "item": {
          "id": "c8f44bb2-e0d5-450e-a78e-3785b936b531",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "088a495a-15bf-4b69-b608-6cbae710e75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25359be6-3df4-4f43-a26a-b483541bb309",
        "cursor": {
          "ref": "61c6aac9-1c67-4561-a6d3-b339da0effda",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4057ce82-ed41-4414-93a9-90d788338a1c"
        },
        "item": {
          "id": "25359be6-3df4-4f43-a26a-b483541bb309",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "39b03cf9-dbd8-4abe-9007-1a8dfc7fc1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7091b02f-93dc-48ff-9f5f-1f2047fc6f1b",
        "cursor": {
          "ref": "a62d2782-6cc3-4e70-a663-0f7a4cfe43e3",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a5526cfd-e28f-4467-9f38-8eab247fd5f7"
        },
        "item": {
          "id": "7091b02f-93dc-48ff-9f5f-1f2047fc6f1b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e0fe3e0f-3b65-496a-82c3-b29a9ed467d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bd7fac-c408-4de8-80d3-93d256c2c9ea",
        "cursor": {
          "ref": "d00a4ced-7fff-4ff1-9145-8fe85bb0d189",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d2974efe-932a-4175-9b19-7984ca4160cb"
        },
        "item": {
          "id": "10bd7fac-c408-4de8-80d3-93d256c2c9ea",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "818ed471-4d18-4140-98a0-1ff06db3d870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9851f1ba-071b-4b3b-8219-3d863a2b6c0c",
        "cursor": {
          "ref": "1d702437-05ed-435b-ab75-2c570915ed16",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "118e1fbb-31fa-428d-8780-811c76a48e7f"
        },
        "item": {
          "id": "9851f1ba-071b-4b3b-8219-3d863a2b6c0c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7af7a8bc-bc2c-4c88-a834-be896d41b1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748a55a0-85a0-440a-8316-78db4d40b8ef",
        "cursor": {
          "ref": "c8002357-7c2b-4083-915a-a031b9700b89",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "80dcd243-d405-4719-8eec-16c9019a747c"
        },
        "item": {
          "id": "748a55a0-85a0-440a-8316-78db4d40b8ef",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "904caea8-dc6c-453d-9450-cfe2c0e3e973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445973c5-819b-4ba2-9feb-163d88b69b70",
        "cursor": {
          "ref": "81dd60cd-ebc9-487a-b205-bf9107d8a4e1",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "25e796bc-4d68-4102-9147-e33090fe0578"
        },
        "item": {
          "id": "445973c5-819b-4ba2-9feb-163d88b69b70",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "368e21b3-7c2d-4995-a9ce-7d066b7438f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28173cf7-dba7-4240-933a-61d6734cbd73",
        "cursor": {
          "ref": "fb07879b-894f-4d20-8f22-66bc4531221d",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7b69c015-0527-42e3-a157-31c82b6ed7dc"
        },
        "item": {
          "id": "28173cf7-dba7-4240-933a-61d6734cbd73",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8eb158cb-22c4-4c56-b8bf-c4c4fd1d8c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b983fadf-d3c0-4e93-b7c7-cec66bbe2d08",
        "cursor": {
          "ref": "14531547-6a26-4e9b-8dd9-bd79094c8685",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "de7c338a-bbed-4994-af8a-7590fa0dccd4"
        },
        "item": {
          "id": "b983fadf-d3c0-4e93-b7c7-cec66bbe2d08",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f9c7cee3-bf37-40f1-b04a-d799f5482ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1844ee-1ef3-4db9-bcd1-a42ad77ade3b",
        "cursor": {
          "ref": "0c22e383-eef5-4fa5-88eb-761b59860e8c",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cb3ca53c-827d-442d-84fb-7fcf35efe4b2"
        },
        "item": {
          "id": "4c1844ee-1ef3-4db9-bcd1-a42ad77ade3b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bbd17378-506f-4964-b73f-82f96e1da024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7871395c-4882-4c96-aaf9-9d5f8f00c120",
        "cursor": {
          "ref": "8810b966-257a-44f8-a503-672b38392e64",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "409a21fc-1932-4029-8b22-d7d77c9fb6d5"
        },
        "item": {
          "id": "7871395c-4882-4c96-aaf9-9d5f8f00c120",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f3244c19-17b7-472b-8a2d-309ff309263c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd12e327-1814-4113-8497-80f5d02c5af4",
        "cursor": {
          "ref": "1d2a0bd5-0439-4f6f-97fc-b0849038799a",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "43947703-208f-4f8a-8d07-5257214b0541"
        },
        "item": {
          "id": "cd12e327-1814-4113-8497-80f5d02c5af4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cb1c338e-9c93-4d39-8510-6bc42deda4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6cfab4-c5c0-46dd-bc72-ab68d8784da2",
        "cursor": {
          "ref": "ad2acf81-9c6e-489a-9bad-5bf62eccb3c0",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "24f5dcb1-49c4-4935-a0de-1f94aeabd281"
        },
        "item": {
          "id": "4b6cfab4-c5c0-46dd-bc72-ab68d8784da2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bf08ddb9-625b-4736-9475-12f62779e56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c4af71-cf5b-4b90-9dcb-9a6437e77f8f",
        "cursor": {
          "ref": "5486d2a1-e609-4d07-858d-a3e8ae027286",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dfbdbf39-b695-4729-b6f9-9f5661426c6f"
        },
        "item": {
          "id": "00c4af71-cf5b-4b90-9dcb-9a6437e77f8f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4e684ea6-3c0b-462f-88ba-1abd872f92de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a183e1-04c5-4223-89c1-a73074cca79a",
        "cursor": {
          "ref": "9439d25c-de1c-4fcb-8b8e-f81556d6ce80",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "59cb0ac0-4215-4ea2-9f13-3b436c4a06b9"
        },
        "item": {
          "id": "80a183e1-04c5-4223-89c1-a73074cca79a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c2f60d10-dbad-4c7d-ab1f-02f7356c57fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36a1aa3-32bc-4767-a5d9-df3167ac95bb",
        "cursor": {
          "ref": "3313feaa-3c3b-4e50-bc79-8f9392a9417c",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7bbb4a3b-646a-4506-aa18-3656e05027be"
        },
        "item": {
          "id": "a36a1aa3-32bc-4767-a5d9-df3167ac95bb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5883dd39-d655-483e-8ca8-3fb9bc602d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcc779d-42fa-4b32-b6ac-8f6318377230",
        "cursor": {
          "ref": "ce029687-e25b-46ca-85aa-3e7859eb5a71",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "012b9b9a-adec-4191-80ea-f92ae3254512"
        },
        "item": {
          "id": "8fcc779d-42fa-4b32-b6ac-8f6318377230",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c91cc2b2-4b48-46c0-9eb6-5e12a4d778e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8c0b4c-e55c-48d8-a347-8fe029842348",
        "cursor": {
          "ref": "58399438-33f4-49da-957b-fbb4d2cab7c6",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f7dce73f-06c4-4c78-b13e-19fff980878e"
        },
        "item": {
          "id": "5a8c0b4c-e55c-48d8-a347-8fe029842348",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c2ac9f43-9487-4bfe-9565-5728a7498cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c03ffef-ab2c-4304-858b-9772008b4060",
        "cursor": {
          "ref": "551402ee-f313-4b24-a06c-9b71d1b42677",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8b83a864-a07f-4f1a-ba50-eb6415b36f1d"
        },
        "item": {
          "id": "3c03ffef-ab2c-4304-858b-9772008b4060",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7ef78a6f-880a-4b7b-8dc2-79d3f192519f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8f3a30-3ac0-471b-ab88-37ed659c1be4",
        "cursor": {
          "ref": "46efb7fc-4b55-4945-a12d-56727258fc3d",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9cea3c22-10fa-4085-ab0e-b4274796d40c"
        },
        "item": {
          "id": "ce8f3a30-3ac0-471b-ab88-37ed659c1be4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8e4db297-0321-4aca-aaed-52aee81ac5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad3c45a-40c3-4097-8c2d-247098dce13c",
        "cursor": {
          "ref": "aad35c33-c5d6-4774-94e5-4548f8fa879b",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cda4fad0-726e-4ddb-8660-7c05b1b910e5"
        },
        "item": {
          "id": "5ad3c45a-40c3-4097-8c2d-247098dce13c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8b3d76ee-1e3b-4ea6-91fc-dee64345e9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d7609b-dff0-406f-9888-2bc6dcd9e4dc",
        "cursor": {
          "ref": "2d468f0d-73f8-4e19-92bc-01a5aca01dfa",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b7abd3ba-39eb-47d9-8f4a-f45983ea5364"
        },
        "item": {
          "id": "39d7609b-dff0-406f-9888-2bc6dcd9e4dc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9464979a-f98e-4e3e-9887-032a9f3227c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9669218-f941-4da2-a7e8-838324238391",
        "cursor": {
          "ref": "ec779de2-dbf3-4e84-8ac2-b93ae480b94d",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "35d349ae-49cc-4db0-bfa7-8b47aa71adea"
        },
        "item": {
          "id": "c9669218-f941-4da2-a7e8-838324238391",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4f7aee71-9b86-43a0-a760-3c8b3524fb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbf90cd-f3a6-4d96-807d-8828fe4a1abd",
        "cursor": {
          "ref": "1dfd03f3-9dc1-44a6-95cf-f82b6a162f3a",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "dd5405fd-13c0-4523-8be7-9e43e8dbd137"
        },
        "item": {
          "id": "7bbf90cd-f3a6-4d96-807d-8828fe4a1abd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "701503ec-f39e-4be2-b1c7-c4125dd76001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebc6f1a-cac5-4871-bf5f-ec4169f9bbcc",
        "cursor": {
          "ref": "90da1e9c-1146-4596-bdde-4764d18148da",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4c32021c-8e66-41e3-9c61-121c0d0bcf42"
        },
        "item": {
          "id": "eebc6f1a-cac5-4871-bf5f-ec4169f9bbcc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f33b70d6-3542-4f90-8e23-e17736d4dd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6cbc57c-09f2-4126-87c2-8e2f1a6e38bd",
        "cursor": {
          "ref": "d1e51f95-4073-47a6-9e63-0faed1aa0780",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cafe7b0b-106e-40bc-9d09-9cc8e984d8db"
        },
        "item": {
          "id": "b6cbc57c-09f2-4126-87c2-8e2f1a6e38bd",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "133f75b3-d603-47dc-8721-24fd45b1e2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2420b6-f6f5-4042-8312-506beda54a7b",
        "cursor": {
          "ref": "b54118b5-46dc-443b-bb63-5937a6c8c206",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "419d9721-49f7-49cf-91ba-73c2b3c63509"
        },
        "item": {
          "id": "6a2420b6-f6f5-4042-8312-506beda54a7b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c123e162-3450-4058-a87f-9e24fc8bd94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfa8a2f-aec3-4289-bfb5-480d2ae40061",
        "cursor": {
          "ref": "1e98e606-d945-4dc6-af19-d790bd94e4ad",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4ad89980-428a-4f20-a1d4-cfe62653f1e9"
        },
        "item": {
          "id": "2cfa8a2f-aec3-4289-bfb5-480d2ae40061",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8998c449-77cd-48ef-a79e-7158e3790ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35e9855-0970-4260-afc3-226f65a9b9fb",
        "cursor": {
          "ref": "549f490f-71ce-4eee-bd9a-bb7f918af256",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fc207008-52a2-41be-80d3-572edff23683"
        },
        "item": {
          "id": "e35e9855-0970-4260-afc3-226f65a9b9fb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a7d85b1a-ae29-4d21-ad1a-e9b2122fcaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f2998e-6133-4a68-857a-c984fce025d8",
        "cursor": {
          "ref": "58e3c860-cf34-41d7-ba7e-7170639eb467",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5bbc1a62-8363-403f-b4f4-fae7c91a5cbf"
        },
        "item": {
          "id": "f7f2998e-6133-4a68-857a-c984fce025d8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0e69eb49-0fd7-4fc2-b487-dd2d1bb06606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a545f2-6eb5-4aca-84ed-60d603439c8d",
        "cursor": {
          "ref": "0a39d779-7ba0-4547-a684-9ce451831328",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f5cae78a-2a2e-40d0-8b1b-4a8b451ef261"
        },
        "item": {
          "id": "03a545f2-6eb5-4aca-84ed-60d603439c8d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8063d433-4292-4354-9ac5-d9e4e005ac64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ad1dab-3851-418a-9c1b-bee2dfa9e52a",
        "cursor": {
          "ref": "b0b90cb9-8a55-47f7-9544-d57df1c81329",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8f4f34fa-38d3-4513-8b53-be9e45a44bf2"
        },
        "item": {
          "id": "04ad1dab-3851-418a-9c1b-bee2dfa9e52a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1c876301-0fec-4315-8677-df19671a9fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fa3445-e612-477e-aa95-a49a76c4ac12",
        "cursor": {
          "ref": "ff715d9e-37ee-4c60-86c6-7e56ac057631",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "81fa8936-b6fc-449a-a531-c6464e8befea"
        },
        "item": {
          "id": "d7fa3445-e612-477e-aa95-a49a76c4ac12",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "116399b0-6184-49d0-a422-6b7bf5954470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2aacb54-3cfc-4e06-9464-082ea015a556",
        "cursor": {
          "ref": "ff49e7e9-1fee-4321-8404-fbe469597342",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e3b8070f-49d0-44ec-b4bf-aed780bbd0ad"
        },
        "item": {
          "id": "f2aacb54-3cfc-4e06-9464-082ea015a556",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c9d92f1a-d0f8-40bc-b589-09c5324fc5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d05fd5e-83a7-4db8-92d6-bdfcf173e7c2",
        "cursor": {
          "ref": "fe917482-5630-4775-8b95-a4bdc491c2ab",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a3161748-f701-4a81-8ebd-58e4d4dd67ab"
        },
        "item": {
          "id": "3d05fd5e-83a7-4db8-92d6-bdfcf173e7c2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9a9c5fc7-4d96-4a17-aed4-b82c41bc8d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f52c0e-c72e-4772-b2f2-cb54f43f0466",
        "cursor": {
          "ref": "b2c7b8aa-3892-447e-99fc-0aebe4100c70",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "03713226-2174-48ed-b1c2-43b8f91bc63e"
        },
        "item": {
          "id": "c6f52c0e-c72e-4772-b2f2-cb54f43f0466",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "22919611-eb72-4fc4-93da-ef864780189e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfed01c4-0b03-48d8-8510-8dc13768a5e7",
        "cursor": {
          "ref": "b02c317a-e977-495e-9161-ab15affebbfd",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e0f5d6a3-8e2a-4568-a2db-3fbc6675dd7a"
        },
        "item": {
          "id": "bfed01c4-0b03-48d8-8510-8dc13768a5e7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d996f616-4406-4b1d-b3c3-91cb2cc9772d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172bd5df-391c-4915-887c-f5919646b6fa",
        "cursor": {
          "ref": "23885171-668c-4027-9b6b-009d9d1b634c",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e4ce944c-4162-449f-bbb0-d79a2be041df"
        },
        "item": {
          "id": "172bd5df-391c-4915-887c-f5919646b6fa",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "318cd85e-23d3-4727-8a70-315c92a01c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbaa9c87-0104-4a12-adda-9aca0cdbc1be",
        "cursor": {
          "ref": "e6f9874d-fdca-466b-8888-d0a1cf68010d",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cd9f4038-9b2f-479e-a5ff-da28de92c201"
        },
        "item": {
          "id": "dbaa9c87-0104-4a12-adda-9aca0cdbc1be",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0e5dd110-c18b-4d48-a032-f16915581cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bddc3db-ba20-466d-ab70-4902b9326ed3",
        "cursor": {
          "ref": "656f10c7-0b8a-40c2-a455-6166b4745cc0",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4cd8e82d-bcbc-4d3f-9730-3597d51a762a"
        },
        "item": {
          "id": "5bddc3db-ba20-466d-ab70-4902b9326ed3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2c0217bb-0c91-414b-bea1-70ff0fedf590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6dc8570-dc52-42fe-bd75-1c7d2e2f978d",
        "cursor": {
          "ref": "ceeb6645-2526-4544-8ebd-ce32dd4404b0",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ea45bb73-a38c-45e0-bb70-be51def5556f"
        },
        "item": {
          "id": "e6dc8570-dc52-42fe-bd75-1c7d2e2f978d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "52200d4e-76ba-4ed1-8a85-c2462ded03cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6b187c-3757-4b76-b1cb-d5a9f3fff8fd",
        "cursor": {
          "ref": "d6138e45-cf48-47f2-bafd-5fda89d37bf6",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cb1c2eb3-0900-49dd-8734-9c9de3042600"
        },
        "item": {
          "id": "1f6b187c-3757-4b76-b1cb-d5a9f3fff8fd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8ed32ae0-bd28-4b4b-b149-b3743904c42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b6f207-d419-4d0f-8724-10778980100a",
        "cursor": {
          "ref": "f5384df4-ed05-488a-aeba-8f0e867322a4",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6fc5c767-830b-4a52-8d66-40018b5dd6e9"
        },
        "item": {
          "id": "83b6f207-d419-4d0f-8724-10778980100a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bc3a006d-76b2-40f2-baf3-ffbb2b7d153e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7ab8e2-39be-4873-81bf-198a4bb53aa4",
        "cursor": {
          "ref": "94547ae1-0c5d-4bdf-a9bc-f7b33645f7ce",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9a56ac3e-c230-4bf5-b738-c81e0c3c0433"
        },
        "item": {
          "id": "8a7ab8e2-39be-4873-81bf-198a4bb53aa4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "04fbc460-6dfa-47f9-807a-35e34ff619b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbd2f39-33d5-4406-9d7c-07f767526752",
        "cursor": {
          "ref": "a9bcdecd-3c6c-442a-8f1e-1b76cc42256a",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e1af5fe5-0f41-47c4-b3ba-59a83dee2447"
        },
        "item": {
          "id": "5dbd2f39-33d5-4406-9d7c-07f767526752",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d1f59265-4132-4d4d-b403-0a70a809c551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2150454c-8443-4e95-8878-440e8665f007",
        "cursor": {
          "ref": "25acbffe-46c0-4710-b745-430ef8f2de2a",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "de811871-14c3-4fd6-ac34-2cba79d2bb13"
        },
        "item": {
          "id": "2150454c-8443-4e95-8878-440e8665f007",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "46329673-4356-4e76-822b-794ce2828880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe91880-9be3-43e5-a569-1eaed5470382",
        "cursor": {
          "ref": "db96e739-7240-472f-b696-d849b9e1a0e4",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8eb96fd9-0dc2-4d08-ad7f-7427f5f72ded"
        },
        "item": {
          "id": "5fe91880-9be3-43e5-a569-1eaed5470382",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5b762fd9-ca4f-4f28-97e1-34b71559da19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5b5423-60d8-46b4-b799-d38d86706034",
        "cursor": {
          "ref": "410e6ca5-9051-4935-ad9e-061b44583616",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "152084be-cf34-4d22-a302-37701243b0e9"
        },
        "item": {
          "id": "cb5b5423-60d8-46b4-b799-d38d86706034",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "37dacf24-2240-4e5b-ab1a-a36c38e404c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e5c850-0507-4caa-a8b1-665860eec892",
        "cursor": {
          "ref": "53bdb625-9109-443b-9e00-d6c6c7d10fe9",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c324625a-06f3-423e-a447-ae3d5c053086"
        },
        "item": {
          "id": "45e5c850-0507-4caa-a8b1-665860eec892",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "48ae1ab1-7673-4551-b8e2-d78495135a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b1905a-3a72-4b3a-9ab5-a8c3410aa345",
        "cursor": {
          "ref": "d49ed460-01c9-4506-ae36-ab9b0f049ccb",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "017aba09-dbcf-48fe-917f-f9fcdff4a43f"
        },
        "item": {
          "id": "44b1905a-3a72-4b3a-9ab5-a8c3410aa345",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bf49577c-f6cf-4070-a9b6-32536faf6754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37412c1-498f-471d-8434-c2474d0a5ddd",
        "cursor": {
          "ref": "934179ee-5bf8-4cb9-995a-49dc02df72d5",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "67a70d5f-c4e1-4548-ae94-c4ed6186efe0"
        },
        "item": {
          "id": "c37412c1-498f-471d-8434-c2474d0a5ddd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8013beb7-398d-426c-9f2f-b27e72c96380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8140798-c0ea-415b-a1b6-f9e9bfc45abe",
        "cursor": {
          "ref": "658a85b0-74d8-4cdd-b765-c2fbacaabd50",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "397212b9-be7e-49d0-a932-021137cf384b"
        },
        "item": {
          "id": "b8140798-c0ea-415b-a1b6-f9e9bfc45abe",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "37bf9031-5057-42d4-9aab-c2d33d45fa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9c55b0-5c53-4321-893f-85c5d95fcbeb",
        "cursor": {
          "ref": "c16acfb9-4323-4683-80d0-0eac4be17b7a",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "49d8a496-1cb0-4450-a8a0-c0c9b853a3d4"
        },
        "item": {
          "id": "8c9c55b0-5c53-4321-893f-85c5d95fcbeb",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "70cd0a64-b59f-465f-8f37-b531d470e276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50109a7-7efd-4b5f-9f05-e3867ab82971",
        "cursor": {
          "ref": "a4ea6f74-0b7d-42a7-9b3a-2bd7ee630746",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4fe8b3a0-1c05-4856-ad7a-a24c9452c40d"
        },
        "item": {
          "id": "f50109a7-7efd-4b5f-9f05-e3867ab82971",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2615f07a-12cf-4072-846e-81cbaa63d98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0edeef-cc7d-43ae-abcb-9eed80d46705",
        "cursor": {
          "ref": "822ed6d8-f7db-4d53-9b72-dac69711b5dd",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "30553539-9c53-4590-b3a4-4508f247f45d"
        },
        "item": {
          "id": "6b0edeef-cc7d-43ae-abcb-9eed80d46705",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b5d5e7b1-2c4b-45a4-8f62-e785fcfc581c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e61d249-c2ef-4d74-afe3-54ca28618ee0",
        "cursor": {
          "ref": "c8d08b85-976d-4284-9a55-4ba03d7ef7bc",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7c298ad5-e55b-4342-942c-1030a8e1e28c"
        },
        "item": {
          "id": "6e61d249-c2ef-4d74-afe3-54ca28618ee0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bd99ef6d-3da9-4245-94d4-c80fc78d33ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4d3e73-c5eb-4c02-b38f-7051c45fc278",
        "cursor": {
          "ref": "e24efbd2-dc0d-42ab-94ca-9e842c8cd8b3",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "adfa02de-b5af-4aa0-a017-a2d0a197dc24"
        },
        "item": {
          "id": "2b4d3e73-c5eb-4c02-b38f-7051c45fc278",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8cef2f23-1312-4bcf-922f-e29391519680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8146003b-dee1-44fc-8159-fe84745efa48",
        "cursor": {
          "ref": "31551297-12f8-4faf-aef8-3ab7c35d9ba5",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4c9c676e-08e2-4c4a-ab50-8890de3cc53c"
        },
        "item": {
          "id": "8146003b-dee1-44fc-8159-fe84745efa48",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "961e3a68-a7f4-471c-99cc-0614da4731af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aff734a-8f31-48f3-8916-d05fa667d2fe",
        "cursor": {
          "ref": "7ec53412-2a6a-4fa2-9998-5b833dc4b012",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "868216f3-662b-4692-8dbb-5a6be0c4e7d1"
        },
        "item": {
          "id": "0aff734a-8f31-48f3-8916-d05fa667d2fe",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "465daca2-1c35-4ed5-88a7-8905092e2756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4dbba4-f038-4100-a8a4-45019ef5ca17",
        "cursor": {
          "ref": "87fac3ef-f70d-41bc-829c-18afd78efc1f",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3419b0e3-fa36-4ad9-9e13-08d6b32b9794"
        },
        "item": {
          "id": "bb4dbba4-f038-4100-a8a4-45019ef5ca17",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "af3ff89d-5a13-4707-90cc-da85c15e9a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e89c6d-d35d-4de0-8791-3e0a9dd64614",
        "cursor": {
          "ref": "b932d444-7d99-4f39-ad68-63deec9e9f77",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e82432c6-ee2b-4ec7-88cf-ac5628f7f183"
        },
        "item": {
          "id": "26e89c6d-d35d-4de0-8791-3e0a9dd64614",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3c8fdf85-407c-4be4-8fcd-bb7db28ad73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c788ee94-0db8-4e87-817b-7a328b0af9b8",
        "cursor": {
          "ref": "9a3ae7d0-3865-4411-ae3a-6c2bac1c8246",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1eab5953-343d-4b9a-8870-9f4400708916"
        },
        "item": {
          "id": "c788ee94-0db8-4e87-817b-7a328b0af9b8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f69ad716-44c6-447f-ac69-30a50cffd09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7ad9d0-3944-4512-a905-c53a4013907f",
        "cursor": {
          "ref": "ec6d8908-9eb8-4f92-98b6-adfb83e77b9c",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2da8225b-6ef0-4b13-90a4-4fd37db89e48"
        },
        "item": {
          "id": "ea7ad9d0-3944-4512-a905-c53a4013907f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bb1f99ec-f0ed-4635-bc18-102bd9c06c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea7e2bc-bb25-4e17-9778-e5a38a4883f9",
        "cursor": {
          "ref": "d376d6ce-ffb9-4ee2-b178-f82df4467352",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cadfa281-ee08-4d49-8636-ee476c563aa5"
        },
        "item": {
          "id": "eea7e2bc-bb25-4e17-9778-e5a38a4883f9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "89502926-d356-4ba8-8dd0-4f07562671d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6522fa-5c62-402d-b482-bb03c7ab67b4",
        "cursor": {
          "ref": "d703325f-fa31-4e7d-b9c2-1b0449b895d2",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ee6cc073-e484-47f9-a419-3e28c3a25d22"
        },
        "item": {
          "id": "ff6522fa-5c62-402d-b482-bb03c7ab67b4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ae4138ff-da91-4aca-bd2b-6e9731377370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7996f14d-8a15-4a7f-8280-4a263cc823ae",
        "cursor": {
          "ref": "f6f80ceb-3c05-45fe-89d0-b2c7ae76219e",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e1106a3c-3015-4e1c-9578-b38ee3bd0096"
        },
        "item": {
          "id": "7996f14d-8a15-4a7f-8280-4a263cc823ae",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "83f92b84-4f21-40ca-bf1b-3160cea23617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f7ef8b-d8a4-40c8-a75d-3ec86f6ae935",
        "cursor": {
          "ref": "a3b11f8e-2520-4da0-a1a4-5b00b9adc69b",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "80385d17-d496-45e3-b198-d87a651b8d00"
        },
        "item": {
          "id": "e9f7ef8b-d8a4-40c8-a75d-3ec86f6ae935",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "099ffa2a-31c8-4712-811f-34ab1854e870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fa2baf-c3ab-4f60-b351-cc7f64a13299",
        "cursor": {
          "ref": "fa44b8ec-618c-4754-a006-bf90ba8b756d",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ba407cb9-ff20-41f6-bef7-0dc933499159"
        },
        "item": {
          "id": "58fa2baf-c3ab-4f60-b351-cc7f64a13299",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7f66589a-71c3-4c78-bdde-7b4579c8abb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6562270-6032-4d6a-8841-fd0bed161f7d",
        "cursor": {
          "ref": "1e94f2a2-c359-44b1-b481-111922af8592",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "524dc334-681e-41e1-b806-0f207330da64"
        },
        "item": {
          "id": "f6562270-6032-4d6a-8841-fd0bed161f7d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4659a7dc-7868-4e90-b53c-4b35f403ebeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213a5a80-810a-4220-9e47-5b9ca20ed05b",
        "cursor": {
          "ref": "ff7de8b9-9b27-436c-98f3-7abdf1b9b16f",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ca2673b0-a60b-4b13-b73f-16f090e4a4d1"
        },
        "item": {
          "id": "213a5a80-810a-4220-9e47-5b9ca20ed05b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "76699136-ae4b-41c8-a3e0-72eee21370b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8facaf2-68c9-4a31-95f0-16387f2736fc",
        "cursor": {
          "ref": "83a4083c-545e-487f-8772-d04d25c34777",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d5a7109d-1e04-40b6-bef4-04742db0026a"
        },
        "item": {
          "id": "c8facaf2-68c9-4a31-95f0-16387f2736fc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c4c3af30-d69a-4708-b0b9-ee6a7828336f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9794b708-7c4a-4e4d-a2b0-c6894d2fc9d6",
        "cursor": {
          "ref": "5384a7ac-db7a-426d-a7f6-b77c63381f72",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3b7dbec0-27fe-4ca2-a999-bedd44eaa1c9"
        },
        "item": {
          "id": "9794b708-7c4a-4e4d-a2b0-c6894d2fc9d6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "caa1eb62-9c8e-46e5-b0af-3ef7cb269ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9534002-3370-4325-b1b0-b251fd787498",
        "cursor": {
          "ref": "bb488251-9438-47e7-bf51-e643cdbba4b7",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2f5a3255-2902-46c4-adde-58841651e5a3"
        },
        "item": {
          "id": "b9534002-3370-4325-b1b0-b251fd787498",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ad099d49-f1a3-43f4-995e-91fa409d025c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256e4d4c-860d-421f-9e85-d0f57b83128c",
        "cursor": {
          "ref": "c58fe02d-6174-4621-80a3-f8b6df4e5647",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d9d5b5e2-d61c-4273-8575-5d23d97b8aaf"
        },
        "item": {
          "id": "256e4d4c-860d-421f-9e85-d0f57b83128c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "091e1b32-d8e1-4e21-bedc-22114df33a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0366fca-2af1-4b5c-a9b0-876fab98a413",
        "cursor": {
          "ref": "442fe2cc-08da-433d-b096-a368b70b0c8b",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "18c303b0-86ad-42e1-9487-c60ba09c2049"
        },
        "item": {
          "id": "a0366fca-2af1-4b5c-a9b0-876fab98a413",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fcff8e32-33e5-49e3-bdb0-42c4645cbe38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72e4e1b-6f5d-4247-89e1-e53ebc2e9918",
        "cursor": {
          "ref": "ce2c38dc-a157-48d5-8c5c-26f82f2ffa30",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b6ae14de-39ed-4723-b6d7-2effd1163b45"
        },
        "item": {
          "id": "d72e4e1b-6f5d-4247-89e1-e53ebc2e9918",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ebece97d-f3aa-40fe-85ce-8d88fde88e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f96f18-ccb7-4714-a0b1-127cbdd68861",
        "cursor": {
          "ref": "ffc91f09-1e19-4bc8-8a79-7a8d4a92afda",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bc273523-f86f-4771-8a74-216ca247b124"
        },
        "item": {
          "id": "18f96f18-ccb7-4714-a0b1-127cbdd68861",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ce9e8216-efaf-493f-b48a-957fbeff56ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7155d3bd-04cc-4c5d-9b93-a9bf8ffaa25b",
        "cursor": {
          "ref": "2d036c00-af5b-47c2-bff6-1ca2bea52c21",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2f3b2497-d07f-4c60-9a8b-34f5ee883de4"
        },
        "item": {
          "id": "7155d3bd-04cc-4c5d-9b93-a9bf8ffaa25b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "413d29ec-9a74-4334-95b0-2c99e605fa9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca51a5b9-43b3-48ea-8c93-93b3613f381e",
        "cursor": {
          "ref": "3825d388-d04a-405c-9154-d7e0363c98a1",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d7e34773-2d0d-4098-86f0-85d8858bcc73"
        },
        "item": {
          "id": "ca51a5b9-43b3-48ea-8c93-93b3613f381e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c399db1e-0cd4-4337-8912-0b2bfbbeab1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d95b697-ff5f-438b-a4dd-062f72f7e4d8",
        "cursor": {
          "ref": "b5a993be-899b-411b-94a2-9a390071a1ad",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5996144a-858c-49bb-b1f9-ecc0392702c8"
        },
        "item": {
          "id": "3d95b697-ff5f-438b-a4dd-062f72f7e4d8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5bfb45c2-5779-4241-8c92-aa95be8819ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c201499-edef-4710-ab29-341c272ab1fb",
        "cursor": {
          "ref": "17524676-3f77-40ca-af2e-1c7e9eb71320",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "aabe5804-33a1-41fd-99a4-ba8c628ad215"
        },
        "item": {
          "id": "7c201499-edef-4710-ab29-341c272ab1fb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1380a761-8fb7-47d2-88b9-844e7403ce04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e8ef2a-5fc6-4af3-a89c-8db763baa83c",
        "cursor": {
          "ref": "1d4da27f-7bfd-4e4d-8e06-10b2e68c4181",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9556f43a-5aff-4e76-b5e3-677b0a9480d6"
        },
        "item": {
          "id": "82e8ef2a-5fc6-4af3-a89c-8db763baa83c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e5255dfb-557f-4ca5-87c5-1671b7f51a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e40491-ae8d-4c01-bfca-207565504e06",
        "cursor": {
          "ref": "66bc31f8-6935-4976-a521-de39fc812f29",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d147bf99-b675-4479-9c37-025bc88ad3a1"
        },
        "item": {
          "id": "b0e40491-ae8d-4c01-bfca-207565504e06",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0b3e95c3-7343-4986-ac0e-9d2b0dcc4cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549fd9cc-85d2-4b0d-bf26-dc087bdaf70c",
        "cursor": {
          "ref": "8d4ecf2f-166f-41f7-9781-2208322a98b8",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f512b13e-3ff5-4ac9-82ab-19332b25898c"
        },
        "item": {
          "id": "549fd9cc-85d2-4b0d-bf26-dc087bdaf70c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "738acde0-f91c-4303-8fca-db44f81f4b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3375913-45e9-4b7f-a595-a88a29bf13e6",
        "cursor": {
          "ref": "fbdc5bfb-98ee-4bb1-9e85-02603d0ebaac",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a1df8b28-ea31-4f04-a42c-77cf83dacec1"
        },
        "item": {
          "id": "f3375913-45e9-4b7f-a595-a88a29bf13e6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d7795f62-e3ee-4edc-bb01-98a75e60364b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc793e62-1726-4ef7-a620-01493802899f",
        "cursor": {
          "ref": "2a6ade95-b839-4f48-9562-ba8b6575c44c",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "84c1682b-fcd5-4110-8025-465adb62fb5b"
        },
        "item": {
          "id": "bc793e62-1726-4ef7-a620-01493802899f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9db45a6c-5810-45bb-929b-81168a26b426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19885d30-d176-4e0e-8363-117845903d49",
        "cursor": {
          "ref": "579a13d9-23df-4bfc-8a8c-d6102bfd35d4",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f969f9fc-ed84-4673-81f9-9ffdc1251341"
        },
        "item": {
          "id": "19885d30-d176-4e0e-8363-117845903d49",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e7c5cc14-b9f0-4e82-be74-92e4affb12a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3c4c5e-f62a-4ac9-bec8-713140555803",
        "cursor": {
          "ref": "60e337ec-3a8a-4c60-bdcc-96b41cbca270",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "17f571b7-d2fe-4bd4-9dd0-badf2731d8c4"
        },
        "item": {
          "id": "dc3c4c5e-f62a-4ac9-bec8-713140555803",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "c334bea9-3ec2-4809-bd2a-1b4dcc52aa09",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f391e5a-9568-4810-b3ba-ad5dde4bdd8a",
        "cursor": {
          "ref": "0c1610ea-4133-44e2-8324-7229ed56964e",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "68f477d4-072d-479f-a7b5-dd6c06072366"
        },
        "item": {
          "id": "0f391e5a-9568-4810-b3ba-ad5dde4bdd8a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0d5efb6b-8800-4f62-85ec-7fb85501e0e0",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc295bc-6d66-44d7-8490-9ddffc4eb086",
        "cursor": {
          "ref": "55402226-7e98-485c-bd0d-3be580918810",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7071c3b8-aeda-46d1-8588-b84c656ce28e"
        },
        "item": {
          "id": "acc295bc-6d66-44d7-8490-9ddffc4eb086",
          "name": "credentials_verify"
        },
        "response": {
          "id": "606077eb-52fd-41e9-b162-ea47567c3424",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "424985fb-9ff6-40cc-aefa-637915da3a5f",
        "cursor": {
          "ref": "b6cee0c8-5c9e-40ff-8b63-a5150d1c4d21",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8bf41742-43b5-4c0d-9798-2c56317fb10e"
        },
        "item": {
          "id": "424985fb-9ff6-40cc-aefa-637915da3a5f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "087aad3f-cc14-4976-83cb-0826ab5a9b8c",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fbd7b5-58d6-44ed-b83d-4ae6b9222e6b",
        "cursor": {
          "ref": "0deb67ba-a200-4633-97d1-1225e21e57a5",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f4000fc1-6567-486a-bab8-99e1e4b33a5a"
        },
        "item": {
          "id": "10fbd7b5-58d6-44ed-b83d-4ae6b9222e6b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "373b66ef-a6e5-4e4b-bddf-dbe9b8a95743",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fbd7b5-58d6-44ed-b83d-4ae6b9222e6b",
        "cursor": {
          "ref": "0deb67ba-a200-4633-97d1-1225e21e57a5",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f4000fc1-6567-486a-bab8-99e1e4b33a5a"
        },
        "item": {
          "id": "10fbd7b5-58d6-44ed-b83d-4ae6b9222e6b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "373b66ef-a6e5-4e4b-bddf-dbe9b8a95743",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fbd7b5-58d6-44ed-b83d-4ae6b9222e6b",
        "cursor": {
          "ref": "0deb67ba-a200-4633-97d1-1225e21e57a5",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f4000fc1-6567-486a-bab8-99e1e4b33a5a"
        },
        "item": {
          "id": "10fbd7b5-58d6-44ed-b83d-4ae6b9222e6b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "373b66ef-a6e5-4e4b-bddf-dbe9b8a95743",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bca58c-6543-46fe-a97b-034998ddcd35",
        "cursor": {
          "ref": "ce16cc83-6e5b-40c3-bece-48d8d083b243",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "78748331-ddee-4164-b9b4-69868aa30787"
        },
        "item": {
          "id": "09bca58c-6543-46fe-a97b-034998ddcd35",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "6e566abb-a3bd-4f86-b28a-c5cef988ab75",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4791fafa-0a14-4fb3-8682-a1da7104f5af",
        "cursor": {
          "ref": "83fc3b91-ccd9-4896-a489-5989d7d85fc1",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "91da850b-b640-4f7c-8425-4af18c56c323"
        },
        "item": {
          "id": "4791fafa-0a14-4fb3-8682-a1da7104f5af",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "aa7e1a7e-5a0f-429c-8fe3-abad07dfb059",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4791fafa-0a14-4fb3-8682-a1da7104f5af",
        "cursor": {
          "ref": "83fc3b91-ccd9-4896-a489-5989d7d85fc1",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "91da850b-b640-4f7c-8425-4af18c56c323"
        },
        "item": {
          "id": "4791fafa-0a14-4fb3-8682-a1da7104f5af",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "aa7e1a7e-5a0f-429c-8fe3-abad07dfb059",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ad5e07-5137-4836-9284-cae192613a36",
        "cursor": {
          "ref": "d143b4c8-eaa6-4371-b888-c384e1d8711c",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9293986b-9553-43f9-a5da-e57fcff6b0a7"
        },
        "item": {
          "id": "41ad5e07-5137-4836-9284-cae192613a36",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "17798716-8304-4a98-97a0-872f069fdbe7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d58636f-892a-4608-9f3a-e3a789ed45a6",
        "cursor": {
          "ref": "ea4366ce-4826-4d6e-a769-c72ef684dffd",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7949847e-6054-422f-abc2-5636138d94ac"
        },
        "item": {
          "id": "7d58636f-892a-4608-9f3a-e3a789ed45a6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d34fa08d-ffc0-4e7a-b48c-1ea784397c3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d58636f-892a-4608-9f3a-e3a789ed45a6",
        "cursor": {
          "ref": "ea4366ce-4826-4d6e-a769-c72ef684dffd",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7949847e-6054-422f-abc2-5636138d94ac"
        },
        "item": {
          "id": "7d58636f-892a-4608-9f3a-e3a789ed45a6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d34fa08d-ffc0-4e7a-b48c-1ea784397c3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462439a0-8b53-4135-b63b-62159f2616f0",
        "cursor": {
          "ref": "9df1472b-a973-4fdd-ad40-17c173890e0e",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e2289282-53f4-4c12-bc23-2fe3c2b04d24"
        },
        "item": {
          "id": "462439a0-8b53-4135-b63b-62159f2616f0",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "0dc5a1de-7bc8-4f59-88ac-b340425d52e9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}